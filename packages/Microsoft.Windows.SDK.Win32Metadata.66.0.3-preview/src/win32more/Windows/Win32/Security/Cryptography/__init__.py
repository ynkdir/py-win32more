from __future__ import annotations
from win32more.win32.prelude import *
import win32more.Windows.Win32.Foundation
import win32more.Windows.Win32.Security
import win32more.Windows.Win32.Security.Cryptography
import win32more.Windows.Win32.System.Com
import win32more.Windows.Win32.System.Registry
import win32more.Windows.Win32.System.Variant
ALG_ID = UInt32
CALG_MD2: win32more.Windows.Win32.Security.Cryptography.ALG_ID = 32769
CALG_MD4: win32more.Windows.Win32.Security.Cryptography.ALG_ID = 32770
CALG_MD5: win32more.Windows.Win32.Security.Cryptography.ALG_ID = 32771
CALG_SHA: win32more.Windows.Win32.Security.Cryptography.ALG_ID = 32772
CALG_SHA1: win32more.Windows.Win32.Security.Cryptography.ALG_ID = 32772
CALG_MAC: win32more.Windows.Win32.Security.Cryptography.ALG_ID = 32773
CALG_RSA_SIGN: win32more.Windows.Win32.Security.Cryptography.ALG_ID = 9216
CALG_DSS_SIGN: win32more.Windows.Win32.Security.Cryptography.ALG_ID = 8704
CALG_NO_SIGN: win32more.Windows.Win32.Security.Cryptography.ALG_ID = 8192
CALG_RSA_KEYX: win32more.Windows.Win32.Security.Cryptography.ALG_ID = 41984
CALG_DES: win32more.Windows.Win32.Security.Cryptography.ALG_ID = 26113
CALG_3DES_112: win32more.Windows.Win32.Security.Cryptography.ALG_ID = 26121
CALG_3DES: win32more.Windows.Win32.Security.Cryptography.ALG_ID = 26115
CALG_DESX: win32more.Windows.Win32.Security.Cryptography.ALG_ID = 26116
CALG_RC2: win32more.Windows.Win32.Security.Cryptography.ALG_ID = 26114
CALG_RC4: win32more.Windows.Win32.Security.Cryptography.ALG_ID = 26625
CALG_SEAL: win32more.Windows.Win32.Security.Cryptography.ALG_ID = 26626
CALG_DH_SF: win32more.Windows.Win32.Security.Cryptography.ALG_ID = 43521
CALG_DH_EPHEM: win32more.Windows.Win32.Security.Cryptography.ALG_ID = 43522
CALG_AGREEDKEY_ANY: win32more.Windows.Win32.Security.Cryptography.ALG_ID = 43523
CALG_KEA_KEYX: win32more.Windows.Win32.Security.Cryptography.ALG_ID = 43524
CALG_HUGHES_MD5: win32more.Windows.Win32.Security.Cryptography.ALG_ID = 40963
CALG_SKIPJACK: win32more.Windows.Win32.Security.Cryptography.ALG_ID = 26122
CALG_TEK: win32more.Windows.Win32.Security.Cryptography.ALG_ID = 26123
CALG_CYLINK_MEK: win32more.Windows.Win32.Security.Cryptography.ALG_ID = 26124
CALG_SSL3_SHAMD5: win32more.Windows.Win32.Security.Cryptography.ALG_ID = 32776
CALG_SSL3_MASTER: win32more.Windows.Win32.Security.Cryptography.ALG_ID = 19457
CALG_SCHANNEL_MASTER_HASH: win32more.Windows.Win32.Security.Cryptography.ALG_ID = 19458
CALG_SCHANNEL_MAC_KEY: win32more.Windows.Win32.Security.Cryptography.ALG_ID = 19459
CALG_SCHANNEL_ENC_KEY: win32more.Windows.Win32.Security.Cryptography.ALG_ID = 19463
CALG_PCT1_MASTER: win32more.Windows.Win32.Security.Cryptography.ALG_ID = 19460
CALG_SSL2_MASTER: win32more.Windows.Win32.Security.Cryptography.ALG_ID = 19461
CALG_TLS1_MASTER: win32more.Windows.Win32.Security.Cryptography.ALG_ID = 19462
CALG_RC5: win32more.Windows.Win32.Security.Cryptography.ALG_ID = 26125
CALG_HMAC: win32more.Windows.Win32.Security.Cryptography.ALG_ID = 32777
CALG_TLS1PRF: win32more.Windows.Win32.Security.Cryptography.ALG_ID = 32778
CALG_HASH_REPLACE_OWF: win32more.Windows.Win32.Security.Cryptography.ALG_ID = 32779
CALG_AES_128: win32more.Windows.Win32.Security.Cryptography.ALG_ID = 26126
CALG_AES_192: win32more.Windows.Win32.Security.Cryptography.ALG_ID = 26127
CALG_AES_256: win32more.Windows.Win32.Security.Cryptography.ALG_ID = 26128
CALG_AES: win32more.Windows.Win32.Security.Cryptography.ALG_ID = 26129
CALG_SHA_256: win32more.Windows.Win32.Security.Cryptography.ALG_ID = 32780
CALG_SHA_384: win32more.Windows.Win32.Security.Cryptography.ALG_ID = 32781
CALG_SHA_512: win32more.Windows.Win32.Security.Cryptography.ALG_ID = 32782
CALG_ECDH: win32more.Windows.Win32.Security.Cryptography.ALG_ID = 43525
CALG_ECDH_EPHEM: win32more.Windows.Win32.Security.Cryptography.ALG_ID = 44550
CALG_ECMQV: win32more.Windows.Win32.Security.Cryptography.ALG_ID = 40961
CALG_ECDSA: win32more.Windows.Win32.Security.Cryptography.ALG_ID = 8707
CALG_NULLCIPHER: win32more.Windows.Win32.Security.Cryptography.ALG_ID = 24576
CALG_THIRDPARTY_KEY_EXCHANGE: win32more.Windows.Win32.Security.Cryptography.ALG_ID = 45056
CALG_THIRDPARTY_SIGNATURE: win32more.Windows.Win32.Security.Cryptography.ALG_ID = 12288
CALG_THIRDPARTY_CIPHER: win32more.Windows.Win32.Security.Cryptography.ALG_ID = 28672
CALG_THIRDPARTY_HASH: win32more.Windows.Win32.Security.Cryptography.ALG_ID = 36864
class AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA(Structure):
    cbSize: UInt32
    dwRegPolicySettings: UInt32
    pSignerInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CMSG_SIGNER_INFO)
class AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS(Structure):
    cbSize: UInt32
    fCommercial: win32more.Windows.Win32.Foundation.BOOL
class AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA(Structure):
    cbSize: UInt32
    dwRegPolicySettings: UInt32
    fCommercial: win32more.Windows.Win32.Foundation.BOOL
CERT_SYSTEM_STORE_CURRENT_USER: UInt32 = 65536
CERT_SYSTEM_STORE_LOCAL_MACHINE: UInt32 = 131072
CERT_COMPARE_SHIFT: Int32 = 16
BCRYPT_OBJECT_ALIGNMENT: UInt32 = 16
BCRYPT_KDF_HASH: String = 'HASH'
BCRYPT_KDF_HMAC: String = 'HMAC'
BCRYPT_KDF_TLS_PRF: String = 'TLS_PRF'
BCRYPT_KDF_SP80056A_CONCAT: String = 'SP800_56A_CONCAT'
BCRYPT_KDF_RAW_SECRET: String = 'TRUNCATE'
BCRYPT_KDF_HKDF: String = 'HKDF'
KDF_HASH_ALGORITHM: UInt32 = 0
KDF_SECRET_PREPEND: UInt32 = 1
KDF_SECRET_APPEND: UInt32 = 2
KDF_HMAC_KEY: UInt32 = 3
KDF_TLS_PRF_LABEL: UInt32 = 4
KDF_TLS_PRF_SEED: UInt32 = 5
KDF_SECRET_HANDLE: UInt32 = 6
KDF_TLS_PRF_PROTOCOL: UInt32 = 7
KDF_ALGORITHMID: UInt32 = 8
KDF_PARTYUINFO: UInt32 = 9
KDF_PARTYVINFO: UInt32 = 10
KDF_SUPPPUBINFO: UInt32 = 11
KDF_SUPPPRIVINFO: UInt32 = 12
KDF_LABEL: UInt32 = 13
KDF_CONTEXT: UInt32 = 14
KDF_SALT: UInt32 = 15
KDF_ITERATION_COUNT: UInt32 = 16
KDF_GENERIC_PARAMETER: UInt32 = 17
KDF_KEYBITLENGTH: UInt32 = 18
KDF_HKDF_SALT: UInt32 = 19
KDF_HKDF_INFO: UInt32 = 20
KDF_USE_SECRET_AS_HMAC_KEY_FLAG: UInt32 = 1
BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO_VERSION: UInt32 = 1
BCRYPT_AUTH_MODE_CHAIN_CALLS_FLAG: UInt32 = 1
BCRYPT_AUTH_MODE_IN_PROGRESS_FLAG: UInt32 = 2
BCRYPT_OPAQUE_KEY_BLOB: String = 'OpaqueKeyBlob'
BCRYPT_KEY_DATA_BLOB: String = 'KeyDataBlob'
BCRYPT_AES_WRAP_KEY_BLOB: String = 'Rfc3565KeyWrapBlob'
BCRYPT_PKCS11_RSA_AES_WRAP_KEY_BLOB: String = 'PKCS11RsaAesWrapBlob'
BCRYPT_PKCS11_RSA_AES_WRAP_BLOB_MAGIC: UInt32 = 1464877394
BCRYPT_OBJECT_LENGTH: String = 'ObjectLength'
BCRYPT_ALGORITHM_NAME: String = 'AlgorithmName'
BCRYPT_PROVIDER_HANDLE: String = 'ProviderHandle'
BCRYPT_CHAINING_MODE: String = 'ChainingMode'
BCRYPT_BLOCK_LENGTH: String = 'BlockLength'
BCRYPT_KEY_LENGTH: String = 'KeyLength'
BCRYPT_KEY_OBJECT_LENGTH: String = 'KeyObjectLength'
BCRYPT_KEY_STRENGTH: String = 'KeyStrength'
BCRYPT_KEY_LENGTHS: String = 'KeyLengths'
BCRYPT_BLOCK_SIZE_LIST: String = 'BlockSizeList'
BCRYPT_EFFECTIVE_KEY_LENGTH: String = 'EffectiveKeyLength'
BCRYPT_HASH_LENGTH: String = 'HashDigestLength'
BCRYPT_HASH_OID_LIST: String = 'HashOIDList'
BCRYPT_PADDING_SCHEMES: String = 'PaddingSchemes'
BCRYPT_SIGNATURE_LENGTH: String = 'SignatureLength'
BCRYPT_HASH_BLOCK_LENGTH: String = 'HashBlockLength'
BCRYPT_AUTH_TAG_LENGTH: String = 'AuthTagLength'
BCRYPT_FUNCTION_NAME_STRING: String = 'FunctionNameString'
BCRYPT_CUSTOMIZATION_STRING: String = 'CustomizationString'
BCRYPT_PRIMITIVE_TYPE: String = 'PrimitiveType'
BCRYPT_IS_KEYED_HASH: String = 'IsKeyedHash'
BCRYPT_IS_REUSABLE_HASH: String = 'IsReusableHash'
BCRYPT_MESSAGE_BLOCK_LENGTH: String = 'MessageBlockLength'
BCRYPT_PUBLIC_KEY_LENGTH: String = 'PublicKeyLength'
BCRYPT_PCP_PLATFORM_TYPE_PROPERTY: String = 'PCP_PLATFORM_TYPE'
BCRYPT_PCP_PROVIDER_VERSION_PROPERTY: String = 'PCP_PROVIDER_VERSION'
BCRYPT_MULTI_OBJECT_LENGTH: String = 'MultiObjectLength'
BCRYPT_IS_IFX_TPM_WEAK_KEY: String = 'IsIfxTpmWeakKey'
BCRYPT_HKDF_HASH_ALGORITHM: String = 'HkdfHashAlgorithm'
BCRYPT_HKDF_SALT_AND_FINALIZE: String = 'HkdfSaltAndFinalize'
BCRYPT_HKDF_PRK_AND_FINALIZE: String = 'HkdfPrkAndFinalize'
BCRYPT_INITIALIZATION_VECTOR: String = 'IV'
BCRYPT_CHAIN_MODE_NA: String = 'ChainingModeN/A'
BCRYPT_CHAIN_MODE_CBC: String = 'ChainingModeCBC'
BCRYPT_CHAIN_MODE_ECB: String = 'ChainingModeECB'
BCRYPT_CHAIN_MODE_CFB: String = 'ChainingModeCFB'
BCRYPT_CHAIN_MODE_CCM: String = 'ChainingModeCCM'
BCRYPT_CHAIN_MODE_GCM: String = 'ChainingModeGCM'
BCRYPT_CHAIN_MODE_KWP: String = 'ChainingModeKWP'
BCRYPT_SUPPORTED_PAD_ROUTER: UInt32 = 1
BCRYPT_SUPPORTED_PAD_PKCS1_ENC: UInt32 = 2
BCRYPT_SUPPORTED_PAD_PKCS1_SIG: UInt32 = 4
BCRYPT_SUPPORTED_PAD_OAEP: UInt32 = 8
BCRYPT_SUPPORTED_PAD_PSS: UInt32 = 16
BCRYPT_GENERATE_IV: UInt32 = 32
BCRYPT_PAD_PKCS1_OPTIONAL_HASH_OID: UInt32 = 16
BCRYPTBUFFER_VERSION: UInt32 = 0
BCRYPT_PUBLIC_KEY_BLOB: String = 'PUBLICBLOB'
BCRYPT_PRIVATE_KEY_BLOB: String = 'PRIVATEBLOB'
BCRYPT_RSAPUBLIC_BLOB: String = 'RSAPUBLICBLOB'
BCRYPT_RSAPRIVATE_BLOB: String = 'RSAPRIVATEBLOB'
LEGACY_RSAPUBLIC_BLOB: String = 'CAPIPUBLICBLOB'
LEGACY_RSAPRIVATE_BLOB: String = 'CAPIPRIVATEBLOB'
BCRYPT_RSAFULLPRIVATE_BLOB: String = 'RSAFULLPRIVATEBLOB'
BCRYPT_GLOBAL_PARAMETERS: String = 'SecretAgreementParam'
BCRYPT_PRIVATE_KEY: String = 'PrivKeyVal'
BCRYPT_ECCPUBLIC_BLOB: String = 'ECCPUBLICBLOB'
BCRYPT_ECCPRIVATE_BLOB: String = 'ECCPRIVATEBLOB'
BCRYPT_ECCFULLPUBLIC_BLOB: String = 'ECCFULLPUBLICBLOB'
BCRYPT_ECCFULLPRIVATE_BLOB: String = 'ECCFULLPRIVATEBLOB'
SSL_ECCPUBLIC_BLOB: String = 'SSLECCPUBLICBLOB'
TLS_13_PRE_SHARED_KEY: String = 'TLS13PRESHAREDKEY'
BCRYPT_ECDH_PUBLIC_P256_MAGIC: UInt32 = 827016005
BCRYPT_ECDH_PRIVATE_P256_MAGIC: UInt32 = 843793221
BCRYPT_ECDH_PUBLIC_P384_MAGIC: UInt32 = 860570437
BCRYPT_ECDH_PRIVATE_P384_MAGIC: UInt32 = 877347653
BCRYPT_ECDH_PUBLIC_P521_MAGIC: UInt32 = 894124869
BCRYPT_ECDH_PRIVATE_P521_MAGIC: UInt32 = 910902085
BCRYPT_ECDH_PUBLIC_GENERIC_MAGIC: UInt32 = 1347109701
BCRYPT_ECDH_PRIVATE_GENERIC_MAGIC: UInt32 = 1447772997
BCRYPT_ECDSA_PUBLIC_P256_MAGIC: UInt32 = 827540293
BCRYPT_ECDSA_PRIVATE_P256_MAGIC: UInt32 = 844317509
BCRYPT_ECDSA_PUBLIC_P384_MAGIC: UInt32 = 861094725
BCRYPT_ECDSA_PRIVATE_P384_MAGIC: UInt32 = 877871941
BCRYPT_ECDSA_PUBLIC_P521_MAGIC: UInt32 = 894649157
BCRYPT_ECDSA_PRIVATE_P521_MAGIC: UInt32 = 911426373
BCRYPT_ECDSA_PUBLIC_GENERIC_MAGIC: UInt32 = 1346650949
BCRYPT_ECDSA_PRIVATE_GENERIC_MAGIC: UInt32 = 1447314245
BCRYPT_ECC_FULLKEY_BLOB_V1: UInt32 = 1
BCRYPT_DH_PUBLIC_BLOB: String = 'DHPUBLICBLOB'
BCRYPT_DH_PRIVATE_BLOB: String = 'DHPRIVATEBLOB'
LEGACY_DH_PUBLIC_BLOB: String = 'CAPIDHPUBLICBLOB'
LEGACY_DH_PRIVATE_BLOB: String = 'CAPIDHPRIVATEBLOB'
BCRYPT_DH_PARAMETERS: String = 'DHParameters'
BCRYPT_DH_PARAMETERS_MAGIC: UInt32 = 1297107012
BCRYPT_DSA_PUBLIC_BLOB: String = 'DSAPUBLICBLOB'
BCRYPT_DSA_PRIVATE_BLOB: String = 'DSAPRIVATEBLOB'
LEGACY_DSA_PUBLIC_BLOB: String = 'CAPIDSAPUBLICBLOB'
LEGACY_DSA_PRIVATE_BLOB: String = 'CAPIDSAPRIVATEBLOB'
LEGACY_DSA_V2_PUBLIC_BLOB: String = 'V2CAPIDSAPUBLICBLOB'
LEGACY_DSA_V2_PRIVATE_BLOB: String = 'V2CAPIDSAPRIVATEBLOB'
BCRYPT_DSA_PUBLIC_MAGIC_V2: UInt32 = 843206724
BCRYPT_DSA_PRIVATE_MAGIC_V2: UInt32 = 844517444
BCRYPT_KEY_DATA_BLOB_MAGIC: UInt32 = 1296188491
BCRYPT_KEY_DATA_BLOB_VERSION1: UInt32 = 1
BCRYPT_DSA_PARAMETERS: String = 'DSAParameters'
BCRYPT_DSA_PARAMETERS_MAGIC: UInt32 = 1297109828
BCRYPT_DSA_PARAMETERS_MAGIC_V2: UInt32 = 843927620
BCRYPT_ECC_PARAMETERS: String = 'ECCParameters'
BCRYPT_ECC_CURVE_NAME: String = 'ECCCurveName'
BCRYPT_ECC_CURVE_NAME_LIST: String = 'ECCCurveNameList'
BCRYPT_ECC_PARAMETERS_MAGIC: UInt32 = 1346585413
BCRYPT_ECC_CURVE_BRAINPOOLP160R1: String = 'brainpoolP160r1'
BCRYPT_ECC_CURVE_BRAINPOOLP160T1: String = 'brainpoolP160t1'
BCRYPT_ECC_CURVE_BRAINPOOLP192R1: String = 'brainpoolP192r1'
BCRYPT_ECC_CURVE_BRAINPOOLP192T1: String = 'brainpoolP192t1'
BCRYPT_ECC_CURVE_BRAINPOOLP224R1: String = 'brainpoolP224r1'
BCRYPT_ECC_CURVE_BRAINPOOLP224T1: String = 'brainpoolP224t1'
BCRYPT_ECC_CURVE_BRAINPOOLP256R1: String = 'brainpoolP256r1'
BCRYPT_ECC_CURVE_BRAINPOOLP256T1: String = 'brainpoolP256t1'
BCRYPT_ECC_CURVE_BRAINPOOLP320R1: String = 'brainpoolP320r1'
BCRYPT_ECC_CURVE_BRAINPOOLP320T1: String = 'brainpoolP320t1'
BCRYPT_ECC_CURVE_BRAINPOOLP384R1: String = 'brainpoolP384r1'
BCRYPT_ECC_CURVE_BRAINPOOLP384T1: String = 'brainpoolP384t1'
BCRYPT_ECC_CURVE_BRAINPOOLP512R1: String = 'brainpoolP512r1'
BCRYPT_ECC_CURVE_BRAINPOOLP512T1: String = 'brainpoolP512t1'
BCRYPT_ECC_CURVE_25519: String = 'curve25519'
BCRYPT_ECC_CURVE_EC192WAPI: String = 'ec192wapi'
BCRYPT_ECC_CURVE_NISTP192: String = 'nistP192'
BCRYPT_ECC_CURVE_NISTP224: String = 'nistP224'
BCRYPT_ECC_CURVE_NISTP256: String = 'nistP256'
BCRYPT_ECC_CURVE_NISTP384: String = 'nistP384'
BCRYPT_ECC_CURVE_NISTP521: String = 'nistP521'
BCRYPT_ECC_CURVE_NUMSP256T1: String = 'numsP256t1'
BCRYPT_ECC_CURVE_NUMSP384T1: String = 'numsP384t1'
BCRYPT_ECC_CURVE_NUMSP512T1: String = 'numsP512t1'
BCRYPT_ECC_CURVE_SECP160K1: String = 'secP160k1'
BCRYPT_ECC_CURVE_SECP160R1: String = 'secP160r1'
BCRYPT_ECC_CURVE_SECP160R2: String = 'secP160r2'
BCRYPT_ECC_CURVE_SECP192K1: String = 'secP192k1'
BCRYPT_ECC_CURVE_SECP192R1: String = 'secP192r1'
BCRYPT_ECC_CURVE_SECP224K1: String = 'secP224k1'
BCRYPT_ECC_CURVE_SECP224R1: String = 'secP224r1'
BCRYPT_ECC_CURVE_SECP256K1: String = 'secP256k1'
BCRYPT_ECC_CURVE_SECP256R1: String = 'secP256r1'
BCRYPT_ECC_CURVE_SECP384R1: String = 'secP384r1'
BCRYPT_ECC_CURVE_SECP521R1: String = 'secP521r1'
BCRYPT_ECC_CURVE_WTLS7: String = 'wtls7'
BCRYPT_ECC_CURVE_WTLS9: String = 'wtls9'
BCRYPT_ECC_CURVE_WTLS12: String = 'wtls12'
BCRYPT_ECC_CURVE_X962P192V1: String = 'x962P192v1'
BCRYPT_ECC_CURVE_X962P192V2: String = 'x962P192v2'
BCRYPT_ECC_CURVE_X962P192V3: String = 'x962P192v3'
BCRYPT_ECC_CURVE_X962P239V1: String = 'x962P239v1'
BCRYPT_ECC_CURVE_X962P239V2: String = 'x962P239v2'
BCRYPT_ECC_CURVE_X962P239V3: String = 'x962P239v3'
BCRYPT_ECC_CURVE_X962P256V1: String = 'x962P256v1'
MS_PRIMITIVE_PROVIDER: String = 'Microsoft Primitive Provider'
MS_PLATFORM_CRYPTO_PROVIDER: String = 'Microsoft Platform Crypto Provider'
BCRYPT_RSA_ALGORITHM: String = 'RSA'
BCRYPT_RSA_SIGN_ALGORITHM: String = 'RSA_SIGN'
BCRYPT_DH_ALGORITHM: String = 'DH'
BCRYPT_DSA_ALGORITHM: String = 'DSA'
BCRYPT_RC2_ALGORITHM: String = 'RC2'
BCRYPT_RC4_ALGORITHM: String = 'RC4'
BCRYPT_AES_ALGORITHM: String = 'AES'
BCRYPT_DES_ALGORITHM: String = 'DES'
BCRYPT_DESX_ALGORITHM: String = 'DESX'
BCRYPT_3DES_ALGORITHM: String = '3DES'
BCRYPT_3DES_112_ALGORITHM: String = '3DES_112'
BCRYPT_MD2_ALGORITHM: String = 'MD2'
BCRYPT_MD4_ALGORITHM: String = 'MD4'
BCRYPT_MD5_ALGORITHM: String = 'MD5'
BCRYPT_SHA1_ALGORITHM: String = 'SHA1'
BCRYPT_SHA256_ALGORITHM: String = 'SHA256'
BCRYPT_SHA384_ALGORITHM: String = 'SHA384'
BCRYPT_SHA512_ALGORITHM: String = 'SHA512'
BCRYPT_AES_GMAC_ALGORITHM: String = 'AES-GMAC'
BCRYPT_AES_CMAC_ALGORITHM: String = 'AES-CMAC'
BCRYPT_ECDSA_P256_ALGORITHM: String = 'ECDSA_P256'
BCRYPT_ECDSA_P384_ALGORITHM: String = 'ECDSA_P384'
BCRYPT_ECDSA_P521_ALGORITHM: String = 'ECDSA_P521'
BCRYPT_ECDH_P256_ALGORITHM: String = 'ECDH_P256'
BCRYPT_ECDH_P384_ALGORITHM: String = 'ECDH_P384'
BCRYPT_ECDH_P521_ALGORITHM: String = 'ECDH_P521'
BCRYPT_RNG_ALGORITHM: String = 'RNG'
BCRYPT_RNG_FIPS186_DSA_ALGORITHM: String = 'FIPS186DSARNG'
BCRYPT_RNG_DUAL_EC_ALGORITHM: String = 'DUALECRNG'
BCRYPT_SP800108_CTR_HMAC_ALGORITHM: String = 'SP800_108_CTR_HMAC'
BCRYPT_SP80056A_CONCAT_ALGORITHM: String = 'SP800_56A_CONCAT'
BCRYPT_PBKDF2_ALGORITHM: String = 'PBKDF2'
BCRYPT_CAPI_KDF_ALGORITHM: String = 'CAPI_KDF'
BCRYPT_TLS1_1_KDF_ALGORITHM: String = 'TLS1_1_KDF'
BCRYPT_TLS1_2_KDF_ALGORITHM: String = 'TLS1_2_KDF'
BCRYPT_ECDSA_ALGORITHM: String = 'ECDSA'
BCRYPT_ECDH_ALGORITHM: String = 'ECDH'
BCRYPT_XTS_AES_ALGORITHM: String = 'XTS-AES'
BCRYPT_HKDF_ALGORITHM: String = 'HKDF'
BCRYPT_CHACHA20_POLY1305_ALGORITHM: String = 'CHACHA20_POLY1305'
BCRYPT_SHA3_256_ALGORITHM: String = 'SHA3-256'
BCRYPT_SHA3_384_ALGORITHM: String = 'SHA3-384'
BCRYPT_SHA3_512_ALGORITHM: String = 'SHA3-512'
BCRYPT_CSHAKE128_ALGORITHM: String = 'CSHAKE128'
BCRYPT_CSHAKE256_ALGORITHM: String = 'CSHAKE256'
BCRYPT_KMAC128_ALGORITHM: String = 'KMAC128'
BCRYPT_KMAC256_ALGORITHM: String = 'KMAC256'
BCRYPT_KEY_DERIVATION_INTERFACE: UInt32 = 7
BCRYPT_MD2_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 1
BCRYPT_MD4_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 17
BCRYPT_MD5_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 33
BCRYPT_SHA1_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 49
BCRYPT_SHA256_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 65
BCRYPT_SHA384_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 81
BCRYPT_SHA512_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 97
BCRYPT_RC4_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 113
BCRYPT_RNG_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 129
BCRYPT_HMAC_MD5_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 145
BCRYPT_HMAC_SHA1_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 161
BCRYPT_HMAC_SHA256_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 177
BCRYPT_HMAC_SHA384_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 193
BCRYPT_HMAC_SHA512_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 209
BCRYPT_RSA_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 225
BCRYPT_ECDSA_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 241
BCRYPT_AES_CMAC_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 257
BCRYPT_AES_GMAC_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 273
BCRYPT_HMAC_MD2_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 289
BCRYPT_HMAC_MD4_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 305
BCRYPT_3DES_CBC_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 321
BCRYPT_3DES_ECB_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 337
BCRYPT_3DES_CFB_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 353
BCRYPT_3DES_112_CBC_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 369
BCRYPT_3DES_112_ECB_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 385
BCRYPT_3DES_112_CFB_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 401
BCRYPT_AES_CBC_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 417
BCRYPT_AES_ECB_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 433
BCRYPT_AES_CFB_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 449
BCRYPT_AES_CCM_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 465
BCRYPT_AES_GCM_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 481
BCRYPT_DES_CBC_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 497
BCRYPT_DES_ECB_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 513
BCRYPT_DES_CFB_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 529
BCRYPT_DESX_CBC_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 545
BCRYPT_DESX_ECB_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 561
BCRYPT_DESX_CFB_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 577
BCRYPT_RC2_CBC_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 593
BCRYPT_RC2_ECB_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 609
BCRYPT_RC2_CFB_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 625
BCRYPT_DH_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 641
BCRYPT_ECDH_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 657
BCRYPT_ECDH_P256_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 673
BCRYPT_ECDH_P384_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 689
BCRYPT_ECDH_P521_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 705
BCRYPT_DSA_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 721
BCRYPT_ECDSA_P256_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 737
BCRYPT_ECDSA_P384_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 753
BCRYPT_ECDSA_P521_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 769
BCRYPT_RSA_SIGN_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 785
BCRYPT_CAPI_KDF_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 801
BCRYPT_PBKDF2_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 817
BCRYPT_SP800108_CTR_HMAC_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 833
BCRYPT_SP80056A_CONCAT_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 849
BCRYPT_TLS1_1_KDF_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 865
BCRYPT_TLS1_2_KDF_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 881
BCRYPT_XTS_AES_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 897
BCRYPT_HKDF_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 913
BCRYPT_CHACHA20_POLY1305_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 929
BCRYPT_SHA3_256_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 945
BCRYPT_SHA3_384_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 961
BCRYPT_SHA3_512_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 977
BCRYPT_HMAC_SHA3_256_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 993
BCRYPT_HMAC_SHA3_384_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 1009
BCRYPT_HMAC_SHA3_512_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 1025
BCRYPT_CSHAKE128_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 1041
BCRYPT_CSHAKE256_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 1057
BCRYPT_KMAC128_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 1073
BCRYPT_KMAC256_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 1089
BCRYPT_AES_KWP_ALG_HANDLE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE = 1105
BCRYPT_CAPI_AES_FLAG: UInt32 = 16
BCRYPT_MULTI_FLAG: UInt32 = 64
BCRYPT_HASH_DONT_RESET_FLAG: UInt32 = 1
BCRYPT_TLS_CBC_HMAC_VERIFY_FLAG: UInt32 = 4
BCRYPT_BUFFERS_LOCKED_FLAG: UInt32 = 64
BCRYPT_EXTENDED_KEYSIZE: UInt32 = 128
BCRYPT_ENABLE_INCOMPATIBLE_FIPS_CHECKS: UInt32 = 256
BCRYPT_KEY_DERIVATION_OPERATION: UInt32 = 64
BCRYPT_PUBLIC_KEY_FLAG: UInt32 = 1
BCRYPT_PRIVATE_KEY_FLAG: UInt32 = 2
BCRYPT_NO_KEY_VALIDATION: UInt32 = 8
BCRYPT_KEY_VALIDATION_RANGE: UInt32 = 16
BCRYPT_KEY_VALIDATION_RANGE_AND_ORDER: UInt32 = 24
BCRYPT_KEY_VALIDATION_REGENERATE: UInt32 = 32
BCRYPT_HASH_INTERFACE_MAJORVERSION_2: UInt32 = 2
CRYPT_OVERWRITE: UInt32 = 1
CRYPT_PRIORITY_TOP: UInt32 = 0
CRYPT_PRIORITY_BOTTOM: UInt32 = 4294967295
CRYPT_DEFAULT_CONTEXT: String = 'Default'
wszXMLNS_DIGSIG: String = 'http://www.w3.org/2000/09/xmldsig#'
wszXMLNS_DIGSIG_SignatureProperties: String = 'http://www.w3.org/2000/09/xmldsig#SignatureProperties'
wszXMLNS_DIGSIG_Id: String = 'Id'
wszURI_XMLNS_DIGSIG_BASE64: String = 'http://www.w3.org/2000/09/xmldsig#base64'
wszURI_XMLNS_DIGSIG_SHA1: String = 'http://www.w3.org/2000/09/xmldsig#sha1'
wszURI_XMLNS_DIGSIG_SHA256: String = 'http://www.w3.org/2001/04/xmlenc#sha256'
wszURI_XMLNS_DIGSIG_SHA384: String = 'http://www.w3.org/2001/04/xmldsig-more#sha384'
wszURI_XMLNS_DIGSIG_SHA512: String = 'http://www.w3.org/2001/04/xmlenc#sha512'
wszURI_XMLNS_DIGSIG_RSA_SHA1: String = 'http://www.w3.org/2000/09/xmldsig#rsa-sha1'
wszURI_XMLNS_DIGSIG_DSA_SHA1: String = 'http://www.w3.org/2000/09/xmldsig#dsa-sha1'
wszURI_XMLNS_DIGSIG_RSA_SHA256: String = 'http://www.w3.org/2001/04/xmldsig-more#rsa-sha256'
wszURI_XMLNS_DIGSIG_RSA_SHA384: String = 'http://www.w3.org/2001/04/xmldsig-more#rsa-sha384'
wszURI_XMLNS_DIGSIG_RSA_SHA512: String = 'http://www.w3.org/2001/04/xmldsig-more#rsa-sha512'
wszURI_XMLNS_DIGSIG_ECDSA_SHA1: String = 'http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha1'
wszURI_XMLNS_DIGSIG_ECDSA_SHA256: String = 'http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256'
wszURI_XMLNS_DIGSIG_ECDSA_SHA384: String = 'http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha384'
wszURI_XMLNS_DIGSIG_ECDSA_SHA512: String = 'http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha512'
wszURI_XMLNS_DIGSIG_HMAC_SHA1: String = 'http://www.w3.org/2000/09/xmldsig#hmac-sha1'
wszURI_XMLNS_DIGSIG_HMAC_SHA256: String = 'http://www.w3.org/2001/04/xmldsig-more#hmac-sha256'
wszURI_XMLNS_DIGSIG_HMAC_SHA384: String = 'http://www.w3.org/2001/04/xmldsig-more#hmac-sha384'
wszURI_XMLNS_DIGSIG_HMAC_SHA512: String = 'http://www.w3.org/2001/04/xmldsig-more#hmac-sha512'
wszURI_CANONICALIZATION_C14N: String = 'http://www.w3.org/TR/2001/REC-xml-c14n-20010315'
wszURI_CANONICALIZATION_C14NC: String = 'http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments'
wszURI_CANONICALIZATION_EXSLUSIVE_C14N: String = 'http://www.w3.org/2001/10/xml-exc-c14n#'
wszURI_CANONICALIZATION_EXSLUSIVE_C14NC: String = 'http://www.w3.org/2001/10/xml-exc-c14n#WithComments'
wszURI_TRANSFORM_XPATH: String = 'http://www.w3.org/TR/1999/REC-xpath-19991116'
wszURI_XMLNS_TRANSFORM_BASE64: String = 'http://www.w3.org/2000/09/xmldsig#base64'
wszURI_XMLNS_TRANSFORM_ENVELOPED: String = 'http://www.w3.org/2000/09/xmldsig#enveloped-signature'
CRYPT_XML_BLOB_MAX: UInt32 = 2147483640
CRYPT_XML_ID_MAX: UInt32 = 256
CRYPT_XML_SIGNATURES_MAX: UInt32 = 16
CRYPT_XML_TRANSFORM_MAX: UInt32 = 16
CRYPT_XML_SIGNATURE_VALUE_MAX: UInt32 = 2048
CRYPT_XML_DIGEST_VALUE_MAX: UInt32 = 128
CRYPT_XML_OBJECTS_MAX: UInt32 = 256
CRYPT_XML_REFERENCES_MAX: UInt32 = 32760
CRYPT_XML_E_BASE: win32more.Windows.Win32.Foundation.HRESULT = -2146885376
CRYPT_XML_E_LARGE: win32more.Windows.Win32.Foundation.HRESULT = -2146885375
CRYPT_XML_E_TOO_MANY_TRANSFORMS: win32more.Windows.Win32.Foundation.HRESULT = -2146885374
CRYPT_XML_E_ENCODING: win32more.Windows.Win32.Foundation.HRESULT = -2146885373
CRYPT_XML_E_ALGORITHM: win32more.Windows.Win32.Foundation.HRESULT = -2146885372
CRYPT_XML_E_TRANSFORM: win32more.Windows.Win32.Foundation.HRESULT = -2146885371
CRYPT_XML_E_HANDLE: win32more.Windows.Win32.Foundation.HRESULT = -2146885370
CRYPT_XML_E_OPERATION: win32more.Windows.Win32.Foundation.HRESULT = -2146885369
CRYPT_XML_E_UNRESOLVED_REFERENCE: win32more.Windows.Win32.Foundation.HRESULT = -2146885368
CRYPT_XML_E_INVALID_DIGEST: win32more.Windows.Win32.Foundation.HRESULT = -2146885367
CRYPT_XML_E_INVALID_SIGNATURE: win32more.Windows.Win32.Foundation.HRESULT = -2146885366
CRYPT_XML_E_HASH_FAILED: win32more.Windows.Win32.Foundation.HRESULT = -2146885365
CRYPT_XML_E_SIGN_FAILED: win32more.Windows.Win32.Foundation.HRESULT = -2146885364
CRYPT_XML_E_VERIFY_FAILED: win32more.Windows.Win32.Foundation.HRESULT = -2146885363
CRYPT_XML_E_TOO_MANY_SIGNATURES: win32more.Windows.Win32.Foundation.HRESULT = -2146885362
CRYPT_XML_E_INVALID_KEYVALUE: win32more.Windows.Win32.Foundation.HRESULT = -2146885361
CRYPT_XML_E_UNEXPECTED_XML: win32more.Windows.Win32.Foundation.HRESULT = -2146885360
CRYPT_XML_E_SIGNER: win32more.Windows.Win32.Foundation.HRESULT = -2146885359
CRYPT_XML_E_NON_UNIQUE_ID: win32more.Windows.Win32.Foundation.HRESULT = -2146885358
CRYPT_XML_E_LAST: win32more.Windows.Win32.Foundation.HRESULT = -2146885358
CRYPT_XML_FLAG_ALWAYS_RETURN_ENCODED_OBJECT: UInt32 = 1073741824
CRYPT_XML_FLAG_ENFORCE_ID_NCNAME_FORMAT: UInt32 = 536870912
CRYPT_XML_FLAG_ENFORCE_ID_NAME_FORMAT: UInt32 = 134217728
CRYPT_XML_FLAG_ECDSA_DSIG11: UInt32 = 67108864
CRYPT_XML_STATUS_NO_ERROR: UInt32 = 0
CRYPT_XML_FLAG_ADD_OBJECT_CREATE_COPY: UInt32 = 1
CRYPT_XML_FLAG_CREATE_REFERENCE_AS_OBJECT: UInt32 = 1
CRYPT_XML_DIGEST_REFERENCE_DATA_TRANSFORMED: UInt32 = 1
CRYPT_XML_ALGORITHM_INFO_FIND_BY_URI: UInt32 = 1
CRYPT_XML_ALGORITHM_INFO_FIND_BY_NAME: UInt32 = 2
CRYPT_XML_ALGORITHM_INFO_FIND_BY_CNG_ALGID: UInt32 = 3
CRYPT_XML_ALGORITHM_INFO_FIND_BY_CNG_SIGN_ALGID: UInt32 = 4
szFORCE_KEY_PROTECTION: String = 'ForceKeyProtection'
dwFORCE_KEY_PROTECTION_DISABLED: UInt32 = 0
dwFORCE_KEY_PROTECTION_USER_SELECT: UInt32 = 1
dwFORCE_KEY_PROTECTION_HIGH: UInt32 = 2
CRYPTPROTECT_DEFAULT_PROVIDER: Guid = Guid('{df9d8cd0-1501-11d1-8c7a-00c04fc297eb}')
CRYPTPROTECT_PROMPT_ON_UNPROTECT: UInt32 = 1
CRYPTPROTECT_PROMPT_ON_PROTECT: UInt32 = 2
CRYPTPROTECT_PROMPT_RESERVED: UInt32 = 4
CRYPTPROTECT_PROMPT_STRONG: UInt32 = 8
CRYPTPROTECT_PROMPT_REQUIRE_STRONG: UInt32 = 16
CRYPTPROTECT_UI_FORBIDDEN: UInt32 = 1
CRYPTPROTECT_LOCAL_MACHINE: UInt32 = 4
CRYPTPROTECT_CRED_SYNC: UInt32 = 8
CRYPTPROTECT_AUDIT: UInt32 = 16
CRYPTPROTECT_NO_RECOVERY: UInt32 = 32
CRYPTPROTECT_VERIFY_PROTECTION: UInt32 = 64
CRYPTPROTECT_CRED_REGENERATE: UInt32 = 128
CRYPTPROTECT_FIRST_RESERVED_FLAGVAL: UInt32 = 268435455
CRYPTPROTECT_LAST_RESERVED_FLAGVAL: UInt32 = 4294967295
CRYPTPROTECTMEMORY_BLOCK_SIZE: UInt32 = 16
CRYPTPROTECTMEMORY_SAME_PROCESS: UInt32 = 0
CRYPTPROTECTMEMORY_CROSS_PROCESS: UInt32 = 1
CRYPTPROTECTMEMORY_SAME_LOGON: UInt32 = 2
NCRYPT_MAX_KEY_NAME_LENGTH: UInt32 = 512
NCRYPT_MAX_ALG_ID_LENGTH: UInt32 = 512
MS_KEY_STORAGE_PROVIDER: String = 'Microsoft Software Key Storage Provider'
MS_SMART_CARD_KEY_STORAGE_PROVIDER: String = 'Microsoft Smart Card Key Storage Provider'
MS_PLATFORM_KEY_STORAGE_PROVIDER: String = 'Microsoft Platform Crypto Provider'
MS_NGC_KEY_STORAGE_PROVIDER: String = 'Microsoft Passport Key Storage Provider'
TPM_RSA_SRK_SEAL_KEY: String = 'MICROSOFT_PCP_KSP_RSA_SEAL_KEY_3BD1C4BF-004E-4E2F-8A4D-0BF633DCB074'
NCRYPT_RSA_ALGORITHM: String = 'RSA'
NCRYPT_RSA_SIGN_ALGORITHM: String = 'RSA_SIGN'
NCRYPT_DH_ALGORITHM: String = 'DH'
NCRYPT_DSA_ALGORITHM: String = 'DSA'
NCRYPT_MD2_ALGORITHM: String = 'MD2'
NCRYPT_MD4_ALGORITHM: String = 'MD4'
NCRYPT_MD5_ALGORITHM: String = 'MD5'
NCRYPT_SHA1_ALGORITHM: String = 'SHA1'
NCRYPT_SHA256_ALGORITHM: String = 'SHA256'
NCRYPT_SHA384_ALGORITHM: String = 'SHA384'
NCRYPT_SHA512_ALGORITHM: String = 'SHA512'
NCRYPT_ECDSA_P256_ALGORITHM: String = 'ECDSA_P256'
NCRYPT_ECDSA_P384_ALGORITHM: String = 'ECDSA_P384'
NCRYPT_ECDSA_P521_ALGORITHM: String = 'ECDSA_P521'
NCRYPT_ECDH_P256_ALGORITHM: String = 'ECDH_P256'
NCRYPT_ECDH_P384_ALGORITHM: String = 'ECDH_P384'
NCRYPT_ECDH_P521_ALGORITHM: String = 'ECDH_P521'
NCRYPT_AES_ALGORITHM: String = 'AES'
NCRYPT_RC2_ALGORITHM: String = 'RC2'
NCRYPT_3DES_ALGORITHM: String = '3DES'
NCRYPT_DES_ALGORITHM: String = 'DES'
NCRYPT_DESX_ALGORITHM: String = 'DESX'
NCRYPT_3DES_112_ALGORITHM: String = '3DES_112'
NCRYPT_SP800108_CTR_HMAC_ALGORITHM: String = 'SP800_108_CTR_HMAC'
NCRYPT_SP80056A_CONCAT_ALGORITHM: String = 'SP800_56A_CONCAT'
NCRYPT_PBKDF2_ALGORITHM: String = 'PBKDF2'
NCRYPT_CAPI_KDF_ALGORITHM: String = 'CAPI_KDF'
NCRYPT_ECDSA_ALGORITHM: String = 'ECDSA'
NCRYPT_ECDH_ALGORITHM: String = 'ECDH'
NCRYPT_KEY_STORAGE_ALGORITHM: String = 'KEY_STORAGE'
NCRYPT_HMAC_SHA256_ALGORITHM: String = 'HMAC-SHA256'
NCRYPT_KEY_DERIVATION_INTERFACE: UInt32 = 7
NCRYPT_KEY_PROTECTION_INTERFACE: UInt32 = 65540
NCRYPT_RSA_ALGORITHM_GROUP: String = 'RSA'
NCRYPT_DH_ALGORITHM_GROUP: String = 'DH'
NCRYPT_DSA_ALGORITHM_GROUP: String = 'DSA'
NCRYPT_ECDSA_ALGORITHM_GROUP: String = 'ECDSA'
NCRYPT_ECDH_ALGORITHM_GROUP: String = 'ECDH'
NCRYPT_AES_ALGORITHM_GROUP: String = 'AES'
NCRYPT_RC2_ALGORITHM_GROUP: String = 'RC2'
NCRYPT_DES_ALGORITHM_GROUP: String = 'DES'
NCRYPT_KEY_DERIVATION_GROUP: String = 'KEY_DERIVATION'
NCRYPTBUFFER_VERSION: UInt32 = 0
NCRYPTBUFFER_EMPTY: UInt32 = 0
NCRYPTBUFFER_DATA: UInt32 = 1
NCRYPTBUFFER_PROTECTION_DESCRIPTOR_STRING: UInt32 = 3
NCRYPTBUFFER_PROTECTION_FLAGS: UInt32 = 4
NCRYPTBUFFER_SSL_CLIENT_RANDOM: UInt32 = 20
NCRYPTBUFFER_SSL_SERVER_RANDOM: UInt32 = 21
NCRYPTBUFFER_SSL_HIGHEST_VERSION: UInt32 = 22
NCRYPTBUFFER_SSL_CLEAR_KEY: UInt32 = 23
NCRYPTBUFFER_SSL_KEY_ARG_DATA: UInt32 = 24
NCRYPTBUFFER_SSL_SESSION_HASH: UInt32 = 25
NCRYPTBUFFER_PKCS_OID: UInt32 = 40
NCRYPTBUFFER_PKCS_ALG_OID: UInt32 = 41
NCRYPTBUFFER_PKCS_ALG_PARAM: UInt32 = 42
NCRYPTBUFFER_PKCS_ALG_ID: UInt32 = 43
NCRYPTBUFFER_PKCS_ATTRS: UInt32 = 44
NCRYPTBUFFER_PKCS_KEY_NAME: UInt32 = 45
NCRYPTBUFFER_PKCS_SECRET: UInt32 = 46
NCRYPTBUFFER_CERT_BLOB: UInt32 = 47
NCRYPTBUFFER_CLAIM_IDBINDING_NONCE: UInt32 = 48
NCRYPTBUFFER_CLAIM_KEYATTESTATION_NONCE: UInt32 = 49
NCRYPTBUFFER_KEY_PROPERTY_FLAGS: UInt32 = 50
NCRYPTBUFFER_ATTESTATIONSTATEMENT_BLOB: UInt32 = 51
NCRYPTBUFFER_ATTESTATION_CLAIM_TYPE: UInt32 = 52
NCRYPTBUFFER_ATTESTATION_CLAIM_CHALLENGE_REQUIRED: UInt32 = 53
NCRYPTBUFFER_ECC_CURVE_NAME: UInt32 = 60
NCRYPTBUFFER_ECC_PARAMETERS: UInt32 = 61
NCRYPTBUFFER_TPM_SEAL_PASSWORD: UInt32 = 70
NCRYPTBUFFER_TPM_SEAL_POLICYINFO: UInt32 = 71
NCRYPTBUFFER_TPM_SEAL_TICKET: UInt32 = 72
NCRYPTBUFFER_TPM_SEAL_NO_DA_PROTECTION: UInt32 = 73
NCRYPTBUFFER_TPM_PLATFORM_CLAIM_PCR_MASK: UInt32 = 80
NCRYPTBUFFER_TPM_PLATFORM_CLAIM_NONCE: UInt32 = 81
NCRYPTBUFFER_TPM_PLATFORM_CLAIM_STATIC_CREATE: UInt32 = 82
NCRYPTBUFFER_ATTESTATION_STATEMENT_SIGNATURE_HASH: UInt32 = 90
NCRYPTBUFFER_ATTESTATION_STATEMENT_SIGNATURE_PADDING_SCHEME: UInt32 = 91
NCRYPTBUFFER_ATTESTATION_STATEMENT_SIGNATURE_PADDING_ALGO: UInt32 = 92
NCRYPTBUFFER_ATTESTATION_STATEMENT_SIGNATURE_PADDING_SALT_SIZE: UInt32 = 93
NCRYPTBUFFER_ATTESTATION_STATEMENT_SIGNATURE_PADDING_SALT: UInt32 = 93
NCRYPTBUFFER_ATTESTATION_STATEMENT_NONCE: UInt32 = 49
NCRYPTBUFFER_VBS_ATTESTATION_STATEMENT_ROOT_DETAILS: UInt32 = 94
NCRYPTBUFFER_VBS_ATTESTATION_STATEMENT_IDENTITY_DETAILS: UInt32 = 95
NCRYPT_CIPHER_NO_PADDING_FLAG: UInt32 = 0
NCRYPT_CIPHER_BLOCK_PADDING_FLAG: UInt32 = 1
NCRYPT_CIPHER_OTHER_PADDING_FLAG: UInt32 = 2
NCRYPT_PLATFORM_ATTEST_MAGIC: UInt32 = 1146110288
NCRYPT_KEY_ATTEST_MAGIC: UInt32 = 1146110283
NCRYPT_CLAIM_AUTHORITY_ONLY: UInt32 = 1
NCRYPT_CLAIM_SUBJECT_ONLY: UInt32 = 2
NCRYPT_CLAIM_AUTHORITY_AND_SUBJECT: UInt32 = 3
NCRYPT_CLAIM_VBS_KEY_ATTESTATION_STATEMENT: UInt32 = 4
NCRYPT_CLAIM_VBS_ROOT: UInt32 = 5
NCRYPT_CLAIM_VBS_IDENTITY: UInt32 = 6
NCRYPT_CLAIM_WEB_AUTH_SUBJECT_ONLY: UInt32 = 258
NCRYPT_CLAIM_UNKNOWN: UInt32 = 4096
NCRYPT_CLAIM_PLATFORM: UInt32 = 65536
NCRYPT_CLAIM_WEB_AUTH_SUBJECT_ONLY_V2: UInt32 = 259
NCRYPT_ISOLATED_KEY_FLAG_CREATED_IN_ISOLATION: UInt32 = 1
NCRYPT_ISOLATED_KEY_FLAG_IMPORT_ONLY: UInt32 = 2
NCRYPT_ISOLATED_KEY_FLAG_PER_BOOT_KEY: UInt32 = 4
NCRYPT_VBS_KEY_FLAG_CREATED_IN_ISOLATION: UInt32 = 1
NCRYPT_VBS_KEY_FLAG_IMPORT_ONLY: UInt32 = 2
NCRYPT_VBS_KEY_FLAG_PER_BOOT_KEY: UInt32 = 4
NCRYPT_VBS_KEY_FLAG_IMPORT_EPHEMERAL_ONLY: UInt32 = 8
NCRYPT_ISOLATED_KEY_ATTESTED_ATTRIBUTES_V0: UInt32 = 0
NCRYPT_ISOLATED_KEY_ATTESTED_ATTRIBUTES_CURRENT_VERSION: UInt32 = 0
NCRYPT_VBS_KEY_ATTESTED_ATTRIBUTES_CURRENT_VERSION: UInt32 = 0
NCRYPT_EXPORTED_ISOLATED_KEY_HEADER_V0: UInt32 = 0
NCRYPT_EXPORTED_ISOLATED_KEY_HEADER_CURRENT_VERSION: UInt32 = 0
NCRYPT_VBS_ROOT_ATTESTATION_HEADER_V0: UInt32 = 0
NCRYPT_VBS_ROOT_ATTESTATION_HEADER_CURRENT_VERSION: UInt32 = 0
VBS_ROOT_ATTESTATION_HEADER_MAGIC: UInt32 = 1212371542
NCRYPT_VBS_IDENTITY_ATTESTATION_PADDING_V0: UInt32 = 0
NCRYPT_VBS_IDENTITY_ATTESTATION_PADDING_CURRENT_VERSION: UInt32 = 0
NCRYPT_VBS_IDENTITY_ATTESTATION_HEADER_V0: UInt32 = 0
NCRYPT_VBS_IDENTITY_ATTESTATION_HEADER_CURRENT_VERSION: UInt32 = 0
VBS_IDENTITY_ATTESTATION_HEADER_MAGIC: UInt32 = 1212369238
NCRYPT_VBS_KEY_ATTESTATION_STATEMENT_V1: UInt32 = 1
NCRYPT_VBS_KEY_ATTESTATION_STATEMENT_V2: UInt32 = 2
NCRYPT_VBS_KEY_ATTESTATION_STATEMENT_CURRENT_VERSION: UInt32 = 2
VBS_KEY_ATTESTATION_STATEMENT_MAGIC: UInt32 = 1396788054
NCRYPT_TPM_PLATFORM_ATTESTATION_STATEMENT_V0: UInt32 = 0
NCRYPT_TPM_PLATFORM_ATTESTATION_STATEMENT_CURRENT_VERSION: UInt32 = 0
NCRYPT_PAD_CIPHER_FLAG: UInt32 = 16
NCRYPT_ATTESTATION_FLAG: UInt32 = 32
NCRYPT_SEALING_FLAG: UInt32 = 256
NCRYPT_DO_NOT_FINALIZE_FLAG: UInt32 = 1024
NCRYPT_EXPORT_LEGACY_FLAG: UInt32 = 2048
NCRYPT_IGNORE_DEVICE_STATE_FLAG: UInt32 = 4096
NCRYPT_TREAT_NIST_AS_GENERIC_ECC_FLAG: UInt32 = 8192
NCRYPT_NO_CACHED_PASSWORD: UInt32 = 16384
NCRYPT_PROTECT_TO_LOCAL_SYSTEM: UInt32 = 32768
NCRYPT_REQUIRE_KDS_LRPC_BIND_FLAG: UInt32 = 536870912
NCRYPT_PREFER_VIRTUAL_ISOLATION_FLAG: UInt32 = 65536
NCRYPT_USE_VIRTUAL_ISOLATION_FLAG: UInt32 = 131072
NCRYPT_USE_PER_BOOT_KEY_FLAG: UInt32 = 262144
NCRYPT_PREFER_VBS_FLAG: UInt32 = 65536
NCRYPT_REQUIRE_VBS_FLAG: UInt32 = 131072
NCRYPT_USE_VBS_PER_BOOT_KEY_FLAG: UInt32 = 262144
NCRYPT_VBS_RETURN_CLAIM_DETAILS_FLAG: UInt32 = 1048576
NCRYPT_KEY_DERIVATION_OPERATION: UInt32 = 64
NCRYPT_AUTHORITY_KEY_FLAG: UInt32 = 256
NCRYPT_EXTENDED_ERRORS_FLAG: UInt32 = 268435456
NCRYPT_NAME_PROPERTY: String = 'Name'
NCRYPT_EPHEMERAL_NAME_PROPERTY: String = 'Ephemeral Name'
NCRYPT_UNIQUE_NAME_PROPERTY: String = 'Unique Name'
NCRYPT_ALGORITHM_PROPERTY: String = 'Algorithm Name'
NCRYPT_LENGTH_PROPERTY: String = 'Length'
NCRYPT_LENGTHS_PROPERTY: String = 'Lengths'
NCRYPT_BLOCK_LENGTH_PROPERTY: String = 'Block Length'
NCRYPT_PUBLIC_LENGTH_PROPERTY: String = 'PublicKeyLength'
NCRYPT_SIGNATURE_LENGTH_PROPERTY: String = 'SignatureLength'
NCRYPT_CHAINING_MODE_PROPERTY: String = 'Chaining Mode'
NCRYPT_AUTH_TAG_LENGTH: String = 'AuthTagLength'
NCRYPT_UI_POLICY_PROPERTY: String = 'UI Policy'
NCRYPT_EXPORT_POLICY_PROPERTY: String = 'Export Policy'
NCRYPT_WINDOW_HANDLE_PROPERTY: String = 'HWND Handle'
NCRYPT_USE_CONTEXT_PROPERTY: String = 'Use Context'
NCRYPT_IMPL_TYPE_PROPERTY: String = 'Impl Type'
NCRYPT_KEY_USAGE_PROPERTY: String = 'Key Usage'
NCRYPT_KEY_TYPE_PROPERTY: String = 'Key Type'
NCRYPT_VERSION_PROPERTY: String = 'Version'
NCRYPT_SECURITY_DESCR_SUPPORT_PROPERTY: String = 'Security Descr Support'
NCRYPT_SECURITY_DESCR_PROPERTY: String = 'Security Descr'
NCRYPT_USE_COUNT_ENABLED_PROPERTY: String = 'Enabled Use Count'
NCRYPT_USE_COUNT_PROPERTY: String = 'Use Count'
NCRYPT_LAST_MODIFIED_PROPERTY: String = 'Modified'
NCRYPT_MAX_NAME_LENGTH_PROPERTY: String = 'Max Name Length'
NCRYPT_ALGORITHM_GROUP_PROPERTY: String = 'Algorithm Group'
NCRYPT_DH_PARAMETERS_PROPERTY: String = 'DHParameters'
NCRYPT_ECC_PARAMETERS_PROPERTY: String = 'ECCParameters'
NCRYPT_ECC_CURVE_NAME_PROPERTY: String = 'ECCCurveName'
NCRYPT_ECC_CURVE_NAME_LIST_PROPERTY: String = 'ECCCurveNameList'
NCRYPT_USE_VIRTUAL_ISOLATION_PROPERTY: String = 'Virtual Iso'
NCRYPT_USE_PER_BOOT_KEY_PROPERTY: String = 'Per Boot Key'
NCRYPT_PROVIDER_HANDLE_PROPERTY: String = 'Provider Handle'
NCRYPT_PIN_PROPERTY: String = 'SmartCardPin'
NCRYPT_READER_PROPERTY: String = 'SmartCardReader'
NCRYPT_SMARTCARD_GUID_PROPERTY: String = 'SmartCardGuid'
NCRYPT_CERTIFICATE_PROPERTY: String = 'SmartCardKeyCertificate'
NCRYPT_PIN_PROMPT_PROPERTY: String = 'SmartCardPinPrompt'
NCRYPT_USER_CERTSTORE_PROPERTY: String = 'SmartCardUserCertStore'
NCRYPT_ROOT_CERTSTORE_PROPERTY: String = 'SmartcardRootCertStore'
NCRYPT_SECURE_PIN_PROPERTY: String = 'SmartCardSecurePin'
NCRYPT_ASSOCIATED_ECDH_KEY: String = 'SmartCardAssociatedECDHKey'
NCRYPT_SCARD_PIN_ID: String = 'SmartCardPinId'
NCRYPT_SCARD_PIN_INFO: String = 'SmartCardPinInfo'
NCRYPT_READER_ICON_PROPERTY: String = 'SmartCardReaderIcon'
NCRYPT_KDF_SECRET_VALUE: String = 'KDFKeySecret'
NCRYPT_DISMISS_UI_TIMEOUT_SEC_PROPERTY: String = 'SmartCardDismissUITimeoutSeconds'
NCRYPT_VBS_ROOT_PUB_PROPERTY: String = 'VBS_ROOT_PUB'
NCRYPT_CERTIFICATE_FROM_NVRAM_PROPERTY: String = 'KeyCertificateFromTpmNvram'
NCRYPT_PKCS11_KWP_AES_KEY_BITS_PROPERTY: String = 'Pkcs11AesKeyBits'
NCRYPT_PKCS11_KWP_OAEP_HASH_ALGO_PROPERTY: String = 'Pkcs11OaepHashAlgorithm'
NCRYPT_PKCS11_KWP_OAEP_LABEL_PROPERTY: String = 'Pkcs11OaepLabel'
NCRYPT_PCP_PLATFORM_TYPE_PROPERTY: String = 'PCP_PLATFORM_TYPE'
NCRYPT_PCP_PROVIDER_VERSION_PROPERTY: String = 'PCP_PROVIDER_VERSION'
NCRYPT_PCP_EKPUB_PROPERTY: String = 'PCP_EKPUB'
NCRYPT_PCP_EKCERT_PROPERTY: String = 'PCP_EKCERT'
NCRYPT_PCP_EKNVCERT_PROPERTY: String = 'PCP_EKNVCERT'
NCRYPT_PCP_RSA_EKPUB_PROPERTY: String = 'PCP_RSA_EKPUB'
NCRYPT_PCP_RSA_EKCERT_PROPERTY: String = 'PCP_RSA_EKCERT'
NCRYPT_PCP_RSA_EKNVCERT_PROPERTY: String = 'PCP_RSA_EKNVCERT'
NCRYPT_PCP_ECC_EKPUB_PROPERTY: String = 'PCP_ECC_EKPUB'
NCRYPT_PCP_ECC_EKCERT_PROPERTY: String = 'PCP_ECC_EKCERT'
NCRYPT_PCP_ECC_EKNVCERT_PROPERTY: String = 'PCP_ECC_EKNVCERT'
NCRYPT_PCP_SRKPUB_PROPERTY: String = 'PCP_SRKPUB'
NCRYPT_PCP_PCRTABLE_PROPERTY: String = 'PCP_PCRTABLE'
NCRYPT_PCP_CHANGEPASSWORD_PROPERTY: String = 'PCP_CHANGEPASSWORD'
NCRYPT_PCP_PASSWORD_REQUIRED_PROPERTY: String = 'PCP_PASSWORD_REQUIRED'
NCRYPT_PCP_USAGEAUTH_PROPERTY: String = 'PCP_USAGEAUTH'
NCRYPT_PCP_MIGRATIONPASSWORD_PROPERTY: String = 'PCP_MIGRATIONPASSWORD'
NCRYPT_PCP_EXPORT_ALLOWED_PROPERTY: String = 'PCP_EXPORT_ALLOWED'
NCRYPT_PCP_STORAGEPARENT_PROPERTY: String = 'PCP_STORAGEPARENT'
NCRYPT_PCP_PROVIDERHANDLE_PROPERTY: String = 'PCP_PROVIDERMHANDLE'
NCRYPT_PCP_PLATFORMHANDLE_PROPERTY: String = 'PCP_PLATFORMHANDLE'
NCRYPT_PCP_PLATFORM_BINDING_PCRMASK_PROPERTY: String = 'PCP_PLATFORM_BINDING_PCRMASK'
NCRYPT_PCP_PLATFORM_BINDING_PCRDIGESTLIST_PROPERTY: String = 'PCP_PLATFORM_BINDING_PCRDIGESTLIST'
NCRYPT_PCP_PLATFORM_BINDING_PCRDIGEST_PROPERTY: String = 'PCP_PLATFORM_BINDING_PCRDIGEST'
NCRYPT_PCP_KEY_USAGE_POLICY_PROPERTY: String = 'PCP_KEY_USAGE_POLICY'
NCRYPT_PCP_RSA_SCHEME_PROPERTY: String = 'PCP_RSA_SCHEME'
NCRYPT_PCP_TPM12_IDBINDING_PROPERTY: String = 'PCP_TPM12_IDBINDING'
NCRYPT_PCP_TPM12_IDBINDING_DYNAMIC_PROPERTY: String = 'PCP_TPM12_IDBINDING_DYNAMIC'
NCRYPT_PCP_TPM12_IDACTIVATION_PROPERTY: String = 'PCP_TPM12_IDACTIVATION'
NCRYPT_PCP_KEYATTESTATION_PROPERTY: String = 'PCP_TPM12_KEYATTESTATION'
NCRYPT_PCP_ALTERNATE_KEY_STORAGE_LOCATION_PROPERTY: String = 'PCP_ALTERNATE_KEY_STORAGE_LOCATION'
NCRYPT_PCP_PLATFORM_BINDING_PCRALGID_PROPERTY: String = 'PCP_PLATFORM_BINDING_PCRALGID'
NCRYPT_PCP_HMAC_AUTH_POLICYREF: String = 'PCP_HMAC_AUTH_POLICYREF'
NCRYPT_PCP_HMAC_AUTH_POLICYINFO: String = 'PCP_HMAC_AUTH_POLICYINFO'
NCRYPT_PCP_HMAC_AUTH_NONCE: String = 'PCP_HMAC_AUTH_NONCE'
NCRYPT_PCP_HMAC_AUTH_SIGNATURE: String = 'PCP_HMAC_AUTH_SIGNATURE'
NCRYPT_PCP_HMAC_AUTH_TICKET: String = 'PCP_HMAC_AUTH_TICKET'
NCRYPT_PCP_NO_DA_PROTECTION_PROPERTY: String = 'PCP_NO_DA_PROTECTION'
NCRYPT_PCP_TPM_MANUFACTURER_ID_PROPERTY: String = 'PCP_TPM_MANUFACTURER_ID'
NCRYPT_PCP_TPM_FW_VERSION_PROPERTY: String = 'PCP_TPM_FW_VERSION'
NCRYPT_PCP_TPM2BNAME_PROPERTY: String = 'PCP_TPM2BNAME'
NCRYPT_PCP_TPM_VERSION_PROPERTY: String = 'PCP_TPM_VERSION'
NCRYPT_PCP_RAW_POLICYDIGEST_PROPERTY: String = 'PCP_RAW_POLICYDIGEST'
NCRYPT_PCP_KEY_CREATIONHASH_PROPERTY: String = 'PCP_KEY_CREATIONHASH'
NCRYPT_PCP_KEY_CREATIONTICKET_PROPERTY: String = 'PCP_KEY_CREATIONTICKET'
NCRYPT_PCP_RSA_SCHEME_HASH_ALG_PROPERTY: String = 'PCP_RSA_SCHEME_HASH_ALG'
NCRYPT_PCP_TPM_IFX_RSA_KEYGEN_PROHIBITED_PROPERTY: String = 'PCP_TPM_IFX_RSA_KEYGEN_PROHIBITED'
NCRYPT_PCP_TPM_IFX_RSA_KEYGEN_VULNERABILITY_PROPERTY: String = 'PCP_TPM_IFX_RSA_KEYGEN_VULNERABILITY'
IFX_RSA_KEYGEN_VUL_NOT_AFFECTED: UInt32 = 0
IFX_RSA_KEYGEN_VUL_AFFECTED_LEVEL_1: UInt32 = 1
IFX_RSA_KEYGEN_VUL_AFFECTED_LEVEL_2: UInt32 = 2
NCRYPT_PCP_SESSIONID_PROPERTY: String = 'PCP_SESSIONID'
NCRYPT_PCP_PSS_SALT_SIZE_PROPERTY: String = 'PSS Salt Size'
NCRYPT_TPM_PSS_SALT_SIZE_UNKNOWN: UInt32 = 0
NCRYPT_TPM_PSS_SALT_SIZE_MAXIMUM: UInt32 = 1
NCRYPT_TPM_PSS_SALT_SIZE_HASHSIZE: UInt32 = 2
NCRYPT_PCP_INTERMEDIATE_CA_EKCERT_PROPERTY: String = 'PCP_INTERMEDIATE_CA_EKCERT'
NCRYPT_PCP_PCRTABLE_ALGORITHM_PROPERTY: String = 'PCP_PCRTABLE_ALGORITHM'
NCRYPT_PCP_SYMMETRIC_KEYBITS_PROPERTY: String = 'PCP_SYMMETRIC_KEYBITS'
NCRYPT_TPM_PAD_PSS_IGNORE_SALT: UInt32 = 32
NCRYPT_TPM12_PROVIDER: UInt32 = 65536
NCRYPT_PCP_SIGNATURE_KEY: UInt32 = 1
NCRYPT_PCP_ENCRYPTION_KEY: UInt32 = 2
NCRYPT_PCP_STORAGE_KEY: UInt32 = 4
NCRYPT_PCP_IDENTITY_KEY: UInt32 = 8
NCRYPT_PCP_HMACVERIFICATION_KEY: UInt32 = 16
NCRYPT_SCARD_NGC_KEY_NAME: String = 'SmartCardNgcKeyName'
NCRYPT_INITIALIZATION_VECTOR: String = 'IV'
NCRYPT_CHANGEPASSWORD_PROPERTY: String = 'PCP_CHANGEPASSWORD'
NCRYPT_ALTERNATE_KEY_STORAGE_LOCATION_PROPERTY: String = 'PCP_ALTERNATE_KEY_STORAGE_LOCATION'
NCRYPT_KEY_ACCESS_POLICY_PROPERTY: String = 'Key Access Policy'
NCRYPT_MAX_PROPERTY_NAME: UInt32 = 64
NCRYPT_MAX_PROPERTY_DATA: UInt32 = 1048576
NCRYPT_ALLOW_EXPORT_FLAG: UInt32 = 1
NCRYPT_ALLOW_PLAINTEXT_EXPORT_FLAG: UInt32 = 2
NCRYPT_ALLOW_ARCHIVING_FLAG: UInt32 = 4
NCRYPT_ALLOW_PLAINTEXT_ARCHIVING_FLAG: UInt32 = 8
NCRYPT_ALLOW_PKCS11_RSA_AES_EXPORT_FLAG: UInt32 = 16
NCRYPT_IMPL_HARDWARE_FLAG: UInt32 = 1
NCRYPT_IMPL_SOFTWARE_FLAG: UInt32 = 2
NCRYPT_IMPL_REMOVABLE_FLAG: UInt32 = 8
NCRYPT_IMPL_HARDWARE_RNG_FLAG: UInt32 = 16
NCRYPT_IMPL_VIRTUAL_ISOLATION_FLAG: UInt32 = 32
NCRYPT_ALLOW_DECRYPT_FLAG: UInt32 = 1
NCRYPT_ALLOW_SIGNING_FLAG: UInt32 = 2
NCRYPT_ALLOW_KEY_AGREEMENT_FLAG: UInt32 = 4
NCRYPT_ALLOW_KEY_ENVELOPE_FLAG: UInt32 = 8
NCRYPT_ALLOW_KEY_IMPORT_FLAG: UInt32 = 8
NCRYPT_ALLOW_KEY_ATTESTATION_FLAG: UInt32 = 16
NCRYPT_ALLOW_KEY_IMPORT_EPHEMERAL_FLAG: UInt32 = 32
NCRYPT_ALLOW_ALL_USAGES: UInt32 = 16777215
NCRYPT_UI_PROTECT_KEY_FLAG: UInt32 = 1
NCRYPT_UI_FORCE_HIGH_PROTECTION_FLAG: UInt32 = 2
NCRYPT_UI_FINGERPRINT_PROTECTION_FLAG: UInt32 = 4
NCRYPT_UI_APPCONTAINER_ACCESS_MEDIUM_FLAG: UInt32 = 8
NCRYPT_PIN_CACHE_FREE_APPLICATION_TICKET_PROPERTY: String = 'PinCacheFreeApplicationTicket'
NCRYPT_PIN_CACHE_FLAGS_PROPERTY: String = 'PinCacheFlags'
NCRYPT_PIN_CACHE_DISABLE_DPL_FLAG: UInt32 = 1
NCRYPT_PIN_CACHE_APPLICATION_TICKET_PROPERTY: String = 'PinCacheApplicationTicket'
NCRYPT_PIN_CACHE_APPLICATION_IMAGE_PROPERTY: String = 'PinCacheApplicationImage'
NCRYPT_PIN_CACHE_APPLICATION_STATUS_PROPERTY: String = 'PinCacheApplicationStatus'
NCRYPT_PIN_CACHE_PIN_PROPERTY: String = 'PinCachePin'
NCRYPT_PIN_CACHE_IS_GESTURE_REQUIRED_PROPERTY: String = 'PinCacheIsGestureRequired'
NCRYPT_PIN_CACHE_REQUIRE_GESTURE_FLAG: UInt32 = 1
NCRYPT_PIN_CACHE_APPLICATION_TICKET_BYTE_LENGTH: UInt32 = 90
NCRYPT_PIN_CACHE_CLEAR_PROPERTY: String = 'PinCacheClear'
NCRYPT_PIN_CACHE_CLEAR_FOR_CALLING_PROCESS_OPTION: UInt32 = 1
NCRYPT_KEY_ACCESS_POLICY_VERSION: UInt32 = 1
NCRYPT_ALLOW_SILENT_KEY_ACCESS: UInt32 = 1
NCRYPT_CIPHER_KEY_BLOB_MAGIC: UInt32 = 1380470851
NCRYPT_KDF_KEY_BLOB_MAGIC: UInt32 = 826688587
NCRYPT_PROTECTED_KEY_BLOB_MAGIC: UInt32 = 1263817296
NCRYPT_CIPHER_KEY_BLOB: String = 'CipherKeyBlob'
NCRYPT_KDF_KEY_BLOB: String = 'KDFKeyBlob'
NCRYPT_PROTECTED_KEY_BLOB: String = 'ProtectedKeyBlob'
NCRYPT_TPM_LOADABLE_KEY_BLOB: String = 'PcpTpmProtectedKeyBlob'
NCRYPT_TPM_LOADABLE_KEY_BLOB_MAGIC: UInt32 = 1297371211
NCRYPT_TPM_PERSISTENT_KEY_BLOB: String = 'PcpTpmPersistentKeyBlob'
NCRYPT_TPM_PERSISTENT_KEY_BLOB_MAGIC: UInt32 = 1297371211
NCRYPT_PKCS7_ENVELOPE_BLOB: String = 'PKCS7_ENVELOPE'
NCRYPT_PKCS8_PRIVATE_KEY_BLOB: String = 'PKCS8_PRIVATEKEY'
NCRYPT_OPAQUETRANSPORT_BLOB: String = 'OpaqueTransport'
NCRYPT_ISOLATED_KEY_ENVELOPE_BLOB: String = 'ISOLATED_KEY_ENVELOPE'
NCRYPT_DESCR_DELIMITER_OR: String = 'OR'
NCRYPT_DESCR_DELIMITER_AND: String = 'AND'
NCRYPT_DESCR_EQUAL: String = '='
MS_KEY_PROTECTION_PROVIDER: String = 'Microsoft Key Protection Provider'
NCRYPT_KEY_PROTECTION_ALGORITHM_SID: String = 'SID'
NCRYPT_KEY_PROTECTION_ALGORITHM_LOCAL: String = 'LOCAL'
NCRYPT_KEY_PROTECTION_LOCAL_LOGON: String = 'logon'
NCRYPT_KEY_PROTECTION_LOCAL_USER: String = 'user'
NCRYPT_KEY_PROTECTION_LOCAL_MACHINE: String = 'machine'
NCRYPT_KEY_PROTECTION_ALGORITHM_SDDL: String = 'SDDL'
NCRYPT_KEY_PROTECTION_ALGORITHM_WEBCREDENTIALS: String = 'WEBCREDENTIALS'
NCRYPT_KEY_PROTECTION_ALGORITHM_LOCKEDCREDENTIALS: String = 'LOCKEDCREDENTIALS'
NCRYPT_KEY_PROTECTION_ALGORITHM_CERTIFICATE: String = 'CERTIFICATE'
NCRYPT_KEY_PROTECTION_CERT_HASHID: String = 'HashId'
NCRYPT_KEY_PROTECTION_CERT_CERTBLOB: String = 'CertBlob'
NCRYPT_NAMED_DESCRIPTOR_FLAG: UInt32 = 1
NCRYPT_PROTECTION_INFO_TYPE_DESCRIPTOR_STRING: UInt32 = 1
ALG_CLASS_ANY: UInt32 = 0
ALG_CLASS_SIGNATURE: UInt32 = 8192
ALG_CLASS_MSG_ENCRYPT: UInt32 = 16384
ALG_CLASS_DATA_ENCRYPT: UInt32 = 24576
ALG_CLASS_HASH: UInt32 = 32768
ALG_CLASS_KEY_EXCHANGE: UInt32 = 40960
ALG_CLASS_ALL: UInt32 = 57344
ALG_TYPE_ANY: UInt32 = 0
ALG_TYPE_DSS: UInt32 = 512
ALG_TYPE_RSA: UInt32 = 1024
ALG_TYPE_BLOCK: UInt32 = 1536
ALG_TYPE_STREAM: UInt32 = 2048
ALG_TYPE_DH: UInt32 = 2560
ALG_TYPE_SECURECHANNEL: UInt32 = 3072
ALG_TYPE_ECDH: UInt32 = 3584
ALG_TYPE_THIRDPARTY: UInt32 = 4096
ALG_SID_ANY: UInt32 = 0
ALG_SID_THIRDPARTY_ANY: UInt32 = 0
ALG_SID_RSA_ANY: UInt32 = 0
ALG_SID_RSA_PKCS: UInt32 = 1
ALG_SID_RSA_MSATWORK: UInt32 = 2
ALG_SID_RSA_ENTRUST: UInt32 = 3
ALG_SID_RSA_PGP: UInt32 = 4
ALG_SID_DSS_ANY: UInt32 = 0
ALG_SID_DSS_PKCS: UInt32 = 1
ALG_SID_DSS_DMS: UInt32 = 2
ALG_SID_ECDSA: UInt32 = 3
ALG_SID_DES: UInt32 = 1
ALG_SID_3DES: UInt32 = 3
ALG_SID_DESX: UInt32 = 4
ALG_SID_IDEA: UInt32 = 5
ALG_SID_CAST: UInt32 = 6
ALG_SID_SAFERSK64: UInt32 = 7
ALG_SID_SAFERSK128: UInt32 = 8
ALG_SID_3DES_112: UInt32 = 9
ALG_SID_CYLINK_MEK: UInt32 = 12
ALG_SID_RC5: UInt32 = 13
ALG_SID_AES_128: UInt32 = 14
ALG_SID_AES_192: UInt32 = 15
ALG_SID_AES_256: UInt32 = 16
ALG_SID_AES: UInt32 = 17
ALG_SID_SKIPJACK: UInt32 = 10
ALG_SID_TEK: UInt32 = 11
CRYPT_MODE_CBCI: UInt32 = 6
CRYPT_MODE_CFBP: UInt32 = 7
CRYPT_MODE_OFBP: UInt32 = 8
CRYPT_MODE_CBCOFM: UInt32 = 9
CRYPT_MODE_CBCOFMI: UInt32 = 10
ALG_SID_RC2: UInt32 = 2
ALG_SID_RC4: UInt32 = 1
ALG_SID_SEAL: UInt32 = 2
ALG_SID_DH_SANDF: UInt32 = 1
ALG_SID_DH_EPHEM: UInt32 = 2
ALG_SID_AGREED_KEY_ANY: UInt32 = 3
ALG_SID_KEA: UInt32 = 4
ALG_SID_ECDH: UInt32 = 5
ALG_SID_ECDH_EPHEM: UInt32 = 6
ALG_SID_MD2: UInt32 = 1
ALG_SID_MD4: UInt32 = 2
ALG_SID_MD5: UInt32 = 3
ALG_SID_SHA: UInt32 = 4
ALG_SID_SHA1: UInt32 = 4
ALG_SID_MAC: UInt32 = 5
ALG_SID_RIPEMD: UInt32 = 6
ALG_SID_RIPEMD160: UInt32 = 7
ALG_SID_SSL3SHAMD5: UInt32 = 8
ALG_SID_HMAC: UInt32 = 9
ALG_SID_TLS1PRF: UInt32 = 10
ALG_SID_HASH_REPLACE_OWF: UInt32 = 11
ALG_SID_SHA_256: UInt32 = 12
ALG_SID_SHA_384: UInt32 = 13
ALG_SID_SHA_512: UInt32 = 14
ALG_SID_SSL3_MASTER: UInt32 = 1
ALG_SID_SCHANNEL_MASTER_HASH: UInt32 = 2
ALG_SID_SCHANNEL_MAC_KEY: UInt32 = 3
ALG_SID_PCT1_MASTER: UInt32 = 4
ALG_SID_SSL2_MASTER: UInt32 = 5
ALG_SID_TLS1_MASTER: UInt32 = 6
ALG_SID_SCHANNEL_ENC_KEY: UInt32 = 7
ALG_SID_ECMQV: UInt32 = 1
ALG_SID_EXAMPLE: UInt32 = 80
SIGNATURE_RESOURCE_NUMBER: UInt32 = 666
CRYPT_VERIFYCONTEXT: UInt32 = 4026531840
CRYPT_NEWKEYSET: UInt32 = 8
CRYPT_DELETEKEYSET: UInt32 = 16
CRYPT_SILENT: UInt32 = 64
CRYPT_DEFAULT_CONTAINER_OPTIONAL: UInt32 = 128
CRYPT_UPDATE_KEY: UInt32 = 8
CRYPT_USER_PROTECTED_STRONG: UInt32 = 1048576
RSA1024BIT_KEY: UInt32 = 67108864
CRYPT_SERVER: UInt32 = 1024
KEY_LENGTH_MASK: UInt32 = 4294901760
CRYPT_DECRYPT_RSA_NO_PADDING_CHECK: UInt32 = 32
CRYPT_SECRETDIGEST: UInt32 = 1
CRYPT_OWF_REPL_LM_HASH: UInt32 = 1
CRYPT_LITTLE_ENDIAN: UInt32 = 1
CRYPT_NOHASHOID: UInt32 = 1
CRYPT_TYPE2_FORMAT: UInt32 = 2
CRYPT_X931_FORMAT: UInt32 = 4
CRYPT_MACHINE_DEFAULT: UInt32 = 1
CRYPT_USER_DEFAULT: UInt32 = 2
CRYPT_DELETE_DEFAULT: UInt32 = 4
SIMPLEBLOB: UInt32 = 1
PUBLICKEYBLOB: UInt32 = 6
PRIVATEKEYBLOB: UInt32 = 7
PLAINTEXTKEYBLOB: UInt32 = 8
OPAQUEKEYBLOB: UInt32 = 9
PUBLICKEYBLOBEX: UInt32 = 10
SYMMETRICWRAPKEYBLOB: UInt32 = 11
KEYSTATEBLOB: UInt32 = 12
CRYPT_USERDATA: UInt32 = 1
KP_IV: UInt32 = 1
KP_PADDING: UInt32 = 3
KP_MODE: UInt32 = 4
KP_MODE_BITS: UInt32 = 5
KP_P: UInt32 = 11
KP_G: UInt32 = 12
KP_Q: UInt32 = 13
KP_X: UInt32 = 14
KP_Y: UInt32 = 15
KP_RA: UInt32 = 16
KP_RB: UInt32 = 17
KP_INFO: UInt32 = 18
KP_EFFECTIVE_KEYLEN: UInt32 = 19
KP_SCHANNEL_ALG: UInt32 = 20
KP_CLIENT_RANDOM: UInt32 = 21
KP_SERVER_RANDOM: UInt32 = 22
KP_RP: UInt32 = 23
KP_PRECOMP_MD5: UInt32 = 24
KP_PRECOMP_SHA: UInt32 = 25
KP_CLEAR_KEY: UInt32 = 27
KP_PUB_EX_LEN: UInt32 = 28
KP_PUB_EX_VAL: UInt32 = 29
KP_KEYVAL: UInt32 = 30
KP_ADMIN_PIN: UInt32 = 31
KP_KEYEXCHANGE_PIN: UInt32 = 32
KP_SIGNATURE_PIN: UInt32 = 33
KP_PREHASH: UInt32 = 34
KP_ROUNDS: UInt32 = 35
KP_OAEP_PARAMS: UInt32 = 36
KP_CMS_KEY_INFO: UInt32 = 37
KP_CMS_DH_KEY_INFO: UInt32 = 38
KP_PUB_PARAMS: UInt32 = 39
KP_VERIFY_PARAMS: UInt32 = 40
KP_HIGHEST_VERSION: UInt32 = 41
KP_PIN_ID: UInt32 = 43
KP_PIN_INFO: UInt32 = 44
PKCS5_PADDING: UInt32 = 1
RANDOM_PADDING: UInt32 = 2
ZERO_PADDING: UInt32 = 3
CRYPT_MODE_CBC: UInt32 = 1
CRYPT_MODE_ECB: UInt32 = 2
CRYPT_MODE_OFB: UInt32 = 3
CRYPT_MODE_CFB: UInt32 = 4
CRYPT_MODE_CTS: UInt32 = 5
CRYPT_ENCRYPT: UInt32 = 1
CRYPT_DECRYPT: UInt32 = 2
CRYPT_EXPORT: UInt32 = 4
CRYPT_READ: UInt32 = 8
CRYPT_WRITE: UInt32 = 16
CRYPT_MAC: UInt32 = 32
CRYPT_EXPORT_KEY: UInt32 = 64
CRYPT_IMPORT_KEY: UInt32 = 128
CRYPT_ARCHIVE: UInt32 = 256
HP_ALGID: UInt32 = 1
HP_HASHSIZE: UInt32 = 4
HP_TLS1PRF_LABEL: UInt32 = 6
HP_TLS1PRF_SEED: UInt32 = 7
CRYPT_FAILED: UInt32 = 0
CRYPT_SUCCEED: UInt32 = 1
PP_ENUMALGS: UInt32 = 1
PP_ENUMCONTAINERS: UInt32 = 2
PP_IMPTYPE: UInt32 = 3
PP_NAME: UInt32 = 4
PP_VERSION: UInt32 = 5
PP_CONTAINER: UInt32 = 6
PP_CHANGE_PASSWORD: UInt32 = 7
PP_CERTCHAIN: UInt32 = 9
PP_KEY_TYPE_SUBTYPE: UInt32 = 10
PP_PROVTYPE: UInt32 = 16
PP_KEYSTORAGE: UInt32 = 17
PP_APPLI_CERT: UInt32 = 18
PP_SYM_KEYSIZE: UInt32 = 19
PP_SESSION_KEYSIZE: UInt32 = 20
PP_ENUMALGS_EX: UInt32 = 22
PP_ENUMMANDROOTS: UInt32 = 25
PP_ENUMELECTROOTS: UInt32 = 26
PP_KEYSET_TYPE: UInt32 = 27
PP_ADMIN_PIN: UInt32 = 31
PP_SIG_KEYSIZE_INC: UInt32 = 34
PP_KEYX_KEYSIZE_INC: UInt32 = 35
PP_UNIQUE_CONTAINER: UInt32 = 36
PP_SGC_INFO: UInt32 = 37
PP_KEYSPEC: UInt32 = 39
PP_ENUMEX_SIGNING_PROT: UInt32 = 40
PP_CRYPT_COUNT_KEY_USE: UInt32 = 41
PP_SMARTCARD_GUID: UInt32 = 45
PP_SMARTCARD_READER_ICON: UInt32 = 47
CRYPT_FIRST: UInt32 = 1
CRYPT_NEXT: UInt32 = 2
CRYPT_SGC_ENUM: UInt32 = 4
CRYPT_IMPL_HARDWARE: UInt32 = 1
CRYPT_IMPL_SOFTWARE: UInt32 = 2
CRYPT_IMPL_MIXED: UInt32 = 3
CRYPT_IMPL_UNKNOWN: UInt32 = 4
CRYPT_IMPL_REMOVABLE: UInt32 = 8
CRYPT_SEC_DESCR: UInt32 = 1
CRYPT_PSTORE: UInt32 = 2
CRYPT_UI_PROMPT: UInt32 = 4
CRYPT_FLAG_PCT1: UInt32 = 1
CRYPT_FLAG_SSL2: UInt32 = 2
CRYPT_FLAG_SSL3: UInt32 = 4
CRYPT_FLAG_TLS1: UInt32 = 8
CRYPT_FLAG_IPSEC: UInt32 = 16
CRYPT_FLAG_SIGNING: UInt32 = 32
CRYPT_SGC: UInt32 = 1
CRYPT_FASTSGC: UInt32 = 2
PP_CONTEXT_INFO: UInt32 = 11
PP_DISMISS_PIN_UI_SEC: UInt32 = 49
PP_IS_PFX_EPHEMERAL: UInt32 = 50
PROV_RSA_FULL: UInt32 = 1
PROV_RSA_SIG: UInt32 = 2
PROV_DSS: UInt32 = 3
PROV_FORTEZZA: UInt32 = 4
PROV_MS_EXCHANGE: UInt32 = 5
PROV_SSL: UInt32 = 6
PROV_RSA_SCHANNEL: UInt32 = 12
PROV_DSS_DH: UInt32 = 13
PROV_EC_ECDSA_SIG: UInt32 = 14
PROV_EC_ECNRA_SIG: UInt32 = 15
PROV_EC_ECDSA_FULL: UInt32 = 16
PROV_EC_ECNRA_FULL: UInt32 = 17
PROV_DH_SCHANNEL: UInt32 = 18
PROV_SPYRUS_LYNKS: UInt32 = 20
PROV_RNG: UInt32 = 21
PROV_INTEL_SEC: UInt32 = 22
PROV_REPLACE_OWF: UInt32 = 23
PROV_RSA_AES: UInt32 = 24
PROV_STT_MER: UInt32 = 7
PROV_STT_ACQ: UInt32 = 8
PROV_STT_BRND: UInt32 = 9
PROV_STT_ROOT: UInt32 = 10
PROV_STT_ISS: UInt32 = 11
MS_DEF_PROV_A: String = 'Microsoft Base Cryptographic Provider v1.0'
MS_DEF_PROV_W: String = 'Microsoft Base Cryptographic Provider v1.0'
MS_DEF_PROV: String = 'Microsoft Base Cryptographic Provider v1.0'
MS_ENHANCED_PROV_A: String = 'Microsoft Enhanced Cryptographic Provider v1.0'
MS_ENHANCED_PROV_W: String = 'Microsoft Enhanced Cryptographic Provider v1.0'
MS_ENHANCED_PROV: String = 'Microsoft Enhanced Cryptographic Provider v1.0'
MS_STRONG_PROV_A: String = 'Microsoft Strong Cryptographic Provider'
MS_STRONG_PROV_W: String = 'Microsoft Strong Cryptographic Provider'
MS_STRONG_PROV: String = 'Microsoft Strong Cryptographic Provider'
MS_DEF_RSA_SIG_PROV_A: String = 'Microsoft RSA Signature Cryptographic Provider'
MS_DEF_RSA_SIG_PROV_W: String = 'Microsoft RSA Signature Cryptographic Provider'
MS_DEF_RSA_SIG_PROV: String = 'Microsoft RSA Signature Cryptographic Provider'
MS_DEF_RSA_SCHANNEL_PROV_A: String = 'Microsoft RSA SChannel Cryptographic Provider'
MS_DEF_RSA_SCHANNEL_PROV_W: String = 'Microsoft RSA SChannel Cryptographic Provider'
MS_DEF_RSA_SCHANNEL_PROV: String = 'Microsoft RSA SChannel Cryptographic Provider'
MS_DEF_DSS_PROV_A: String = 'Microsoft Base DSS Cryptographic Provider'
MS_DEF_DSS_PROV_W: String = 'Microsoft Base DSS Cryptographic Provider'
MS_DEF_DSS_PROV: String = 'Microsoft Base DSS Cryptographic Provider'
MS_DEF_DSS_DH_PROV_A: String = 'Microsoft Base DSS and Diffie-Hellman Cryptographic Provider'
MS_DEF_DSS_DH_PROV_W: String = 'Microsoft Base DSS and Diffie-Hellman Cryptographic Provider'
MS_DEF_DSS_DH_PROV: String = 'Microsoft Base DSS and Diffie-Hellman Cryptographic Provider'
MS_ENH_DSS_DH_PROV_A: String = 'Microsoft Enhanced DSS and Diffie-Hellman Cryptographic Provider'
MS_ENH_DSS_DH_PROV_W: String = 'Microsoft Enhanced DSS and Diffie-Hellman Cryptographic Provider'
MS_ENH_DSS_DH_PROV: String = 'Microsoft Enhanced DSS and Diffie-Hellman Cryptographic Provider'
MS_DEF_DH_SCHANNEL_PROV_A: String = 'Microsoft DH SChannel Cryptographic Provider'
MS_DEF_DH_SCHANNEL_PROV_W: String = 'Microsoft DH SChannel Cryptographic Provider'
MS_DEF_DH_SCHANNEL_PROV: String = 'Microsoft DH SChannel Cryptographic Provider'
MS_SCARD_PROV_A: String = 'Microsoft Base Smart Card Crypto Provider'
MS_SCARD_PROV_W: String = 'Microsoft Base Smart Card Crypto Provider'
MS_SCARD_PROV: String = 'Microsoft Base Smart Card Crypto Provider'
MS_ENH_RSA_AES_PROV_A: String = 'Microsoft Enhanced RSA and AES Cryptographic Provider'
MS_ENH_RSA_AES_PROV_W: String = 'Microsoft Enhanced RSA and AES Cryptographic Provider'
MS_ENH_RSA_AES_PROV_XP_A: String = 'Microsoft Enhanced RSA and AES Cryptographic Provider (Prototype)'
MS_ENH_RSA_AES_PROV_XP_W: String = 'Microsoft Enhanced RSA and AES Cryptographic Provider (Prototype)'
MS_ENH_RSA_AES_PROV_XP: String = 'Microsoft Enhanced RSA and AES Cryptographic Provider (Prototype)'
MS_ENH_RSA_AES_PROV: String = 'Microsoft Enhanced RSA and AES Cryptographic Provider'
MAXUIDLEN: UInt32 = 64
EXPO_OFFLOAD_REG_VALUE: String = 'ExpoOffload'
EXPO_OFFLOAD_FUNC_NAME: String = 'OffloadModExpo'
szKEY_CRYPTOAPI_PRIVATE_KEY_OPTIONS: String = 'Software\\Policies\\Microsoft\\Cryptography'
szKEY_CACHE_ENABLED: String = 'CachePrivateKeys'
szKEY_CACHE_SECONDS: String = 'PrivateKeyLifetimeSeconds'
szPRIV_KEY_CACHE_MAX_ITEMS: String = 'PrivKeyCacheMaxItems'
cPRIV_KEY_CACHE_MAX_ITEMS_DEFAULT: UInt32 = 20
szPRIV_KEY_CACHE_PURGE_INTERVAL_SECONDS: String = 'PrivKeyCachePurgeIntervalSeconds'
cPRIV_KEY_CACHE_PURGE_INTERVAL_SECONDS_DEFAULT: UInt32 = 86400
CUR_BLOB_VERSION: UInt32 = 2
SCHANNEL_MAC_KEY: UInt32 = 0
SCHANNEL_ENC_KEY: UInt32 = 1
INTERNATIONAL_USAGE: UInt32 = 1
szOID_RSA: String = '1.2.840.113549'
szOID_PKCS: String = '1.2.840.113549.1'
szOID_RSA_HASH: String = '1.2.840.113549.2'
szOID_RSA_ENCRYPT: String = '1.2.840.113549.3'
szOID_PKCS_1: String = '1.2.840.113549.1.1'
szOID_PKCS_2: String = '1.2.840.113549.1.2'
szOID_PKCS_3: String = '1.2.840.113549.1.3'
szOID_PKCS_4: String = '1.2.840.113549.1.4'
szOID_PKCS_5: String = '1.2.840.113549.1.5'
szOID_PKCS_6: String = '1.2.840.113549.1.6'
szOID_PKCS_7: String = '1.2.840.113549.1.7'
szOID_PKCS_8: String = '1.2.840.113549.1.8'
szOID_PKCS_9: String = '1.2.840.113549.1.9'
szOID_PKCS_10: String = '1.2.840.113549.1.10'
szOID_PKCS_12: String = '1.2.840.113549.1.12'
szOID_RSA_RSA: String = '1.2.840.113549.1.1.1'
szOID_RSA_MD2RSA: String = '1.2.840.113549.1.1.2'
szOID_RSA_MD4RSA: String = '1.2.840.113549.1.1.3'
szOID_RSA_MD5RSA: String = '1.2.840.113549.1.1.4'
szOID_RSA_SHA1RSA: String = '1.2.840.113549.1.1.5'
szOID_RSA_SETOAEP_RSA: String = '1.2.840.113549.1.1.6'
szOID_RSAES_OAEP: String = '1.2.840.113549.1.1.7'
szOID_RSA_MGF1: String = '1.2.840.113549.1.1.8'
szOID_RSA_PSPECIFIED: String = '1.2.840.113549.1.1.9'
szOID_RSA_SSA_PSS: String = '1.2.840.113549.1.1.10'
szOID_RSA_SHA256RSA: String = '1.2.840.113549.1.1.11'
szOID_RSA_SHA384RSA: String = '1.2.840.113549.1.1.12'
szOID_RSA_SHA512RSA: String = '1.2.840.113549.1.1.13'
szOID_RSA_DH: String = '1.2.840.113549.1.3.1'
szOID_RSA_data: String = '1.2.840.113549.1.7.1'
szOID_RSA_signedData: String = '1.2.840.113549.1.7.2'
szOID_RSA_envelopedData: String = '1.2.840.113549.1.7.3'
szOID_RSA_signEnvData: String = '1.2.840.113549.1.7.4'
szOID_RSA_digestedData: String = '1.2.840.113549.1.7.5'
szOID_RSA_hashedData: String = '1.2.840.113549.1.7.5'
szOID_RSA_encryptedData: String = '1.2.840.113549.1.7.6'
szOID_RSA_emailAddr: String = '1.2.840.113549.1.9.1'
szOID_RSA_unstructName: String = '1.2.840.113549.1.9.2'
szOID_RSA_contentType: String = '1.2.840.113549.1.9.3'
szOID_RSA_messageDigest: String = '1.2.840.113549.1.9.4'
szOID_RSA_signingTime: String = '1.2.840.113549.1.9.5'
szOID_RSA_counterSign: String = '1.2.840.113549.1.9.6'
szOID_RSA_challengePwd: String = '1.2.840.113549.1.9.7'
szOID_RSA_unstructAddr: String = '1.2.840.113549.1.9.8'
szOID_RSA_extCertAttrs: String = '1.2.840.113549.1.9.9'
szOID_RSA_certExtensions: String = '1.2.840.113549.1.9.14'
szOID_RSA_SMIMECapabilities: String = '1.2.840.113549.1.9.15'
szOID_RSA_preferSignedData: String = '1.2.840.113549.1.9.15.1'
szOID_TIMESTAMP_TOKEN: String = '1.2.840.113549.1.9.16.1.4'
szOID_RFC3161_counterSign: String = '1.3.6.1.4.1.311.3.3.1'
szOID_RFC3161v21_counterSign: String = '1.3.6.1.4.1.311.3.3.2'
szOID_RFC3161v21_thumbprints: String = '1.3.6.1.4.1.311.3.3.3'
szOID_RSA_SMIMEalg: String = '1.2.840.113549.1.9.16.3'
szOID_RSA_SMIMEalgESDH: String = '1.2.840.113549.1.9.16.3.5'
szOID_RSA_SMIMEalgCMS3DESwrap: String = '1.2.840.113549.1.9.16.3.6'
szOID_RSA_SMIMEalgCMSRC2wrap: String = '1.2.840.113549.1.9.16.3.7'
szOID_RSA_MD2: String = '1.2.840.113549.2.2'
szOID_RSA_MD4: String = '1.2.840.113549.2.4'
szOID_RSA_MD5: String = '1.2.840.113549.2.5'
szOID_RSA_RC2CBC: String = '1.2.840.113549.3.2'
szOID_RSA_RC4: String = '1.2.840.113549.3.4'
szOID_RSA_DES_EDE3_CBC: String = '1.2.840.113549.3.7'
szOID_RSA_RC5_CBCPad: String = '1.2.840.113549.3.9'
szOID_ANSI_X942: String = '1.2.840.10046'
szOID_ANSI_X942_DH: String = '1.2.840.10046.2.1'
szOID_X957: String = '1.2.840.10040'
szOID_X957_DSA: String = '1.2.840.10040.4.1'
szOID_X957_SHA1DSA: String = '1.2.840.10040.4.3'
szOID_ECC_PUBLIC_KEY: String = '1.2.840.10045.2.1'
szOID_ECC_CURVE_P256: String = '1.2.840.10045.3.1.7'
szOID_ECC_CURVE_P384: String = '1.3.132.0.34'
szOID_ECC_CURVE_P521: String = '1.3.132.0.35'
szOID_ECC_CURVE_BRAINPOOLP160R1: String = '1.3.36.3.3.2.8.1.1.1'
szOID_ECC_CURVE_BRAINPOOLP160T1: String = '1.3.36.3.3.2.8.1.1.2'
szOID_ECC_CURVE_BRAINPOOLP192R1: String = '1.3.36.3.3.2.8.1.1.3'
szOID_ECC_CURVE_BRAINPOOLP192T1: String = '1.3.36.3.3.2.8.1.1.4'
szOID_ECC_CURVE_BRAINPOOLP224R1: String = '1.3.36.3.3.2.8.1.1.5'
szOID_ECC_CURVE_BRAINPOOLP224T1: String = '1.3.36.3.3.2.8.1.1.6'
szOID_ECC_CURVE_BRAINPOOLP256R1: String = '1.3.36.3.3.2.8.1.1.7'
szOID_ECC_CURVE_BRAINPOOLP256T1: String = '1.3.36.3.3.2.8.1.1.8'
szOID_ECC_CURVE_BRAINPOOLP320R1: String = '1.3.36.3.3.2.8.1.1.9'
szOID_ECC_CURVE_BRAINPOOLP320T1: String = '1.3.36.3.3.2.8.1.1.10'
szOID_ECC_CURVE_BRAINPOOLP384R1: String = '1.3.36.3.3.2.8.1.1.11'
szOID_ECC_CURVE_BRAINPOOLP384T1: String = '1.3.36.3.3.2.8.1.1.12'
szOID_ECC_CURVE_BRAINPOOLP512R1: String = '1.3.36.3.3.2.8.1.1.13'
szOID_ECC_CURVE_BRAINPOOLP512T1: String = '1.3.36.3.3.2.8.1.1.14'
szOID_ECC_CURVE_EC192WAPI: String = '1.2.156.11235.1.1.2.1'
szOID_CN_ECDSA_SHA256: String = '1.2.156.11235.1.1.1'
szOID_ECC_CURVE_NISTP192: String = '1.2.840.10045.3.1.1'
szOID_ECC_CURVE_NISTP224: String = '1.3.132.0.33'
szOID_ECC_CURVE_NISTP256: String = '1.2.840.10045.3.1.7'
szOID_ECC_CURVE_NISTP384: String = '1.3.132.0.34'
szOID_ECC_CURVE_NISTP521: String = '1.3.132.0.35'
szOID_ECC_CURVE_SECP160K1: String = '1.3.132.0.9'
szOID_ECC_CURVE_SECP160R1: String = '1.3.132.0.8'
szOID_ECC_CURVE_SECP160R2: String = '1.3.132.0.30'
szOID_ECC_CURVE_SECP192K1: String = '1.3.132.0.31'
szOID_ECC_CURVE_SECP192R1: String = '1.2.840.10045.3.1.1'
szOID_ECC_CURVE_SECP224K1: String = '1.3.132.0.32'
szOID_ECC_CURVE_SECP224R1: String = '1.3.132.0.33'
szOID_ECC_CURVE_SECP256K1: String = '1.3.132.0.10'
szOID_ECC_CURVE_SECP256R1: String = '1.2.840.10045.3.1.7'
szOID_ECC_CURVE_SECP384R1: String = '1.3.132.0.34'
szOID_ECC_CURVE_SECP521R1: String = '1.3.132.0.35'
szOID_ECC_CURVE_WTLS7: String = '1.3.132.0.30'
szOID_ECC_CURVE_WTLS9: String = '2.23.43.1.4.9'
szOID_ECC_CURVE_WTLS12: String = '1.3.132.0.33'
szOID_ECC_CURVE_X962P192V1: String = '1.2.840.10045.3.1.1'
szOID_ECC_CURVE_X962P192V2: String = '1.2.840.10045.3.1.2'
szOID_ECC_CURVE_X962P192V3: String = '1.2.840.10045.3.1.3'
szOID_ECC_CURVE_X962P239V1: String = '1.2.840.10045.3.1.4'
szOID_ECC_CURVE_X962P239V2: String = '1.2.840.10045.3.1.5'
szOID_ECC_CURVE_X962P239V3: String = '1.2.840.10045.3.1.6'
szOID_ECC_CURVE_X962P256V1: String = '1.2.840.10045.3.1.7'
szOID_ECDSA_SHA1: String = '1.2.840.10045.4.1'
szOID_ECDSA_SPECIFIED: String = '1.2.840.10045.4.3'
szOID_ECDSA_SHA256: String = '1.2.840.10045.4.3.2'
szOID_ECDSA_SHA384: String = '1.2.840.10045.4.3.3'
szOID_ECDSA_SHA512: String = '1.2.840.10045.4.3.4'
szOID_NIST_AES128_CBC: String = '2.16.840.1.101.3.4.1.2'
szOID_NIST_AES192_CBC: String = '2.16.840.1.101.3.4.1.22'
szOID_NIST_AES256_CBC: String = '2.16.840.1.101.3.4.1.42'
szOID_NIST_AES128_WRAP: String = '2.16.840.1.101.3.4.1.5'
szOID_NIST_AES192_WRAP: String = '2.16.840.1.101.3.4.1.25'
szOID_NIST_AES256_WRAP: String = '2.16.840.1.101.3.4.1.45'
szOID_DH_SINGLE_PASS_STDDH_SHA1_KDF: String = '1.3.133.16.840.63.0.2'
szOID_DH_SINGLE_PASS_STDDH_SHA256_KDF: String = '1.3.132.1.11.1'
szOID_DH_SINGLE_PASS_STDDH_SHA384_KDF: String = '1.3.132.1.11.2'
szOID_DS: String = '2.5'
szOID_DSALG: String = '2.5.8'
szOID_DSALG_CRPT: String = '2.5.8.1'
szOID_DSALG_HASH: String = '2.5.8.2'
szOID_DSALG_SIGN: String = '2.5.8.3'
szOID_DSALG_RSA: String = '2.5.8.1.1'
szOID_OIW: String = '1.3.14'
szOID_OIWSEC: String = '1.3.14.3.2'
szOID_OIWSEC_md4RSA: String = '1.3.14.3.2.2'
szOID_OIWSEC_md5RSA: String = '1.3.14.3.2.3'
szOID_OIWSEC_md4RSA2: String = '1.3.14.3.2.4'
szOID_OIWSEC_desECB: String = '1.3.14.3.2.6'
szOID_OIWSEC_desCBC: String = '1.3.14.3.2.7'
szOID_OIWSEC_desOFB: String = '1.3.14.3.2.8'
szOID_OIWSEC_desCFB: String = '1.3.14.3.2.9'
szOID_OIWSEC_desMAC: String = '1.3.14.3.2.10'
szOID_OIWSEC_rsaSign: String = '1.3.14.3.2.11'
szOID_OIWSEC_dsa: String = '1.3.14.3.2.12'
szOID_OIWSEC_shaDSA: String = '1.3.14.3.2.13'
szOID_OIWSEC_mdc2RSA: String = '1.3.14.3.2.14'
szOID_OIWSEC_shaRSA: String = '1.3.14.3.2.15'
szOID_OIWSEC_dhCommMod: String = '1.3.14.3.2.16'
szOID_OIWSEC_desEDE: String = '1.3.14.3.2.17'
szOID_OIWSEC_sha: String = '1.3.14.3.2.18'
szOID_OIWSEC_mdc2: String = '1.3.14.3.2.19'
szOID_OIWSEC_dsaComm: String = '1.3.14.3.2.20'
szOID_OIWSEC_dsaCommSHA: String = '1.3.14.3.2.21'
szOID_OIWSEC_rsaXchg: String = '1.3.14.3.2.22'
szOID_OIWSEC_keyHashSeal: String = '1.3.14.3.2.23'
szOID_OIWSEC_md2RSASign: String = '1.3.14.3.2.24'
szOID_OIWSEC_md5RSASign: String = '1.3.14.3.2.25'
szOID_OIWSEC_sha1: String = '1.3.14.3.2.26'
szOID_OIWSEC_dsaSHA1: String = '1.3.14.3.2.27'
szOID_OIWSEC_dsaCommSHA1: String = '1.3.14.3.2.28'
szOID_OIWSEC_sha1RSASign: String = '1.3.14.3.2.29'
szOID_OIWDIR: String = '1.3.14.7.2'
szOID_OIWDIR_CRPT: String = '1.3.14.7.2.1'
szOID_OIWDIR_HASH: String = '1.3.14.7.2.2'
szOID_OIWDIR_SIGN: String = '1.3.14.7.2.3'
szOID_OIWDIR_md2: String = '1.3.14.7.2.2.1'
szOID_OIWDIR_md2RSA: String = '1.3.14.7.2.3.1'
szOID_INFOSEC: String = '2.16.840.1.101.2.1'
szOID_INFOSEC_sdnsSignature: String = '2.16.840.1.101.2.1.1.1'
szOID_INFOSEC_mosaicSignature: String = '2.16.840.1.101.2.1.1.2'
szOID_INFOSEC_sdnsConfidentiality: String = '2.16.840.1.101.2.1.1.3'
szOID_INFOSEC_mosaicConfidentiality: String = '2.16.840.1.101.2.1.1.4'
szOID_INFOSEC_sdnsIntegrity: String = '2.16.840.1.101.2.1.1.5'
szOID_INFOSEC_mosaicIntegrity: String = '2.16.840.1.101.2.1.1.6'
szOID_INFOSEC_sdnsTokenProtection: String = '2.16.840.1.101.2.1.1.7'
szOID_INFOSEC_mosaicTokenProtection: String = '2.16.840.1.101.2.1.1.8'
szOID_INFOSEC_sdnsKeyManagement: String = '2.16.840.1.101.2.1.1.9'
szOID_INFOSEC_mosaicKeyManagement: String = '2.16.840.1.101.2.1.1.10'
szOID_INFOSEC_sdnsKMandSig: String = '2.16.840.1.101.2.1.1.11'
szOID_INFOSEC_mosaicKMandSig: String = '2.16.840.1.101.2.1.1.12'
szOID_INFOSEC_SuiteASignature: String = '2.16.840.1.101.2.1.1.13'
szOID_INFOSEC_SuiteAConfidentiality: String = '2.16.840.1.101.2.1.1.14'
szOID_INFOSEC_SuiteAIntegrity: String = '2.16.840.1.101.2.1.1.15'
szOID_INFOSEC_SuiteATokenProtection: String = '2.16.840.1.101.2.1.1.16'
szOID_INFOSEC_SuiteAKeyManagement: String = '2.16.840.1.101.2.1.1.17'
szOID_INFOSEC_SuiteAKMandSig: String = '2.16.840.1.101.2.1.1.18'
szOID_INFOSEC_mosaicUpdatedSig: String = '2.16.840.1.101.2.1.1.19'
szOID_INFOSEC_mosaicKMandUpdSig: String = '2.16.840.1.101.2.1.1.20'
szOID_INFOSEC_mosaicUpdatedInteg: String = '2.16.840.1.101.2.1.1.21'
szOID_NIST_sha256: String = '2.16.840.1.101.3.4.2.1'
szOID_NIST_sha384: String = '2.16.840.1.101.3.4.2.2'
szOID_NIST_sha512: String = '2.16.840.1.101.3.4.2.3'
szOID_COMMON_NAME: String = '2.5.4.3'
szOID_SUR_NAME: String = '2.5.4.4'
szOID_DEVICE_SERIAL_NUMBER: String = '2.5.4.5'
szOID_COUNTRY_NAME: String = '2.5.4.6'
szOID_LOCALITY_NAME: String = '2.5.4.7'
szOID_STATE_OR_PROVINCE_NAME: String = '2.5.4.8'
szOID_STREET_ADDRESS: String = '2.5.4.9'
szOID_ORGANIZATION_NAME: String = '2.5.4.10'
szOID_ORGANIZATIONAL_UNIT_NAME: String = '2.5.4.11'
szOID_TITLE: String = '2.5.4.12'
szOID_DESCRIPTION: String = '2.5.4.13'
szOID_SEARCH_GUIDE: String = '2.5.4.14'
szOID_BUSINESS_CATEGORY: String = '2.5.4.15'
szOID_POSTAL_ADDRESS: String = '2.5.4.16'
szOID_POSTAL_CODE: String = '2.5.4.17'
szOID_POST_OFFICE_BOX: String = '2.5.4.18'
szOID_PHYSICAL_DELIVERY_OFFICE_NAME: String = '2.5.4.19'
szOID_TELEPHONE_NUMBER: String = '2.5.4.20'
szOID_TELEX_NUMBER: String = '2.5.4.21'
szOID_TELETEXT_TERMINAL_IDENTIFIER: String = '2.5.4.22'
szOID_FACSIMILE_TELEPHONE_NUMBER: String = '2.5.4.23'
szOID_X21_ADDRESS: String = '2.5.4.24'
szOID_INTERNATIONAL_ISDN_NUMBER: String = '2.5.4.25'
szOID_REGISTERED_ADDRESS: String = '2.5.4.26'
szOID_DESTINATION_INDICATOR: String = '2.5.4.27'
szOID_PREFERRED_DELIVERY_METHOD: String = '2.5.4.28'
szOID_PRESENTATION_ADDRESS: String = '2.5.4.29'
szOID_SUPPORTED_APPLICATION_CONTEXT: String = '2.5.4.30'
szOID_MEMBER: String = '2.5.4.31'
szOID_OWNER: String = '2.5.4.32'
szOID_ROLE_OCCUPANT: String = '2.5.4.33'
szOID_SEE_ALSO: String = '2.5.4.34'
szOID_USER_PASSWORD: String = '2.5.4.35'
szOID_USER_CERTIFICATE: String = '2.5.4.36'
szOID_CA_CERTIFICATE: String = '2.5.4.37'
szOID_AUTHORITY_REVOCATION_LIST: String = '2.5.4.38'
szOID_CERTIFICATE_REVOCATION_LIST: String = '2.5.4.39'
szOID_CROSS_CERTIFICATE_PAIR: String = '2.5.4.40'
szOID_GIVEN_NAME: String = '2.5.4.42'
szOID_INITIALS: String = '2.5.4.43'
szOID_DN_QUALIFIER: String = '2.5.4.46'
szOID_DOMAIN_COMPONENT: String = '0.9.2342.19200300.100.1.25'
szOID_PKCS_12_FRIENDLY_NAME_ATTR: String = '1.2.840.113549.1.9.20'
szOID_PKCS_12_LOCAL_KEY_ID: String = '1.2.840.113549.1.9.21'
szOID_PKCS_12_KEY_PROVIDER_NAME_ATTR: String = '1.3.6.1.4.1.311.17.1'
szOID_LOCAL_MACHINE_KEYSET: String = '1.3.6.1.4.1.311.17.2'
szOID_PKCS_12_EXTENDED_ATTRIBUTES: String = '1.3.6.1.4.1.311.17.3'
szOID_PKCS_12_PROTECTED_PASSWORD_SECRET_BAG_TYPE_ID: String = '1.3.6.1.4.1.311.17.4'
szOID_KEYID_RDN: String = '1.3.6.1.4.1.311.10.7.1'
szOID_EV_RDN_LOCALE: String = '1.3.6.1.4.1.311.60.2.1.1'
szOID_EV_RDN_STATE_OR_PROVINCE: String = '1.3.6.1.4.1.311.60.2.1.2'
szOID_EV_RDN_COUNTRY: String = '1.3.6.1.4.1.311.60.2.1.3'
CERT_RDN_TYPE_MASK: UInt32 = 255
CERT_RDN_FLAGS_MASK: UInt32 = 4278190080
CERT_RDN_ENABLE_T61_UNICODE_FLAG: UInt32 = 2147483648
CERT_RDN_ENABLE_UTF8_UNICODE_FLAG: UInt32 = 536870912
CERT_RDN_FORCE_UTF8_UNICODE_FLAG: UInt32 = 268435456
CERT_RDN_DISABLE_CHECK_TYPE_FLAG: UInt32 = 1073741824
CERT_RDN_DISABLE_IE4_UTF8_FLAG: UInt32 = 16777216
CERT_RDN_ENABLE_PUNYCODE_FLAG: UInt32 = 33554432
CERT_RSA_PUBLIC_KEY_OBJID: String = '1.2.840.113549.1.1.1'
CERT_DEFAULT_OID_PUBLIC_KEY_SIGN: String = '1.2.840.113549.1.1.1'
CERT_DEFAULT_OID_PUBLIC_KEY_XCHG: String = '1.2.840.113549.1.1.1'
CRYPT_ECC_PRIVATE_KEY_INFO_v1: UInt32 = 1
CERT_V1: UInt32 = 0
CERT_V2: UInt32 = 1
CERT_V3: UInt32 = 2
CERT_INFO_VERSION_FLAG: UInt32 = 1
CERT_INFO_SERIAL_NUMBER_FLAG: UInt32 = 2
CERT_INFO_SIGNATURE_ALGORITHM_FLAG: UInt32 = 3
CERT_INFO_ISSUER_FLAG: UInt32 = 4
CERT_INFO_NOT_BEFORE_FLAG: UInt32 = 5
CERT_INFO_NOT_AFTER_FLAG: UInt32 = 6
CERT_INFO_SUBJECT_FLAG: UInt32 = 7
CERT_INFO_SUBJECT_PUBLIC_KEY_INFO_FLAG: UInt32 = 8
CERT_INFO_ISSUER_UNIQUE_ID_FLAG: UInt32 = 9
CERT_INFO_SUBJECT_UNIQUE_ID_FLAG: UInt32 = 10
CERT_INFO_EXTENSION_FLAG: UInt32 = 11
CRL_V1: UInt32 = 0
CRL_V2: UInt32 = 1
CERT_BUNDLE_CERTIFICATE: UInt32 = 0
CERT_BUNDLE_CRL: UInt32 = 1
CERT_REQUEST_V1: UInt32 = 0
CERT_KEYGEN_REQUEST_V1: UInt32 = 0
CTL_V1: UInt32 = 0
CERT_ENCODING_TYPE_MASK: UInt32 = 65535
CMSG_ENCODING_TYPE_MASK: UInt32 = 4294901760
CRYPT_ASN_ENCODING: UInt32 = 1
CRYPT_NDR_ENCODING: UInt32 = 2
X509_NDR_ENCODING: UInt32 = 2
PKCS_7_NDR_ENCODING: UInt32 = 131072
CRYPT_FORMAT_STR_MULTI_LINE: UInt32 = 1
CRYPT_FORMAT_STR_NO_HEX: UInt32 = 16
CRYPT_FORMAT_SIMPLE: UInt32 = 1
CRYPT_FORMAT_X509: UInt32 = 2
CRYPT_FORMAT_OID: UInt32 = 4
CRYPT_FORMAT_RDN_SEMICOLON: UInt32 = 256
CRYPT_FORMAT_RDN_CRLF: UInt32 = 512
CRYPT_FORMAT_RDN_UNQUOTE: UInt32 = 1024
CRYPT_FORMAT_RDN_REVERSE: UInt32 = 2048
CRYPT_FORMAT_COMMA: UInt32 = 4096
CRYPT_FORMAT_SEMICOLON: UInt32 = 256
CRYPT_FORMAT_CRLF: UInt32 = 512
CRYPT_ENCODE_NO_SIGNATURE_BYTE_REVERSAL_FLAG: UInt32 = 8
CRYPT_UNICODE_NAME_ENCODE_FORCE_UTF8_UNICODE_FLAG: UInt32 = 268435456
CRYPT_SORTED_CTL_ENCODE_HASHED_SUBJECT_IDENTIFIER_FLAG: UInt32 = 65536
CRYPT_ENCODE_ENABLE_UTF8PERCENT_FLAG: UInt32 = 262144
CRYPT_DECODE_NOCOPY_FLAG: UInt32 = 1
CRYPT_DECODE_TO_BE_SIGNED_FLAG: UInt32 = 2
CRYPT_DECODE_SHARE_OID_STRING_FLAG: UInt32 = 4
CRYPT_DECODE_NO_SIGNATURE_BYTE_REVERSAL_FLAG: UInt32 = 8
CRYPT_DECODE_ALLOC_FLAG: UInt32 = 32768
CRYPT_UNICODE_NAME_DECODE_DISABLE_IE4_UTF8_FLAG: UInt32 = 16777216
CRYPT_DECODE_ENABLE_PUNYCODE_FLAG: UInt32 = 33554432
CRYPT_DECODE_ENABLE_UTF8PERCENT_FLAG: UInt32 = 67108864
CRYPT_ENCODE_DECODE_NONE: UInt32 = 0
X509_CERT: win32more.Windows.Win32.Foundation.PSTR = 1
X509_CERT_TO_BE_SIGNED: win32more.Windows.Win32.Foundation.PSTR = 2
X509_CERT_CRL_TO_BE_SIGNED: win32more.Windows.Win32.Foundation.PSTR = 3
X509_CERT_REQUEST_TO_BE_SIGNED: win32more.Windows.Win32.Foundation.PSTR = 4
X509_NAME_VALUE: win32more.Windows.Win32.Foundation.PSTR = 6
X509_PUBLIC_KEY_INFO: win32more.Windows.Win32.Foundation.PSTR = 8
X509_EXTENSIONS: win32more.Windows.Win32.Foundation.PSTR = 5
X509_NAME: win32more.Windows.Win32.Foundation.PSTR = 7
WINCRYPT_X509_EXTENSIONS: win32more.Windows.Win32.Foundation.PSTR = 5
WINCRYPT_X509_NAME: win32more.Windows.Win32.Foundation.PSTR = 7
X509_AUTHORITY_KEY_ID: win32more.Windows.Win32.Foundation.PSTR = 9
X509_KEY_ATTRIBUTES: win32more.Windows.Win32.Foundation.PSTR = 10
X509_KEY_USAGE_RESTRICTION: win32more.Windows.Win32.Foundation.PSTR = 11
X509_ALTERNATE_NAME: win32more.Windows.Win32.Foundation.PSTR = 12
X509_BASIC_CONSTRAINTS: win32more.Windows.Win32.Foundation.PSTR = 13
X509_KEY_USAGE: win32more.Windows.Win32.Foundation.PSTR = 14
X509_BASIC_CONSTRAINTS2: win32more.Windows.Win32.Foundation.PSTR = 15
X509_CERT_POLICIES: win32more.Windows.Win32.Foundation.PSTR = 16
PKCS_UTC_TIME: win32more.Windows.Win32.Foundation.PSTR = 17
PKCS_TIME_REQUEST: win32more.Windows.Win32.Foundation.PSTR = 18
RSA_CSP_PUBLICKEYBLOB: win32more.Windows.Win32.Foundation.PSTR = 19
X509_UNICODE_NAME: win32more.Windows.Win32.Foundation.PSTR = 20
X509_KEYGEN_REQUEST_TO_BE_SIGNED: win32more.Windows.Win32.Foundation.PSTR = 21
PKCS_ATTRIBUTE: win32more.Windows.Win32.Foundation.PSTR = 22
PKCS_CONTENT_INFO_SEQUENCE_OF_ANY: win32more.Windows.Win32.Foundation.PSTR = 23
X509_UNICODE_NAME_VALUE: win32more.Windows.Win32.Foundation.PSTR = 24
X509_ANY_STRING: Int32 = 6
X509_UNICODE_ANY_STRING: Int32 = 24
X509_OCTET_STRING: win32more.Windows.Win32.Foundation.PSTR = 25
X509_BITS: win32more.Windows.Win32.Foundation.PSTR = 26
X509_INTEGER: win32more.Windows.Win32.Foundation.PSTR = 27
X509_MULTI_BYTE_INTEGER: win32more.Windows.Win32.Foundation.PSTR = 28
X509_ENUMERATED: win32more.Windows.Win32.Foundation.PSTR = 29
X509_CHOICE_OF_TIME: win32more.Windows.Win32.Foundation.PSTR = 30
X509_AUTHORITY_KEY_ID2: win32more.Windows.Win32.Foundation.PSTR = 31
X509_AUTHORITY_INFO_ACCESS: win32more.Windows.Win32.Foundation.PSTR = 32
X509_SUBJECT_INFO_ACCESS: Int32 = 32
X509_CRL_REASON_CODE: Int32 = 29
PKCS_CONTENT_INFO: win32more.Windows.Win32.Foundation.PSTR = 33
X509_SEQUENCE_OF_ANY: win32more.Windows.Win32.Foundation.PSTR = 34
X509_CRL_DIST_POINTS: win32more.Windows.Win32.Foundation.PSTR = 35
X509_ENHANCED_KEY_USAGE: win32more.Windows.Win32.Foundation.PSTR = 36
PKCS_CTL: win32more.Windows.Win32.Foundation.PSTR = 37
X509_MULTI_BYTE_UINT: win32more.Windows.Win32.Foundation.PSTR = 38
X509_DSS_PUBLICKEY: Int32 = 38
X509_DSS_PARAMETERS: win32more.Windows.Win32.Foundation.PSTR = 39
X509_DSS_SIGNATURE: win32more.Windows.Win32.Foundation.PSTR = 40
PKCS_RC2_CBC_PARAMETERS: win32more.Windows.Win32.Foundation.PSTR = 41
PKCS_SMIME_CAPABILITIES: win32more.Windows.Win32.Foundation.PSTR = 42
X509_QC_STATEMENTS_EXT: win32more.Windows.Win32.Foundation.PSTR = 42
PKCS_RSA_PRIVATE_KEY: win32more.Windows.Win32.Foundation.PSTR = 43
PKCS_PRIVATE_KEY_INFO: win32more.Windows.Win32.Foundation.PSTR = 44
PKCS_ENCRYPTED_PRIVATE_KEY_INFO: win32more.Windows.Win32.Foundation.PSTR = 45
X509_PKIX_POLICY_QUALIFIER_USERNOTICE: win32more.Windows.Win32.Foundation.PSTR = 46
X509_DH_PUBLICKEY: Int32 = 38
X509_DH_PARAMETERS: win32more.Windows.Win32.Foundation.PSTR = 47
PKCS_ATTRIBUTES: win32more.Windows.Win32.Foundation.PSTR = 48
PKCS_SORTED_CTL: win32more.Windows.Win32.Foundation.PSTR = 49
X509_ECC_SIGNATURE: win32more.Windows.Win32.Foundation.PSTR = 47
X942_DH_PARAMETERS: win32more.Windows.Win32.Foundation.PSTR = 50
X509_BITS_WITHOUT_TRAILING_ZEROES: win32more.Windows.Win32.Foundation.PSTR = 51
X942_OTHER_INFO: win32more.Windows.Win32.Foundation.PSTR = 52
X509_CERT_PAIR: win32more.Windows.Win32.Foundation.PSTR = 53
X509_ISSUING_DIST_POINT: win32more.Windows.Win32.Foundation.PSTR = 54
X509_NAME_CONSTRAINTS: win32more.Windows.Win32.Foundation.PSTR = 55
X509_POLICY_MAPPINGS: win32more.Windows.Win32.Foundation.PSTR = 56
X509_POLICY_CONSTRAINTS: win32more.Windows.Win32.Foundation.PSTR = 57
X509_CROSS_CERT_DIST_POINTS: win32more.Windows.Win32.Foundation.PSTR = 58
CMC_DATA: win32more.Windows.Win32.Foundation.PSTR = 59
CMC_RESPONSE: win32more.Windows.Win32.Foundation.PSTR = 60
CMC_STATUS: win32more.Windows.Win32.Foundation.PSTR = 61
CMC_ADD_EXTENSIONS: win32more.Windows.Win32.Foundation.PSTR = 62
CMC_ADD_ATTRIBUTES: win32more.Windows.Win32.Foundation.PSTR = 63
X509_CERTIFICATE_TEMPLATE: win32more.Windows.Win32.Foundation.PSTR = 64
OCSP_SIGNED_REQUEST: win32more.Windows.Win32.Foundation.PSTR = 65
OCSP_BASIC_SIGNED_RESPONSE: win32more.Windows.Win32.Foundation.PSTR = 68
OCSP_BASIC_RESPONSE: win32more.Windows.Win32.Foundation.PSTR = 69
OCSP_REQUEST: win32more.Windows.Win32.Foundation.PSTR = 66
OCSP_RESPONSE: win32more.Windows.Win32.Foundation.PSTR = 67
WINCRYPT_OCSP_REQUEST: win32more.Windows.Win32.Foundation.PSTR = 66
WINCRYPT_OCSP_RESPONSE: win32more.Windows.Win32.Foundation.PSTR = 67
X509_LOGOTYPE_EXT: win32more.Windows.Win32.Foundation.PSTR = 70
X509_BIOMETRIC_EXT: win32more.Windows.Win32.Foundation.PSTR = 71
CNG_RSA_PUBLIC_KEY_BLOB: win32more.Windows.Win32.Foundation.PSTR = 72
X509_OBJECT_IDENTIFIER: win32more.Windows.Win32.Foundation.PSTR = 73
X509_ALGORITHM_IDENTIFIER: win32more.Windows.Win32.Foundation.PSTR = 74
PKCS_RSA_SSA_PSS_PARAMETERS: win32more.Windows.Win32.Foundation.PSTR = 75
PKCS_RSAES_OAEP_PARAMETERS: win32more.Windows.Win32.Foundation.PSTR = 76
ECC_CMS_SHARED_INFO: win32more.Windows.Win32.Foundation.PSTR = 77
TIMESTAMP_REQUEST: win32more.Windows.Win32.Foundation.PSTR = 78
TIMESTAMP_RESPONSE: win32more.Windows.Win32.Foundation.PSTR = 79
TIMESTAMP_INFO: win32more.Windows.Win32.Foundation.PSTR = 80
X509_CERT_BUNDLE: win32more.Windows.Win32.Foundation.PSTR = 81
X509_ECC_PRIVATE_KEY: win32more.Windows.Win32.Foundation.PSTR = 82
CNG_RSA_PRIVATE_KEY_BLOB: win32more.Windows.Win32.Foundation.PSTR = 83
X509_SUBJECT_DIR_ATTRS: win32more.Windows.Win32.Foundation.PSTR = 84
X509_ECC_PARAMETERS: win32more.Windows.Win32.Foundation.PSTR = 85
PKCS7_SIGNER_INFO: win32more.Windows.Win32.Foundation.PSTR = 500
WINCRYPT_PKCS7_SIGNER_INFO: win32more.Windows.Win32.Foundation.PSTR = 500
CMS_SIGNER_INFO: win32more.Windows.Win32.Foundation.PSTR = 501
szOID_AUTHORITY_KEY_IDENTIFIER: String = '2.5.29.1'
szOID_KEY_ATTRIBUTES: String = '2.5.29.2'
szOID_CERT_POLICIES_95: String = '2.5.29.3'
szOID_KEY_USAGE_RESTRICTION: String = '2.5.29.4'
szOID_SUBJECT_ALT_NAME: String = '2.5.29.7'
szOID_ISSUER_ALT_NAME: String = '2.5.29.8'
szOID_BASIC_CONSTRAINTS: String = '2.5.29.10'
szOID_KEY_USAGE: String = '2.5.29.15'
szOID_PRIVATEKEY_USAGE_PERIOD: String = '2.5.29.16'
szOID_BASIC_CONSTRAINTS2: String = '2.5.29.19'
szOID_CERT_POLICIES: String = '2.5.29.32'
szOID_ANY_CERT_POLICY: String = '2.5.29.32.0'
szOID_INHIBIT_ANY_POLICY: String = '2.5.29.54'
szOID_AUTHORITY_KEY_IDENTIFIER2: String = '2.5.29.35'
szOID_SUBJECT_KEY_IDENTIFIER: String = '2.5.29.14'
szOID_SUBJECT_ALT_NAME2: String = '2.5.29.17'
szOID_ISSUER_ALT_NAME2: String = '2.5.29.18'
szOID_CRL_REASON_CODE: String = '2.5.29.21'
szOID_REASON_CODE_HOLD: String = '2.5.29.23'
szOID_CRL_DIST_POINTS: String = '2.5.29.31'
szOID_ENHANCED_KEY_USAGE: String = '2.5.29.37'
szOID_ANY_ENHANCED_KEY_USAGE: String = '2.5.29.37.0'
szOID_CRL_NUMBER: String = '2.5.29.20'
szOID_DELTA_CRL_INDICATOR: String = '2.5.29.27'
szOID_ISSUING_DIST_POINT: String = '2.5.29.28'
szOID_FRESHEST_CRL: String = '2.5.29.46'
szOID_NAME_CONSTRAINTS: String = '2.5.29.30'
szOID_POLICY_MAPPINGS: String = '2.5.29.33'
szOID_LEGACY_POLICY_MAPPINGS: String = '2.5.29.5'
szOID_POLICY_CONSTRAINTS: String = '2.5.29.36'
szOID_RENEWAL_CERTIFICATE: String = '1.3.6.1.4.1.311.13.1'
szOID_ENROLLMENT_NAME_VALUE_PAIR: String = '1.3.6.1.4.1.311.13.2.1'
szOID_ENROLLMENT_CSP_PROVIDER: String = '1.3.6.1.4.1.311.13.2.2'
szOID_OS_VERSION: String = '1.3.6.1.4.1.311.13.2.3'
szOID_ENROLLMENT_AGENT: String = '1.3.6.1.4.1.311.20.2.1'
szOID_PKIX: String = '1.3.6.1.5.5.7'
szOID_PKIX_PE: String = '1.3.6.1.5.5.7.1'
szOID_AUTHORITY_INFO_ACCESS: String = '1.3.6.1.5.5.7.1.1'
szOID_SUBJECT_INFO_ACCESS: String = '1.3.6.1.5.5.7.1.11'
szOID_BIOMETRIC_EXT: String = '1.3.6.1.5.5.7.1.2'
szOID_QC_STATEMENTS_EXT: String = '1.3.6.1.5.5.7.1.3'
szOID_LOGOTYPE_EXT: String = '1.3.6.1.5.5.7.1.12'
szOID_TLS_FEATURES_EXT: String = '1.3.6.1.5.5.7.1.24'
szOID_CERT_EXTENSIONS: String = '1.3.6.1.4.1.311.2.1.14'
szOID_NEXT_UPDATE_LOCATION: String = '1.3.6.1.4.1.311.10.2'
szOID_REMOVE_CERTIFICATE: String = '1.3.6.1.4.1.311.10.8.1'
szOID_CROSS_CERT_DIST_POINTS: String = '1.3.6.1.4.1.311.10.9.1'
szOID_CTL: String = '1.3.6.1.4.1.311.10.1'
szOID_SORTED_CTL: String = '1.3.6.1.4.1.311.10.1.1'
szOID_SERIALIZED: String = '1.3.6.1.4.1.311.10.3.3.1'
szOID_NT_PRINCIPAL_NAME: String = '1.3.6.1.4.1.311.20.2.3'
szOID_INTERNATIONALIZED_EMAIL_ADDRESS: String = '1.3.6.1.4.1.311.20.2.4'
szOID_PRODUCT_UPDATE: String = '1.3.6.1.4.1.311.31.1'
szOID_ANY_APPLICATION_POLICY: String = '1.3.6.1.4.1.311.10.12.1'
szOID_AUTO_ENROLL_CTL_USAGE: String = '1.3.6.1.4.1.311.20.1'
szOID_ENROLL_CERTTYPE_EXTENSION: String = '1.3.6.1.4.1.311.20.2'
szOID_CERT_MANIFOLD: String = '1.3.6.1.4.1.311.20.3'
szOID_CERTSRV_CA_VERSION: String = '1.3.6.1.4.1.311.21.1'
szOID_CERTSRV_PREVIOUS_CERT_HASH: String = '1.3.6.1.4.1.311.21.2'
szOID_CRL_VIRTUAL_BASE: String = '1.3.6.1.4.1.311.21.3'
szOID_CRL_NEXT_PUBLISH: String = '1.3.6.1.4.1.311.21.4'
szOID_KP_CA_EXCHANGE: String = '1.3.6.1.4.1.311.21.5'
szOID_KP_PRIVACY_CA: String = '1.3.6.1.4.1.311.21.36'
szOID_KP_KEY_RECOVERY_AGENT: String = '1.3.6.1.4.1.311.21.6'
szOID_CERTIFICATE_TEMPLATE: String = '1.3.6.1.4.1.311.21.7'
szOID_ENTERPRISE_OID_ROOT: String = '1.3.6.1.4.1.311.21.8'
szOID_RDN_DUMMY_SIGNER: String = '1.3.6.1.4.1.311.21.9'
szOID_APPLICATION_CERT_POLICIES: String = '1.3.6.1.4.1.311.21.10'
szOID_APPLICATION_POLICY_MAPPINGS: String = '1.3.6.1.4.1.311.21.11'
szOID_APPLICATION_POLICY_CONSTRAINTS: String = '1.3.6.1.4.1.311.21.12'
szOID_ARCHIVED_KEY_ATTR: String = '1.3.6.1.4.1.311.21.13'
szOID_CRL_SELF_CDP: String = '1.3.6.1.4.1.311.21.14'
szOID_REQUIRE_CERT_CHAIN_POLICY: String = '1.3.6.1.4.1.311.21.15'
szOID_ARCHIVED_KEY_CERT_HASH: String = '1.3.6.1.4.1.311.21.16'
szOID_ISSUED_CERT_HASH: String = '1.3.6.1.4.1.311.21.17'
szOID_DS_EMAIL_REPLICATION: String = '1.3.6.1.4.1.311.21.19'
szOID_REQUEST_CLIENT_INFO: String = '1.3.6.1.4.1.311.21.20'
szOID_ENCRYPTED_KEY_HASH: String = '1.3.6.1.4.1.311.21.21'
szOID_CERTSRV_CROSSCA_VERSION: String = '1.3.6.1.4.1.311.21.22'
szOID_NTDS_REPLICATION: String = '1.3.6.1.4.1.311.25.1'
szOID_NTDS_CA_SECURITY_EXT: String = '1.3.6.1.4.1.311.25.2'
szOID_NTDS_OBJECTSID: String = '1.3.6.1.4.1.311.25.2.1'
wszURI_NTDS_OBJECTSID_PREFIX: String = 'tag:microsoft.com,2022-09-14:sid:'
szOID_SUBJECT_DIR_ATTRS: String = '2.5.29.9'
szOID_PKIX_KP: String = '1.3.6.1.5.5.7.3'
szOID_PKIX_KP_SERVER_AUTH: String = '1.3.6.1.5.5.7.3.1'
szOID_PKIX_KP_CLIENT_AUTH: String = '1.3.6.1.5.5.7.3.2'
szOID_PKIX_KP_CODE_SIGNING: String = '1.3.6.1.5.5.7.3.3'
szOID_PKIX_KP_EMAIL_PROTECTION: String = '1.3.6.1.5.5.7.3.4'
szOID_PKIX_KP_IPSEC_END_SYSTEM: String = '1.3.6.1.5.5.7.3.5'
szOID_PKIX_KP_IPSEC_TUNNEL: String = '1.3.6.1.5.5.7.3.6'
szOID_PKIX_KP_IPSEC_USER: String = '1.3.6.1.5.5.7.3.7'
szOID_PKIX_KP_TIMESTAMP_SIGNING: String = '1.3.6.1.5.5.7.3.8'
szOID_PKIX_KP_OCSP_SIGNING: String = '1.3.6.1.5.5.7.3.9'
szOID_PKIX_OCSP_NOCHECK: String = '1.3.6.1.5.5.7.48.1.5'
szOID_PKIX_OCSP_NONCE: String = '1.3.6.1.5.5.7.48.1.2'
szOID_IPSEC_KP_IKE_INTERMEDIATE: String = '1.3.6.1.5.5.8.2.2'
szOID_PKINIT_KP_KDC: String = '1.3.6.1.5.2.3.5'
szOID_KP_CTL_USAGE_SIGNING: String = '1.3.6.1.4.1.311.10.3.1'
szOID_KP_TIME_STAMP_SIGNING: String = '1.3.6.1.4.1.311.10.3.2'
szOID_SERVER_GATED_CRYPTO: String = '1.3.6.1.4.1.311.10.3.3'
szOID_SGC_NETSCAPE: String = '2.16.840.1.113730.4.1'
szOID_KP_EFS: String = '1.3.6.1.4.1.311.10.3.4'
szOID_EFS_RECOVERY: String = '1.3.6.1.4.1.311.10.3.4.1'
szOID_WHQL_CRYPTO: String = '1.3.6.1.4.1.311.10.3.5'
szOID_ATTEST_WHQL_CRYPTO: String = '1.3.6.1.4.1.311.10.3.5.1'
szOID_NT5_CRYPTO: String = '1.3.6.1.4.1.311.10.3.6'
szOID_OEM_WHQL_CRYPTO: String = '1.3.6.1.4.1.311.10.3.7'
szOID_EMBEDDED_NT_CRYPTO: String = '1.3.6.1.4.1.311.10.3.8'
szOID_ROOT_LIST_SIGNER: String = '1.3.6.1.4.1.311.10.3.9'
szOID_KP_QUALIFIED_SUBORDINATION: String = '1.3.6.1.4.1.311.10.3.10'
szOID_KP_KEY_RECOVERY: String = '1.3.6.1.4.1.311.10.3.11'
szOID_KP_DOCUMENT_SIGNING: String = '1.3.6.1.4.1.311.10.3.12'
szOID_KP_LIFETIME_SIGNING: String = '1.3.6.1.4.1.311.10.3.13'
szOID_KP_MOBILE_DEVICE_SOFTWARE: String = '1.3.6.1.4.1.311.10.3.14'
szOID_KP_SMART_DISPLAY: String = '1.3.6.1.4.1.311.10.3.15'
szOID_KP_CSP_SIGNATURE: String = '1.3.6.1.4.1.311.10.3.16'
szOID_KP_FLIGHT_SIGNING: String = '1.3.6.1.4.1.311.10.3.27'
szOID_PLATFORM_MANIFEST_BINARY_ID: String = '1.3.6.1.4.1.311.10.3.28'
szOID_DRM: String = '1.3.6.1.4.1.311.10.5.1'
szOID_DRM_INDIVIDUALIZATION: String = '1.3.6.1.4.1.311.10.5.2'
szOID_LICENSES: String = '1.3.6.1.4.1.311.10.6.1'
szOID_LICENSE_SERVER: String = '1.3.6.1.4.1.311.10.6.2'
szOID_KP_SMARTCARD_LOGON: String = '1.3.6.1.4.1.311.20.2.2'
szOID_KP_KERNEL_MODE_CODE_SIGNING: String = '1.3.6.1.4.1.311.61.1.1'
szOID_KP_KERNEL_MODE_TRUSTED_BOOT_SIGNING: String = '1.3.6.1.4.1.311.61.4.1'
szOID_REVOKED_LIST_SIGNER: String = '1.3.6.1.4.1.311.10.3.19'
szOID_WINDOWS_KITS_SIGNER: String = '1.3.6.1.4.1.311.10.3.20'
szOID_WINDOWS_RT_SIGNER: String = '1.3.6.1.4.1.311.10.3.21'
szOID_PROTECTED_PROCESS_LIGHT_SIGNER: String = '1.3.6.1.4.1.311.10.3.22'
szOID_WINDOWS_TCB_SIGNER: String = '1.3.6.1.4.1.311.10.3.23'
szOID_PROTECTED_PROCESS_SIGNER: String = '1.3.6.1.4.1.311.10.3.24'
szOID_WINDOWS_THIRD_PARTY_COMPONENT_SIGNER: String = '1.3.6.1.4.1.311.10.3.25'
szOID_WINDOWS_SOFTWARE_EXTENSION_SIGNER: String = '1.3.6.1.4.1.311.10.3.26'
szOID_DISALLOWED_LIST: String = '1.3.6.1.4.1.311.10.3.30'
szOID_PIN_RULES_SIGNER: String = '1.3.6.1.4.1.311.10.3.31'
szOID_PIN_RULES_CTL: String = '1.3.6.1.4.1.311.10.3.32'
szOID_PIN_RULES_EXT: String = '1.3.6.1.4.1.311.10.3.33'
szOID_PIN_RULES_DOMAIN_NAME: String = '1.3.6.1.4.1.311.10.3.34'
szOID_PIN_RULES_LOG_END_DATE_EXT: String = '1.3.6.1.4.1.311.10.3.35'
szOID_IUM_SIGNING: String = '1.3.6.1.4.1.311.10.3.37'
szOID_EV_WHQL_CRYPTO: String = '1.3.6.1.4.1.311.10.3.39'
szOID_BIOMETRIC_SIGNING: String = '1.3.6.1.4.1.311.10.3.41'
szOID_ENCLAVE_SIGNING: String = '1.3.6.1.4.1.311.10.3.42'
szOID_SYNC_ROOT_CTL_EXT: String = '1.3.6.1.4.1.311.10.3.50'
szOID_FLIGHT_CTL_EXT: String = '1.3.6.1.4.1.311.10.3.51'
szOID_CERT_LOG_LIST_EXT: String = '1.3.6.1.4.1.311.10.3.52'
szOID_HPKP_DOMAIN_NAME_CTL: String = '1.3.6.1.4.1.311.10.3.60'
szOID_HPKP_HEADER_VALUE_CTL: String = '1.3.6.1.4.1.311.10.3.61'
szOID_KP_KERNEL_MODE_HAL_EXTENSION_SIGNING: String = '1.3.6.1.4.1.311.61.5.1'
szOID_WINDOWS_STORE_SIGNER: String = '1.3.6.1.4.1.311.76.3.1'
szOID_DYNAMIC_CODE_GEN_SIGNER: String = '1.3.6.1.4.1.311.76.5.1'
szOID_MICROSOFT_PUBLISHER_SIGNER: String = '1.3.6.1.4.1.311.76.8.1'
szOID_YESNO_TRUST_ATTR: String = '1.3.6.1.4.1.311.10.4.1'
szOID_SITE_PIN_RULES_INDEX_ATTR: String = '1.3.6.1.4.1.311.10.4.2'
szOID_SITE_PIN_RULES_FLAGS_ATTR: String = '1.3.6.1.4.1.311.10.4.3'
SITE_PIN_RULES_ALL_SUBDOMAINS_FLAG: UInt32 = 1
szOID_PKIX_POLICY_QUALIFIER_CPS: String = '1.3.6.1.5.5.7.2.1'
szOID_PKIX_POLICY_QUALIFIER_USERNOTICE: String = '1.3.6.1.5.5.7.2.2'
szOID_ROOT_PROGRAM_FLAGS: String = '1.3.6.1.4.1.311.60.1.1'
CERT_ROOT_PROGRAM_FLAG_OU: UInt32 = 16
CERT_ROOT_PROGRAM_FLAG_ADDRESS: UInt32 = 8
szOID_CERT_POLICIES_95_QUALIFIER1: String = '2.16.840.1.113733.1.7.1.1'
szOID_RDN_TPM_MANUFACTURER: String = '2.23.133.2.1'
szOID_RDN_TPM_MODEL: String = '2.23.133.2.2'
szOID_RDN_TPM_VERSION: String = '2.23.133.2.3'
szOID_RDN_TCG_PLATFORM_MANUFACTURER: String = '2.23.133.2.4'
szOID_RDN_TCG_PLATFORM_MODEL: String = '2.23.133.2.5'
szOID_RDN_TCG_PLATFORM_VERSION: String = '2.23.133.2.6'
szOID_CT_CERT_SCTLIST: String = '1.3.6.1.4.1.11129.2.4.2'
szOID_ENROLL_EK_INFO: String = '1.3.6.1.4.1.311.21.23'
szOID_ENROLL_AIK_INFO: String = '1.3.6.1.4.1.311.21.39'
szOID_ENROLL_ATTESTATION_STATEMENT: String = '1.3.6.1.4.1.311.21.24'
szOID_ENROLL_KSP_NAME: String = '1.3.6.1.4.1.311.21.25'
szOID_ENROLL_EKPUB_CHALLENGE: String = '1.3.6.1.4.1.311.21.26'
szOID_ENROLL_CAXCHGCERT_HASH: String = '1.3.6.1.4.1.311.21.27'
szOID_ENROLL_ATTESTATION_CHALLENGE: String = '1.3.6.1.4.1.311.21.28'
szOID_ENROLL_ENCRYPTION_ALGORITHM: String = '1.3.6.1.4.1.311.21.29'
szOID_KP_TPM_EK_CERTIFICATE: String = '2.23.133.8.1'
szOID_KP_TPM_PLATFORM_CERTIFICATE: String = '2.23.133.8.2'
szOID_KP_TPM_AIK_CERTIFICATE: String = '2.23.133.8.3'
szOID_ENROLL_EKVERIFYKEY: String = '1.3.6.1.4.1.311.21.30'
szOID_ENROLL_EKVERIFYCERT: String = '1.3.6.1.4.1.311.21.31'
szOID_ENROLL_EKVERIFYCREDS: String = '1.3.6.1.4.1.311.21.32'
szOID_ENROLL_SCEP_ERROR: String = '1.3.6.1.4.1.311.21.33'
szOID_ENROLL_SCEP_SERVER_STATE: String = '1.3.6.1.4.1.311.21.34'
szOID_ENROLL_SCEP_CHALLENGE_ANSWER: String = '1.3.6.1.4.1.311.21.35'
szOID_ENROLL_SCEP_CLIENT_REQUEST: String = '1.3.6.1.4.1.311.21.37'
szOID_ENROLL_SCEP_SERVER_MESSAGE: String = '1.3.6.1.4.1.311.21.38'
szOID_ENROLL_SCEP_SERVER_SECRET: String = '1.3.6.1.4.1.311.21.40'
szOID_ENROLL_KEY_AFFINITY: String = '1.3.6.1.4.1.311.21.41'
szOID_ENROLL_SCEP_SIGNER_HASH: String = '1.3.6.1.4.1.311.21.42'
szOID_ENROLL_EK_CA_KEYID: String = '1.3.6.1.4.1.311.21.43'
szOID_ATTR_SUPPORTED_ALGORITHMS: String = '2.5.4.52'
szOID_ATTR_TPM_SPECIFICATION: String = '2.23.133.2.16'
szOID_ATTR_PLATFORM_SPECIFICATION: String = '2.23.133.2.17'
szOID_ATTR_TPM_SECURITY_ASSERTIONS: String = '2.23.133.2.18'
CERT_UNICODE_RDN_ERR_INDEX_MASK: UInt32 = 1023
CERT_UNICODE_RDN_ERR_INDEX_SHIFT: UInt32 = 22
CERT_UNICODE_ATTR_ERR_INDEX_MASK: UInt32 = 63
CERT_UNICODE_ATTR_ERR_INDEX_SHIFT: UInt32 = 16
CERT_UNICODE_VALUE_ERR_INDEX_MASK: UInt32 = 65535
CERT_UNICODE_VALUE_ERR_INDEX_SHIFT: UInt32 = 0
CERT_DIGITAL_SIGNATURE_KEY_USAGE: UInt32 = 128
CERT_NON_REPUDIATION_KEY_USAGE: UInt32 = 64
CERT_KEY_ENCIPHERMENT_KEY_USAGE: UInt32 = 32
CERT_DATA_ENCIPHERMENT_KEY_USAGE: UInt32 = 16
CERT_KEY_AGREEMENT_KEY_USAGE: UInt32 = 8
CERT_KEY_CERT_SIGN_KEY_USAGE: UInt32 = 4
CERT_OFFLINE_CRL_SIGN_KEY_USAGE: UInt32 = 2
CERT_CRL_SIGN_KEY_USAGE: UInt32 = 2
CERT_ENCIPHER_ONLY_KEY_USAGE: UInt32 = 1
CERT_DECIPHER_ONLY_KEY_USAGE: UInt32 = 128
CERT_ALT_NAME_X400_ADDRESS: UInt32 = 4
CERT_ALT_NAME_EDI_PARTY_NAME: UInt32 = 6
CERT_ALT_NAME_ENTRY_ERR_INDEX_MASK: UInt32 = 255
CERT_ALT_NAME_ENTRY_ERR_INDEX_SHIFT: UInt32 = 16
CERT_ALT_NAME_VALUE_ERR_INDEX_MASK: UInt32 = 65535
CERT_ALT_NAME_VALUE_ERR_INDEX_SHIFT: UInt32 = 0
CERT_CA_SUBJECT_FLAG: UInt32 = 128
CERT_END_ENTITY_SUBJECT_FLAG: UInt32 = 64
szOID_PKIX_ACC_DESCR: String = '1.3.6.1.5.5.7.48'
szOID_PKIX_OCSP: String = '1.3.6.1.5.5.7.48.1'
szOID_PKIX_CA_ISSUERS: String = '1.3.6.1.5.5.7.48.2'
szOID_PKIX_TIME_STAMPING: String = '1.3.6.1.5.5.7.48.3'
szOID_PKIX_CA_REPOSITORY: String = '1.3.6.1.5.5.7.48.5'
CRL_REASON_PRIVILEGE_WITHDRAWN: UInt32 = 9
CRL_REASON_AA_COMPROMISE: UInt32 = 10
CRL_DIST_POINT_NO_NAME: UInt32 = 0
CRL_DIST_POINT_FULL_NAME: UInt32 = 1
CRL_DIST_POINT_ISSUER_RDN_NAME: UInt32 = 2
CRL_REASON_UNUSED_FLAG: UInt32 = 128
CRL_REASON_KEY_COMPROMISE_FLAG: UInt32 = 64
CRL_REASON_CA_COMPROMISE_FLAG: UInt32 = 32
CRL_REASON_AFFILIATION_CHANGED_FLAG: UInt32 = 16
CRL_REASON_SUPERSEDED_FLAG: UInt32 = 8
CRL_REASON_CESSATION_OF_OPERATION_FLAG: UInt32 = 4
CRL_REASON_CERTIFICATE_HOLD_FLAG: UInt32 = 2
CRL_REASON_PRIVILEGE_WITHDRAWN_FLAG: UInt32 = 1
CRL_REASON_AA_COMPROMISE_FLAG: UInt32 = 128
CRL_DIST_POINT_ERR_INDEX_MASK: UInt32 = 127
CRL_DIST_POINT_ERR_INDEX_SHIFT: UInt32 = 24
CRL_DIST_POINT_ERR_CRL_ISSUER_BIT: Int32 = -2147483648
CROSS_CERT_DIST_POINT_ERR_INDEX_MASK: UInt32 = 255
CROSS_CERT_DIST_POINT_ERR_INDEX_SHIFT: UInt32 = 24
CERT_EXCLUDED_SUBTREE_BIT: Int32 = -2147483648
SORTED_CTL_EXT_HASHED_SUBJECT_IDENTIFIER_FLAG: UInt32 = 1
CERT_DSS_R_LEN: UInt32 = 20
CERT_DSS_S_LEN: UInt32 = 20
CRYPT_X942_COUNTER_BYTE_LENGTH: UInt32 = 4
CRYPT_X942_KEY_LENGTH_BYTE_LENGTH: UInt32 = 4
CRYPT_ECC_CMS_SHARED_INFO_SUPPPUBINFO_BYTE_LENGTH: UInt32 = 4
CRYPT_RC2_40BIT_VERSION: UInt32 = 160
CRYPT_RC2_56BIT_VERSION: UInt32 = 52
CRYPT_RC2_64BIT_VERSION: UInt32 = 120
CRYPT_RC2_128BIT_VERSION: UInt32 = 58
szOID_QC_EU_COMPLIANCE: String = '0.4.0.1862.1.1'
szOID_QC_SSCD: String = '0.4.0.1862.1.4'
PKCS_RSA_SSA_PSS_TRAILER_FIELD_BC: UInt32 = 1
szOID_VERISIGN_PRIVATE_6_9: String = '2.16.840.1.113733.1.6.9'
szOID_VERISIGN_ONSITE_JURISDICTION_HASH: String = '2.16.840.1.113733.1.6.11'
szOID_VERISIGN_BITSTRING_6_13: String = '2.16.840.1.113733.1.6.13'
szOID_VERISIGN_ISS_STRONG_CRYPTO: String = '2.16.840.1.113733.1.8.1'
szOIDVerisign_MessageType: String = '2.16.840.1.113733.1.9.2'
szOIDVerisign_PkiStatus: String = '2.16.840.1.113733.1.9.3'
szOIDVerisign_FailInfo: String = '2.16.840.1.113733.1.9.4'
szOIDVerisign_SenderNonce: String = '2.16.840.1.113733.1.9.5'
szOIDVerisign_RecipientNonce: String = '2.16.840.1.113733.1.9.6'
szOIDVerisign_TransactionID: String = '2.16.840.1.113733.1.9.7'
szOID_NETSCAPE: String = '2.16.840.1.113730'
szOID_NETSCAPE_CERT_EXTENSION: String = '2.16.840.1.113730.1'
szOID_NETSCAPE_CERT_TYPE: String = '2.16.840.1.113730.1.1'
szOID_NETSCAPE_BASE_URL: String = '2.16.840.1.113730.1.2'
szOID_NETSCAPE_REVOCATION_URL: String = '2.16.840.1.113730.1.3'
szOID_NETSCAPE_CA_REVOCATION_URL: String = '2.16.840.1.113730.1.4'
szOID_NETSCAPE_CERT_RENEWAL_URL: String = '2.16.840.1.113730.1.7'
szOID_NETSCAPE_CA_POLICY_URL: String = '2.16.840.1.113730.1.8'
szOID_NETSCAPE_SSL_SERVER_NAME: String = '2.16.840.1.113730.1.12'
szOID_NETSCAPE_COMMENT: String = '2.16.840.1.113730.1.13'
szOID_NETSCAPE_DATA_TYPE: String = '2.16.840.1.113730.2'
szOID_NETSCAPE_CERT_SEQUENCE: String = '2.16.840.1.113730.2.5'
NETSCAPE_SSL_CLIENT_AUTH_CERT_TYPE: UInt32 = 128
NETSCAPE_SSL_SERVER_AUTH_CERT_TYPE: UInt32 = 64
NETSCAPE_SMIME_CERT_TYPE: UInt32 = 32
NETSCAPE_SIGN_CERT_TYPE: UInt32 = 16
NETSCAPE_SSL_CA_CERT_TYPE: UInt32 = 4
NETSCAPE_SMIME_CA_CERT_TYPE: UInt32 = 2
NETSCAPE_SIGN_CA_CERT_TYPE: UInt32 = 1
szOID_CT_PKI_DATA: String = '1.3.6.1.5.5.7.12.2'
szOID_CT_PKI_RESPONSE: String = '1.3.6.1.5.5.7.12.3'
szOID_PKIX_NO_SIGNATURE: String = '1.3.6.1.5.5.7.6.2'
szOID_CMC: String = '1.3.6.1.5.5.7.7'
szOID_CMC_STATUS_INFO: String = '1.3.6.1.5.5.7.7.1'
szOID_CMC_IDENTIFICATION: String = '1.3.6.1.5.5.7.7.2'
szOID_CMC_IDENTITY_PROOF: String = '1.3.6.1.5.5.7.7.3'
szOID_CMC_DATA_RETURN: String = '1.3.6.1.5.5.7.7.4'
szOID_CMC_TRANSACTION_ID: String = '1.3.6.1.5.5.7.7.5'
szOID_CMC_SENDER_NONCE: String = '1.3.6.1.5.5.7.7.6'
szOID_CMC_RECIPIENT_NONCE: String = '1.3.6.1.5.5.7.7.7'
szOID_CMC_ADD_EXTENSIONS: String = '1.3.6.1.5.5.7.7.8'
szOID_CMC_ENCRYPTED_POP: String = '1.3.6.1.5.5.7.7.9'
szOID_CMC_DECRYPTED_POP: String = '1.3.6.1.5.5.7.7.10'
szOID_CMC_LRA_POP_WITNESS: String = '1.3.6.1.5.5.7.7.11'
szOID_CMC_GET_CERT: String = '1.3.6.1.5.5.7.7.15'
szOID_CMC_GET_CRL: String = '1.3.6.1.5.5.7.7.16'
szOID_CMC_REVOKE_REQUEST: String = '1.3.6.1.5.5.7.7.17'
szOID_CMC_REG_INFO: String = '1.3.6.1.5.5.7.7.18'
szOID_CMC_RESPONSE_INFO: String = '1.3.6.1.5.5.7.7.19'
szOID_CMC_QUERY_PENDING: String = '1.3.6.1.5.5.7.7.21'
szOID_CMC_ID_POP_LINK_RANDOM: String = '1.3.6.1.5.5.7.7.22'
szOID_CMC_ID_POP_LINK_WITNESS: String = '1.3.6.1.5.5.7.7.23'
szOID_CMC_ID_CONFIRM_CERT_ACCEPTANCE: String = '1.3.6.1.5.5.7.7.24'
szOID_CMC_ADD_ATTRIBUTES: String = '1.3.6.1.4.1.311.10.10.1'
CMC_TAGGED_CERT_REQUEST_CHOICE: UInt32 = 1
CMC_OTHER_INFO_NO_CHOICE: UInt32 = 0
CMC_OTHER_INFO_FAIL_CHOICE: UInt32 = 1
CMC_OTHER_INFO_PEND_CHOICE: UInt32 = 2
CMC_STATUS_SUCCESS: UInt32 = 0
CMC_STATUS_FAILED: UInt32 = 2
CMC_STATUS_PENDING: UInt32 = 3
CMC_STATUS_NO_SUPPORT: UInt32 = 4
CMC_STATUS_CONFIRM_REQUIRED: UInt32 = 5
CMC_FAIL_BAD_ALG: UInt32 = 0
CMC_FAIL_BAD_MESSAGE_CHECK: UInt32 = 1
CMC_FAIL_BAD_REQUEST: UInt32 = 2
CMC_FAIL_BAD_TIME: UInt32 = 3
CMC_FAIL_BAD_CERT_ID: UInt32 = 4
CMC_FAIL_UNSUPORTED_EXT: UInt32 = 5
CMC_FAIL_MUST_ARCHIVE_KEYS: UInt32 = 6
CMC_FAIL_BAD_IDENTITY: UInt32 = 7
CMC_FAIL_POP_REQUIRED: UInt32 = 8
CMC_FAIL_POP_FAILED: UInt32 = 9
CMC_FAIL_NO_KEY_REUSE: UInt32 = 10
CMC_FAIL_INTERNAL_CA_ERROR: UInt32 = 11
CMC_FAIL_TRY_LATER: UInt32 = 12
szOID_LOYALTY_OTHER_LOGOTYPE: String = '1.3.6.1.5.5.7.20.1'
szOID_BACKGROUND_OTHER_LOGOTYPE: String = '1.3.6.1.5.5.7.20.2'
CERT_BIOMETRIC_PICTURE_TYPE: UInt32 = 0
CERT_BIOMETRIC_SIGNATURE_TYPE: UInt32 = 1
OCSP_REQUEST_V1: UInt32 = 0
OCSP_SUCCESSFUL_RESPONSE: UInt32 = 0
OCSP_MALFORMED_REQUEST_RESPONSE: UInt32 = 1
OCSP_INTERNAL_ERROR_RESPONSE: UInt32 = 2
OCSP_TRY_LATER_RESPONSE: UInt32 = 3
OCSP_SIG_REQUIRED_RESPONSE: UInt32 = 5
OCSP_UNAUTHORIZED_RESPONSE: UInt32 = 6
szOID_PKIX_OCSP_BASIC_SIGNED_RESPONSE: String = '1.3.6.1.5.5.7.48.1.1'
OCSP_BASIC_GOOD_CERT_STATUS: UInt32 = 0
OCSP_BASIC_REVOKED_CERT_STATUS: UInt32 = 1
OCSP_BASIC_UNKNOWN_CERT_STATUS: UInt32 = 2
OCSP_BASIC_RESPONSE_V1: UInt32 = 0
OCSP_BASIC_BY_NAME_RESPONDER_ID: UInt32 = 1
OCSP_BASIC_BY_KEY_RESPONDER_ID: UInt32 = 2
CRYPT_OID_ENCODE_OBJECT_FUNC: String = 'CryptDllEncodeObject'
CRYPT_OID_DECODE_OBJECT_FUNC: String = 'CryptDllDecodeObject'
CRYPT_OID_ENCODE_OBJECT_EX_FUNC: String = 'CryptDllEncodeObjectEx'
CRYPT_OID_DECODE_OBJECT_EX_FUNC: String = 'CryptDllDecodeObjectEx'
CRYPT_OID_CREATE_COM_OBJECT_FUNC: String = 'CryptDllCreateCOMObject'
CRYPT_OID_VERIFY_REVOCATION_FUNC: String = 'CertDllVerifyRevocation'
CRYPT_OID_VERIFY_CTL_USAGE_FUNC: String = 'CertDllVerifyCTLUsage'
CRYPT_OID_FORMAT_OBJECT_FUNC: String = 'CryptDllFormatObject'
CRYPT_OID_FIND_OID_INFO_FUNC: String = 'CryptDllFindOIDInfo'
CRYPT_OID_FIND_LOCALIZED_NAME_FUNC: String = 'CryptDllFindLocalizedName'
CRYPT_OID_REGPATH: String = 'Software\\Microsoft\\Cryptography\\OID'
CRYPT_OID_REG_ENCODING_TYPE_PREFIX: String = 'EncodingType '
CRYPT_OID_REG_DLL_VALUE_NAME: String = 'Dll'
CRYPT_OID_REG_FUNC_NAME_VALUE_NAME: String = 'FuncName'
CRYPT_OID_REG_FUNC_NAME_VALUE_NAME_A: String = 'FuncName'
CRYPT_OID_REG_FLAGS_VALUE_NAME: String = 'CryptFlags'
CRYPT_DEFAULT_OID: String = 'DEFAULT'
CRYPT_INSTALL_OID_FUNC_BEFORE_FLAG: UInt32 = 1
CRYPT_GET_INSTALLED_OID_FUNC_FLAG: UInt32 = 1
CRYPT_REGISTER_FIRST_INDEX: UInt32 = 0
CRYPT_REGISTER_LAST_INDEX: UInt32 = 4294967295
CRYPT_MATCH_ANY_ENCODING_TYPE: UInt32 = 4294967295
CALG_OID_INFO_CNG_ONLY: UInt32 = 4294967295
CALG_OID_INFO_PARAMETERS: UInt32 = 4294967294
CRYPT_OID_INFO_HASH_PARAMETERS_ALGORITHM: String = 'CryptOIDInfoHashParameters'
CRYPT_OID_INFO_ECC_PARAMETERS_ALGORITHM: String = 'CryptOIDInfoECCParameters'
CRYPT_OID_INFO_MGF1_PARAMETERS_ALGORITHM: String = 'CryptOIDInfoMgf1Parameters'
CRYPT_OID_INFO_NO_SIGN_ALGORITHM: String = 'CryptOIDInfoNoSign'
CRYPT_OID_INFO_OAEP_PARAMETERS_ALGORITHM: String = 'CryptOIDInfoOAEPParameters'
CRYPT_OID_INFO_ECC_WRAP_PARAMETERS_ALGORITHM: String = 'CryptOIDInfoECCWrapParameters'
CRYPT_OID_INFO_NO_PARAMETERS_ALGORITHM: String = 'CryptOIDInfoNoParameters'
CRYPT_HASH_ALG_OID_GROUP_ID: UInt32 = 1
CRYPT_ENCRYPT_ALG_OID_GROUP_ID: UInt32 = 2
CRYPT_PUBKEY_ALG_OID_GROUP_ID: UInt32 = 3
CRYPT_SIGN_ALG_OID_GROUP_ID: UInt32 = 4
CRYPT_RDN_ATTR_OID_GROUP_ID: UInt32 = 5
CRYPT_EXT_OR_ATTR_OID_GROUP_ID: UInt32 = 6
CRYPT_ENHKEY_USAGE_OID_GROUP_ID: UInt32 = 7
CRYPT_POLICY_OID_GROUP_ID: UInt32 = 8
CRYPT_TEMPLATE_OID_GROUP_ID: UInt32 = 9
CRYPT_KDF_OID_GROUP_ID: UInt32 = 10
CRYPT_LAST_OID_GROUP_ID: UInt32 = 10
CRYPT_FIRST_ALG_OID_GROUP_ID: UInt32 = 1
CRYPT_LAST_ALG_OID_GROUP_ID: UInt32 = 4
CRYPT_OID_INHIBIT_SIGNATURE_FORMAT_FLAG: UInt32 = 1
CRYPT_OID_USE_PUBKEY_PARA_FOR_PKCS7_FLAG: UInt32 = 2
CRYPT_OID_NO_NULL_ALGORITHM_PARA_FLAG: UInt32 = 4
CRYPT_OID_PUBKEY_SIGN_ONLY_FLAG: UInt32 = 2147483648
CRYPT_OID_PUBKEY_ENCRYPT_ONLY_FLAG: UInt32 = 1073741824
CRYPT_OID_USE_CURVE_NAME_FOR_ENCODE_FLAG: UInt32 = 536870912
CRYPT_OID_USE_CURVE_PARAMETERS_FOR_ENCODE_FLAG: UInt32 = 268435456
CRYPT_OID_INFO_OID_KEY: UInt32 = 1
CRYPT_OID_INFO_NAME_KEY: UInt32 = 2
CRYPT_OID_INFO_ALGID_KEY: UInt32 = 3
CRYPT_OID_INFO_SIGN_KEY: UInt32 = 4
CRYPT_OID_INFO_CNG_ALGID_KEY: UInt32 = 5
CRYPT_OID_INFO_CNG_SIGN_KEY: UInt32 = 6
CRYPT_OID_INFO_OID_KEY_FLAGS_MASK: UInt32 = 4294901760
CRYPT_OID_DISABLE_SEARCH_DS_FLAG: UInt32 = 2147483648
CRYPT_OID_PREFER_CNG_ALGID_FLAG: UInt32 = 1073741824
CRYPT_OID_INFO_OID_GROUP_BIT_LEN_MASK: UInt32 = 268369920
CRYPT_OID_INFO_OID_GROUP_BIT_LEN_SHIFT: UInt32 = 16
CRYPT_INSTALL_OID_INFO_BEFORE_FLAG: UInt32 = 1
CRYPT_LOCALIZED_NAME_ENCODING_TYPE: UInt32 = 0
CRYPT_LOCALIZED_NAME_OID: String = 'LocalizedNames'
CERT_STRONG_SIGN_ECDSA_ALGORITHM: String = 'ECDSA'
CERT_STRONG_SIGN_SERIALIZED_INFO_CHOICE: UInt32 = 1
CERT_STRONG_SIGN_OID_INFO_CHOICE: UInt32 = 2
szOID_CERT_STRONG_SIGN_OS_PREFIX: String = '1.3.6.1.4.1.311.72.1.'
szOID_CERT_STRONG_SIGN_OS_1: String = '1.3.6.1.4.1.311.72.1.1'
szOID_CERT_STRONG_SIGN_OS_CURRENT: String = '1.3.6.1.4.1.311.72.1.1'
szOID_CERT_STRONG_KEY_OS_PREFIX: String = '1.3.6.1.4.1.311.72.2.'
szOID_CERT_STRONG_KEY_OS_1: String = '1.3.6.1.4.1.311.72.2.1'
szOID_CERT_STRONG_KEY_OS_CURRENT: String = '1.3.6.1.4.1.311.72.2.1'
szOID_PKCS_7_DATA: String = '1.2.840.113549.1.7.1'
szOID_PKCS_7_SIGNED: String = '1.2.840.113549.1.7.2'
szOID_PKCS_7_ENVELOPED: String = '1.2.840.113549.1.7.3'
szOID_PKCS_7_SIGNEDANDENVELOPED: String = '1.2.840.113549.1.7.4'
szOID_PKCS_7_DIGESTED: String = '1.2.840.113549.1.7.5'
szOID_PKCS_7_ENCRYPTED: String = '1.2.840.113549.1.7.6'
szOID_PKCS_9_CONTENT_TYPE: String = '1.2.840.113549.1.9.3'
szOID_PKCS_9_MESSAGE_DIGEST: String = '1.2.840.113549.1.9.4'
CMSG_ENCRYPTED: UInt32 = 6
CMSG_MAIL_LIST_HANDLE_KEY_CHOICE: UInt32 = 1
CMSG_KEY_TRANS_RECIPIENT: UInt32 = 1
CMSG_KEY_AGREE_RECIPIENT: UInt32 = 2
CMSG_MAIL_LIST_RECIPIENT: UInt32 = 3
CMSG_SP3_COMPATIBLE_ENCRYPT_FLAG: UInt32 = 2147483648
CMSG_RC4_NO_SALT_FLAG: UInt32 = 1073741824
CMSG_INDEFINITE_LENGTH: UInt32 = 4294967295
CMSG_BARE_CONTENT_FLAG: UInt32 = 1
CMSG_LENGTH_ONLY_FLAG: UInt32 = 2
CMSG_DETACHED_FLAG: UInt32 = 4
CMSG_AUTHENTICATED_ATTRIBUTES_FLAG: UInt32 = 8
CMSG_CONTENTS_OCTETS_FLAG: UInt32 = 16
CMSG_MAX_LENGTH_FLAG: UInt32 = 32
CMSG_CMS_ENCAPSULATED_CONTENT_FLAG: UInt32 = 64
CMSG_SIGNED_DATA_NO_SIGN_FLAG: UInt32 = 128
CMSG_CRYPT_RELEASE_CONTEXT_FLAG: UInt32 = 32768
CMSG_TYPE_PARAM: UInt32 = 1
CMSG_CONTENT_PARAM: UInt32 = 2
CMSG_BARE_CONTENT_PARAM: UInt32 = 3
CMSG_INNER_CONTENT_TYPE_PARAM: UInt32 = 4
CMSG_SIGNER_COUNT_PARAM: UInt32 = 5
CMSG_SIGNER_INFO_PARAM: UInt32 = 6
CMSG_SIGNER_CERT_INFO_PARAM: UInt32 = 7
CMSG_SIGNER_HASH_ALGORITHM_PARAM: UInt32 = 8
CMSG_SIGNER_AUTH_ATTR_PARAM: UInt32 = 9
CMSG_SIGNER_UNAUTH_ATTR_PARAM: UInt32 = 10
CMSG_CERT_COUNT_PARAM: UInt32 = 11
CMSG_CERT_PARAM: UInt32 = 12
CMSG_CRL_COUNT_PARAM: UInt32 = 13
CMSG_CRL_PARAM: UInt32 = 14
CMSG_ENVELOPE_ALGORITHM_PARAM: UInt32 = 15
CMSG_RECIPIENT_COUNT_PARAM: UInt32 = 17
CMSG_RECIPIENT_INDEX_PARAM: UInt32 = 18
CMSG_RECIPIENT_INFO_PARAM: UInt32 = 19
CMSG_HASH_ALGORITHM_PARAM: UInt32 = 20
CMSG_HASH_DATA_PARAM: UInt32 = 21
CMSG_COMPUTED_HASH_PARAM: UInt32 = 22
CMSG_ENCRYPT_PARAM: UInt32 = 26
CMSG_ENCRYPTED_DIGEST: UInt32 = 27
CMSG_ENCODED_SIGNER: UInt32 = 28
CMSG_ENCODED_MESSAGE: UInt32 = 29
CMSG_VERSION_PARAM: UInt32 = 30
CMSG_ATTR_CERT_COUNT_PARAM: UInt32 = 31
CMSG_ATTR_CERT_PARAM: UInt32 = 32
CMSG_CMS_RECIPIENT_COUNT_PARAM: UInt32 = 33
CMSG_CMS_RECIPIENT_INDEX_PARAM: UInt32 = 34
CMSG_CMS_RECIPIENT_ENCRYPTED_KEY_INDEX_PARAM: UInt32 = 35
CMSG_CMS_RECIPIENT_INFO_PARAM: UInt32 = 36
CMSG_UNPROTECTED_ATTR_PARAM: UInt32 = 37
CMSG_SIGNER_CERT_ID_PARAM: UInt32 = 38
CMSG_CMS_SIGNER_INFO_PARAM: UInt32 = 39
CMSG_SIGNED_DATA_V1: UInt32 = 1
CMSG_SIGNED_DATA_V3: UInt32 = 3
CMSG_SIGNED_DATA_PKCS_1_5_VERSION: UInt32 = 1
CMSG_SIGNED_DATA_CMS_VERSION: UInt32 = 3
CMSG_SIGNER_INFO_V1: UInt32 = 1
CMSG_SIGNER_INFO_V3: UInt32 = 3
CMSG_SIGNER_INFO_PKCS_1_5_VERSION: UInt32 = 1
CMSG_SIGNER_INFO_CMS_VERSION: UInt32 = 3
CMSG_HASHED_DATA_V0: UInt32 = 0
CMSG_HASHED_DATA_V2: UInt32 = 2
CMSG_HASHED_DATA_PKCS_1_5_VERSION: UInt32 = 0
CMSG_HASHED_DATA_CMS_VERSION: UInt32 = 2
CMSG_ENVELOPED_DATA_V0: UInt32 = 0
CMSG_ENVELOPED_DATA_V2: UInt32 = 2
CMSG_ENVELOPED_DATA_PKCS_1_5_VERSION: UInt32 = 0
CMSG_ENVELOPED_DATA_CMS_VERSION: UInt32 = 2
CMSG_ENVELOPED_RECIPIENT_V0: UInt32 = 0
CMSG_ENVELOPED_RECIPIENT_V2: UInt32 = 2
CMSG_ENVELOPED_RECIPIENT_V3: UInt32 = 3
CMSG_ENVELOPED_RECIPIENT_V4: UInt32 = 4
CMSG_KEY_TRANS_PKCS_1_5_VERSION: UInt32 = 0
CMSG_KEY_TRANS_CMS_VERSION: UInt32 = 2
CMSG_KEY_AGREE_VERSION: UInt32 = 3
CMSG_MAIL_LIST_VERSION: UInt32 = 4
CMSG_CTRL_VERIFY_SIGNATURE: UInt32 = 1
CMSG_CTRL_DECRYPT: UInt32 = 2
CMSG_CTRL_VERIFY_HASH: UInt32 = 5
CMSG_CTRL_ADD_SIGNER: UInt32 = 6
CMSG_CTRL_DEL_SIGNER: UInt32 = 7
CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR: UInt32 = 8
CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR: UInt32 = 9
CMSG_CTRL_ADD_CERT: UInt32 = 10
CMSG_CTRL_DEL_CERT: UInt32 = 11
CMSG_CTRL_ADD_CRL: UInt32 = 12
CMSG_CTRL_DEL_CRL: UInt32 = 13
CMSG_CTRL_ADD_ATTR_CERT: UInt32 = 14
CMSG_CTRL_DEL_ATTR_CERT: UInt32 = 15
CMSG_CTRL_KEY_TRANS_DECRYPT: UInt32 = 16
CMSG_CTRL_KEY_AGREE_DECRYPT: UInt32 = 17
CMSG_CTRL_MAIL_LIST_DECRYPT: UInt32 = 18
CMSG_CTRL_VERIFY_SIGNATURE_EX: UInt32 = 19
CMSG_CTRL_ADD_CMS_SIGNER_INFO: UInt32 = 20
CMSG_CTRL_ENABLE_STRONG_SIGNATURE: UInt32 = 21
CMSG_VERIFY_SIGNER_PUBKEY: UInt32 = 1
CMSG_VERIFY_SIGNER_CERT: UInt32 = 2
CMSG_VERIFY_SIGNER_CHAIN: UInt32 = 3
CMSG_VERIFY_SIGNER_NULL: UInt32 = 4
CMSG_VERIFY_COUNTER_SIGN_ENABLE_STRONG_FLAG: UInt32 = 1
CMSG_OID_GEN_ENCRYPT_KEY_FUNC: String = 'CryptMsgDllGenEncryptKey'
CMSG_OID_EXPORT_ENCRYPT_KEY_FUNC: String = 'CryptMsgDllExportEncryptKey'
CMSG_OID_IMPORT_ENCRYPT_KEY_FUNC: String = 'CryptMsgDllImportEncryptKey'
CMSG_DEFAULT_INSTALLABLE_FUNC_OID: win32more.Windows.Win32.Foundation.PSTR = 1
CMSG_CONTENT_ENCRYPT_PAD_ENCODED_LEN_FLAG: UInt32 = 1
CMSG_CONTENT_ENCRYPT_FREE_PARA_FLAG: UInt32 = 1
CMSG_CONTENT_ENCRYPT_FREE_OBJID_FLAG: UInt32 = 2
CMSG_CONTENT_ENCRYPT_RELEASE_CONTEXT_FLAG: UInt32 = 32768
CMSG_OID_GEN_CONTENT_ENCRYPT_KEY_FUNC: String = 'CryptMsgDllGenContentEncryptKey'
CMSG_OID_CAPI1_GEN_CONTENT_ENCRYPT_KEY_FUNC: String = 'CryptMsgDllGenContentEncryptKey'
CMSG_OID_CNG_GEN_CONTENT_ENCRYPT_KEY_FUNC: String = 'CryptMsgDllCNGGenContentEncryptKey'
CMSG_KEY_TRANS_ENCRYPT_FREE_PARA_FLAG: UInt32 = 1
CMSG_KEY_TRANS_ENCRYPT_FREE_OBJID_FLAG: UInt32 = 2
CMSG_OID_EXPORT_KEY_TRANS_FUNC: String = 'CryptMsgDllExportKeyTrans'
CMSG_OID_CAPI1_EXPORT_KEY_TRANS_FUNC: String = 'CryptMsgDllExportKeyTrans'
CMSG_OID_CNG_EXPORT_KEY_TRANS_FUNC: String = 'CryptMsgDllCNGExportKeyTrans'
CMSG_KEY_AGREE_ENCRYPT_FREE_PARA_FLAG: UInt32 = 1
CMSG_KEY_AGREE_ENCRYPT_FREE_MATERIAL_FLAG: UInt32 = 2
CMSG_KEY_AGREE_ENCRYPT_FREE_PUBKEY_ALG_FLAG: UInt32 = 4
CMSG_KEY_AGREE_ENCRYPT_FREE_PUBKEY_PARA_FLAG: UInt32 = 8
CMSG_KEY_AGREE_ENCRYPT_FREE_PUBKEY_BITS_FLAG: UInt32 = 16
CMSG_KEY_AGREE_ENCRYPT_FREE_OBJID_FLAG: UInt32 = 32
CMSG_OID_EXPORT_KEY_AGREE_FUNC: String = 'CryptMsgDllExportKeyAgree'
CMSG_OID_CAPI1_EXPORT_KEY_AGREE_FUNC: String = 'CryptMsgDllExportKeyAgree'
CMSG_OID_CNG_EXPORT_KEY_AGREE_FUNC: String = 'CryptMsgDllCNGExportKeyAgree'
CMSG_MAIL_LIST_ENCRYPT_FREE_PARA_FLAG: UInt32 = 1
CMSG_MAIL_LIST_ENCRYPT_FREE_OBJID_FLAG: UInt32 = 2
CMSG_OID_EXPORT_MAIL_LIST_FUNC: String = 'CryptMsgDllExportMailList'
CMSG_OID_CAPI1_EXPORT_MAIL_LIST_FUNC: String = 'CryptMsgDllExportMailList'
CMSG_OID_IMPORT_KEY_TRANS_FUNC: String = 'CryptMsgDllImportKeyTrans'
CMSG_OID_CAPI1_IMPORT_KEY_TRANS_FUNC: String = 'CryptMsgDllImportKeyTrans'
CMSG_OID_IMPORT_KEY_AGREE_FUNC: String = 'CryptMsgDllImportKeyAgree'
CMSG_OID_CAPI1_IMPORT_KEY_AGREE_FUNC: String = 'CryptMsgDllImportKeyAgree'
CMSG_OID_IMPORT_MAIL_LIST_FUNC: String = 'CryptMsgDllImportMailList'
CMSG_OID_CAPI1_IMPORT_MAIL_LIST_FUNC: String = 'CryptMsgDllImportMailList'
CMSG_OID_CNG_IMPORT_KEY_TRANS_FUNC: String = 'CryptMsgDllCNGImportKeyTrans'
CMSG_OID_CNG_IMPORT_KEY_AGREE_FUNC: String = 'CryptMsgDllCNGImportKeyAgree'
CMSG_OID_CNG_IMPORT_CONTENT_ENCRYPT_KEY_FUNC: String = 'CryptMsgDllCNGImportContentEncryptKey'
CERT_KEY_PROV_HANDLE_PROP_ID: UInt32 = 1
CERT_KEY_PROV_INFO_PROP_ID: UInt32 = 2
CERT_SHA1_HASH_PROP_ID: UInt32 = 3
CERT_MD5_HASH_PROP_ID: UInt32 = 4
CERT_HASH_PROP_ID: UInt32 = 3
CERT_KEY_CONTEXT_PROP_ID: UInt32 = 5
CERT_KEY_SPEC_PROP_ID: UInt32 = 6
CERT_IE30_RESERVED_PROP_ID: UInt32 = 7
CERT_PUBKEY_HASH_RESERVED_PROP_ID: UInt32 = 8
CERT_ENHKEY_USAGE_PROP_ID: UInt32 = 9
CERT_CTL_USAGE_PROP_ID: UInt32 = 9
CERT_NEXT_UPDATE_LOCATION_PROP_ID: UInt32 = 10
CERT_FRIENDLY_NAME_PROP_ID: UInt32 = 11
CERT_PVK_FILE_PROP_ID: UInt32 = 12
CERT_DESCRIPTION_PROP_ID: UInt32 = 13
CERT_ACCESS_STATE_PROP_ID: UInt32 = 14
CERT_SIGNATURE_HASH_PROP_ID: UInt32 = 15
CERT_SMART_CARD_DATA_PROP_ID: UInt32 = 16
CERT_EFS_PROP_ID: UInt32 = 17
CERT_FORTEZZA_DATA_PROP_ID: UInt32 = 18
CERT_ARCHIVED_PROP_ID: UInt32 = 19
CERT_KEY_IDENTIFIER_PROP_ID: UInt32 = 20
CERT_AUTO_ENROLL_PROP_ID: UInt32 = 21
CERT_PUBKEY_ALG_PARA_PROP_ID: UInt32 = 22
CERT_CROSS_CERT_DIST_POINTS_PROP_ID: UInt32 = 23
CERT_ISSUER_PUBLIC_KEY_MD5_HASH_PROP_ID: UInt32 = 24
CERT_SUBJECT_PUBLIC_KEY_MD5_HASH_PROP_ID: UInt32 = 25
CERT_ENROLLMENT_PROP_ID: UInt32 = 26
CERT_DATE_STAMP_PROP_ID: UInt32 = 27
CERT_ISSUER_SERIAL_NUMBER_MD5_HASH_PROP_ID: UInt32 = 28
CERT_SUBJECT_NAME_MD5_HASH_PROP_ID: UInt32 = 29
CERT_EXTENDED_ERROR_INFO_PROP_ID: UInt32 = 30
CERT_RENEWAL_PROP_ID: UInt32 = 64
CERT_ARCHIVED_KEY_HASH_PROP_ID: UInt32 = 65
CERT_AUTO_ENROLL_RETRY_PROP_ID: UInt32 = 66
CERT_AIA_URL_RETRIEVED_PROP_ID: UInt32 = 67
CERT_AUTHORITY_INFO_ACCESS_PROP_ID: UInt32 = 68
CERT_BACKED_UP_PROP_ID: UInt32 = 69
CERT_OCSP_RESPONSE_PROP_ID: UInt32 = 70
CERT_REQUEST_ORIGINATOR_PROP_ID: UInt32 = 71
CERT_SOURCE_LOCATION_PROP_ID: UInt32 = 72
CERT_SOURCE_URL_PROP_ID: UInt32 = 73
CERT_NEW_KEY_PROP_ID: UInt32 = 74
CERT_OCSP_CACHE_PREFIX_PROP_ID: UInt32 = 75
CERT_SMART_CARD_ROOT_INFO_PROP_ID: UInt32 = 76
CERT_NO_AUTO_EXPIRE_CHECK_PROP_ID: UInt32 = 77
CERT_NCRYPT_KEY_HANDLE_PROP_ID: UInt32 = 78
CERT_HCRYPTPROV_OR_NCRYPT_KEY_HANDLE_PROP_ID: UInt32 = 79
CERT_SUBJECT_INFO_ACCESS_PROP_ID: UInt32 = 80
CERT_CA_OCSP_AUTHORITY_INFO_ACCESS_PROP_ID: UInt32 = 81
CERT_CA_DISABLE_CRL_PROP_ID: UInt32 = 82
CERT_ROOT_PROGRAM_CERT_POLICIES_PROP_ID: UInt32 = 83
CERT_ROOT_PROGRAM_NAME_CONSTRAINTS_PROP_ID: UInt32 = 84
CERT_SUBJECT_OCSP_AUTHORITY_INFO_ACCESS_PROP_ID: UInt32 = 85
CERT_SUBJECT_DISABLE_CRL_PROP_ID: UInt32 = 86
CERT_CEP_PROP_ID: UInt32 = 87
CERT_SIGN_HASH_CNG_ALG_PROP_ID: UInt32 = 89
CERT_SCARD_PIN_ID_PROP_ID: UInt32 = 90
CERT_SCARD_PIN_INFO_PROP_ID: UInt32 = 91
CERT_SUBJECT_PUB_KEY_BIT_LENGTH_PROP_ID: UInt32 = 92
CERT_PUB_KEY_CNG_ALG_BIT_LENGTH_PROP_ID: UInt32 = 93
CERT_ISSUER_PUB_KEY_BIT_LENGTH_PROP_ID: UInt32 = 94
CERT_ISSUER_CHAIN_SIGN_HASH_CNG_ALG_PROP_ID: UInt32 = 95
CERT_ISSUER_CHAIN_PUB_KEY_CNG_ALG_BIT_LENGTH_PROP_ID: UInt32 = 96
CERT_NO_EXPIRE_NOTIFICATION_PROP_ID: UInt32 = 97
CERT_AUTH_ROOT_SHA256_HASH_PROP_ID: UInt32 = 98
CERT_NCRYPT_KEY_HANDLE_TRANSFER_PROP_ID: UInt32 = 99
CERT_HCRYPTPROV_TRANSFER_PROP_ID: UInt32 = 100
CERT_SMART_CARD_READER_PROP_ID: UInt32 = 101
CERT_SEND_AS_TRUSTED_ISSUER_PROP_ID: UInt32 = 102
CERT_KEY_REPAIR_ATTEMPTED_PROP_ID: UInt32 = 103
CERT_DISALLOWED_FILETIME_PROP_ID: UInt32 = 104
CERT_ROOT_PROGRAM_CHAIN_POLICIES_PROP_ID: UInt32 = 105
CERT_SMART_CARD_READER_NON_REMOVABLE_PROP_ID: UInt32 = 106
CERT_SHA256_HASH_PROP_ID: UInt32 = 107
CERT_SCEP_SERVER_CERTS_PROP_ID: UInt32 = 108
CERT_SCEP_RA_SIGNATURE_CERT_PROP_ID: UInt32 = 109
CERT_SCEP_RA_ENCRYPTION_CERT_PROP_ID: UInt32 = 110
CERT_SCEP_CA_CERT_PROP_ID: UInt32 = 111
CERT_SCEP_SIGNER_CERT_PROP_ID: UInt32 = 112
CERT_SCEP_NONCE_PROP_ID: UInt32 = 113
CERT_SCEP_ENCRYPT_HASH_CNG_ALG_PROP_ID: UInt32 = 114
CERT_SCEP_FLAGS_PROP_ID: UInt32 = 115
CERT_SCEP_GUID_PROP_ID: UInt32 = 116
CERT_SERIALIZABLE_KEY_CONTEXT_PROP_ID: UInt32 = 117
CERT_ISOLATED_KEY_PROP_ID: UInt32 = 118
CERT_SERIAL_CHAIN_PROP_ID: UInt32 = 119
CERT_KEY_CLASSIFICATION_PROP_ID: UInt32 = 120
CERT_OCSP_MUST_STAPLE_PROP_ID: UInt32 = 121
CERT_DISALLOWED_ENHKEY_USAGE_PROP_ID: UInt32 = 122
CERT_NONCOMPLIANT_ROOT_URL_PROP_ID: UInt32 = 123
CERT_PIN_SHA256_HASH_PROP_ID: UInt32 = 124
CERT_CLR_DELETE_KEY_PROP_ID: UInt32 = 125
CERT_NOT_BEFORE_FILETIME_PROP_ID: UInt32 = 126
CERT_NOT_BEFORE_ENHKEY_USAGE_PROP_ID: UInt32 = 127
CERT_DISALLOWED_CA_FILETIME_PROP_ID: UInt32 = 128
CERT_SHA1_SHA256_HASH_PROP_ID: UInt32 = 129
CERT_FIRST_RESERVED_PROP_ID: UInt32 = 130
CERT_LAST_RESERVED_PROP_ID: UInt32 = 32767
CERT_FIRST_USER_PROP_ID: UInt32 = 32768
CERT_LAST_USER_PROP_ID: UInt32 = 65535
szOID_CERT_PROP_ID_PREFIX: String = '1.3.6.1.4.1.311.10.11.'
szOID_CERT_KEY_IDENTIFIER_PROP_ID: String = '1.3.6.1.4.1.311.10.11.20'
szOID_CERT_ISSUER_SERIAL_NUMBER_MD5_HASH_PROP_ID: String = '1.3.6.1.4.1.311.10.11.28'
szOID_CERT_SUBJECT_NAME_MD5_HASH_PROP_ID: String = '1.3.6.1.4.1.311.10.11.29'
szOID_CERT_MD5_HASH_PROP_ID: String = '1.3.6.1.4.1.311.10.11.4'
szOID_CERT_SHA256_HASH_PROP_ID: String = '1.3.6.1.4.1.311.10.11.107'
szOID_CERT_SIGNATURE_HASH_PROP_ID: String = '1.3.6.1.4.1.311.10.11.15'
szOID_DISALLOWED_HASH: String = '1.3.6.1.4.1.311.10.11.15'
szOID_CERT_DISALLOWED_FILETIME_PROP_ID: String = '1.3.6.1.4.1.311.10.11.104'
szOID_CERT_DISALLOWED_CA_FILETIME_PROP_ID: String = '1.3.6.1.4.1.311.10.11.128'
CERT_ACCESS_STATE_WRITE_PERSIST_FLAG: UInt32 = 1
CERT_ACCESS_STATE_SYSTEM_STORE_FLAG: UInt32 = 2
CERT_ACCESS_STATE_LM_SYSTEM_STORE_FLAG: UInt32 = 4
CERT_ACCESS_STATE_GP_SYSTEM_STORE_FLAG: UInt32 = 8
CERT_ACCESS_STATE_SHARED_USER_FLAG: UInt32 = 16
szOID_ROOT_PROGRAM_AUTO_UPDATE_CA_REVOCATION: String = '1.3.6.1.4.1.311.60.3.1'
szOID_ROOT_PROGRAM_AUTO_UPDATE_END_REVOCATION: String = '1.3.6.1.4.1.311.60.3.2'
szOID_ROOT_PROGRAM_NO_OCSP_FAILOVER_TO_CRL: String = '1.3.6.1.4.1.311.60.3.3'
CERT_STORE_PROV_MSG: win32more.Windows.Win32.Foundation.PSTR = 1
CERT_STORE_PROV_MEMORY: win32more.Windows.Win32.Foundation.PSTR = 2
CERT_STORE_PROV_FILE: win32more.Windows.Win32.Foundation.PSTR = 3
CERT_STORE_PROV_REG: win32more.Windows.Win32.Foundation.PSTR = 4
CERT_STORE_PROV_PKCS7: win32more.Windows.Win32.Foundation.PSTR = 5
CERT_STORE_PROV_SERIALIZED: win32more.Windows.Win32.Foundation.PSTR = 6
CERT_STORE_PROV_FILENAME_A: win32more.Windows.Win32.Foundation.PSTR = 7
CERT_STORE_PROV_FILENAME_W: win32more.Windows.Win32.Foundation.PSTR = 8
CERT_STORE_PROV_FILENAME: Int32 = 8
CERT_STORE_PROV_SYSTEM_A: win32more.Windows.Win32.Foundation.PSTR = 9
CERT_STORE_PROV_SYSTEM_W: win32more.Windows.Win32.Foundation.PSTR = 10
CERT_STORE_PROV_SYSTEM: Int32 = 10
CERT_STORE_PROV_COLLECTION: win32more.Windows.Win32.Foundation.PSTR = 11
CERT_STORE_PROV_SYSTEM_REGISTRY_A: win32more.Windows.Win32.Foundation.PSTR = 12
CERT_STORE_PROV_SYSTEM_REGISTRY_W: win32more.Windows.Win32.Foundation.PSTR = 13
CERT_STORE_PROV_SYSTEM_REGISTRY: Int32 = 13
CERT_STORE_PROV_PHYSICAL_W: win32more.Windows.Win32.Foundation.PSTR = 14
CERT_STORE_PROV_PHYSICAL: Int32 = 14
CERT_STORE_PROV_SMART_CARD_W: win32more.Windows.Win32.Foundation.PSTR = 15
CERT_STORE_PROV_SMART_CARD: Int32 = 15
CERT_STORE_PROV_LDAP_W: win32more.Windows.Win32.Foundation.PSTR = 16
CERT_STORE_PROV_LDAP: Int32 = 16
CERT_STORE_PROV_PKCS12: win32more.Windows.Win32.Foundation.PSTR = 17
sz_CERT_STORE_PROV_MEMORY: String = 'Memory'
sz_CERT_STORE_PROV_FILENAME_W: String = 'File'
sz_CERT_STORE_PROV_FILENAME: String = 'File'
sz_CERT_STORE_PROV_SYSTEM_W: String = 'System'
sz_CERT_STORE_PROV_SYSTEM: String = 'System'
sz_CERT_STORE_PROV_PKCS7: String = 'PKCS7'
sz_CERT_STORE_PROV_PKCS12: String = 'PKCS12'
sz_CERT_STORE_PROV_SERIALIZED: String = 'Serialized'
sz_CERT_STORE_PROV_COLLECTION: String = 'Collection'
sz_CERT_STORE_PROV_SYSTEM_REGISTRY_W: String = 'SystemRegistry'
sz_CERT_STORE_PROV_SYSTEM_REGISTRY: String = 'SystemRegistry'
sz_CERT_STORE_PROV_PHYSICAL_W: String = 'Physical'
sz_CERT_STORE_PROV_PHYSICAL: String = 'Physical'
sz_CERT_STORE_PROV_SMART_CARD_W: String = 'SmartCard'
sz_CERT_STORE_PROV_SMART_CARD: String = 'SmartCard'
sz_CERT_STORE_PROV_LDAP_W: String = 'Ldap'
sz_CERT_STORE_PROV_LDAP: String = 'Ldap'
CERT_STORE_SIGNATURE_FLAG: UInt32 = 1
CERT_STORE_TIME_VALIDITY_FLAG: UInt32 = 2
CERT_STORE_REVOCATION_FLAG: UInt32 = 4
CERT_STORE_NO_CRL_FLAG: UInt32 = 65536
CERT_STORE_NO_ISSUER_FLAG: UInt32 = 131072
CERT_STORE_BASE_CRL_FLAG: UInt32 = 256
CERT_STORE_DELTA_CRL_FLAG: UInt32 = 512
CERT_STORE_UNSAFE_PHYSICAL_FLAG: UInt32 = 32
CERT_STORE_SHARE_STORE_FLAG: UInt32 = 64
CERT_STORE_MANIFOLD_FLAG: UInt32 = 256
CERT_SYSTEM_STORE_MASK: UInt32 = 4294901760
CERT_SYSTEM_STORE_UNPROTECTED_FLAG: UInt32 = 1073741824
CERT_SYSTEM_STORE_DEFER_READ_FLAG: UInt32 = 536870912
CERT_SYSTEM_STORE_LOCATION_SHIFT: UInt32 = 16
CERT_SYSTEM_STORE_CURRENT_USER_ID: UInt32 = 1
CERT_SYSTEM_STORE_LOCAL_MACHINE_ID: UInt32 = 2
CERT_SYSTEM_STORE_CURRENT_SERVICE_ID: UInt32 = 4
CERT_SYSTEM_STORE_SERVICES_ID: UInt32 = 5
CERT_SYSTEM_STORE_USERS_ID: UInt32 = 6
CERT_SYSTEM_STORE_CURRENT_USER_GROUP_POLICY_ID: UInt32 = 7
CERT_SYSTEM_STORE_LOCAL_MACHINE_GROUP_POLICY_ID: UInt32 = 8
CERT_SYSTEM_STORE_LOCAL_MACHINE_ENTERPRISE_ID: UInt32 = 9
CERT_SYSTEM_STORE_LOCAL_MACHINE_WCOS_ID: UInt32 = 10
CERT_GROUP_POLICY_SYSTEM_STORE_REGPATH: String = 'Software\\Policies\\Microsoft\\SystemCertificates'
CERT_EFSBLOB_VALUE_NAME: String = 'EFSBlob'
CERT_PROT_ROOT_FLAGS_VALUE_NAME: String = 'Flags'
CERT_PROT_ROOT_DISABLE_CURRENT_USER_FLAG: UInt32 = 1
CERT_PROT_ROOT_INHIBIT_ADD_AT_INIT_FLAG: UInt32 = 2
CERT_PROT_ROOT_INHIBIT_PURGE_LM_FLAG: UInt32 = 4
CERT_PROT_ROOT_DISABLE_LM_AUTH_FLAG: UInt32 = 8
CERT_PROT_ROOT_ONLY_LM_GPT_FLAG: UInt32 = 8
CERT_PROT_ROOT_DISABLE_NT_AUTH_REQUIRED_FLAG: UInt32 = 16
CERT_PROT_ROOT_DISABLE_NOT_DEFINED_NAME_CONSTRAINT_FLAG: UInt32 = 32
CERT_PROT_ROOT_DISABLE_PEER_TRUST: UInt32 = 65536
CERT_PROT_ROOT_PEER_USAGES_VALUE_NAME: String = 'PeerUsages'
CERT_PROT_ROOT_PEER_USAGES_VALUE_NAME_A: String = 'PeerUsages'
CERT_LOCAL_MACHINE_SYSTEM_STORE_REGPATH: String = 'Software\\Microsoft\\SystemCertificates'
CERT_TRUST_PUB_AUTHENTICODE_FLAGS_VALUE_NAME: String = 'AuthenticodeFlags'
CERT_TRUST_PUB_ALLOW_TRUST_MASK: UInt32 = 3
CERT_TRUST_PUB_ALLOW_END_USER_TRUST: UInt32 = 0
CERT_TRUST_PUB_ALLOW_MACHINE_ADMIN_TRUST: UInt32 = 1
CERT_TRUST_PUB_ALLOW_ENTERPRISE_ADMIN_TRUST: UInt32 = 2
CERT_TRUST_PUB_CHECK_PUBLISHER_REV_FLAG: UInt32 = 256
CERT_TRUST_PUB_CHECK_TIMESTAMP_REV_FLAG: UInt32 = 512
CERT_OCM_SUBCOMPONENTS_LOCAL_MACHINE_REGPATH: String = 'SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Setup\\OC Manager\\Subcomponents'
CERT_OCM_SUBCOMPONENTS_ROOT_AUTO_UPDATE_VALUE_NAME: String = 'RootAutoUpdate'
CERT_DISABLE_ROOT_AUTO_UPDATE_VALUE_NAME: String = 'DisableRootAutoUpdate'
CERT_ENABLE_DISALLOWED_CERT_AUTO_UPDATE_VALUE_NAME: String = 'EnableDisallowedCertAutoUpdate'
CERT_DISABLE_PIN_RULES_AUTO_UPDATE_VALUE_NAME: String = 'DisablePinRulesAutoUpdate'
CERT_AUTO_UPDATE_ROOT_DIR_URL_VALUE_NAME: String = 'RootDirUrl'
CERT_AUTO_UPDATE_SYNC_FROM_DIR_URL_VALUE_NAME: String = 'SyncFromDirUrl'
CERT_AUTH_ROOT_AUTO_UPDATE_ROOT_DIR_URL_VALUE_NAME: String = 'RootDirUrl'
CERT_AUTH_ROOT_AUTO_UPDATE_SYNC_DELTA_TIME_VALUE_NAME: String = 'SyncDeltaTime'
CERT_AUTH_ROOT_AUTO_UPDATE_FLAGS_VALUE_NAME: String = 'Flags'
CERT_AUTH_ROOT_AUTO_UPDATE_DISABLE_UNTRUSTED_ROOT_LOGGING_FLAG: UInt32 = 1
CERT_AUTH_ROOT_AUTO_UPDATE_DISABLE_PARTIAL_CHAIN_LOGGING_FLAG: UInt32 = 2
CERT_AUTO_UPDATE_DISABLE_RANDOM_QUERY_STRING_FLAG: UInt32 = 4
CERT_AUTH_ROOT_AUTO_UPDATE_LAST_SYNC_TIME_VALUE_NAME: String = 'LastSyncTime'
CERT_AUTH_ROOT_AUTO_UPDATE_ENCODED_CTL_VALUE_NAME: String = 'EncodedCtl'
CERT_AUTH_ROOT_CTL_FILENAME: String = 'authroot.stl'
CERT_AUTH_ROOT_CTL_FILENAME_A: String = 'authroot.stl'
CERT_AUTH_ROOT_CAB_FILENAME: String = 'authrootstl.cab'
CERT_AUTH_ROOT_SEQ_FILENAME: String = 'authrootseq.txt'
CERT_AUTH_ROOT_CERT_EXT: String = '.crt'
CERT_DISALLOWED_CERT_AUTO_UPDATE_SYNC_DELTA_TIME_VALUE_NAME: String = 'DisallowedCertSyncDeltaTime'
CERT_DISALLOWED_CERT_AUTO_UPDATE_LAST_SYNC_TIME_VALUE_NAME: String = 'DisallowedCertLastSyncTime'
CERT_DISALLOWED_CERT_AUTO_UPDATE_ENCODED_CTL_VALUE_NAME: String = 'DisallowedCertEncodedCtl'
CERT_DISALLOWED_CERT_CTL_FILENAME: String = 'disallowedcert.stl'
CERT_DISALLOWED_CERT_CTL_FILENAME_A: String = 'disallowedcert.stl'
CERT_DISALLOWED_CERT_CAB_FILENAME: String = 'disallowedcertstl.cab'
CERT_DISALLOWED_CERT_AUTO_UPDATE_LIST_IDENTIFIER: String = 'DisallowedCert_AutoUpdate_1'
CERT_PIN_RULES_AUTO_UPDATE_SYNC_DELTA_TIME_VALUE_NAME: String = 'PinRulesSyncDeltaTime'
CERT_PIN_RULES_AUTO_UPDATE_LAST_SYNC_TIME_VALUE_NAME: String = 'PinRulesLastSyncTime'
CERT_PIN_RULES_AUTO_UPDATE_ENCODED_CTL_VALUE_NAME: String = 'PinRulesEncodedCtl'
CERT_PIN_RULES_CTL_FILENAME: String = 'pinrules.stl'
CERT_PIN_RULES_CTL_FILENAME_A: String = 'pinrules.stl'
CERT_PIN_RULES_CAB_FILENAME: String = 'pinrulesstl.cab'
CERT_PIN_RULES_AUTO_UPDATE_LIST_IDENTIFIER: String = 'PinRules_AutoUpdate_1'
CERT_REGISTRY_STORE_REMOTE_FLAG: UInt32 = 65536
CERT_REGISTRY_STORE_SERIALIZED_FLAG: UInt32 = 131072
CERT_REGISTRY_STORE_CLIENT_GPT_FLAG: UInt32 = 2147483648
CERT_REGISTRY_STORE_LM_GPT_FLAG: UInt32 = 16777216
CERT_REGISTRY_STORE_ROAMING_FLAG: UInt32 = 262144
CERT_REGISTRY_STORE_MY_IE_DIRTY_FLAG: UInt32 = 524288
CERT_REGISTRY_STORE_EXTERNAL_FLAG: UInt32 = 1048576
CERT_IE_DIRTY_FLAGS_REGPATH: String = 'Software\\Microsoft\\Cryptography\\IEDirtyFlags'
CERT_FILE_STORE_COMMIT_ENABLE_FLAG: UInt32 = 65536
CERT_LDAP_STORE_SIGN_FLAG: UInt32 = 65536
CERT_LDAP_STORE_AREC_EXCLUSIVE_FLAG: UInt32 = 131072
CERT_LDAP_STORE_OPENED_FLAG: UInt32 = 262144
CERT_LDAP_STORE_UNBIND_FLAG: UInt32 = 524288
CRYPT_OID_OPEN_STORE_PROV_FUNC: String = 'CertDllOpenStoreProv'
CERT_STORE_PROV_GP_SYSTEM_STORE_FLAG: UInt32 = 32
CERT_STORE_PROV_SHARED_USER_FLAG: UInt32 = 64
CERT_STORE_PROV_CLOSE_FUNC: UInt32 = 0
CERT_STORE_PROV_READ_CERT_FUNC: UInt32 = 1
CERT_STORE_PROV_WRITE_CERT_FUNC: UInt32 = 2
CERT_STORE_PROV_DELETE_CERT_FUNC: UInt32 = 3
CERT_STORE_PROV_SET_CERT_PROPERTY_FUNC: UInt32 = 4
CERT_STORE_PROV_READ_CRL_FUNC: UInt32 = 5
CERT_STORE_PROV_WRITE_CRL_FUNC: UInt32 = 6
CERT_STORE_PROV_DELETE_CRL_FUNC: UInt32 = 7
CERT_STORE_PROV_SET_CRL_PROPERTY_FUNC: UInt32 = 8
CERT_STORE_PROV_READ_CTL_FUNC: UInt32 = 9
CERT_STORE_PROV_WRITE_CTL_FUNC: UInt32 = 10
CERT_STORE_PROV_DELETE_CTL_FUNC: UInt32 = 11
CERT_STORE_PROV_SET_CTL_PROPERTY_FUNC: UInt32 = 12
CERT_STORE_PROV_CONTROL_FUNC: UInt32 = 13
CERT_STORE_PROV_FIND_CERT_FUNC: UInt32 = 14
CERT_STORE_PROV_FREE_FIND_CERT_FUNC: UInt32 = 15
CERT_STORE_PROV_GET_CERT_PROPERTY_FUNC: UInt32 = 16
CERT_STORE_PROV_FIND_CRL_FUNC: UInt32 = 17
CERT_STORE_PROV_FREE_FIND_CRL_FUNC: UInt32 = 18
CERT_STORE_PROV_GET_CRL_PROPERTY_FUNC: UInt32 = 19
CERT_STORE_PROV_FIND_CTL_FUNC: UInt32 = 20
CERT_STORE_PROV_FREE_FIND_CTL_FUNC: UInt32 = 21
CERT_STORE_PROV_GET_CTL_PROPERTY_FUNC: UInt32 = 22
CERT_STORE_PROV_WRITE_ADD_FLAG: UInt32 = 1
CERT_STORE_SAVE_AS_PKCS12: UInt32 = 3
CERT_CLOSE_STORE_FORCE_FLAG: UInt32 = 1
CERT_CLOSE_STORE_CHECK_FLAG: UInt32 = 2
CERT_COMPARE_MASK: UInt32 = 65535
CERT_COMPARE_ANY: UInt32 = 0
CERT_COMPARE_SHA1_HASH: UInt32 = 1
CERT_COMPARE_NAME: UInt32 = 2
CERT_COMPARE_ATTR: UInt32 = 3
CERT_COMPARE_MD5_HASH: UInt32 = 4
CERT_COMPARE_PROPERTY: UInt32 = 5
CERT_COMPARE_PUBLIC_KEY: UInt32 = 6
CERT_COMPARE_HASH: UInt32 = 1
CERT_COMPARE_NAME_STR_A: UInt32 = 7
CERT_COMPARE_NAME_STR_W: UInt32 = 8
CERT_COMPARE_KEY_SPEC: UInt32 = 9
CERT_COMPARE_ENHKEY_USAGE: UInt32 = 10
CERT_COMPARE_CTL_USAGE: UInt32 = 10
CERT_COMPARE_SUBJECT_CERT: UInt32 = 11
CERT_COMPARE_ISSUER_OF: UInt32 = 12
CERT_COMPARE_EXISTING: UInt32 = 13
CERT_COMPARE_SIGNATURE_HASH: UInt32 = 14
CERT_COMPARE_KEY_IDENTIFIER: UInt32 = 15
CERT_COMPARE_CERT_ID: UInt32 = 16
CERT_COMPARE_CROSS_CERT_DIST_POINTS: UInt32 = 17
CERT_COMPARE_PUBKEY_MD5_HASH: UInt32 = 18
CERT_COMPARE_SUBJECT_INFO_ACCESS: UInt32 = 19
CERT_COMPARE_HASH_STR: UInt32 = 20
CERT_COMPARE_HAS_PRIVATE_KEY: UInt32 = 21
CERT_COMPARE_SHA256_HASH: UInt32 = 22
CERT_COMPARE_SHA1_SHA256_HASH: UInt32 = 23
CERT_SET_PROPERTY_IGNORE_PERSIST_ERROR_FLAG: UInt32 = 2147483648
CERT_SET_PROPERTY_INHIBIT_PERSIST_FLAG: UInt32 = 1073741824
CTL_ENTRY_FROM_PROP_CHAIN_FLAG: UInt32 = 1
CRL_FIND_ANY: UInt32 = 0
CRL_FIND_ISSUED_BY: UInt32 = 1
CRL_FIND_EXISTING: UInt32 = 2
CRL_FIND_ISSUED_FOR: UInt32 = 3
CRL_FIND_ISSUED_BY_AKI_FLAG: UInt32 = 1
CRL_FIND_ISSUED_BY_SIGNATURE_FLAG: UInt32 = 2
CRL_FIND_ISSUED_BY_DELTA_FLAG: UInt32 = 4
CRL_FIND_ISSUED_BY_BASE_FLAG: UInt32 = 8
CRL_FIND_ISSUED_FOR_SET_STRONG_PROPERTIES_FLAG: UInt32 = 16
CERT_STORE_ADD_NEW: UInt32 = 1
CERT_STORE_ADD_USE_EXISTING: UInt32 = 2
CERT_STORE_ADD_REPLACE_EXISTING: UInt32 = 3
CERT_STORE_ADD_ALWAYS: UInt32 = 4
CERT_STORE_ADD_REPLACE_EXISTING_INHERIT_PROPERTIES: UInt32 = 5
CERT_STORE_ADD_NEWER: UInt32 = 6
CERT_STORE_ADD_NEWER_INHERIT_PROPERTIES: UInt32 = 7
CERT_STORE_CERTIFICATE_CONTEXT: UInt32 = 1
CERT_STORE_CRL_CONTEXT: UInt32 = 2
CERT_STORE_CTL_CONTEXT: UInt32 = 3
CTL_ANY_SUBJECT_TYPE: UInt32 = 1
CTL_CERT_SUBJECT_TYPE: UInt32 = 2
CTL_FIND_NO_LIST_ID_CBDATA: UInt32 = 4294967295
CERT_STORE_CTRL_RESYNC: UInt32 = 1
CERT_STORE_CTRL_NOTIFY_CHANGE: UInt32 = 2
CERT_STORE_CTRL_COMMIT: UInt32 = 3
CERT_STORE_CTRL_AUTO_RESYNC: UInt32 = 4
CERT_STORE_CTRL_CANCEL_NOTIFY: UInt32 = 5
CERT_STORE_LOCALIZED_NAME_PROP_ID: UInt32 = 4096
CERT_CREATE_CONTEXT_NOCOPY_FLAG: UInt32 = 1
CERT_CREATE_CONTEXT_SORTED_FLAG: UInt32 = 2
CERT_CREATE_CONTEXT_NO_HCRYPTMSG_FLAG: UInt32 = 4
CERT_CREATE_CONTEXT_NO_ENTRY_FLAG: UInt32 = 8
CERT_PHYSICAL_STORE_ADD_ENABLE_FLAG: UInt32 = 1
CERT_PHYSICAL_STORE_OPEN_DISABLE_FLAG: UInt32 = 2
CERT_PHYSICAL_STORE_REMOTE_OPEN_DISABLE_FLAG: UInt32 = 4
CERT_PHYSICAL_STORE_INSERT_COMPUTER_NAME_ENABLE_FLAG: UInt32 = 8
CERT_PHYSICAL_STORE_PREDEFINED_ENUM_FLAG: UInt32 = 1
CERT_PHYSICAL_STORE_DEFAULT_NAME: String = '.Default'
CERT_PHYSICAL_STORE_GROUP_POLICY_NAME: String = '.GroupPolicy'
CERT_PHYSICAL_STORE_LOCAL_MACHINE_NAME: String = '.LocalMachine'
CERT_PHYSICAL_STORE_DS_USER_CERTIFICATE_NAME: String = '.UserCertificate'
CERT_PHYSICAL_STORE_LOCAL_MACHINE_GROUP_POLICY_NAME: String = '.LocalMachineGroupPolicy'
CERT_PHYSICAL_STORE_ENTERPRISE_NAME: String = '.Enterprise'
CERT_PHYSICAL_STORE_AUTH_ROOT_NAME: String = '.AuthRoot'
CERT_PHYSICAL_STORE_SMART_CARD_NAME: String = '.SmartCard'
CRYPT_OID_OPEN_SYSTEM_STORE_PROV_FUNC: String = 'CertDllOpenSystemStoreProv'
CRYPT_OID_REGISTER_SYSTEM_STORE_FUNC: String = 'CertDllRegisterSystemStore'
CRYPT_OID_UNREGISTER_SYSTEM_STORE_FUNC: String = 'CertDllUnregisterSystemStore'
CRYPT_OID_ENUM_SYSTEM_STORE_FUNC: String = 'CertDllEnumSystemStore'
CRYPT_OID_REGISTER_PHYSICAL_STORE_FUNC: String = 'CertDllRegisterPhysicalStore'
CRYPT_OID_UNREGISTER_PHYSICAL_STORE_FUNC: String = 'CertDllUnregisterPhysicalStore'
CRYPT_OID_ENUM_PHYSICAL_STORE_FUNC: String = 'CertDllEnumPhysicalStore'
CRYPT_OID_SYSTEM_STORE_LOCATION_VALUE_NAME: String = 'SystemStoreLocation'
CMSG_TRUSTED_SIGNER_FLAG: UInt32 = 1
CMSG_SIGNER_ONLY_FLAG: UInt32 = 2
CMSG_USE_SIGNER_INDEX_FLAG: UInt32 = 4
CMSG_CMS_ENCAPSULATED_CTL_FLAG: UInt32 = 32768
CMSG_ENCODE_SORTED_CTL_FLAG: UInt32 = 1
CMSG_ENCODE_HASHED_SUBJECT_IDENTIFIER_FLAG: UInt32 = 2
CERT_VERIFY_INHIBIT_CTL_UPDATE_FLAG: UInt32 = 1
CERT_VERIFY_TRUSTED_SIGNERS_FLAG: UInt32 = 2
CERT_VERIFY_NO_TIME_CHECK_FLAG: UInt32 = 4
CERT_VERIFY_ALLOW_MORE_USAGE_FLAG: UInt32 = 8
CERT_VERIFY_UPDATED_CTL_FLAG: UInt32 = 1
CERT_CONTEXT_REVOCATION_TYPE: UInt32 = 1
CERT_VERIFY_REV_CHAIN_FLAG: UInt32 = 1
CERT_VERIFY_CACHE_ONLY_BASED_REVOCATION: UInt32 = 2
CERT_VERIFY_REV_ACCUMULATIVE_TIMEOUT_FLAG: UInt32 = 4
CERT_VERIFY_REV_SERVER_OCSP_FLAG: UInt32 = 8
CERT_VERIFY_REV_NO_OCSP_FAILOVER_TO_CRL_FLAG: UInt32 = 16
CERT_VERIFY_REV_SERVER_OCSP_WIRE_ONLY_FLAG: UInt32 = 32
CERT_UNICODE_IS_RDN_ATTRS_FLAG: UInt32 = 1
CERT_CASE_INSENSITIVE_IS_RDN_ATTRS_FLAG: UInt32 = 2
CRYPT_VERIFY_CERT_SIGN_SUBJECT_BLOB: UInt32 = 1
CRYPT_VERIFY_CERT_SIGN_SUBJECT_CERT: UInt32 = 2
CRYPT_VERIFY_CERT_SIGN_SUBJECT_CRL: UInt32 = 3
CRYPT_VERIFY_CERT_SIGN_SUBJECT_OCSP_BASIC_SIGNED_RESPONSE: UInt32 = 4
CRYPT_VERIFY_CERT_SIGN_ISSUER_PUBKEY: UInt32 = 1
CRYPT_VERIFY_CERT_SIGN_ISSUER_CERT: UInt32 = 2
CRYPT_VERIFY_CERT_SIGN_ISSUER_CHAIN: UInt32 = 3
CRYPT_VERIFY_CERT_SIGN_ISSUER_NULL: UInt32 = 4
CRYPT_VERIFY_CERT_SIGN_CHECK_WEAK_HASH_FLAG: UInt32 = 8
CRYPT_OID_EXTRACT_ENCODED_SIGNATURE_PARAMETERS_FUNC: String = 'CryptDllExtractEncodedSignatureParameters'
CRYPT_OID_SIGN_AND_ENCODE_HASH_FUNC: String = 'CryptDllSignAndEncodeHash'
CRYPT_OID_VERIFY_ENCODED_SIGNATURE_FUNC: String = 'CryptDllVerifyEncodedSignature'
CRYPT_OID_EXPORT_PUBLIC_KEY_INFO_FUNC: String = 'CryptDllExportPublicKeyInfoEx'
CRYPT_OID_EXPORT_PUBLIC_KEY_INFO_EX2_FUNC: String = 'CryptDllExportPublicKeyInfoEx2'
CRYPT_OID_EXPORT_PUBLIC_KEY_INFO_FROM_BCRYPT_HANDLE_FUNC: String = 'CryptDllExportPublicKeyInfoFromBCryptKeyHandle'
CRYPT_OID_IMPORT_PUBLIC_KEY_INFO_FUNC: String = 'CryptDllImportPublicKeyInfoEx'
CRYPT_OID_IMPORT_PUBLIC_KEY_INFO_EX2_FUNC: String = 'CryptDllImportPublicKeyInfoEx2'
CRYPT_OID_IMPORT_PRIVATE_KEY_INFO_FUNC: String = 'CryptDllImportPrivateKeyInfoEx'
CRYPT_OID_EXPORT_PRIVATE_KEY_INFO_FUNC: String = 'CryptDllExportPrivateKeyInfoEx'
CRYPT_DELETE_KEYSET: UInt32 = 16
CERT_XML_NAME_STR: UInt32 = 4
CERT_NAME_STR_SEMICOLON_FLAG: UInt32 = 1073741824
CERT_NAME_STR_NO_PLUS_FLAG: UInt32 = 536870912
CERT_NAME_STR_NO_QUOTING_FLAG: UInt32 = 268435456
CERT_NAME_STR_CRLF_FLAG: UInt32 = 134217728
CERT_NAME_STR_COMMA_FLAG: UInt32 = 67108864
CERT_NAME_STR_REVERSE_FLAG: UInt32 = 33554432
CERT_NAME_STR_FORWARD_FLAG: UInt32 = 16777216
CERT_NAME_STR_DISABLE_IE4_UTF8_FLAG: UInt32 = 65536
CERT_NAME_STR_ENABLE_T61_UNICODE_FLAG: UInt32 = 131072
CERT_NAME_STR_ENABLE_UTF8_UNICODE_FLAG: UInt32 = 262144
CERT_NAME_STR_FORCE_UTF8_DIR_STR_FLAG: UInt32 = 524288
CERT_NAME_STR_DISABLE_UTF8_DIR_STR_FLAG: UInt32 = 1048576
CERT_NAME_STR_ENABLE_PUNYCODE_FLAG: UInt32 = 2097152
CERT_NAME_EMAIL_TYPE: UInt32 = 1
CERT_NAME_RDN_TYPE: UInt32 = 2
CERT_NAME_ATTR_TYPE: UInt32 = 3
CERT_NAME_SIMPLE_DISPLAY_TYPE: UInt32 = 4
CERT_NAME_FRIENDLY_DISPLAY_TYPE: UInt32 = 5
CERT_NAME_DNS_TYPE: UInt32 = 6
CERT_NAME_URL_TYPE: UInt32 = 7
CERT_NAME_UPN_TYPE: UInt32 = 8
CERT_NAME_ISSUER_FLAG: UInt32 = 1
CERT_NAME_DISABLE_IE4_UTF8_FLAG: UInt32 = 65536
CERT_NAME_SEARCH_ALL_NAMES_FLAG: UInt32 = 2
CRYPT_MESSAGE_BARE_CONTENT_OUT_FLAG: UInt32 = 1
CRYPT_MESSAGE_ENCAPSULATED_CONTENT_OUT_FLAG: UInt32 = 2
CRYPT_MESSAGE_KEYID_SIGNER_FLAG: UInt32 = 4
CRYPT_MESSAGE_SILENT_KEYSET_FLAG: UInt32 = 64
CRYPT_MESSAGE_KEYID_RECIPIENT_FLAG: UInt32 = 4
CREDENTIAL_OID_PASSWORD_CREDENTIALS_A: win32more.Windows.Win32.Foundation.PSTR = 1
CREDENTIAL_OID_PASSWORD_CREDENTIALS_W: win32more.Windows.Win32.Foundation.PSTR = 2
CREDENTIAL_OID_PASSWORD_CREDENTIALS: Int32 = 2
SCHEME_OID_RETRIEVE_ENCODED_OBJECT_FUNC: String = 'SchemeDllRetrieveEncodedObject'
SCHEME_OID_RETRIEVE_ENCODED_OBJECTW_FUNC: String = 'SchemeDllRetrieveEncodedObjectW'
CONTEXT_OID_CREATE_OBJECT_CONTEXT_FUNC: String = 'ContextDllCreateObjectContext'
CONTEXT_OID_CERTIFICATE: win32more.Windows.Win32.Foundation.PSTR = 1
CONTEXT_OID_CRL: win32more.Windows.Win32.Foundation.PSTR = 2
CONTEXT_OID_CTL: win32more.Windows.Win32.Foundation.PSTR = 3
CONTEXT_OID_PKCS7: win32more.Windows.Win32.Foundation.PSTR = 4
CONTEXT_OID_CAPI2_ANY: win32more.Windows.Win32.Foundation.PSTR = 5
CONTEXT_OID_OCSP_RESP: win32more.Windows.Win32.Foundation.PSTR = 6
CRYPT_RETRIEVE_MULTIPLE_OBJECTS: UInt32 = 1
CRYPT_CACHE_ONLY_RETRIEVAL: UInt32 = 2
CRYPT_WIRE_ONLY_RETRIEVAL: UInt32 = 4
CRYPT_DONT_CACHE_RESULT: UInt32 = 8
CRYPT_ASYNC_RETRIEVAL: UInt32 = 16
CRYPT_STICKY_CACHE_RETRIEVAL: UInt32 = 4096
CRYPT_LDAP_SCOPE_BASE_ONLY_RETRIEVAL: UInt32 = 8192
CRYPT_OFFLINE_CHECK_RETRIEVAL: UInt32 = 16384
CRYPT_LDAP_INSERT_ENTRY_ATTRIBUTE: UInt32 = 32768
CRYPT_LDAP_SIGN_RETRIEVAL: UInt32 = 65536
CRYPT_NO_AUTH_RETRIEVAL: UInt32 = 131072
CRYPT_LDAP_AREC_EXCLUSIVE_RETRIEVAL: UInt32 = 262144
CRYPT_AIA_RETRIEVAL: UInt32 = 524288
CRYPT_HTTP_POST_RETRIEVAL: UInt32 = 1048576
CRYPT_PROXY_CACHE_RETRIEVAL: UInt32 = 2097152
CRYPT_NOT_MODIFIED_RETRIEVAL: UInt32 = 4194304
CRYPT_ENABLE_SSL_REVOCATION_RETRIEVAL: UInt32 = 8388608
CRYPT_RANDOM_QUERY_STRING_RETRIEVAL: UInt32 = 67108864
CRYPT_ENABLE_FILE_RETRIEVAL: UInt32 = 134217728
CRYPT_CREATE_NEW_FLUSH_ENTRY: UInt32 = 268435456
CRYPT_VERIFY_CONTEXT_SIGNATURE: UInt32 = 32
CRYPT_VERIFY_DATA_HASH: UInt32 = 64
CRYPT_KEEP_TIME_VALID: UInt32 = 128
CRYPT_DONT_VERIFY_SIGNATURE: UInt32 = 256
CRYPT_DONT_CHECK_TIME_VALIDITY: UInt32 = 512
CRYPT_CHECK_FRESHNESS_TIME_VALIDITY: UInt32 = 1024
CRYPT_ACCUMULATIVE_TIMEOUT: UInt32 = 2048
CRYPT_OCSP_ONLY_RETRIEVAL: UInt32 = 16777216
CRYPT_NO_OCSP_FAILOVER_TO_CRL_RETRIEVAL: UInt32 = 33554432
CRYPTNET_URL_CACHE_PRE_FETCH_NONE: UInt32 = 0
CRYPTNET_URL_CACHE_PRE_FETCH_BLOB: UInt32 = 1
CRYPTNET_URL_CACHE_PRE_FETCH_CRL: UInt32 = 2
CRYPTNET_URL_CACHE_PRE_FETCH_OCSP: UInt32 = 3
CRYPTNET_URL_CACHE_PRE_FETCH_AUTOROOT_CAB: UInt32 = 5
CRYPTNET_URL_CACHE_PRE_FETCH_DISALLOWED_CERT_CAB: UInt32 = 6
CRYPTNET_URL_CACHE_PRE_FETCH_PIN_RULES_CAB: UInt32 = 7
CRYPTNET_URL_CACHE_DEFAULT_FLUSH: UInt32 = 0
CRYPTNET_URL_CACHE_DISABLE_FLUSH: UInt32 = 4294967295
CRYPTNET_URL_CACHE_RESPONSE_NONE: UInt32 = 0
CRYPTNET_URL_CACHE_RESPONSE_HTTP: UInt32 = 1
CRYPTNET_URL_CACHE_RESPONSE_VALIDATED: UInt32 = 32768
CRYPT_RETRIEVE_MAX_ERROR_CONTENT_LENGTH: UInt32 = 4096
CRYPT_PARAM_ASYNC_RETRIEVAL_COMPLETION: win32more.Windows.Win32.Foundation.PSTR = 1
CRYPT_PARAM_CANCEL_ASYNC_RETRIEVAL: win32more.Windows.Win32.Foundation.PSTR = 2
URL_OID_GET_OBJECT_URL_FUNC: String = 'UrlDllGetObjectUrl'
URL_OID_CERTIFICATE_ISSUER: win32more.Windows.Win32.Foundation.PSTR = 1
URL_OID_CERTIFICATE_CRL_DIST_POINT: win32more.Windows.Win32.Foundation.PSTR = 2
URL_OID_CTL_ISSUER: win32more.Windows.Win32.Foundation.PSTR = 3
URL_OID_CTL_NEXT_UPDATE: win32more.Windows.Win32.Foundation.PSTR = 4
URL_OID_CRL_ISSUER: win32more.Windows.Win32.Foundation.PSTR = 5
URL_OID_CERTIFICATE_FRESHEST_CRL: win32more.Windows.Win32.Foundation.PSTR = 6
URL_OID_CRL_FRESHEST_CRL: win32more.Windows.Win32.Foundation.PSTR = 7
URL_OID_CROSS_CERT_DIST_POINT: win32more.Windows.Win32.Foundation.PSTR = 8
URL_OID_CERTIFICATE_OCSP: win32more.Windows.Win32.Foundation.PSTR = 9
URL_OID_CERTIFICATE_OCSP_AND_CRL_DIST_POINT: win32more.Windows.Win32.Foundation.PSTR = 10
URL_OID_CERTIFICATE_CRL_DIST_POINT_AND_OCSP: win32more.Windows.Win32.Foundation.PSTR = 11
URL_OID_CROSS_CERT_SUBJECT_INFO_ACCESS: win32more.Windows.Win32.Foundation.PSTR = 12
URL_OID_CERTIFICATE_ONLY_OCSP: win32more.Windows.Win32.Foundation.PSTR = 13
TIME_VALID_OID_GET_OBJECT_FUNC: String = 'TimeValidDllGetObject'
TIME_VALID_OID_GET_CTL: win32more.Windows.Win32.Foundation.PSTR = 1
TIME_VALID_OID_GET_CRL: win32more.Windows.Win32.Foundation.PSTR = 2
TIME_VALID_OID_GET_CRL_FROM_CERT: win32more.Windows.Win32.Foundation.PSTR = 3
TIME_VALID_OID_GET_FRESHEST_CRL_FROM_CERT: win32more.Windows.Win32.Foundation.PSTR = 4
TIME_VALID_OID_GET_FRESHEST_CRL_FROM_CRL: win32more.Windows.Win32.Foundation.PSTR = 5
TIME_VALID_OID_FLUSH_OBJECT_FUNC: String = 'TimeValidDllFlushObject'
TIME_VALID_OID_FLUSH_CTL: win32more.Windows.Win32.Foundation.PSTR = 1
TIME_VALID_OID_FLUSH_CRL: win32more.Windows.Win32.Foundation.PSTR = 2
TIME_VALID_OID_FLUSH_CRL_FROM_CERT: win32more.Windows.Win32.Foundation.PSTR = 3
TIME_VALID_OID_FLUSH_FRESHEST_CRL_FROM_CERT: win32more.Windows.Win32.Foundation.PSTR = 4
TIME_VALID_OID_FLUSH_FRESHEST_CRL_FROM_CRL: win32more.Windows.Win32.Foundation.PSTR = 5
CRYPT_KEYID_MACHINE_FLAG: UInt32 = 32
CRYPT_KEYID_ALLOC_FLAG: UInt32 = 32768
CRYPT_KEYID_DELETE_FLAG: UInt32 = 16
CRYPT_KEYID_SET_NEW_FLAG: UInt32 = 8192
CERT_CHAIN_CONFIG_REGPATH: String = 'Software\\Microsoft\\Cryptography\\OID\\EncodingType 0\\CertDllCreateCertificateChainEngine\\Config'
CERT_CHAIN_MAX_URL_RETRIEVAL_BYTE_COUNT_VALUE_NAME: String = 'MaxUrlRetrievalByteCount'
CERT_CHAIN_CACHE_RESYNC_FILETIME_VALUE_NAME: String = 'ChainCacheResyncFiletime'
CERT_CHAIN_DISABLE_MANDATORY_BASIC_CONSTRAINTS_VALUE_NAME: String = 'DisableMandatoryBasicConstraints'
CERT_CHAIN_DISABLE_CA_NAME_CONSTRAINTS_VALUE_NAME: String = 'DisableCANameConstraints'
CERT_CHAIN_DISABLE_UNSUPPORTED_CRITICAL_EXTENSIONS_VALUE_NAME: String = 'DisableUnsupportedCriticalExtensions'
CERT_CHAIN_MAX_AIA_URL_COUNT_IN_CERT_VALUE_NAME: String = 'MaxAIAUrlCountInCert'
CERT_CHAIN_MAX_AIA_URL_COUNT_IN_CERT_DEFAULT: UInt32 = 5
CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_COUNT_PER_CHAIN_VALUE_NAME: String = 'MaxAIAUrlRetrievalCountPerChain'
CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_COUNT_PER_CHAIN_DEFAULT: UInt32 = 3
CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_BYTE_COUNT_VALUE_NAME: String = 'MaxAIAUrlRetrievalByteCount'
CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_BYTE_COUNT_DEFAULT: UInt32 = 100000
CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_CERT_COUNT_VALUE_NAME: String = 'MaxAIAUrlRetrievalCertCount'
CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_CERT_COUNT_DEFAULT: UInt32 = 10
CERT_CHAIN_OCSP_VALIDITY_SECONDS_VALUE_NAME: String = 'OcspValiditySeconds'
CERT_CHAIN_DISABLE_SERIAL_CHAIN_VALUE_NAME: String = 'DisableSerialChain'
CERT_CHAIN_SERIAL_CHAIN_LOG_FILE_NAME_VALUE_NAME: String = 'SerialChainLogFileName'
CERT_CHAIN_DISABLE_SYNC_WITH_SSL_TIME_VALUE_NAME: String = 'DisableSyncWithSslTime'
CERT_CHAIN_MAX_SSL_TIME_UPDATED_EVENT_COUNT_VALUE_NAME: String = 'MaxSslTimeUpdatedEventCount'
CERT_CHAIN_MAX_SSL_TIME_UPDATED_EVENT_COUNT_DEFAULT: UInt32 = 5
CERT_CHAIN_MAX_SSL_TIME_UPDATED_EVENT_COUNT_DISABLE: UInt32 = 4294967295
CERT_CHAIN_SSL_HANDSHAKE_LOG_FILE_NAME_VALUE_NAME: String = 'SslHandshakeLogFileName'
CERT_CHAIN_ENABLE_WEAK_SIGNATURE_FLAGS_VALUE_NAME: String = 'EnableWeakSignatureFlags'
CERT_CHAIN_ENABLE_MD2_MD4_FLAG: UInt32 = 1
CERT_CHAIN_ENABLE_WEAK_RSA_ROOT_FLAG: UInt32 = 2
CERT_CHAIN_ENABLE_WEAK_LOGGING_FLAG: UInt32 = 4
CERT_CHAIN_ENABLE_ONLY_WEAK_LOGGING_FLAG: UInt32 = 8
CERT_CHAIN_MIN_RSA_PUB_KEY_BIT_LENGTH_VALUE_NAME: String = 'MinRsaPubKeyBitLength'
CERT_CHAIN_MIN_RSA_PUB_KEY_BIT_LENGTH_DEFAULT: UInt32 = 1023
CERT_CHAIN_MIN_RSA_PUB_KEY_BIT_LENGTH_DISABLE: UInt32 = 4294967295
CERT_CHAIN_MIN_WEAK_RSA_PUB_KEY_BIT_LENGTH_VALUE_NAME: String = 'MinWeakRsaPubKeyBitLength'
CERT_CHAIN_MIN_WEAK_RSA_PUB_KEY_BIT_LENGTH_DEFAULT: UInt32 = 2047
CERT_CHAIN_MIN_WEAK_RSA_PUB_KEY_BIT_LENGTH_DISABLE: UInt32 = 4294967295
CERT_CHAIN_MIN_TELEMETRY_RSA_PUB_KEY_BIT_LENGTH_VALUE_NAME: String = 'MinTelemetryRsaPubKeyBitLength'
CERT_CHAIN_MIN_TELEMETRY_RSA_PUB_KEY_BIT_LENGTH_DEFAULT: UInt32 = 2047
CERT_CHAIN_MIN_TELEMETRY_RSA_PUB_KEY_BIT_LENGTH_DISABLE: UInt32 = 4294967295
CERT_CHAIN_WEAK_RSA_PUB_KEY_TIME_VALUE_NAME: String = 'WeakRsaPubKeyTime'
CERT_CHAIN_WEAK_SIGNATURE_LOG_DIR_VALUE_NAME: String = 'WeakSignatureLogDir'
CERT_CHAIN_DEFAULT_CONFIG_SUBDIR: String = 'Default'
CERT_CHAIN_WEAK_PREFIX_NAME: String = 'Weak'
CERT_CHAIN_WEAK_THIRD_PARTY_CONFIG_NAME: String = 'ThirdParty'
CERT_CHAIN_WEAK_ALL_CONFIG_NAME: String = 'All'
CERT_CHAIN_WEAK_FLAGS_NAME: String = 'Flags'
CERT_CHAIN_WEAK_HYGIENE_NAME: String = 'Hygiene'
CERT_CHAIN_WEAK_AFTER_TIME_NAME: String = 'AfterTime'
CERT_CHAIN_WEAK_FILE_HASH_AFTER_TIME_NAME: String = 'FileHashAfterTime'
CERT_CHAIN_WEAK_TIMESTAMP_HASH_AFTER_TIME_NAME: String = 'TimestampHashAfterTime'
CERT_CHAIN_WEAK_MIN_BIT_LENGTH_NAME: String = 'MinBitLength'
CERT_CHAIN_WEAK_SHA256_ALLOW_NAME: String = 'Sha256Allow'
CERT_CHAIN_MIN_PUB_KEY_BIT_LENGTH_DISABLE: UInt32 = 4294967295
CERT_CHAIN_ENABLE_WEAK_SETTINGS_FLAG: UInt32 = 2147483648
CERT_CHAIN_DISABLE_ECC_PARA_FLAG: UInt32 = 16
CERT_CHAIN_DISABLE_ALL_EKU_WEAK_FLAG: UInt32 = 65536
CERT_CHAIN_ENABLE_ALL_EKU_HYGIENE_FLAG: UInt32 = 131072
CERT_CHAIN_DISABLE_OPT_IN_SERVER_AUTH_WEAK_FLAG: UInt32 = 262144
CERT_CHAIN_DISABLE_SERVER_AUTH_WEAK_FLAG: UInt32 = 1048576
CERT_CHAIN_ENABLE_SERVER_AUTH_HYGIENE_FLAG: UInt32 = 2097152
CERT_CHAIN_DISABLE_CODE_SIGNING_WEAK_FLAG: UInt32 = 4194304
CERT_CHAIN_DISABLE_MOTW_CODE_SIGNING_WEAK_FLAG: UInt32 = 8388608
CERT_CHAIN_ENABLE_CODE_SIGNING_HYGIENE_FLAG: UInt32 = 16777216
CERT_CHAIN_ENABLE_MOTW_CODE_SIGNING_HYGIENE_FLAG: UInt32 = 33554432
CERT_CHAIN_DISABLE_TIMESTAMP_WEAK_FLAG: UInt32 = 67108864
CERT_CHAIN_DISABLE_MOTW_TIMESTAMP_WEAK_FLAG: UInt32 = 134217728
CERT_CHAIN_ENABLE_TIMESTAMP_HYGIENE_FLAG: UInt32 = 268435456
CERT_CHAIN_ENABLE_MOTW_TIMESTAMP_HYGIENE_FLAG: UInt32 = 536870912
CERT_CHAIN_MOTW_IGNORE_AFTER_TIME_WEAK_FLAG: UInt32 = 1073741824
CERT_CHAIN_DISABLE_FILE_HASH_WEAK_FLAG: UInt32 = 4096
CERT_CHAIN_DISABLE_MOTW_FILE_HASH_WEAK_FLAG: UInt32 = 8192
CERT_CHAIN_DISABLE_TIMESTAMP_HASH_WEAK_FLAG: UInt32 = 16384
CERT_CHAIN_DISABLE_MOTW_TIMESTAMP_HASH_WEAK_FLAG: UInt32 = 32768
CERT_CHAIN_OPT_IN_WEAK_FLAGS: UInt32 = 262144
CERT_CHAIN_AUTO_CURRENT_USER: UInt32 = 1
CERT_CHAIN_AUTO_LOCAL_MACHINE: UInt32 = 2
CERT_CHAIN_AUTO_IMPERSONATED: UInt32 = 3
CERT_CHAIN_AUTO_PROCESS_INFO: UInt32 = 4
CERT_CHAIN_AUTO_PINRULE_INFO: UInt32 = 5
CERT_CHAIN_AUTO_NETWORK_INFO: UInt32 = 6
CERT_CHAIN_AUTO_SERIAL_LOCAL_MACHINE: UInt32 = 7
CERT_CHAIN_AUTO_HPKP_RULE_INFO: UInt32 = 8
CERT_CHAIN_AUTO_FLAGS_VALUE_NAME: String = 'AutoFlags'
CERT_CHAIN_AUTO_FLUSH_DISABLE_FLAG: UInt32 = 1
CERT_CHAIN_AUTO_LOG_CREATE_FLAG: UInt32 = 2
CERT_CHAIN_AUTO_LOG_FREE_FLAG: UInt32 = 4
CERT_CHAIN_AUTO_LOG_FLUSH_FLAG: UInt32 = 8
CERT_CHAIN_AUTO_FLUSH_FIRST_DELTA_SECONDS_VALUE_NAME: String = 'AutoFlushFirstDeltaSeconds'
CERT_CHAIN_AUTO_FLUSH_NEXT_DELTA_SECONDS_VALUE_NAME: String = 'AutoFlushNextDeltaSeconds'
CERT_CHAIN_AUTO_LOG_FILE_NAME_VALUE_NAME: String = 'AutoLogFileName'
CERT_CHAIN_DISABLE_AUTO_FLUSH_PROCESS_NAME_LIST_VALUE_NAME: String = 'DisableAutoFlushProcessNameList'
CERT_SRV_OCSP_RESP_MIN_VALIDITY_SECONDS_VALUE_NAME: String = 'SrvOcspRespMinValiditySeconds'
CERT_SRV_OCSP_RESP_URL_RETRIEVAL_TIMEOUT_MILLISECONDS_VALUE_NAME: String = 'SrvOcspRespUrlRetrievalTimeoutMilliseconds'
CERT_SRV_OCSP_RESP_MAX_BEFORE_NEXT_UPDATE_SECONDS_VALUE_NAME: String = 'SrvOcspRespMaxBeforeNextUpdateSeconds'
CERT_SRV_OCSP_RESP_MIN_BEFORE_NEXT_UPDATE_SECONDS_VALUE_NAME: String = 'SrvOcspRespMinBeforeNextUpdateSeconds'
CERT_SRV_OCSP_RESP_MIN_AFTER_NEXT_UPDATE_SECONDS_VALUE_NAME: String = 'SrvOcspRespMinAfterNextUpdateSeconds'
CERT_SRV_OCSP_RESP_MIN_SYNC_CERT_FILE_SECONDS_VALUE_NAME: String = 'SrvOcspRespMinSyncCertFileSeconds'
CERT_SRV_OCSP_RESP_MIN_SYNC_CERT_FILE_SECONDS_DEFAULT: UInt32 = 5
CERT_SRV_OCSP_RESP_MAX_SYNC_CERT_FILE_SECONDS_VALUE_NAME: String = 'SrvOcspRespMaxSyncCertFileSeconds'
CRYPTNET_MAX_CACHED_OCSP_PER_CRL_COUNT_VALUE_NAME: String = 'CryptnetMaxCachedOcspPerCrlCount'
CRYPTNET_MAX_CACHED_OCSP_PER_CRL_COUNT_DEFAULT: UInt32 = 500
CRYPTNET_OCSP_AFTER_CRL_DISABLE: UInt32 = 4294967295
CRYPTNET_URL_CACHE_DEFAULT_FLUSH_EXEMPT_SECONDS_VALUE_NAME: String = 'CryptnetDefaultFlushExemptSeconds'
CRYPTNET_PRE_FETCH_MIN_MAX_AGE_SECONDS_VALUE_NAME: String = 'CryptnetPreFetchMinMaxAgeSeconds'
CRYPTNET_PRE_FETCH_MAX_MAX_AGE_SECONDS_VALUE_NAME: String = 'CryptnetPreFetchMaxMaxAgeSeconds'
CRYPTNET_PRE_FETCH_MIN_OCSP_VALIDITY_PERIOD_SECONDS_VALUE_NAME: String = 'CryptnetPreFetchMinOcspValidityPeriodSeconds'
CRYPTNET_PRE_FETCH_AFTER_PUBLISH_PRE_FETCH_DIVISOR_VALUE_NAME: String = 'CryptnetPreFetchAfterPublishPreFetchDivisor'
CRYPTNET_PRE_FETCH_AFTER_PUBLISH_PRE_FETCH_DIVISOR_DEFAULT: UInt32 = 10
CRYPTNET_PRE_FETCH_BEFORE_NEXT_UPDATE_PRE_FETCH_DIVISOR_VALUE_NAME: String = 'CryptnetPreFetchBeforeNextUpdatePreFetchDivisor'
CRYPTNET_PRE_FETCH_BEFORE_NEXT_UPDATE_PRE_FETCH_DIVISOR_DEFAULT: UInt32 = 20
CRYPTNET_PRE_FETCH_MIN_BEFORE_NEXT_UPDATE_PRE_FETCH_PERIOD_SECONDS_VALUE_NAME: String = 'CryptnetPreFetchMinBeforeNextUpdatePreFetchSeconds'
CRYPTNET_PRE_FETCH_VALIDITY_PERIOD_AFTER_NEXT_UPDATE_PRE_FETCH_DIVISOR_VALUE_NAME: String = 'CryptnetPreFetchValidityPeriodAfterNextUpdatePreFetchDivisor'
CRYPTNET_PRE_FETCH_VALIDITY_PERIOD_AFTER_NEXT_UPDATE_PRE_FETCH_DIVISOR_DEFAULT: UInt32 = 10
CRYPTNET_PRE_FETCH_MAX_AFTER_NEXT_UPDATE_PRE_FETCH_PERIOD_SECONDS_VALUE_NAME: String = 'CryptnetPreFetchMaxAfterNextUpdatePreFetchPeriodSeconds'
CRYPTNET_PRE_FETCH_MIN_AFTER_NEXT_UPDATE_PRE_FETCH_PERIOD_SECONDS_VALUE_NAME: String = 'CryptnetPreFetchMinAfterNextUpdatePreFetchPeriodSeconds'
CRYPTNET_PRE_FETCH_AFTER_CURRENT_TIME_PRE_FETCH_PERIOD_SECONDS_VALUE_NAME: String = 'CryptnetPreFetchAfterCurrentTimePreFetchPeriodSeconds'
CRYPTNET_PRE_FETCH_TRIGGER_PERIOD_SECONDS_VALUE_NAME: String = 'CryptnetPreFetchTriggerPeriodSeconds'
CRYPTNET_PRE_FETCH_TRIGGER_DISABLE: UInt32 = 4294967295
CRYPTNET_PRE_FETCH_SCAN_AFTER_TRIGGER_DELAY_SECONDS_VALUE_NAME: String = 'CryptnetPreFetchScanAfterTriggerDelaySeconds'
CRYPTNET_PRE_FETCH_SCAN_AFTER_TRIGGER_DELAY_SECONDS_DEFAULT: UInt32 = 60
CRYPTNET_PRE_FETCH_RETRIEVAL_TIMEOUT_SECONDS_VALUE_NAME: String = 'CryptnetPreFetchRetrievalTimeoutSeconds'
CRYPTNET_CRL_PRE_FETCH_PROCESS_NAME_LIST_VALUE_NAME: String = 'ProcessNameList'
CRYPTNET_CRL_PRE_FETCH_URL_LIST_VALUE_NAME: String = 'PreFetchUrlList'
CRYPTNET_CRL_PRE_FETCH_DISABLE_INFORMATION_EVENTS_VALUE_NAME: String = 'DisableInformationEvents'
CRYPTNET_CRL_PRE_FETCH_LOG_FILE_NAME_VALUE_NAME: String = 'LogFileName'
CRYPTNET_CRL_PRE_FETCH_TIMEOUT_SECONDS_VALUE_NAME: String = 'TimeoutSeconds'
CRYPTNET_CRL_PRE_FETCH_MAX_AGE_SECONDS_VALUE_NAME: String = 'MaxAgeSeconds'
CRYPTNET_CRL_PRE_FETCH_PUBLISH_BEFORE_NEXT_UPDATE_SECONDS_VALUE_NAME: String = 'PublishBeforeNextUpdateSeconds'
CRYPTNET_CRL_PRE_FETCH_PUBLISH_RANDOM_INTERVAL_SECONDS_VALUE_NAME: String = 'PublishRandomIntervalSeconds'
CRYPTNET_CRL_PRE_FETCH_MIN_BEFORE_NEXT_UPDATE_SECONDS_VALUE_NAME: String = 'MinBeforeNextUpdateSeconds'
CRYPTNET_CRL_PRE_FETCH_MIN_AFTER_NEXT_UPDATE_SECONDS_VALUE_NAME: String = 'MinAfterNextUpdateSeconds'
CERT_CHAIN_URL_RETRIEVAL_TIMEOUT_MILLISECONDS_VALUE_NAME: String = 'ChainUrlRetrievalTimeoutMilliseconds'
CERT_CHAIN_REV_ACCUMULATIVE_URL_RETRIEVAL_TIMEOUT_MILLISECONDS_VALUE_NAME: String = 'ChainRevAccumulativeUrlRetrievalTimeoutMilliseconds'
CERT_RETR_BEHAVIOR_INET_AUTH_VALUE_NAME: String = 'EnableInetUnknownAuth'
CERT_RETR_BEHAVIOR_INET_STATUS_VALUE_NAME: String = 'EnableInetLocal'
CERT_RETR_BEHAVIOR_FILE_VALUE_NAME: String = 'AllowFileUrlScheme'
CERT_RETR_BEHAVIOR_LDAP_VALUE_NAME: String = 'DisableLDAPSignAndEncrypt'
CRYPTNET_CACHED_OCSP_SWITCH_TO_CRL_COUNT_VALUE_NAME: String = 'CryptnetCachedOcspSwitchToCrlCount'
CRYPTNET_CACHED_OCSP_SWITCH_TO_CRL_COUNT_DEFAULT: UInt32 = 50
CRYPTNET_CRL_BEFORE_OCSP_ENABLE: UInt32 = 4294967295
CERT_CHAIN_DISABLE_AIA_URL_RETRIEVAL_VALUE_NAME: String = 'DisableAIAUrlRetrieval'
CERT_CHAIN_OPTIONS_VALUE_NAME: String = 'Options'
CERT_CHAIN_OPTION_DISABLE_AIA_URL_RETRIEVAL: UInt32 = 2
CERT_CHAIN_OPTION_ENABLE_SIA_URL_RETRIEVAL: UInt32 = 4
CERT_CHAIN_CROSS_CERT_DOWNLOAD_INTERVAL_HOURS_VALUE_NAME: String = 'CrossCertDownloadIntervalHours'
CERT_CHAIN_CRL_VALIDITY_EXT_PERIOD_HOURS_VALUE_NAME: String = 'CRLValidityExtensionPeriod'
CERT_CHAIN_CRL_VALIDITY_EXT_PERIOD_HOURS_DEFAULT: UInt32 = 12
CERT_CHAIN_CACHE_END_CERT: UInt32 = 1
CERT_CHAIN_THREAD_STORE_SYNC: UInt32 = 2
CERT_CHAIN_CACHE_ONLY_URL_RETRIEVAL: UInt32 = 4
CERT_CHAIN_USE_LOCAL_MACHINE_STORE: UInt32 = 8
CERT_CHAIN_ENABLE_CACHE_AUTO_UPDATE: UInt32 = 16
CERT_CHAIN_ENABLE_SHARE_STORE: UInt32 = 32
CERT_CHAIN_EXCLUSIVE_ENABLE_CA_FLAG: UInt32 = 1
CERT_TRUST_NO_ERROR: UInt32 = 0
CERT_TRUST_IS_NOT_TIME_VALID: UInt32 = 1
CERT_TRUST_IS_NOT_TIME_NESTED: UInt32 = 2
CERT_TRUST_IS_REVOKED: UInt32 = 4
CERT_TRUST_IS_NOT_SIGNATURE_VALID: UInt32 = 8
CERT_TRUST_IS_NOT_VALID_FOR_USAGE: UInt32 = 16
CERT_TRUST_IS_UNTRUSTED_ROOT: UInt32 = 32
CERT_TRUST_REVOCATION_STATUS_UNKNOWN: UInt32 = 64
CERT_TRUST_IS_CYCLIC: UInt32 = 128
CERT_TRUST_INVALID_EXTENSION: UInt32 = 256
CERT_TRUST_INVALID_POLICY_CONSTRAINTS: UInt32 = 512
CERT_TRUST_INVALID_BASIC_CONSTRAINTS: UInt32 = 1024
CERT_TRUST_INVALID_NAME_CONSTRAINTS: UInt32 = 2048
CERT_TRUST_HAS_NOT_SUPPORTED_NAME_CONSTRAINT: UInt32 = 4096
CERT_TRUST_HAS_NOT_DEFINED_NAME_CONSTRAINT: UInt32 = 8192
CERT_TRUST_HAS_NOT_PERMITTED_NAME_CONSTRAINT: UInt32 = 16384
CERT_TRUST_HAS_EXCLUDED_NAME_CONSTRAINT: UInt32 = 32768
CERT_TRUST_IS_OFFLINE_REVOCATION: UInt32 = 16777216
CERT_TRUST_NO_ISSUANCE_CHAIN_POLICY: UInt32 = 33554432
CERT_TRUST_IS_EXPLICIT_DISTRUST: UInt32 = 67108864
CERT_TRUST_HAS_NOT_SUPPORTED_CRITICAL_EXT: UInt32 = 134217728
CERT_TRUST_HAS_WEAK_SIGNATURE: UInt32 = 1048576
CERT_TRUST_HAS_WEAK_HYGIENE: UInt32 = 2097152
CERT_TRUST_HAS_MIN_TELEMETRY_RSA: UInt32 = 4194304
CERT_TRUST_HAS_MIN_WEAK_RSA: UInt32 = 8388608
CERT_TRUST_IS_PARTIAL_CHAIN: UInt32 = 65536
CERT_TRUST_CTL_IS_NOT_TIME_VALID: UInt32 = 131072
CERT_TRUST_CTL_IS_NOT_SIGNATURE_VALID: UInt32 = 262144
CERT_TRUST_CTL_IS_NOT_VALID_FOR_USAGE: UInt32 = 524288
CERT_TRUST_HAS_EXACT_MATCH_ISSUER: UInt32 = 1
CERT_TRUST_HAS_KEY_MATCH_ISSUER: UInt32 = 2
CERT_TRUST_HAS_NAME_MATCH_ISSUER: UInt32 = 4
CERT_TRUST_IS_SELF_SIGNED: UInt32 = 8
CERT_TRUST_AUTO_UPDATE_CA_REVOCATION: UInt32 = 16
CERT_TRUST_AUTO_UPDATE_END_REVOCATION: UInt32 = 32
CERT_TRUST_NO_OCSP_FAILOVER_TO_CRL: UInt32 = 64
CERT_TRUST_IS_KEY_ROLLOVER: UInt32 = 128
CERT_TRUST_SSL_HANDSHAKE_OCSP: UInt32 = 262144
CERT_TRUST_SSL_TIME_VALID_OCSP: UInt32 = 524288
CERT_TRUST_SSL_RECONNECT_OCSP: UInt32 = 1048576
CERT_TRUST_HAS_PREFERRED_ISSUER: UInt32 = 256
CERT_TRUST_HAS_ISSUANCE_CHAIN_POLICY: UInt32 = 512
CERT_TRUST_HAS_VALID_NAME_CONSTRAINTS: UInt32 = 1024
CERT_TRUST_IS_PEER_TRUSTED: UInt32 = 2048
CERT_TRUST_HAS_CRL_VALIDITY_EXTENDED: UInt32 = 4096
CERT_TRUST_IS_FROM_EXCLUSIVE_TRUST_STORE: UInt32 = 8192
CERT_TRUST_IS_CA_TRUSTED: UInt32 = 16384
CERT_TRUST_HAS_AUTO_UPDATE_WEAK_SIGNATURE: UInt32 = 32768
CERT_TRUST_HAS_ALLOW_WEAK_SIGNATURE: UInt32 = 131072
CERT_TRUST_BEFORE_DISALLOWED_CA_FILETIME: UInt32 = 2097152
CERT_TRUST_IS_COMPLEX_CHAIN: UInt32 = 65536
CERT_TRUST_SSL_TIME_VALID: UInt32 = 16777216
CERT_TRUST_NO_TIME_CHECK: UInt32 = 33554432
USAGE_MATCH_TYPE_AND: UInt32 = 0
USAGE_MATCH_TYPE_OR: UInt32 = 1
CERT_CHAIN_STRONG_SIGN_DISABLE_END_CHECK_FLAG: UInt32 = 1
CERT_CHAIN_REVOCATION_CHECK_END_CERT: UInt32 = 268435456
CERT_CHAIN_REVOCATION_CHECK_CHAIN: UInt32 = 536870912
CERT_CHAIN_REVOCATION_CHECK_CHAIN_EXCLUDE_ROOT: UInt32 = 1073741824
CERT_CHAIN_REVOCATION_CHECK_CACHE_ONLY: UInt32 = 2147483648
CERT_CHAIN_REVOCATION_ACCUMULATIVE_TIMEOUT: UInt32 = 134217728
CERT_CHAIN_REVOCATION_CHECK_OCSP_CERT: UInt32 = 67108864
CERT_CHAIN_DISABLE_PASS1_QUALITY_FILTERING: UInt32 = 64
CERT_CHAIN_RETURN_LOWER_QUALITY_CONTEXTS: UInt32 = 128
CERT_CHAIN_DISABLE_AUTH_ROOT_AUTO_UPDATE: UInt32 = 256
CERT_CHAIN_TIMESTAMP_TIME: UInt32 = 512
CERT_CHAIN_ENABLE_PEER_TRUST: UInt32 = 1024
CERT_CHAIN_DISABLE_MY_PEER_TRUST: UInt32 = 2048
CERT_CHAIN_DISABLE_MD2_MD4: UInt32 = 4096
CERT_CHAIN_DISABLE_AIA: UInt32 = 8192
CERT_CHAIN_HAS_MOTW: UInt32 = 16384
CERT_CHAIN_ONLY_ADDITIONAL_AND_AUTH_ROOT: UInt32 = 32768
CERT_CHAIN_OPT_IN_WEAK_SIGNATURE: UInt32 = 65536
CERT_CHAIN_ENABLE_DISALLOWED_CA: UInt32 = 131072
REVOCATION_OID_CRL_REVOCATION: win32more.Windows.Win32.Foundation.PSTR = 1
CERT_CHAIN_FIND_BY_ISSUER: UInt32 = 1
CRYPT_OID_VERIFY_CERTIFICATE_CHAIN_POLICY_FUNC: String = 'CertDllVerifyCertificateChainPolicy'
CERT_CHAIN_POLICY_BASE: win32more.Windows.Win32.Foundation.PSTR = 1
CERT_CHAIN_POLICY_AUTHENTICODE: win32more.Windows.Win32.Foundation.PSTR = 2
CERT_CHAIN_POLICY_AUTHENTICODE_TS: win32more.Windows.Win32.Foundation.PSTR = 3
CERT_CHAIN_POLICY_SSL: win32more.Windows.Win32.Foundation.PSTR = 4
CERT_CHAIN_POLICY_BASIC_CONSTRAINTS: win32more.Windows.Win32.Foundation.PSTR = 5
CERT_CHAIN_POLICY_NT_AUTH: win32more.Windows.Win32.Foundation.PSTR = 6
CERT_CHAIN_POLICY_MICROSOFT_ROOT: win32more.Windows.Win32.Foundation.PSTR = 7
CERT_CHAIN_POLICY_EV: win32more.Windows.Win32.Foundation.PSTR = 8
CERT_CHAIN_POLICY_SSL_F12: win32more.Windows.Win32.Foundation.PSTR = 9
CERT_CHAIN_POLICY_SSL_HPKP_HEADER: win32more.Windows.Win32.Foundation.PSTR = 10
CERT_CHAIN_POLICY_THIRD_PARTY_ROOT: win32more.Windows.Win32.Foundation.PSTR = 11
CERT_CHAIN_POLICY_SSL_KEY_PIN: win32more.Windows.Win32.Foundation.PSTR = 12
CERT_CHAIN_POLICY_CT: win32more.Windows.Win32.Foundation.PSTR = 13
SSL_F12_ERROR_TEXT_LENGTH: UInt32 = 256
CERT_CHAIN_POLICY_SSL_F12_SUCCESS_LEVEL: UInt32 = 0
CERT_CHAIN_POLICY_SSL_F12_WARNING_LEVEL: UInt32 = 1
CERT_CHAIN_POLICY_SSL_F12_ERROR_LEVEL: UInt32 = 2
CERT_CHAIN_POLICY_SSL_F12_NONE_CATEGORY: UInt32 = 0
CERT_CHAIN_POLICY_SSL_F12_WEAK_CRYPTO_CATEGORY: UInt32 = 1
CERT_CHAIN_POLICY_SSL_F12_ROOT_PROGRAM_CATEGORY: UInt32 = 2
SSL_HPKP_PKP_HEADER_INDEX: UInt32 = 0
SSL_HPKP_PKP_RO_HEADER_INDEX: UInt32 = 1
SSL_HPKP_HEADER_COUNT: UInt32 = 2
SSL_KEY_PIN_ERROR_TEXT_LENGTH: UInt32 = 512
CERT_CHAIN_POLICY_SSL_KEY_PIN_MISMATCH_ERROR: Int32 = -2
CERT_CHAIN_POLICY_SSL_KEY_PIN_MITM_ERROR: Int32 = -1
CERT_CHAIN_POLICY_SSL_KEY_PIN_SUCCESS: UInt32 = 0
CERT_CHAIN_POLICY_SSL_KEY_PIN_MITM_WARNING: UInt32 = 1
CERT_CHAIN_POLICY_SSL_KEY_PIN_MISMATCH_WARNING: UInt32 = 2
CERT_CHAIN_POLICY_CT_ERROR_UNDECODABLE_SCT_EXTENSION: Int32 = -112
CERT_CHAIN_POLICY_CT_ERROR_UNRETRIEVABLE_SCT_EXTENSION: Int32 = -111
CERT_CHAIN_POLICY_CT_ERROR_MISSING_SCT_EXTENSION: Int32 = -110
CERT_CHAIN_POLICY_CT_ERROR_INVALID_ISSUER_CERT: Int32 = -101
CERT_CHAIN_POLICY_CT_ERROR_INVALID_SUBJECT_CERT: Int32 = -100
CERT_CHAIN_POLICY_CT_ERROR_CANNOT_VALIDATE_SCT: Int32 = -50
CERT_CHAIN_POLICY_CT_ERROR_SCT_VALIDATION_STATUS_INSUFFICIENT: Int32 = -4
CERT_CHAIN_POLICY_CT_ERROR_SCT_VALIDATION_STATUS_UNKNOWN_VERSION: Int32 = -3
CERT_CHAIN_POLICY_CT_ERROR_SCT_VALIDATION_STATUS_UNKNOWN_LOG: Int32 = -2
CERT_CHAIN_POLICY_CT_ERROR_SCT_VALIDATION_STATUS_INVALID: Int32 = -1
CERT_CHAIN_POLICY_CT_SUCCESS_SCT_VALIDIDATION_STATUS_VALID: UInt32 = 0
CERT_CHAIN_POLICY_CT_WARNING_OUT_OF_MEMORY: UInt32 = 1
CERT_CHAIN_POLICY_CT_WARNING_BEFORE_CODE_SIGNING_CT_LOGGING: UInt32 = 2
CERT_CHAIN_POLICY_CT_WARNING_NOT_THIRD_PARTY_CERT: UInt32 = 3
CERT_CHAIN_POLICY_CT_WARNING_EXPIRED_ROOT_CTL: UInt32 = 4
CERT_CHAIN_POLICY_CT_WARNING_INVALID_CHAIN_CONTEXT: UInt32 = 50
CERT_CHAIN_POLICY_CT_WARNING_NOT_SUPPORTED_CA: UInt32 = 51
CERT_CHAIN_POLICY_CT_WARNING_MISSING_ROOT_CTL: UInt32 = 52
CERT_CHAIN_POLICY_CT_WARNING_MISSING_CT_EXT: UInt32 = 60
CERT_CHAIN_POLICY_CT_WARNING_INVALID_CT_EXT: UInt32 = 61
CERT_CHAIN_POLICY_CT_WARNING_UNABLE_TO_DECODE_EXT: UInt32 = 62
CERT_CHAIN_POLICY_CT_WARNING_UNABLE_TO_DECODE_PARAMETERS: UInt32 = 70
CERT_CHAIN_POLICY_CT_WARNING_INVALID_TEMP_FILE: UInt32 = 80
CERT_CHAIN_POLICY_CT_WARNING_CANNOT_CREATE_TEMP_FILE: UInt32 = 81
CERT_CHAIN_POLICY_CT_WARNING_CANNOT_WRITE_TEMP_FILE: UInt32 = 82
CERT_CHAIN_POLICY_CT_WARNING_CANNOT_LOAD_CTLOG_STORE_FILE: UInt32 = 83
CERT_CHAIN_POLICY_CT_WARNING_FAILED_INIT: UInt32 = 90
CERT_CHAIN_POLICY_CT_WARNING_HASHING_ERROR: UInt32 = 200
CERT_CHAIN_POLICY_CT_WARNING_INVALID_STR: UInt32 = 201
CERT_CHAIN_POLICY_CT_WARNING_CANNOT_CREATE_POLICY: UInt32 = 300
CRYPT_STRING_BASE64URI: UInt32 = 13
CRYPT_STRING_ENCODEMASK: UInt32 = 255
CRYPT_STRING_RESERVED100: UInt32 = 256
CRYPT_STRING_RESERVED200: UInt32 = 512
CRYPT_STRING_PERCENTESCAPE: UInt32 = 134217728
CRYPT_STRING_HASHDATA: UInt32 = 268435456
CRYPT_STRING_NOCRLF: UInt32 = 1073741824
CRYPT_STRING_NOCR: UInt32 = 2147483648
szOID_PKCS_12_PbeIds: String = '1.2.840.113549.1.12.1'
szOID_PKCS_12_pbeWithSHA1And128BitRC4: String = '1.2.840.113549.1.12.1.1'
szOID_PKCS_12_pbeWithSHA1And40BitRC4: String = '1.2.840.113549.1.12.1.2'
szOID_PKCS_12_pbeWithSHA1And3KeyTripleDES: String = '1.2.840.113549.1.12.1.3'
szOID_PKCS_12_pbeWithSHA1And2KeyTripleDES: String = '1.2.840.113549.1.12.1.4'
szOID_PKCS_12_pbeWithSHA1And128BitRC2: String = '1.2.840.113549.1.12.1.5'
szOID_PKCS_12_pbeWithSHA1And40BitRC2: String = '1.2.840.113549.1.12.1.6'
szOID_PKCS_5_PBKDF2: String = '1.2.840.113549.1.5.12'
szOID_PKCS_5_PBES2: String = '1.2.840.113549.1.5.13'
PKCS12_IMPORT_SILENT: UInt32 = 64
PKCS12_ONLY_CERTIFICATES: UInt32 = 1024
PKCS12_ONLY_NOT_ENCRYPTED_CERTIFICATES: UInt32 = 2048
PKCS12_VIRTUAL_ISOLATION_KEY: UInt32 = 65536
PKCS12_IMPORT_RESERVED_MASK: UInt32 = 4294901760
PKCS12_NAMED_NO_PERSIST_KEY: UInt32 = 131072
PKCS12_ONLY_CERTIFICATES_PROVIDER_TYPE: UInt32 = 0
PKCS12_ONLY_CERTIFICATES_PROVIDER_NAME: String = 'PfxProvider'
PKCS12_ONLY_CERTIFICATES_CONTAINER_NAME: String = 'PfxContainer'
REPORT_NO_PRIVATE_KEY: UInt32 = 1
REPORT_NOT_ABLE_TO_EXPORT_PRIVATE_KEY: UInt32 = 2
EXPORT_PRIVATE_KEYS: UInt32 = 4
PKCS12_PROTECT_TO_DOMAIN_SIDS: UInt32 = 32
PKCS12_EXPORT_SILENT: UInt32 = 64
PKCS12_EXPORT_PBES2_PARAMS: UInt32 = 128
PKCS12_DISABLE_ENCRYPT_CERTIFICATES: UInt32 = 256
PKCS12_ENCRYPT_CERTIFICATES: UInt32 = 512
PKCS12_EXPORT_ECC_CURVE_PARAMETERS: UInt32 = 4096
PKCS12_EXPORT_ECC_CURVE_OID: UInt32 = 8192
PKCS12_EXPORT_RESERVED_MASK: UInt32 = 4294901760
PKCS12_PBKDF2_ID_HMAC_SHA1: String = '1.2.840.113549.2.7'
PKCS12_PBKDF2_ID_HMAC_SHA256: String = '1.2.840.113549.2.9'
PKCS12_PBKDF2_ID_HMAC_SHA384: String = '1.2.840.113549.2.10'
PKCS12_PBKDF2_ID_HMAC_SHA512: String = '1.2.840.113549.2.11'
PKCS12_PBES2_ALG_AES256_SHA256: String = 'AES256-SHA256'
PKCS12_CONFIG_REGPATH: String = 'Software\\Microsoft\\Windows\\CurrentVersion\\PFX'
PKCS12_ENCRYPT_CERTIFICATES_VALUE_NAME: String = 'EncryptCertificates'
CERT_SERVER_OCSP_RESPONSE_OPEN_PARA_READ_FLAG: UInt32 = 1
CERT_SERVER_OCSP_RESPONSE_OPEN_PARA_WRITE_FLAG: UInt32 = 2
CERT_SERVER_OCSP_RESPONSE_ASYNC_FLAG: UInt32 = 1
CERT_RETRIEVE_ISSUER_LOGO: win32more.Windows.Win32.Foundation.PSTR = 1
CERT_RETRIEVE_SUBJECT_LOGO: win32more.Windows.Win32.Foundation.PSTR = 2
CERT_RETRIEVE_COMMUNITY_LOGO: win32more.Windows.Win32.Foundation.PSTR = 3
CERT_RETRIEVE_BIOMETRIC_PREDEFINED_BASE_TYPE: win32more.Windows.Win32.Foundation.PSTR = 1000
CERT_SELECT_MAX_PARA: UInt32 = 500
CERT_SELECT_BY_ISSUER_DISPLAYNAME: UInt32 = 12
CERT_SELECT_BY_FRIENDLYNAME: UInt32 = 13
CERT_SELECT_BY_THUMBPRINT: UInt32 = 14
CERT_SELECT_ALLOW_EXPIRED: UInt32 = 1
CERT_SELECT_TRUSTED_ROOT: UInt32 = 2
CERT_SELECT_DISALLOW_SELFSIGNED: UInt32 = 4
CERT_SELECT_HAS_PRIVATE_KEY: UInt32 = 8
CERT_SELECT_HAS_KEY_FOR_SIGNATURE: UInt32 = 16
CERT_SELECT_HAS_KEY_FOR_KEY_EXCHANGE: UInt32 = 32
CERT_SELECT_HARDWARE_ONLY: UInt32 = 64
CERT_SELECT_ALLOW_DUPLICATES: UInt32 = 128
CERT_SELECT_IGNORE_AUTOSELECT: UInt32 = 256
TIMESTAMP_FAILURE_BAD_ALG: UInt32 = 0
TIMESTAMP_FAILURE_BAD_REQUEST: UInt32 = 2
TIMESTAMP_FAILURE_BAD_FORMAT: UInt32 = 5
TIMESTAMP_FAILURE_TIME_NOT_AVAILABLE: UInt32 = 14
TIMESTAMP_FAILURE_POLICY_NOT_SUPPORTED: UInt32 = 15
TIMESTAMP_FAILURE_EXTENSION_NOT_SUPPORTED: UInt32 = 16
TIMESTAMP_FAILURE_INFO_NOT_AVAILABLE: UInt32 = 17
TIMESTAMP_FAILURE_SYSTEM_FAILURE: UInt32 = 25
TIMESTAMP_DONT_HASH_DATA: UInt32 = 1
TIMESTAMP_VERIFY_CONTEXT_SIGNATURE: UInt32 = 32
TIMESTAMP_NO_AUTH_RETRIEVAL: UInt32 = 131072
CRYPT_OBJECT_LOCATOR_SPN_NAME_TYPE: UInt32 = 1
CRYPT_OBJECT_LOCATOR_LAST_RESERVED_NAME_TYPE: UInt32 = 32
CRYPT_OBJECT_LOCATOR_FIRST_RESERVED_USER_NAME_TYPE: UInt32 = 33
CRYPT_OBJECT_LOCATOR_LAST_RESERVED_USER_NAME_TYPE: UInt32 = 65535
SSL_OBJECT_LOCATOR_PFX_FUNC: String = 'SslObjectLocatorInitializePfx'
SSL_OBJECT_LOCATOR_ISSUER_LIST_FUNC: String = 'SslObjectLocatorInitializeIssuerList'
SSL_OBJECT_LOCATOR_CERT_VALIDATION_CONFIG_FUNC: String = 'SslObjectLocatorInitializeCertValidationConfig'
CERT_FILE_HASH_USE_TYPE: UInt32 = 1
CERT_TIMESTAMP_HASH_USE_TYPE: UInt32 = 2
RECIPIENTPOLICYV1: UInt32 = 1
RECIPIENTPOLICYV2: UInt32 = 2
E_ICARD_COMMUNICATION: win32more.Windows.Win32.Foundation.HRESULT = -1073413888
E_ICARD_DATA_ACCESS: win32more.Windows.Win32.Foundation.HRESULT = -1073413887
E_ICARD_EXPORT: win32more.Windows.Win32.Foundation.HRESULT = -1073413886
E_ICARD_IDENTITY: win32more.Windows.Win32.Foundation.HRESULT = -1073413885
E_ICARD_IMPORT: win32more.Windows.Win32.Foundation.HRESULT = -1073413884
E_ICARD_ARGUMENT: win32more.Windows.Win32.Foundation.HRESULT = -1073413883
E_ICARD_REQUEST: win32more.Windows.Win32.Foundation.HRESULT = -1073413882
E_ICARD_INFORMATIONCARD: win32more.Windows.Win32.Foundation.HRESULT = -1073413881
E_ICARD_STOREKEY: win32more.Windows.Win32.Foundation.HRESULT = -1073413880
E_ICARD_LOGOVALIDATION: win32more.Windows.Win32.Foundation.HRESULT = -1073413879
E_ICARD_PASSWORDVALIDATION: win32more.Windows.Win32.Foundation.HRESULT = -1073413878
E_ICARD_POLICY: win32more.Windows.Win32.Foundation.HRESULT = -1073413877
E_ICARD_PROCESSDIED: win32more.Windows.Win32.Foundation.HRESULT = -1073413876
E_ICARD_SERVICEBUSY: win32more.Windows.Win32.Foundation.HRESULT = -1073413875
E_ICARD_SERVICE: win32more.Windows.Win32.Foundation.HRESULT = -1073413874
E_ICARD_SHUTTINGDOWN: win32more.Windows.Win32.Foundation.HRESULT = -1073413873
E_ICARD_TOKENCREATION: win32more.Windows.Win32.Foundation.HRESULT = -1073413872
E_ICARD_TRUSTEXCHANGE: win32more.Windows.Win32.Foundation.HRESULT = -1073413871
E_ICARD_UNTRUSTED: win32more.Windows.Win32.Foundation.HRESULT = -1073413870
E_ICARD_USERCANCELLED: win32more.Windows.Win32.Foundation.HRESULT = -1073413869
E_ICARD_STORE_IMPORT: win32more.Windows.Win32.Foundation.HRESULT = -1073413868
E_ICARD_FAIL: win32more.Windows.Win32.Foundation.HRESULT = -1073413867
E_ICARD_UI_INITIALIZATION: win32more.Windows.Win32.Foundation.HRESULT = -1073413862
E_ICARD_REFRESH_REQUIRED: win32more.Windows.Win32.Foundation.HRESULT = -1073413760
E_ICARD_MISSING_APPLIESTO: win32more.Windows.Win32.Foundation.HRESULT = -1073413759
E_ICARD_INVALID_PROOF_KEY: win32more.Windows.Win32.Foundation.HRESULT = -1073413758
E_ICARD_UNKNOWN_REFERENCE: win32more.Windows.Win32.Foundation.HRESULT = -1073413757
E_ICARD_FAILED_REQUIRED_CLAIMS: win32more.Windows.Win32.Foundation.HRESULT = -1073413756
AUDIT_CARD_WRITTEN: win32more.Windows.Win32.Foundation.HRESULT = 1074070016
AUDIT_CARD_DELETE: win32more.Windows.Win32.Foundation.HRESULT = 1074070017
AUDIT_CARD_IMPORT: win32more.Windows.Win32.Foundation.HRESULT = 1074070018
AUDIT_STORE_IMPORT: win32more.Windows.Win32.Foundation.HRESULT = 1074070019
AUDIT_STORE_EXPORT: win32more.Windows.Win32.Foundation.HRESULT = 1074070020
AUDIT_STORE_DELETE: win32more.Windows.Win32.Foundation.HRESULT = 1074070021
AUDIT_SERVICE_IDLE_STOP: win32more.Windows.Win32.Foundation.HRESULT = 1074070022
BCRYPT_ECC_PARAMETER_HEADER_V1: UInt32 = 1
BCRYPT_COPY_AFTER_PADDING_CHECK_FAILURE_FLAG: UInt32 = 256
MS_SCHANNEL_PROVIDER: String = 'Microsoft SSL Protocol Provider'
NCRYPT_SSL_CLIENT_FLAG: UInt32 = 1
NCRYPT_SSL_SERVER_FLAG: UInt32 = 2
SSL2_PROTOCOL_VERSION: UInt32 = 2
SSL3_PROTOCOL_VERSION: UInt32 = 768
TLS1_PROTOCOL_VERSION: UInt32 = 769
TLS1_0_PROTOCOL_VERSION: UInt32 = 769
TLS1_1_PROTOCOL_VERSION: UInt32 = 770
TLS1_2_PROTOCOL_VERSION: UInt32 = 771
TLS1_3_PROTOCOL_VERSION: UInt32 = 772
DTLS1_0_PROTOCOL_VERSION: UInt32 = 65279
DTLS1_2_PROTOCOL_VERSION: UInt32 = 65277
TLS_RSA_WITH_NULL_MD5: UInt32 = 1
TLS_RSA_WITH_NULL_SHA: UInt32 = 2
TLS_RSA_EXPORT_WITH_RC4_40_MD5: UInt32 = 3
TLS_RSA_WITH_RC4_128_MD5: UInt32 = 4
TLS_RSA_WITH_RC4_128_SHA: UInt32 = 5
TLS_RSA_WITH_DES_CBC_SHA: UInt32 = 9
TLS_RSA_WITH_3DES_EDE_CBC_SHA: UInt32 = 10
TLS_DHE_DSS_WITH_DES_CBC_SHA: UInt32 = 18
TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA: UInt32 = 19
TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA: UInt32 = 22
TLS_RSA_WITH_AES_128_CBC_SHA: UInt32 = 47
TLS_DHE_DSS_WITH_AES_128_CBC_SHA: UInt32 = 50
TLS_DHE_RSA_WITH_AES_128_CBC_SHA: UInt32 = 51
TLS_RSA_WITH_AES_256_CBC_SHA: UInt32 = 53
TLS_DHE_DSS_WITH_AES_256_CBC_SHA: UInt32 = 56
TLS_DHE_RSA_WITH_AES_256_CBC_SHA: UInt32 = 57
TLS_RSA_EXPORT1024_WITH_DES_CBC_SHA: UInt32 = 98
TLS_DHE_DSS_EXPORT1024_WITH_DES_CBC_SHA: UInt32 = 99
TLS_RSA_EXPORT1024_WITH_RC4_56_SHA: UInt32 = 100
TLS_RSA_WITH_NULL_SHA256: UInt32 = 59
TLS_RSA_WITH_AES_128_CBC_SHA256: UInt32 = 60
TLS_RSA_WITH_AES_256_CBC_SHA256: UInt32 = 61
TLS_DHE_DSS_WITH_AES_128_CBC_SHA256: UInt32 = 64
TLS_DHE_DSS_WITH_AES_256_CBC_SHA256: UInt32 = 106
TLS_RSA_WITH_AES_128_GCM_SHA256: UInt32 = 156
TLS_RSA_WITH_AES_256_GCM_SHA384: UInt32 = 157
TLS_DHE_RSA_WITH_AES_128_GCM_SHA256: UInt32 = 158
TLS_DHE_RSA_WITH_AES_256_GCM_SHA384: UInt32 = 159
TLS_PSK_WITH_AES_128_GCM_SHA256: UInt32 = 168
TLS_PSK_WITH_AES_256_GCM_SHA384: UInt32 = 169
TLS_PSK_WITH_AES_128_CBC_SHA256: UInt32 = 174
TLS_PSK_WITH_AES_256_CBC_SHA384: UInt32 = 175
TLS_PSK_WITH_NULL_SHA256: UInt32 = 176
TLS_PSK_WITH_NULL_SHA384: UInt32 = 177
TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA: UInt32 = 49161
TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA: UInt32 = 49171
TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA: UInt32 = 49162
TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA: UInt32 = 49172
TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256: UInt32 = 49187
TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384: UInt32 = 49188
TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256: UInt32 = 49195
TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384: UInt32 = 49196
TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256: UInt32 = 49191
TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384: UInt32 = 49192
TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256: UInt32 = 49199
TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384: UInt32 = 49200
TLS_AES_128_GCM_SHA256: UInt32 = 4865
TLS_AES_256_GCM_SHA384: UInt32 = 4866
SSL_CK_RC4_128_WITH_MD5: UInt32 = 65664
SSL_CK_RC4_128_EXPORT40_WITH_MD5: UInt32 = 131200
SSL_CK_RC2_128_CBC_WITH_MD5: UInt32 = 196736
SSL_CK_RC2_128_CBC_EXPORT40_WITH_MD5: UInt32 = 262272
SSL_CK_IDEA_128_CBC_WITH_MD5: UInt32 = 327808
SSL_CK_DES_64_CBC_WITH_MD5: UInt32 = 393280
SSL_CK_DES_192_EDE3_CBC_WITH_MD5: UInt32 = 458944
TLS_ECC_P256_CURVE_KEY_TYPE: UInt32 = 23
TLS_ECC_P384_CURVE_KEY_TYPE: UInt32 = 24
TLS_ECC_P521_CURVE_KEY_TYPE: UInt32 = 25
SSL_ECDSA_ALGORITHM: String = 'ECDSA'
TLS_PSK_EXCHANGE: String = 'PSK'
TLS_RSA_PSK_EXCHANGE: String = 'RSA_PSK'
NCRYPT_SSL_MAX_NAME_SIZE: UInt32 = 64
NCRYPT_SSL_CIPHER_SUITE_EX_VERSION: UInt32 = 1
NCRYPT_SSL_CIPHER_LENGTHS_BLOCK_PADDING: UInt32 = 1
MSCRYPT_ECC_MAX_OID_LENGTH: UInt32 = 255
MSCRYPT_ECC_MAX_CURVE_NAME_LENGTH: UInt32 = 255
NCRYPT_SSL_EAP_PRF_FIELD: UInt32 = 255
NCRYPT_SSL_EAP_ID: UInt32 = 0
NCRYPT_SSL_EAP_TTLSV0_ID: UInt32 = 1
NCRYPT_SSL_EAP_TTLSV0_CHLNG_ID: UInt32 = 2
NCRYPT_SSL_EAP_FAST_ID: UInt32 = 3
SSL_KEY_TYPE_PROPERTY: String = 'KEYTYPE'
NCRYPT_SSL_SIGN_INCLUDE_HASHOID: UInt32 = 1
NCRYPT_SSL_SIGN_USE_PSS_PADDING: UInt32 = 2
NCRYPT_SSL_EXTERNAL_PSK_FLAG: UInt32 = 1
NCRYPT_SSL_RESUMPTION_PSK_FLAG: UInt32 = 2
CRYPT_PROVIDER_IOCTL__GET_SCHANNEL_INTERFACE: UInt32 = 4145180
CRYPT_PROVSTRUC_VERSION_V3: UInt32 = 3
CRYPT_MAX_PROVIDER_ID: UInt32 = 999
CRYPT_SIG_RESOURCE_VERSION: UInt32 = 256
CRYPT_EXTERNAL_SIGNATURE_LENGTH: UInt32 = 136
CRYPT_SIG_RESOURCE_NUMBER: UInt32 = 666
CRYPT_SIG_RESOURCE: String = '#666'
CRYPT_MAC_RESOURCE_NUMBER: UInt32 = 667
CRYPT_MAC_RESOURCE: String = '#667'
CUR_OFFLOAD_VERSION: UInt32 = 1
ROLE_PIN_ALWAYS: UInt32 = 3
ROLE_PUK: UInt32 = 4
CP_PIV_CARD_CAPABILITY_CONTAINER: String = 'PIV CCC'
CP_PIV_CARD_HOLDER_UNIQUE_IDENTIFIER: String = 'PIV CHUID'
CP_PIV_CARD_HOLDER_UNSIGNED_UNIQUE_IDENTIFIER: String = 'PIV UCHUID'
CP_PIV_FINGERPRINT: String = 'PIV Fingerprint'
CP_PIV_SECURITY_OBJECT: String = 'PIV Security Object'
CP_PIV_FACIAL_IMAGE: String = 'PIV Facial Image'
CP_PIV_PRINTED_INFORMATION: String = 'PIV Printed Information'
CP_PIV_GENERATE_KEY: String = 'PIV Generate Key'
CP_CARD_PIV: String = 'PIV Card'
CP_PIV_CERTIFICATE: String = 'PIV Certificate'
CP_PIV_PUBLIC_KEY: String = 'PIV Public Key'
CP_PIV_KEY_HISTORY_OBJECT: String = 'PIV Key History Object'
CLMD_PIV_CERT_DATA_CURRENT_VERSION: UInt32 = 0
CLMD_PIV_GENERATE_ASYMMETRIC_KEY_CURRENT_VERSION: UInt32 = 0
CLMD_PIV_PUBLIC_KEY_DATA_CURRENT_VERSION: UInt32 = 0
CLMD_FILE_TAG_PIV_AUTH_CERT: UInt32 = 6275333
CLMD_FILE_TAG_SIG_CERT: UInt32 = 6275338
CLMD_FILE_TAG_KEY_MGMT_CERT: UInt32 = 6275339
CLMD_FILE_TAG_CARD_AUTH_CERT: UInt32 = 6275329
CLMD_FILE_TAG_CHUID: UInt32 = 6275330
CLMD_FILE_TAG_CARD_CAPABILITY_CONTAINER: UInt32 = 6275335
CLMD_FILE_TAG_UNSIGNED_CHUID: UInt32 = 6275332
CLMD_FILE_TAG_FINGERPRINT: UInt32 = 6275331
CLMD_FILE_TAG_SECURITY_OBJECT: UInt32 = 6275334
CLMD_FILE_TAG_FACIAL_IMAGE: UInt32 = 6275336
CLMD_FILE_TAG_PRINTED_INFORMATION: UInt32 = 6275337
CLMD_FILE_TAG_KEY_HISTORY: UInt32 = 6275340
CLMD_FILE_TAG_FIRST_RETIRED_KEY_MGMT_KEY: UInt32 = 6275341
CLMD_FILE_TAG_LAST_RETIRED_KEY_MGMT_KEY: UInt32 = 6275360
SCARD_PROVIDER_CARD_MODULE: UInt32 = 2147483649
CARD_DATA_VALUE_UNKNOWN: UInt32 = 4294967295
szBASE_CSP_DIR: String = 'mscp'
szINTERMEDIATE_CERTS_DIR: String = 'mscerts'
szCACHE_FILE: String = 'cardcf'
szCARD_IDENTIFIER_FILE: String = 'cardid'
szCONTAINER_MAP_FILE: String = 'cmapfile'
szROOT_STORE_FILE: String = 'msroots'
szUSER_SIGNATURE_CERT_PREFIX: String = 'ksc'
szUSER_KEYEXCHANGE_CERT_PREFIX: String = 'kxc'
szUSER_SIGNATURE_PRIVATE_KEY_PREFIX: String = 'kss'
szUSER_SIGNATURE_PUBLIC_KEY_PREFIX: String = 'ksp'
szUSER_KEYEXCHANGE_PRIVATE_KEY_PREFIX: String = 'kxs'
szUSER_KEYEXCHANGE_PUBLIC_KEY_PREFIX: String = 'kxp'
wszCARD_USER_EVERYONE: String = 'anonymous'
wszCARD_USER_USER: String = 'user'
wszCARD_USER_ADMIN: String = 'admin'
AT_ECDSA_P256: UInt32 = 3
AT_ECDSA_P384: UInt32 = 4
AT_ECDSA_P521: UInt32 = 5
AT_ECDHE_P256: UInt32 = 6
AT_ECDHE_P384: UInt32 = 7
AT_ECDHE_P521: UInt32 = 8
CARD_CACHE_FILE_CURRENT_VERSION: UInt32 = 1
MAX_CONTAINER_NAME_LEN: UInt32 = 39
CONTAINER_MAP_VALID_CONTAINER: UInt32 = 1
CONTAINER_MAP_DEFAULT_CONTAINER: UInt32 = 2
CARD_CAPABILITIES_CURRENT_VERSION: UInt32 = 1
MAX_PINS: UInt32 = 8
ROLE_EVERYONE: UInt32 = 0
ROLE_USER: UInt32 = 1
ROLE_ADMIN: UInt32 = 2
PIN_SET_NONE: UInt32 = 0
PIN_SET_ALL_ROLES: UInt32 = 255
PIN_CHANGE_FLAG_UNBLOCK: UInt32 = 1
PIN_CHANGE_FLAG_CHANGEPIN: UInt32 = 2
CP_CACHE_MODE_GLOBAL_CACHE: UInt32 = 1
CP_CACHE_MODE_SESSION_ONLY: UInt32 = 2
CP_CACHE_MODE_NO_CACHE: UInt32 = 3
CARD_AUTHENTICATE_GENERATE_SESSION_PIN: UInt32 = 268435456
CARD_AUTHENTICATE_SESSION_PIN: UInt32 = 536870912
CARD_PIN_STRENGTH_PLAINTEXT: UInt32 = 1
CARD_PIN_STRENGTH_SESSION_PIN: UInt32 = 2
CARD_PIN_SILENT_CONTEXT: UInt32 = 64
PIN_CACHE_POLICY_CURRENT_VERSION: UInt32 = 6
PIN_INFO_CURRENT_VERSION: UInt32 = 6
PIN_INFO_REQUIRE_SECURE_ENTRY: UInt32 = 1
CARD_CREATE_CONTAINER_KEY_GEN: UInt32 = 1
CARD_CREATE_CONTAINER_KEY_IMPORT: UInt32 = 2
CONTAINER_INFO_CURRENT_VERSION: UInt32 = 1
CARD_AUTHENTICATE_PIN_CHALLENGE_RESPONSE: UInt32 = 1
CARD_AUTHENTICATE_PIN_PIN: UInt32 = 2
CARD_FILE_INFO_CURRENT_VERSION: UInt32 = 1
CARD_FREE_SPACE_INFO_CURRENT_VERSION: UInt32 = 1
CARD_KEY_SIZES_CURRENT_VERSION: UInt32 = 1
CARD_RSA_KEY_DECRYPT_INFO_VERSION_ONE: UInt32 = 1
CARD_RSA_KEY_DECRYPT_INFO_VERSION_TWO: UInt32 = 2
CARD_RSA_KEY_DECRYPT_INFO_CURRENT_VERSION: UInt32 = 2
CARD_PADDING_INFO_PRESENT: UInt32 = 1073741824
CARD_BUFFER_SIZE_ONLY: UInt32 = 536870912
CARD_PADDING_NONE: UInt32 = 1
CARD_PADDING_PKCS1: UInt32 = 2
CARD_PADDING_PSS: UInt32 = 4
CARD_PADDING_OAEP: UInt32 = 8
CARD_SIGNING_INFO_BASIC_VERSION: UInt32 = 1
CARD_SIGNING_INFO_CURRENT_VERSION: UInt32 = 2
CARD_DH_AGREEMENT_INFO_VERSION: UInt32 = 2
CARD_DERIVE_KEY_VERSION: UInt32 = 1
CARD_DERIVE_KEY_VERSION_TWO: UInt32 = 2
CARD_DERIVE_KEY_CURRENT_VERSION: UInt32 = 2
CARD_RETURN_KEY_HANDLE: UInt32 = 16777216
CCP_CONTAINER_INFO: String = 'Container Info'
CCP_PIN_IDENTIFIER: String = 'PIN Identifier'
CCP_ASSOCIATED_ECDH_KEY: String = 'Associated ECDH Key'
CP_CARD_FREE_SPACE: String = 'Free Space'
CP_CARD_CAPABILITIES: String = 'Capabilities'
CP_CARD_KEYSIZES: String = 'Key Sizes'
CP_CARD_READ_ONLY: String = 'Read Only Mode'
CP_CARD_CACHE_MODE: String = 'Cache Mode'
CP_SUPPORTS_WIN_X509_ENROLLMENT: String = 'Supports Windows x.509 Enrollment'
CP_CARD_GUID: String = 'Card Identifier'
CP_CARD_SERIAL_NO: String = 'Card Serial Number'
CP_CARD_PIN_INFO: String = 'PIN Information'
CP_CARD_LIST_PINS: String = 'PIN List'
CP_CARD_AUTHENTICATED_STATE: String = 'Authenticated State'
CP_CARD_PIN_STRENGTH_VERIFY: String = 'PIN Strength Verify'
CP_CARD_PIN_STRENGTH_CHANGE: String = 'PIN Strength Change'
CP_CARD_PIN_STRENGTH_UNBLOCK: String = 'PIN Strength Unblock'
CP_PARENT_WINDOW: String = 'Parent Window'
CP_PIN_CONTEXT_STRING: String = 'PIN Context String'
CARD_SECURE_KEY_INJECTION_NO_CARD_MODE: UInt32 = 1
CARD_KEY_IMPORT_PLAIN_TEXT: UInt32 = 1
CARD_KEY_IMPORT_RSA_KEYEST: UInt32 = 2
CARD_KEY_IMPORT_ECC_KEYEST: UInt32 = 4
CARD_KEY_IMPORT_SHARED_SYMMETRIC: UInt32 = 8
CARD_CIPHER_OPERATION: UInt32 = 1
CARD_ASYMMETRIC_OPERATION: UInt32 = 2
CARD_3DES_112_ALGORITHM: String = '3DES_112'
CARD_3DES_ALGORITHM: String = '3DES'
CARD_AES_ALGORITHM: String = 'AES'
CARD_CHAIN_MODE_CBC: String = 'ChainingModeCBC'
CARD_IMPORT_KEYPAIR_VERSION_SEVEN: UInt32 = 7
CARD_IMPORT_KEYPAIR_CURRENT_VERSION: UInt32 = 7
CARD_CHANGE_AUTHENTICATOR_VERSION_SEVEN: UInt32 = 7
CARD_CHANGE_AUTHENTICATOR_CURRENT_VERSION: UInt32 = 7
CARD_CHANGE_AUTHENTICATOR_RESPONSE_VERSION_SEVEN: UInt32 = 7
CARD_CHANGE_AUTHENTICATOR_RESPONSE_CURRENT_VERSION: UInt32 = 7
CARD_AUTHENTICATE_VERSION_SEVEN: UInt32 = 7
CARD_AUTHENTICATE_CURRENT_VERSION: UInt32 = 7
CARD_AUTHENTICATE_RESPONSE_VERSION_SEVEN: UInt32 = 7
CARD_AUTHENTICATE_RESPONSE_CURRENT_VERSION: UInt32 = 7
CP_KEY_IMPORT_SUPPORT: String = 'Key Import Support'
CP_ENUM_ALGORITHMS: String = 'Algorithms'
CP_PADDING_SCHEMES: String = 'Padding Schemes'
CP_CHAINING_MODES: String = 'Chaining Modes'
CSF_IMPORT_KEYPAIR: String = 'Import Key Pair'
CSF_CHANGE_AUTHENTICATOR: String = 'Change Authenticator'
CSF_AUTHENTICATE: String = 'Authenticate'
CKP_CHAINING_MODE: String = 'ChainingMode'
CKP_INITIALIZATION_VECTOR: String = 'IV'
CKP_BLOCK_LENGTH: String = 'BlockLength'
CARD_DATA_VERSION_SEVEN: UInt32 = 7
CARD_DATA_VERSION_SIX: UInt32 = 6
CARD_DATA_VERSION_FIVE: UInt32 = 5
CARD_DATA_VERSION_FOUR: UInt32 = 4
CARD_DATA_CURRENT_VERSION: UInt32 = 7
@winfunctype('BCryptPrimitives.dll')
def SystemPrng(pbRandomData: POINTER(Byte), cbRandomData: UIntPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('BCryptPrimitives.dll')
def ProcessPrng(pbData: POINTER(Byte), cbData: UIntPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptAcquireContextA(phProv: POINTER(UIntPtr), szContainer: win32more.Windows.Win32.Foundation.PSTR, szProvider: win32more.Windows.Win32.Foundation.PSTR, dwProvType: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptAcquireContextW(phProv: POINTER(UIntPtr), szContainer: win32more.Windows.Win32.Foundation.PWSTR, szProvider: win32more.Windows.Win32.Foundation.PWSTR, dwProvType: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
CryptAcquireContext = UnicodeAlias('CryptAcquireContextW')
@winfunctype('ADVAPI32.dll')
def CryptReleaseContext(hProv: UIntPtr, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptGenKey(hProv: UIntPtr, Algid: win32more.Windows.Win32.Security.Cryptography.ALG_ID, dwFlags: win32more.Windows.Win32.Security.Cryptography.CRYPT_KEY_FLAGS, phKey: POINTER(UIntPtr)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptDeriveKey(hProv: UIntPtr, Algid: win32more.Windows.Win32.Security.Cryptography.ALG_ID, hBaseData: UIntPtr, dwFlags: UInt32, phKey: POINTER(UIntPtr)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptDestroyKey(hKey: UIntPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptSetKeyParam(hKey: UIntPtr, dwParam: win32more.Windows.Win32.Security.Cryptography.CRYPT_KEY_PARAM_ID, pbData: POINTER(Byte), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptGetKeyParam(hKey: UIntPtr, dwParam: win32more.Windows.Win32.Security.Cryptography.CRYPT_KEY_PARAM_ID, pbData: POINTER(Byte), pdwDataLen: POINTER(UInt32), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptSetHashParam(hHash: UIntPtr, dwParam: win32more.Windows.Win32.Security.Cryptography.CRYPT_SET_HASH_PARAM, pbData: POINTER(Byte), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptGetHashParam(hHash: UIntPtr, dwParam: UInt32, pbData: POINTER(Byte), pdwDataLen: POINTER(UInt32), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptSetProvParam(hProv: UIntPtr, dwParam: win32more.Windows.Win32.Security.Cryptography.CRYPT_SET_PROV_PARAM_ID, pbData: POINTER(Byte), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptGetProvParam(hProv: UIntPtr, dwParam: UInt32, pbData: POINTER(Byte), pdwDataLen: POINTER(UInt32), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptGenRandom(hProv: UIntPtr, dwLen: UInt32, pbBuffer: POINTER(Byte)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptGetUserKey(hProv: UIntPtr, dwKeySpec: UInt32, phUserKey: POINTER(UIntPtr)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptExportKey(hKey: UIntPtr, hExpKey: UIntPtr, dwBlobType: UInt32, dwFlags: win32more.Windows.Win32.Security.Cryptography.CRYPT_KEY_FLAGS, pbData: POINTER(Byte), pdwDataLen: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptImportKey(hProv: UIntPtr, pbData: POINTER(Byte), dwDataLen: UInt32, hPubKey: UIntPtr, dwFlags: win32more.Windows.Win32.Security.Cryptography.CRYPT_KEY_FLAGS, phKey: POINTER(UIntPtr)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptEncrypt(hKey: UIntPtr, hHash: UIntPtr, Final: win32more.Windows.Win32.Foundation.BOOL, dwFlags: UInt32, pbData: POINTER(Byte), pdwDataLen: POINTER(UInt32), dwBufLen: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptDecrypt(hKey: UIntPtr, hHash: UIntPtr, Final: win32more.Windows.Win32.Foundation.BOOL, dwFlags: UInt32, pbData: POINTER(Byte), pdwDataLen: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptCreateHash(hProv: UIntPtr, Algid: win32more.Windows.Win32.Security.Cryptography.ALG_ID, hKey: UIntPtr, dwFlags: UInt32, phHash: POINTER(UIntPtr)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptHashData(hHash: UIntPtr, pbData: POINTER(Byte), dwDataLen: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptHashSessionKey(hHash: UIntPtr, hKey: UIntPtr, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptDestroyHash(hHash: UIntPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptSignHashA(hHash: UIntPtr, dwKeySpec: UInt32, szDescription: win32more.Windows.Win32.Foundation.PSTR, dwFlags: UInt32, pbSignature: POINTER(Byte), pdwSigLen: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptSignHashW(hHash: UIntPtr, dwKeySpec: UInt32, szDescription: win32more.Windows.Win32.Foundation.PWSTR, dwFlags: UInt32, pbSignature: POINTER(Byte), pdwSigLen: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
CryptSignHash = UnicodeAlias('CryptSignHashW')
@winfunctype('ADVAPI32.dll')
def CryptVerifySignatureA(hHash: UIntPtr, pbSignature: POINTER(Byte), dwSigLen: UInt32, hPubKey: UIntPtr, szDescription: win32more.Windows.Win32.Foundation.PSTR, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptVerifySignatureW(hHash: UIntPtr, pbSignature: POINTER(Byte), dwSigLen: UInt32, hPubKey: UIntPtr, szDescription: win32more.Windows.Win32.Foundation.PWSTR, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
CryptVerifySignature = UnicodeAlias('CryptVerifySignatureW')
@winfunctype('ADVAPI32.dll')
def CryptSetProviderA(pszProvName: win32more.Windows.Win32.Foundation.PSTR, dwProvType: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptSetProviderW(pszProvName: win32more.Windows.Win32.Foundation.PWSTR, dwProvType: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
CryptSetProvider = UnicodeAlias('CryptSetProviderW')
@winfunctype('ADVAPI32.dll')
def CryptSetProviderExA(pszProvName: win32more.Windows.Win32.Foundation.PSTR, dwProvType: UInt32, pdwReserved: POINTER(UInt32), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptSetProviderExW(pszProvName: win32more.Windows.Win32.Foundation.PWSTR, dwProvType: UInt32, pdwReserved: POINTER(UInt32), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
CryptSetProviderEx = UnicodeAlias('CryptSetProviderExW')
@winfunctype('ADVAPI32.dll')
def CryptGetDefaultProviderA(dwProvType: UInt32, pdwReserved: POINTER(UInt32), dwFlags: UInt32, pszProvName: win32more.Windows.Win32.Foundation.PSTR, pcbProvName: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptGetDefaultProviderW(dwProvType: UInt32, pdwReserved: POINTER(UInt32), dwFlags: UInt32, pszProvName: win32more.Windows.Win32.Foundation.PWSTR, pcbProvName: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
CryptGetDefaultProvider = UnicodeAlias('CryptGetDefaultProviderW')
@winfunctype('ADVAPI32.dll')
def CryptEnumProviderTypesA(dwIndex: UInt32, pdwReserved: POINTER(UInt32), dwFlags: UInt32, pdwProvType: POINTER(UInt32), szTypeName: win32more.Windows.Win32.Foundation.PSTR, pcbTypeName: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptEnumProviderTypesW(dwIndex: UInt32, pdwReserved: POINTER(UInt32), dwFlags: UInt32, pdwProvType: POINTER(UInt32), szTypeName: win32more.Windows.Win32.Foundation.PWSTR, pcbTypeName: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
CryptEnumProviderTypes = UnicodeAlias('CryptEnumProviderTypesW')
@winfunctype('ADVAPI32.dll')
def CryptEnumProvidersA(dwIndex: UInt32, pdwReserved: POINTER(UInt32), dwFlags: UInt32, pdwProvType: POINTER(UInt32), szProvName: win32more.Windows.Win32.Foundation.PSTR, pcbProvName: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptEnumProvidersW(dwIndex: UInt32, pdwReserved: POINTER(UInt32), dwFlags: UInt32, pdwProvType: POINTER(UInt32), szProvName: win32more.Windows.Win32.Foundation.PWSTR, pcbProvName: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
CryptEnumProviders = UnicodeAlias('CryptEnumProvidersW')
@winfunctype('ADVAPI32.dll')
def CryptContextAddRef(hProv: UIntPtr, pdwReserved: POINTER(UInt32), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptDuplicateKey(hKey: UIntPtr, pdwReserved: POINTER(UInt32), dwFlags: UInt32, phKey: POINTER(UIntPtr)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptDuplicateHash(hHash: UIntPtr, pdwReserved: POINTER(UInt32), dwFlags: UInt32, phHash: POINTER(UIntPtr)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('bcrypt.dll')
def BCryptOpenAlgorithmProvider(phAlgorithm: POINTER(win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE), pszAlgId: win32more.Windows.Win32.Foundation.PWSTR, pszImplementation: win32more.Windows.Win32.Foundation.PWSTR, dwFlags: win32more.Windows.Win32.Security.Cryptography.BCRYPT_OPEN_ALGORITHM_PROVIDER_FLAGS) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptEnumAlgorithms(dwAlgOperations: win32more.Windows.Win32.Security.Cryptography.BCRYPT_OPERATION, pAlgCount: POINTER(UInt32), ppAlgList: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALGORITHM_IDENTIFIER)), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptEnumProviders(pszAlgId: win32more.Windows.Win32.Foundation.PWSTR, pImplCount: POINTER(UInt32), ppImplList: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.BCRYPT_PROVIDER_NAME)), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptGetProperty(hObject: win32more.Windows.Win32.Security.Cryptography.BCRYPT_HANDLE, pszProperty: win32more.Windows.Win32.Foundation.PWSTR, pbOutput: POINTER(Byte), cbOutput: UInt32, pcbResult: POINTER(UInt32), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptSetProperty(hObject: win32more.Windows.Win32.Security.Cryptography.BCRYPT_HANDLE, pszProperty: win32more.Windows.Win32.Foundation.PWSTR, pbInput: POINTER(Byte), cbInput: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptCloseAlgorithmProvider(hAlgorithm: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptFreeBuffer(pvBuffer: VoidPtr) -> Void: ...
@winfunctype('bcrypt.dll')
def BCryptGenerateSymmetricKey(hAlgorithm: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE, phKey: POINTER(win32more.Windows.Win32.Security.Cryptography.BCRYPT_KEY_HANDLE), pbKeyObject: POINTER(Byte), cbKeyObject: UInt32, pbSecret: POINTER(Byte), cbSecret: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptGenerateKeyPair(hAlgorithm: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE, phKey: POINTER(win32more.Windows.Win32.Security.Cryptography.BCRYPT_KEY_HANDLE), dwLength: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptEncrypt(hKey: win32more.Windows.Win32.Security.Cryptography.BCRYPT_KEY_HANDLE, pbInput: POINTER(Byte), cbInput: UInt32, pPaddingInfo: VoidPtr, pbIV: POINTER(Byte), cbIV: UInt32, pbOutput: POINTER(Byte), cbOutput: UInt32, pcbResult: POINTER(UInt32), dwFlags: win32more.Windows.Win32.Security.Cryptography.BCRYPT_FLAGS) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptDecrypt(hKey: win32more.Windows.Win32.Security.Cryptography.BCRYPT_KEY_HANDLE, pbInput: POINTER(Byte), cbInput: UInt32, pPaddingInfo: VoidPtr, pbIV: POINTER(Byte), cbIV: UInt32, pbOutput: POINTER(Byte), cbOutput: UInt32, pcbResult: POINTER(UInt32), dwFlags: win32more.Windows.Win32.Security.Cryptography.BCRYPT_FLAGS) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptExportKey(hKey: win32more.Windows.Win32.Security.Cryptography.BCRYPT_KEY_HANDLE, hExportKey: win32more.Windows.Win32.Security.Cryptography.BCRYPT_KEY_HANDLE, pszBlobType: win32more.Windows.Win32.Foundation.PWSTR, pbOutput: POINTER(Byte), cbOutput: UInt32, pcbResult: POINTER(UInt32), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptImportKey(hAlgorithm: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE, hImportKey: win32more.Windows.Win32.Security.Cryptography.BCRYPT_KEY_HANDLE, pszBlobType: win32more.Windows.Win32.Foundation.PWSTR, phKey: POINTER(win32more.Windows.Win32.Security.Cryptography.BCRYPT_KEY_HANDLE), pbKeyObject: POINTER(Byte), cbKeyObject: UInt32, pbInput: POINTER(Byte), cbInput: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptImportKeyPair(hAlgorithm: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE, hImportKey: win32more.Windows.Win32.Security.Cryptography.BCRYPT_KEY_HANDLE, pszBlobType: win32more.Windows.Win32.Foundation.PWSTR, phKey: POINTER(win32more.Windows.Win32.Security.Cryptography.BCRYPT_KEY_HANDLE), pbInput: POINTER(Byte), cbInput: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptDuplicateKey(hKey: win32more.Windows.Win32.Security.Cryptography.BCRYPT_KEY_HANDLE, phNewKey: POINTER(win32more.Windows.Win32.Security.Cryptography.BCRYPT_KEY_HANDLE), pbKeyObject: POINTER(Byte), cbKeyObject: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptFinalizeKeyPair(hKey: win32more.Windows.Win32.Security.Cryptography.BCRYPT_KEY_HANDLE, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptDestroyKey(hKey: win32more.Windows.Win32.Security.Cryptography.BCRYPT_KEY_HANDLE) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptDestroySecret(hSecret: win32more.Windows.Win32.Security.Cryptography.BCRYPT_SECRET_HANDLE) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptSignHash(hKey: win32more.Windows.Win32.Security.Cryptography.BCRYPT_KEY_HANDLE, pPaddingInfo: VoidPtr, pbInput: POINTER(Byte), cbInput: UInt32, pbOutput: POINTER(Byte), cbOutput: UInt32, pcbResult: POINTER(UInt32), dwFlags: win32more.Windows.Win32.Security.Cryptography.BCRYPT_FLAGS) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptVerifySignature(hKey: win32more.Windows.Win32.Security.Cryptography.BCRYPT_KEY_HANDLE, pPaddingInfo: VoidPtr, pbHash: POINTER(Byte), cbHash: UInt32, pbSignature: POINTER(Byte), cbSignature: UInt32, dwFlags: win32more.Windows.Win32.Security.Cryptography.BCRYPT_FLAGS) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptSecretAgreement(hPrivKey: win32more.Windows.Win32.Security.Cryptography.BCRYPT_KEY_HANDLE, hPubKey: win32more.Windows.Win32.Security.Cryptography.BCRYPT_KEY_HANDLE, phAgreedSecret: POINTER(win32more.Windows.Win32.Security.Cryptography.BCRYPT_SECRET_HANDLE), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptDeriveKey(hSharedSecret: win32more.Windows.Win32.Security.Cryptography.BCRYPT_SECRET_HANDLE, pwszKDF: win32more.Windows.Win32.Foundation.PWSTR, pParameterList: POINTER(win32more.Windows.Win32.Security.Cryptography.BCryptBufferDesc), pbDerivedKey: POINTER(Byte), cbDerivedKey: UInt32, pcbResult: POINTER(UInt32), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptKeyDerivation(hKey: win32more.Windows.Win32.Security.Cryptography.BCRYPT_KEY_HANDLE, pParameterList: POINTER(win32more.Windows.Win32.Security.Cryptography.BCryptBufferDesc), pbDerivedKey: POINTER(Byte), cbDerivedKey: UInt32, pcbResult: POINTER(UInt32), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptCreateHash(hAlgorithm: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE, phHash: POINTER(win32more.Windows.Win32.Security.Cryptography.BCRYPT_HASH_HANDLE), pbHashObject: POINTER(Byte), cbHashObject: UInt32, pbSecret: POINTER(Byte), cbSecret: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptHashData(hHash: win32more.Windows.Win32.Security.Cryptography.BCRYPT_HASH_HANDLE, pbInput: POINTER(Byte), cbInput: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptFinishHash(hHash: win32more.Windows.Win32.Security.Cryptography.BCRYPT_HASH_HANDLE, pbOutput: POINTER(Byte), cbOutput: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptCreateMultiHash(hAlgorithm: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE, phHash: POINTER(win32more.Windows.Win32.Security.Cryptography.BCRYPT_HASH_HANDLE), nHashes: UInt32, pbHashObject: POINTER(Byte), cbHashObject: UInt32, pbSecret: POINTER(Byte), cbSecret: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptProcessMultiOperations(hObject: win32more.Windows.Win32.Security.Cryptography.BCRYPT_HANDLE, operationType: win32more.Windows.Win32.Security.Cryptography.BCRYPT_MULTI_OPERATION_TYPE, pOperations: VoidPtr, cbOperations: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptDuplicateHash(hHash: win32more.Windows.Win32.Security.Cryptography.BCRYPT_HASH_HANDLE, phNewHash: POINTER(win32more.Windows.Win32.Security.Cryptography.BCRYPT_HASH_HANDLE), pbHashObject: POINTER(Byte), cbHashObject: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptDestroyHash(hHash: win32more.Windows.Win32.Security.Cryptography.BCRYPT_HASH_HANDLE) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptHash(hAlgorithm: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE, pbSecret: POINTER(Byte), cbSecret: UInt32, pbInput: POINTER(Byte), cbInput: UInt32, pbOutput: POINTER(Byte), cbOutput: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptGenRandom(hAlgorithm: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE, pbBuffer: POINTER(Byte), cbBuffer: UInt32, dwFlags: win32more.Windows.Win32.Security.Cryptography.BCRYPTGENRANDOM_FLAGS) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptDeriveKeyCapi(hHash: win32more.Windows.Win32.Security.Cryptography.BCRYPT_HASH_HANDLE, hTargetAlg: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE, pbDerivedKey: POINTER(Byte), cbDerivedKey: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptDeriveKeyPBKDF2(hPrf: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE, pbPassword: POINTER(Byte), cbPassword: UInt32, pbSalt: POINTER(Byte), cbSalt: UInt32, cIterations: UInt64, pbDerivedKey: POINTER(Byte), cbDerivedKey: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptQueryProviderRegistration(pszProvider: win32more.Windows.Win32.Foundation.PWSTR, dwMode: win32more.Windows.Win32.Security.Cryptography.BCRYPT_QUERY_PROVIDER_MODE, dwInterface: win32more.Windows.Win32.Security.Cryptography.BCRYPT_INTERFACE, pcbBuffer: POINTER(UInt32), ppBuffer: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_PROVIDER_REG))) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptEnumRegisteredProviders(pcbBuffer: POINTER(UInt32), ppBuffer: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_PROVIDERS))) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptCreateContext(dwTable: win32more.Windows.Win32.Security.Cryptography.BCRYPT_TABLE, pszContext: win32more.Windows.Win32.Foundation.PWSTR, pConfig: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_CONTEXT_CONFIG)) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptDeleteContext(dwTable: win32more.Windows.Win32.Security.Cryptography.BCRYPT_TABLE, pszContext: win32more.Windows.Win32.Foundation.PWSTR) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptEnumContexts(dwTable: win32more.Windows.Win32.Security.Cryptography.BCRYPT_TABLE, pcbBuffer: POINTER(UInt32), ppBuffer: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_CONTEXTS))) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptConfigureContext(dwTable: win32more.Windows.Win32.Security.Cryptography.BCRYPT_TABLE, pszContext: win32more.Windows.Win32.Foundation.PWSTR, pConfig: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_CONTEXT_CONFIG)) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptQueryContextConfiguration(dwTable: win32more.Windows.Win32.Security.Cryptography.BCRYPT_TABLE, pszContext: win32more.Windows.Win32.Foundation.PWSTR, pcbBuffer: POINTER(UInt32), ppBuffer: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_CONTEXT_CONFIG))) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptAddContextFunction(dwTable: win32more.Windows.Win32.Security.Cryptography.BCRYPT_TABLE, pszContext: win32more.Windows.Win32.Foundation.PWSTR, dwInterface: win32more.Windows.Win32.Security.Cryptography.BCRYPT_INTERFACE, pszFunction: win32more.Windows.Win32.Foundation.PWSTR, dwPosition: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptRemoveContextFunction(dwTable: win32more.Windows.Win32.Security.Cryptography.BCRYPT_TABLE, pszContext: win32more.Windows.Win32.Foundation.PWSTR, dwInterface: win32more.Windows.Win32.Security.Cryptography.BCRYPT_INTERFACE, pszFunction: win32more.Windows.Win32.Foundation.PWSTR) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptEnumContextFunctions(dwTable: win32more.Windows.Win32.Security.Cryptography.BCRYPT_TABLE, pszContext: win32more.Windows.Win32.Foundation.PWSTR, dwInterface: win32more.Windows.Win32.Security.Cryptography.BCRYPT_INTERFACE, pcbBuffer: POINTER(UInt32), ppBuffer: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_CONTEXT_FUNCTIONS))) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptConfigureContextFunction(dwTable: win32more.Windows.Win32.Security.Cryptography.BCRYPT_TABLE, pszContext: win32more.Windows.Win32.Foundation.PWSTR, dwInterface: win32more.Windows.Win32.Security.Cryptography.BCRYPT_INTERFACE, pszFunction: win32more.Windows.Win32.Foundation.PWSTR, pConfig: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_CONTEXT_FUNCTION_CONFIG)) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptQueryContextFunctionConfiguration(dwTable: win32more.Windows.Win32.Security.Cryptography.BCRYPT_TABLE, pszContext: win32more.Windows.Win32.Foundation.PWSTR, dwInterface: win32more.Windows.Win32.Security.Cryptography.BCRYPT_INTERFACE, pszFunction: win32more.Windows.Win32.Foundation.PWSTR, pcbBuffer: POINTER(UInt32), ppBuffer: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_CONTEXT_FUNCTION_CONFIG))) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptEnumContextFunctionProviders(dwTable: win32more.Windows.Win32.Security.Cryptography.BCRYPT_TABLE, pszContext: win32more.Windows.Win32.Foundation.PWSTR, dwInterface: win32more.Windows.Win32.Security.Cryptography.BCRYPT_INTERFACE, pszFunction: win32more.Windows.Win32.Foundation.PWSTR, pcbBuffer: POINTER(UInt32), ppBuffer: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_CONTEXT_FUNCTION_PROVIDERS))) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptSetContextFunctionProperty(dwTable: win32more.Windows.Win32.Security.Cryptography.BCRYPT_TABLE, pszContext: win32more.Windows.Win32.Foundation.PWSTR, dwInterface: win32more.Windows.Win32.Security.Cryptography.BCRYPT_INTERFACE, pszFunction: win32more.Windows.Win32.Foundation.PWSTR, pszProperty: win32more.Windows.Win32.Foundation.PWSTR, cbValue: UInt32, pbValue: POINTER(Byte)) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptQueryContextFunctionProperty(dwTable: win32more.Windows.Win32.Security.Cryptography.BCRYPT_TABLE, pszContext: win32more.Windows.Win32.Foundation.PWSTR, dwInterface: win32more.Windows.Win32.Security.Cryptography.BCRYPT_INTERFACE, pszFunction: win32more.Windows.Win32.Foundation.PWSTR, pszProperty: win32more.Windows.Win32.Foundation.PWSTR, pcbValue: POINTER(UInt32), ppbValue: POINTER(POINTER(Byte))) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptRegisterConfigChangeNotify(phEvent: POINTER(win32more.Windows.Win32.Foundation.HANDLE)) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptUnregisterConfigChangeNotify(hEvent: win32more.Windows.Win32.Foundation.HANDLE) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptResolveProviders(pszContext: win32more.Windows.Win32.Foundation.PWSTR, dwInterface: UInt32, pszFunction: win32more.Windows.Win32.Foundation.PWSTR, pszProvider: win32more.Windows.Win32.Foundation.PWSTR, dwMode: win32more.Windows.Win32.Security.Cryptography.BCRYPT_QUERY_PROVIDER_MODE, dwFlags: win32more.Windows.Win32.Security.Cryptography.BCRYPT_RESOLVE_PROVIDERS_FLAGS, pcbBuffer: POINTER(UInt32), ppBuffer: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_PROVIDER_REFS))) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptGetFipsAlgorithmMode(pfEnabled: POINTER(Byte)) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('ncrypt.dll')
def NCryptOpenStorageProvider(phProvider: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE), pszProviderName: win32more.Windows.Win32.Foundation.PWSTR, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptEnumAlgorithms(hProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, dwAlgOperations: win32more.Windows.Win32.Security.Cryptography.NCRYPT_OPERATION, pdwAlgCount: POINTER(UInt32), ppAlgList: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.NCryptAlgorithmName)), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptIsAlgSupported(hProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, pszAlgId: win32more.Windows.Win32.Foundation.PWSTR, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptEnumKeys(hProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, pszScope: win32more.Windows.Win32.Foundation.PWSTR, ppKeyName: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.NCryptKeyName)), ppEnumState: POINTER(VoidPtr), dwFlags: win32more.Windows.Win32.Security.Cryptography.NCRYPT_FLAGS) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptEnumStorageProviders(pdwProviderCount: POINTER(UInt32), ppProviderList: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.NCryptProviderName)), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptFreeBuffer(pvInput: VoidPtr) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptOpenKey(hProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, phKey: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE), pszKeyName: win32more.Windows.Win32.Foundation.PWSTR, dwLegacyKeySpec: win32more.Windows.Win32.Security.Cryptography.CERT_KEY_SPEC, dwFlags: win32more.Windows.Win32.Security.Cryptography.NCRYPT_FLAGS) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptCreatePersistedKey(hProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, phKey: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE), pszAlgId: win32more.Windows.Win32.Foundation.PWSTR, pszKeyName: win32more.Windows.Win32.Foundation.PWSTR, dwLegacyKeySpec: win32more.Windows.Win32.Security.Cryptography.CERT_KEY_SPEC, dwFlags: win32more.Windows.Win32.Security.Cryptography.NCRYPT_FLAGS) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptGetProperty(hObject: win32more.Windows.Win32.Security.Cryptography.NCRYPT_HANDLE, pszProperty: win32more.Windows.Win32.Foundation.PWSTR, pbOutput: POINTER(Byte), cbOutput: UInt32, pcbResult: POINTER(UInt32), dwFlags: win32more.Windows.Win32.Security.OBJECT_SECURITY_INFORMATION) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptSetProperty(hObject: win32more.Windows.Win32.Security.Cryptography.NCRYPT_HANDLE, pszProperty: win32more.Windows.Win32.Foundation.PWSTR, pbInput: POINTER(Byte), cbInput: UInt32, dwFlags: win32more.Windows.Win32.Security.Cryptography.NCRYPT_FLAGS) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptFinalizeKey(hKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, dwFlags: win32more.Windows.Win32.Security.Cryptography.NCRYPT_FLAGS) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptEncrypt(hKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, pbInput: POINTER(Byte), cbInput: UInt32, pPaddingInfo: VoidPtr, pbOutput: POINTER(Byte), cbOutput: UInt32, pcbResult: POINTER(UInt32), dwFlags: win32more.Windows.Win32.Security.Cryptography.NCRYPT_FLAGS) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptDecrypt(hKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, pbInput: POINTER(Byte), cbInput: UInt32, pPaddingInfo: VoidPtr, pbOutput: POINTER(Byte), cbOutput: UInt32, pcbResult: POINTER(UInt32), dwFlags: win32more.Windows.Win32.Security.Cryptography.NCRYPT_FLAGS) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptImportKey(hProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hImportKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, pszBlobType: win32more.Windows.Win32.Foundation.PWSTR, pParameterList: POINTER(win32more.Windows.Win32.Security.Cryptography.BCryptBufferDesc), phKey: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE), pbData: POINTER(Byte), cbData: UInt32, dwFlags: win32more.Windows.Win32.Security.Cryptography.NCRYPT_FLAGS) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptExportKey(hKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, hExportKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, pszBlobType: win32more.Windows.Win32.Foundation.PWSTR, pParameterList: POINTER(win32more.Windows.Win32.Security.Cryptography.BCryptBufferDesc), pbOutput: POINTER(Byte), cbOutput: UInt32, pcbResult: POINTER(UInt32), dwFlags: win32more.Windows.Win32.Security.Cryptography.NCRYPT_FLAGS) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptSignHash(hKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, pPaddingInfo: VoidPtr, pbHashValue: POINTER(Byte), cbHashValue: UInt32, pbSignature: POINTER(Byte), cbSignature: UInt32, pcbResult: POINTER(UInt32), dwFlags: win32more.Windows.Win32.Security.Cryptography.NCRYPT_FLAGS) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptVerifySignature(hKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, pPaddingInfo: VoidPtr, pbHashValue: POINTER(Byte), cbHashValue: UInt32, pbSignature: POINTER(Byte), cbSignature: UInt32, dwFlags: win32more.Windows.Win32.Security.Cryptography.NCRYPT_FLAGS) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptDeleteKey(hKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptFreeObject(hObject: win32more.Windows.Win32.Security.Cryptography.NCRYPT_HANDLE) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptIsKeyHandle(hKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('ncrypt.dll')
def NCryptTranslateHandle(phProvider: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE), phKey: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE), hLegacyProv: UIntPtr, hLegacyKey: UIntPtr, dwLegacyKeySpec: win32more.Windows.Win32.Security.Cryptography.CERT_KEY_SPEC, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptNotifyChangeKey(hProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, phEvent: POINTER(win32more.Windows.Win32.Foundation.HANDLE), dwFlags: win32more.Windows.Win32.Security.Cryptography.NCRYPT_FLAGS) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptSecretAgreement(hPrivKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, hPubKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, phAgreedSecret: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_SECRET_HANDLE), dwFlags: win32more.Windows.Win32.Security.Cryptography.NCRYPT_FLAGS) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptDeriveKey(hSharedSecret: win32more.Windows.Win32.Security.Cryptography.NCRYPT_SECRET_HANDLE, pwszKDF: win32more.Windows.Win32.Foundation.PWSTR, pParameterList: POINTER(win32more.Windows.Win32.Security.Cryptography.BCryptBufferDesc), pbDerivedKey: POINTER(Byte), cbDerivedKey: UInt32, pcbResult: POINTER(UInt32), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptKeyDerivation(hKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, pParameterList: POINTER(win32more.Windows.Win32.Security.Cryptography.BCryptBufferDesc), pbDerivedKey: POINTER(Byte), cbDerivedKey: UInt32, pcbResult: POINTER(UInt32), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptCreateClaim(hSubjectKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, hAuthorityKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, dwClaimType: UInt32, pParameterList: POINTER(win32more.Windows.Win32.Security.Cryptography.BCryptBufferDesc), pbClaimBlob: POINTER(Byte), cbClaimBlob: UInt32, pcbResult: POINTER(UInt32), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptVerifyClaim(hSubjectKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, hAuthorityKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, dwClaimType: UInt32, pParameterList: POINTER(win32more.Windows.Win32.Security.Cryptography.BCryptBufferDesc), pbClaimBlob: POINTER(Byte), cbClaimBlob: UInt32, pOutput: POINTER(win32more.Windows.Win32.Security.Cryptography.BCryptBufferDesc), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('CRYPT32.dll')
def CryptFormatObject(dwCertEncodingType: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, dwFormatType: UInt32, dwFormatStrType: UInt32, pFormatStruct: VoidPtr, lpszStructType: win32more.Windows.Win32.Foundation.PSTR, pbEncoded: POINTER(Byte), cbEncoded: UInt32, pbFormat: VoidPtr, pcbFormat: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptEncodeObjectEx(dwCertEncodingType: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, lpszStructType: win32more.Windows.Win32.Foundation.PSTR, pvStructInfo: VoidPtr, dwFlags: win32more.Windows.Win32.Security.Cryptography.CRYPT_ENCODE_OBJECT_FLAGS, pEncodePara: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_ENCODE_PARA), pvEncoded: VoidPtr, pcbEncoded: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptEncodeObject(dwCertEncodingType: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, lpszStructType: win32more.Windows.Win32.Foundation.PSTR, pvStructInfo: VoidPtr, pbEncoded: POINTER(Byte), pcbEncoded: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptDecodeObjectEx(dwCertEncodingType: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, lpszStructType: win32more.Windows.Win32.Foundation.PSTR, pbEncoded: POINTER(Byte), cbEncoded: UInt32, dwFlags: UInt32, pDecodePara: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_DECODE_PARA), pvStructInfo: VoidPtr, pcbStructInfo: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptDecodeObject(dwCertEncodingType: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, lpszStructType: win32more.Windows.Win32.Foundation.PSTR, pbEncoded: POINTER(Byte), cbEncoded: UInt32, dwFlags: UInt32, pvStructInfo: VoidPtr, pcbStructInfo: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptInstallOIDFunctionAddress(hModule: win32more.Windows.Win32.Foundation.HMODULE, dwEncodingType: UInt32, pszFuncName: win32more.Windows.Win32.Foundation.PSTR, cFuncEntry: UInt32, rgFuncEntry: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_OID_FUNC_ENTRY), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptInitOIDFunctionSet(pszFuncName: win32more.Windows.Win32.Foundation.PSTR, dwFlags: UInt32) -> VoidPtr: ...
@winfunctype('CRYPT32.dll')
def CryptGetOIDFunctionAddress(hFuncSet: VoidPtr, dwEncodingType: UInt32, pszOID: win32more.Windows.Win32.Foundation.PSTR, dwFlags: UInt32, ppvFuncAddr: POINTER(VoidPtr), phFuncAddr: POINTER(VoidPtr)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptGetDefaultOIDDllList(hFuncSet: VoidPtr, dwEncodingType: UInt32, pwszDllList: win32more.Windows.Win32.Foundation.PWSTR, pcchDllList: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptGetDefaultOIDFunctionAddress(hFuncSet: VoidPtr, dwEncodingType: UInt32, pwszDll: win32more.Windows.Win32.Foundation.PWSTR, dwFlags: UInt32, ppvFuncAddr: POINTER(VoidPtr), phFuncAddr: POINTER(VoidPtr)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptFreeOIDFunctionAddress(hFuncAddr: VoidPtr, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptRegisterOIDFunction(dwEncodingType: UInt32, pszFuncName: win32more.Windows.Win32.Foundation.PSTR, pszOID: win32more.Windows.Win32.Foundation.PSTR, pwszDll: win32more.Windows.Win32.Foundation.PWSTR, pszOverrideFuncName: win32more.Windows.Win32.Foundation.PSTR) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptUnregisterOIDFunction(dwEncodingType: UInt32, pszFuncName: win32more.Windows.Win32.Foundation.PSTR, pszOID: win32more.Windows.Win32.Foundation.PSTR) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptRegisterDefaultOIDFunction(dwEncodingType: UInt32, pszFuncName: win32more.Windows.Win32.Foundation.PSTR, dwIndex: UInt32, pwszDll: win32more.Windows.Win32.Foundation.PWSTR) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptUnregisterDefaultOIDFunction(dwEncodingType: UInt32, pszFuncName: win32more.Windows.Win32.Foundation.PSTR, pwszDll: win32more.Windows.Win32.Foundation.PWSTR) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptSetOIDFunctionValue(dwEncodingType: UInt32, pszFuncName: win32more.Windows.Win32.Foundation.PSTR, pszOID: win32more.Windows.Win32.Foundation.PSTR, pwszValueName: win32more.Windows.Win32.Foundation.PWSTR, dwValueType: win32more.Windows.Win32.System.Registry.REG_VALUE_TYPE, pbValueData: POINTER(Byte), cbValueData: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptGetOIDFunctionValue(dwEncodingType: UInt32, pszFuncName: win32more.Windows.Win32.Foundation.PSTR, pszOID: win32more.Windows.Win32.Foundation.PSTR, pwszValueName: win32more.Windows.Win32.Foundation.PWSTR, pdwValueType: POINTER(UInt32), pbValueData: POINTER(Byte), pcbValueData: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptEnumOIDFunction(dwEncodingType: UInt32, pszFuncName: win32more.Windows.Win32.Foundation.PSTR, pszOID: win32more.Windows.Win32.Foundation.PSTR, dwFlags: UInt32, pvArg: VoidPtr, pfnEnumOIDFunc: win32more.Windows.Win32.Security.Cryptography.PFN_CRYPT_ENUM_OID_FUNC) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptFindOIDInfo(dwKeyType: UInt32, pvKey: VoidPtr, dwGroupId: UInt32) -> POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_OID_INFO): ...
@winfunctype('CRYPT32.dll')
def CryptRegisterOIDInfo(pInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_OID_INFO), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptUnregisterOIDInfo(pInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_OID_INFO)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptEnumOIDInfo(dwGroupId: UInt32, dwFlags: UInt32, pvArg: VoidPtr, pfnEnumOIDInfo: win32more.Windows.Win32.Security.Cryptography.PFN_CRYPT_ENUM_OID_INFO) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptFindLocalizedName(pwszCryptName: win32more.Windows.Win32.Foundation.PWSTR) -> win32more.Windows.Win32.Foundation.PWSTR: ...
@winfunctype('CRYPT32.dll')
def CryptMsgOpenToEncode(dwMsgEncodingType: UInt32, dwFlags: UInt32, dwMsgType: win32more.Windows.Win32.Security.Cryptography.CRYPT_MSG_TYPE, pvMsgEncodeInfo: VoidPtr, pszInnerContentObjID: win32more.Windows.Win32.Foundation.PSTR, pStreamInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CMSG_STREAM_INFO)) -> VoidPtr: ...
@winfunctype('CRYPT32.dll')
def CryptMsgCalculateEncodedLength(dwMsgEncodingType: UInt32, dwFlags: UInt32, dwMsgType: UInt32, pvMsgEncodeInfo: VoidPtr, pszInnerContentObjID: win32more.Windows.Win32.Foundation.PSTR, cbData: UInt32) -> UInt32: ...
@winfunctype('CRYPT32.dll')
def CryptMsgOpenToDecode(dwMsgEncodingType: UInt32, dwFlags: UInt32, dwMsgType: UInt32, hCryptProv: win32more.Windows.Win32.Security.Cryptography.HCRYPTPROV_LEGACY, pRecipientInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_INFO), pStreamInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CMSG_STREAM_INFO)) -> VoidPtr: ...
@winfunctype('CRYPT32.dll')
def CryptMsgDuplicate(hCryptMsg: VoidPtr) -> VoidPtr: ...
@winfunctype('CRYPT32.dll')
def CryptMsgClose(hCryptMsg: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptMsgUpdate(hCryptMsg: VoidPtr, pbData: POINTER(Byte), cbData: UInt32, fFinal: win32more.Windows.Win32.Foundation.BOOL) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptMsgGetParam(hCryptMsg: VoidPtr, dwParamType: UInt32, dwIndex: UInt32, pvData: VoidPtr, pcbData: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptMsgControl(hCryptMsg: VoidPtr, dwFlags: UInt32, dwCtrlType: UInt32, pvCtrlPara: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptMsgVerifyCountersignatureEncoded(hCryptProv: win32more.Windows.Win32.Security.Cryptography.HCRYPTPROV_LEGACY, dwEncodingType: UInt32, pbSignerInfo: POINTER(Byte), cbSignerInfo: UInt32, pbSignerInfoCountersignature: POINTER(Byte), cbSignerInfoCountersignature: UInt32, pciCountersigner: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_INFO)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptMsgVerifyCountersignatureEncodedEx(hCryptProv: win32more.Windows.Win32.Security.Cryptography.HCRYPTPROV_LEGACY, dwEncodingType: UInt32, pbSignerInfo: POINTER(Byte), cbSignerInfo: UInt32, pbSignerInfoCountersignature: POINTER(Byte), cbSignerInfoCountersignature: UInt32, dwSignerType: UInt32, pvSigner: VoidPtr, dwFlags: UInt32, pvExtra: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptMsgCountersign(hCryptMsg: VoidPtr, dwIndex: UInt32, cCountersigners: UInt32, rgCountersigners: POINTER(win32more.Windows.Win32.Security.Cryptography.CMSG_SIGNER_ENCODE_INFO)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptMsgCountersignEncoded(dwEncodingType: UInt32, pbSignerInfo: POINTER(Byte), cbSignerInfo: UInt32, cCountersigners: UInt32, rgCountersigners: POINTER(win32more.Windows.Win32.Security.Cryptography.CMSG_SIGNER_ENCODE_INFO), pbCountersignature: POINTER(Byte), pcbCountersignature: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertOpenStore(lpszStoreProvider: win32more.Windows.Win32.Foundation.PSTR, dwEncodingType: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, hCryptProv: win32more.Windows.Win32.Security.Cryptography.HCRYPTPROV_LEGACY, dwFlags: win32more.Windows.Win32.Security.Cryptography.CERT_OPEN_STORE_FLAGS, pvPara: VoidPtr) -> win32more.Windows.Win32.Security.Cryptography.HCERTSTORE: ...
@winfunctype('CRYPT32.dll')
def CertDuplicateStore(hCertStore: win32more.Windows.Win32.Security.Cryptography.HCERTSTORE) -> win32more.Windows.Win32.Security.Cryptography.HCERTSTORE: ...
@winfunctype('CRYPT32.dll')
def CertSaveStore(hCertStore: win32more.Windows.Win32.Security.Cryptography.HCERTSTORE, dwEncodingType: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, dwSaveAs: win32more.Windows.Win32.Security.Cryptography.CERT_STORE_SAVE_AS, dwSaveTo: win32more.Windows.Win32.Security.Cryptography.CERT_STORE_SAVE_TO, pvSaveToPara: VoidPtr, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertCloseStore(hCertStore: win32more.Windows.Win32.Security.Cryptography.HCERTSTORE, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertGetSubjectCertificateFromStore(hCertStore: win32more.Windows.Win32.Security.Cryptography.HCERTSTORE, dwCertEncodingType: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pCertId: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_INFO)) -> POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT): ...
@winfunctype('CRYPT32.dll')
def CertEnumCertificatesInStore(hCertStore: win32more.Windows.Win32.Security.Cryptography.HCERTSTORE, pPrevCertContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT)) -> POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT): ...
@winfunctype('CRYPT32.dll')
def CertFindCertificateInStore(hCertStore: win32more.Windows.Win32.Security.Cryptography.HCERTSTORE, dwCertEncodingType: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, dwFindFlags: UInt32, dwFindType: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_FLAGS, pvFindPara: VoidPtr, pPrevCertContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT)) -> POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT): ...
@winfunctype('CRYPT32.dll')
def CertGetIssuerCertificateFromStore(hCertStore: win32more.Windows.Win32.Security.Cryptography.HCERTSTORE, pSubjectContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT), pPrevIssuerContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT), pdwFlags: POINTER(UInt32)) -> POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT): ...
@winfunctype('CRYPT32.dll')
def CertVerifySubjectCertificateContext(pSubject: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT), pIssuer: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT), pdwFlags: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertDuplicateCertificateContext(pCertContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT)) -> POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT): ...
@winfunctype('CRYPT32.dll')
def CertCreateCertificateContext(dwCertEncodingType: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pbCertEncoded: POINTER(Byte), cbCertEncoded: UInt32) -> POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT): ...
@winfunctype('CRYPT32.dll')
def CertFreeCertificateContext(pCertContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertSetCertificateContextProperty(pCertContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT), dwPropId: UInt32, dwFlags: UInt32, pvData: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertGetCertificateContextProperty(pCertContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT), dwPropId: UInt32, pvData: VoidPtr, pcbData: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertEnumCertificateContextProperties(pCertContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT), dwPropId: UInt32) -> UInt32: ...
@winfunctype('CRYPT32.dll')
def CertCreateCTLEntryFromCertificateContextProperties(pCertContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT), cOptAttr: UInt32, rgOptAttr: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_ATTRIBUTE), dwFlags: UInt32, pvReserved: VoidPtr, pCtlEntry: POINTER(win32more.Windows.Win32.Security.Cryptography.CTL_ENTRY), pcbCtlEntry: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertSetCertificateContextPropertiesFromCTLEntry(pCertContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT), pCtlEntry: POINTER(win32more.Windows.Win32.Security.Cryptography.CTL_ENTRY), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertGetCRLFromStore(hCertStore: win32more.Windows.Win32.Security.Cryptography.HCERTSTORE, pIssuerContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT), pPrevCrlContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CRL_CONTEXT), pdwFlags: POINTER(UInt32)) -> POINTER(win32more.Windows.Win32.Security.Cryptography.CRL_CONTEXT): ...
@winfunctype('CRYPT32.dll')
def CertEnumCRLsInStore(hCertStore: win32more.Windows.Win32.Security.Cryptography.HCERTSTORE, pPrevCrlContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CRL_CONTEXT)) -> POINTER(win32more.Windows.Win32.Security.Cryptography.CRL_CONTEXT): ...
@winfunctype('CRYPT32.dll')
def CertFindCRLInStore(hCertStore: win32more.Windows.Win32.Security.Cryptography.HCERTSTORE, dwCertEncodingType: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, dwFindFlags: UInt32, dwFindType: UInt32, pvFindPara: VoidPtr, pPrevCrlContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CRL_CONTEXT)) -> POINTER(win32more.Windows.Win32.Security.Cryptography.CRL_CONTEXT): ...
@winfunctype('CRYPT32.dll')
def CertDuplicateCRLContext(pCrlContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CRL_CONTEXT)) -> POINTER(win32more.Windows.Win32.Security.Cryptography.CRL_CONTEXT): ...
@winfunctype('CRYPT32.dll')
def CertCreateCRLContext(dwCertEncodingType: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pbCrlEncoded: POINTER(Byte), cbCrlEncoded: UInt32) -> POINTER(win32more.Windows.Win32.Security.Cryptography.CRL_CONTEXT): ...
@winfunctype('CRYPT32.dll')
def CertFreeCRLContext(pCrlContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CRL_CONTEXT)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertSetCRLContextProperty(pCrlContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CRL_CONTEXT), dwPropId: UInt32, dwFlags: UInt32, pvData: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertGetCRLContextProperty(pCrlContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CRL_CONTEXT), dwPropId: UInt32, pvData: VoidPtr, pcbData: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertEnumCRLContextProperties(pCrlContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CRL_CONTEXT), dwPropId: UInt32) -> UInt32: ...
@winfunctype('CRYPT32.dll')
def CertFindCertificateInCRL(pCert: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT), pCrlContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CRL_CONTEXT), dwFlags: UInt32, pvReserved: VoidPtr, ppCrlEntry: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CRL_ENTRY))) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertIsValidCRLForCertificate(pCert: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT), pCrl: POINTER(win32more.Windows.Win32.Security.Cryptography.CRL_CONTEXT), dwFlags: UInt32, pvReserved: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertAddEncodedCertificateToStore(hCertStore: win32more.Windows.Win32.Security.Cryptography.HCERTSTORE, dwCertEncodingType: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pbCertEncoded: POINTER(Byte), cbCertEncoded: UInt32, dwAddDisposition: UInt32, ppCertContext: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT))) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertAddCertificateContextToStore(hCertStore: win32more.Windows.Win32.Security.Cryptography.HCERTSTORE, pCertContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT), dwAddDisposition: UInt32, ppStoreContext: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT))) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertAddSerializedElementToStore(hCertStore: win32more.Windows.Win32.Security.Cryptography.HCERTSTORE, pbElement: POINTER(Byte), cbElement: UInt32, dwAddDisposition: UInt32, dwFlags: UInt32, dwContextTypeFlags: UInt32, pdwContextType: POINTER(UInt32), ppvContext: POINTER(VoidPtr)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertDeleteCertificateFromStore(pCertContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertAddEncodedCRLToStore(hCertStore: win32more.Windows.Win32.Security.Cryptography.HCERTSTORE, dwCertEncodingType: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pbCrlEncoded: POINTER(Byte), cbCrlEncoded: UInt32, dwAddDisposition: UInt32, ppCrlContext: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CRL_CONTEXT))) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertAddCRLContextToStore(hCertStore: win32more.Windows.Win32.Security.Cryptography.HCERTSTORE, pCrlContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CRL_CONTEXT), dwAddDisposition: UInt32, ppStoreContext: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CRL_CONTEXT))) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertDeleteCRLFromStore(pCrlContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CRL_CONTEXT)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertSerializeCertificateStoreElement(pCertContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT), dwFlags: UInt32, pbElement: POINTER(Byte), pcbElement: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertSerializeCRLStoreElement(pCrlContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CRL_CONTEXT), dwFlags: UInt32, pbElement: POINTER(Byte), pcbElement: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertDuplicateCTLContext(pCtlContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CTL_CONTEXT)) -> POINTER(win32more.Windows.Win32.Security.Cryptography.CTL_CONTEXT): ...
@winfunctype('CRYPT32.dll')
def CertCreateCTLContext(dwMsgAndCertEncodingType: UInt32, pbCtlEncoded: POINTER(Byte), cbCtlEncoded: UInt32) -> POINTER(win32more.Windows.Win32.Security.Cryptography.CTL_CONTEXT): ...
@winfunctype('CRYPT32.dll')
def CertFreeCTLContext(pCtlContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CTL_CONTEXT)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertSetCTLContextProperty(pCtlContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CTL_CONTEXT), dwPropId: UInt32, dwFlags: UInt32, pvData: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertGetCTLContextProperty(pCtlContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CTL_CONTEXT), dwPropId: UInt32, pvData: VoidPtr, pcbData: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertEnumCTLContextProperties(pCtlContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CTL_CONTEXT), dwPropId: UInt32) -> UInt32: ...
@winfunctype('CRYPT32.dll')
def CertEnumCTLsInStore(hCertStore: win32more.Windows.Win32.Security.Cryptography.HCERTSTORE, pPrevCtlContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CTL_CONTEXT)) -> POINTER(win32more.Windows.Win32.Security.Cryptography.CTL_CONTEXT): ...
@winfunctype('CRYPT32.dll')
def CertFindSubjectInCTL(dwEncodingType: UInt32, dwSubjectType: UInt32, pvSubject: VoidPtr, pCtlContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CTL_CONTEXT), dwFlags: UInt32) -> POINTER(win32more.Windows.Win32.Security.Cryptography.CTL_ENTRY): ...
@winfunctype('CRYPT32.dll')
def CertFindCTLInStore(hCertStore: win32more.Windows.Win32.Security.Cryptography.HCERTSTORE, dwMsgAndCertEncodingType: UInt32, dwFindFlags: UInt32, dwFindType: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_TYPE, pvFindPara: VoidPtr, pPrevCtlContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CTL_CONTEXT)) -> POINTER(win32more.Windows.Win32.Security.Cryptography.CTL_CONTEXT): ...
@winfunctype('CRYPT32.dll')
def CertAddEncodedCTLToStore(hCertStore: win32more.Windows.Win32.Security.Cryptography.HCERTSTORE, dwMsgAndCertEncodingType: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pbCtlEncoded: POINTER(Byte), cbCtlEncoded: UInt32, dwAddDisposition: UInt32, ppCtlContext: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CTL_CONTEXT))) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertAddCTLContextToStore(hCertStore: win32more.Windows.Win32.Security.Cryptography.HCERTSTORE, pCtlContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CTL_CONTEXT), dwAddDisposition: UInt32, ppStoreContext: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CTL_CONTEXT))) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertSerializeCTLStoreElement(pCtlContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CTL_CONTEXT), dwFlags: UInt32, pbElement: POINTER(Byte), pcbElement: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertDeleteCTLFromStore(pCtlContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CTL_CONTEXT)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertAddCertificateLinkToStore(hCertStore: win32more.Windows.Win32.Security.Cryptography.HCERTSTORE, pCertContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT), dwAddDisposition: UInt32, ppStoreContext: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT))) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertAddCRLLinkToStore(hCertStore: win32more.Windows.Win32.Security.Cryptography.HCERTSTORE, pCrlContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CRL_CONTEXT), dwAddDisposition: UInt32, ppStoreContext: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CRL_CONTEXT))) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertAddCTLLinkToStore(hCertStore: win32more.Windows.Win32.Security.Cryptography.HCERTSTORE, pCtlContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CTL_CONTEXT), dwAddDisposition: UInt32, ppStoreContext: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CTL_CONTEXT))) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertAddStoreToCollection(hCollectionStore: win32more.Windows.Win32.Security.Cryptography.HCERTSTORE, hSiblingStore: win32more.Windows.Win32.Security.Cryptography.HCERTSTORE, dwUpdateFlags: UInt32, dwPriority: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertRemoveStoreFromCollection(hCollectionStore: win32more.Windows.Win32.Security.Cryptography.HCERTSTORE, hSiblingStore: win32more.Windows.Win32.Security.Cryptography.HCERTSTORE) -> Void: ...
@winfunctype('CRYPT32.dll')
def CertControlStore(hCertStore: win32more.Windows.Win32.Security.Cryptography.HCERTSTORE, dwFlags: win32more.Windows.Win32.Security.Cryptography.CERT_CONTROL_STORE_FLAGS, dwCtrlType: UInt32, pvCtrlPara: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertSetStoreProperty(hCertStore: win32more.Windows.Win32.Security.Cryptography.HCERTSTORE, dwPropId: UInt32, dwFlags: UInt32, pvData: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertGetStoreProperty(hCertStore: win32more.Windows.Win32.Security.Cryptography.HCERTSTORE, dwPropId: UInt32, pvData: VoidPtr, pcbData: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertCreateContext(dwContextType: UInt32, dwEncodingType: UInt32, pbEncoded: POINTER(Byte), cbEncoded: UInt32, dwFlags: UInt32, pCreatePara: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CREATE_CONTEXT_PARA)) -> VoidPtr: ...
@winfunctype('CRYPT32.dll')
def CertRegisterSystemStore(pvSystemStore: VoidPtr, dwFlags: UInt32, pStoreInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_SYSTEM_STORE_INFO), pvReserved: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertRegisterPhysicalStore(pvSystemStore: VoidPtr, dwFlags: UInt32, pwszStoreName: win32more.Windows.Win32.Foundation.PWSTR, pStoreInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_PHYSICAL_STORE_INFO), pvReserved: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertUnregisterSystemStore(pvSystemStore: VoidPtr, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertUnregisterPhysicalStore(pvSystemStore: VoidPtr, dwFlags: UInt32, pwszStoreName: win32more.Windows.Win32.Foundation.PWSTR) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertEnumSystemStoreLocation(dwFlags: UInt32, pvArg: VoidPtr, pfnEnum: win32more.Windows.Win32.Security.Cryptography.PFN_CERT_ENUM_SYSTEM_STORE_LOCATION) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertEnumSystemStore(dwFlags: UInt32, pvSystemStoreLocationPara: VoidPtr, pvArg: VoidPtr, pfnEnum: win32more.Windows.Win32.Security.Cryptography.PFN_CERT_ENUM_SYSTEM_STORE) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertEnumPhysicalStore(pvSystemStore: VoidPtr, dwFlags: UInt32, pvArg: VoidPtr, pfnEnum: win32more.Windows.Win32.Security.Cryptography.PFN_CERT_ENUM_PHYSICAL_STORE) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertGetEnhancedKeyUsage(pCertContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT), dwFlags: UInt32, pUsage: POINTER(win32more.Windows.Win32.Security.Cryptography.CTL_USAGE), pcbUsage: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertSetEnhancedKeyUsage(pCertContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT), pUsage: POINTER(win32more.Windows.Win32.Security.Cryptography.CTL_USAGE)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertAddEnhancedKeyUsageIdentifier(pCertContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT), pszUsageIdentifier: win32more.Windows.Win32.Foundation.PSTR) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertRemoveEnhancedKeyUsageIdentifier(pCertContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT), pszUsageIdentifier: win32more.Windows.Win32.Foundation.PSTR) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertGetValidUsages(cCerts: UInt32, rghCerts: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT)), cNumOIDs: POINTER(Int32), rghOIDs: POINTER(win32more.Windows.Win32.Foundation.PSTR), pcbOIDs: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptMsgGetAndVerifySigner(hCryptMsg: VoidPtr, cSignerStore: UInt32, rghSignerStore: POINTER(win32more.Windows.Win32.Security.Cryptography.HCERTSTORE), dwFlags: UInt32, ppSigner: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT)), pdwSignerIndex: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptMsgSignCTL(dwMsgEncodingType: UInt32, pbCtlContent: POINTER(Byte), cbCtlContent: UInt32, pSignInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CMSG_SIGNED_ENCODE_INFO), dwFlags: UInt32, pbEncoded: POINTER(Byte), pcbEncoded: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptMsgEncodeAndSignCTL(dwMsgEncodingType: UInt32, pCtlInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CTL_INFO), pSignInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CMSG_SIGNED_ENCODE_INFO), dwFlags: UInt32, pbEncoded: POINTER(Byte), pcbEncoded: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertFindSubjectInSortedCTL(pSubjectIdentifier: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB), pCtlContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CTL_CONTEXT), dwFlags: UInt32, pvReserved: VoidPtr, pEncodedAttributes: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertEnumSubjectInSortedCTL(pCtlContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CTL_CONTEXT), ppvNextSubject: POINTER(VoidPtr), pSubjectIdentifier: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB), pEncodedAttributes: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertVerifyCTLUsage(dwEncodingType: UInt32, dwSubjectType: UInt32, pvSubject: VoidPtr, pSubjectUsage: POINTER(win32more.Windows.Win32.Security.Cryptography.CTL_USAGE), dwFlags: UInt32, pVerifyUsagePara: POINTER(win32more.Windows.Win32.Security.Cryptography.CTL_VERIFY_USAGE_PARA), pVerifyUsageStatus: POINTER(win32more.Windows.Win32.Security.Cryptography.CTL_VERIFY_USAGE_STATUS)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertVerifyRevocation(dwEncodingType: UInt32, dwRevType: UInt32, cContext: UInt32, rgpvContext: POINTER(VoidPtr), dwFlags: UInt32, pRevPara: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_REVOCATION_PARA), pRevStatus: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_REVOCATION_STATUS)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertCompareIntegerBlob(pInt1: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB), pInt2: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertCompareCertificate(dwCertEncodingType: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pCertId1: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_INFO), pCertId2: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_INFO)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertCompareCertificateName(dwCertEncodingType: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pCertName1: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB), pCertName2: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertIsRDNAttrsInCertificateName(dwCertEncodingType: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, dwFlags: UInt32, pCertName: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB), pRDN: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_RDN)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertComparePublicKeyInfo(dwCertEncodingType: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pPublicKey1: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_PUBLIC_KEY_INFO), pPublicKey2: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_PUBLIC_KEY_INFO)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertGetPublicKeyLength(dwCertEncodingType: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pPublicKey: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_PUBLIC_KEY_INFO)) -> UInt32: ...
@winfunctype('CRYPT32.dll')
def CryptVerifyCertificateSignature(hCryptProv: win32more.Windows.Win32.Security.Cryptography.HCRYPTPROV_LEGACY, dwCertEncodingType: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pbEncoded: POINTER(Byte), cbEncoded: UInt32, pPublicKey: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_PUBLIC_KEY_INFO)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptVerifyCertificateSignatureEx(hCryptProv: win32more.Windows.Win32.Security.Cryptography.HCRYPTPROV_LEGACY, dwCertEncodingType: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, dwSubjectType: UInt32, pvSubject: VoidPtr, dwIssuerType: UInt32, pvIssuer: VoidPtr, dwFlags: win32more.Windows.Win32.Security.Cryptography.CRYPT_VERIFY_CERT_FLAGS, pvExtra: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertIsStrongHashToSign(pStrongSignPara: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_STRONG_SIGN_PARA), pwszCNGHashAlgid: win32more.Windows.Win32.Foundation.PWSTR, pSigningCert: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptHashToBeSigned(hCryptProv: win32more.Windows.Win32.Security.Cryptography.HCRYPTPROV_LEGACY, dwCertEncodingType: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pbEncoded: POINTER(Byte), cbEncoded: UInt32, pbComputedHash: POINTER(Byte), pcbComputedHash: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptHashCertificate(hCryptProv: win32more.Windows.Win32.Security.Cryptography.HCRYPTPROV_LEGACY, Algid: win32more.Windows.Win32.Security.Cryptography.ALG_ID, dwFlags: UInt32, pbEncoded: POINTER(Byte), cbEncoded: UInt32, pbComputedHash: POINTER(Byte), pcbComputedHash: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptHashCertificate2(pwszCNGHashAlgid: win32more.Windows.Win32.Foundation.PWSTR, dwFlags: UInt32, pvReserved: VoidPtr, pbEncoded: POINTER(Byte), cbEncoded: UInt32, pbComputedHash: POINTER(Byte), pcbComputedHash: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptSignCertificate(hCryptProvOrNCryptKey: win32more.Windows.Win32.Security.Cryptography.HCRYPTPROV_OR_NCRYPT_KEY_HANDLE, dwKeySpec: UInt32, dwCertEncodingType: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pbEncodedToBeSigned: POINTER(Byte), cbEncodedToBeSigned: UInt32, pSignatureAlgorithm: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER), pvHashAuxInfo: VoidPtr, pbSignature: POINTER(Byte), pcbSignature: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptSignAndEncodeCertificate(hCryptProvOrNCryptKey: win32more.Windows.Win32.Security.Cryptography.HCRYPTPROV_OR_NCRYPT_KEY_HANDLE, dwKeySpec: win32more.Windows.Win32.Security.Cryptography.CERT_KEY_SPEC, dwCertEncodingType: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, lpszStructType: win32more.Windows.Win32.Foundation.PSTR, pvStructInfo: VoidPtr, pSignatureAlgorithm: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER), pvHashAuxInfo: VoidPtr, pbEncoded: POINTER(Byte), pcbEncoded: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertVerifyTimeValidity(pTimeToVerify: POINTER(win32more.Windows.Win32.Foundation.FILETIME), pCertInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_INFO)) -> Int32: ...
@winfunctype('CRYPT32.dll')
def CertVerifyCRLTimeValidity(pTimeToVerify: POINTER(win32more.Windows.Win32.Foundation.FILETIME), pCrlInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CRL_INFO)) -> Int32: ...
@winfunctype('CRYPT32.dll')
def CertVerifyValidityNesting(pSubjectInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_INFO), pIssuerInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_INFO)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertVerifyCRLRevocation(dwCertEncodingType: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pCertId: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_INFO), cCrlInfo: UInt32, rgpCrlInfo: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CRL_INFO))) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertAlgIdToOID(dwAlgId: UInt32) -> win32more.Windows.Win32.Foundation.PSTR: ...
@winfunctype('CRYPT32.dll')
def CertOIDToAlgId(pszObjId: win32more.Windows.Win32.Foundation.PSTR) -> UInt32: ...
@winfunctype('CRYPT32.dll')
def CertFindExtension(pszObjId: win32more.Windows.Win32.Foundation.PSTR, cExtensions: UInt32, rgExtensions: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_EXTENSION)) -> POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_EXTENSION): ...
@winfunctype('CRYPT32.dll')
def CertFindAttribute(pszObjId: win32more.Windows.Win32.Foundation.PSTR, cAttr: UInt32, rgAttr: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_ATTRIBUTE)) -> POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_ATTRIBUTE): ...
@winfunctype('CRYPT32.dll')
def CertFindRDNAttr(pszObjId: win32more.Windows.Win32.Foundation.PSTR, pName: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_NAME_INFO)) -> POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_RDN_ATTR): ...
@winfunctype('CRYPT32.dll')
def CertGetIntendedKeyUsage(dwCertEncodingType: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pCertInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_INFO), pbKeyUsage: POINTER(Byte), cbKeyUsage: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptInstallDefaultContext(hCryptProv: UIntPtr, dwDefaultType: win32more.Windows.Win32.Security.Cryptography.CRYPT_DEFAULT_CONTEXT_TYPE, pvDefaultPara: VoidPtr, dwFlags: win32more.Windows.Win32.Security.Cryptography.CRYPT_DEFAULT_CONTEXT_FLAGS, pvReserved: VoidPtr, phDefaultContext: POINTER(VoidPtr)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptUninstallDefaultContext(hDefaultContext: VoidPtr, dwFlags: UInt32, pvReserved: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptExportPublicKeyInfo(hCryptProvOrNCryptKey: win32more.Windows.Win32.Security.Cryptography.HCRYPTPROV_OR_NCRYPT_KEY_HANDLE, dwKeySpec: UInt32, dwCertEncodingType: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_PUBLIC_KEY_INFO), pcbInfo: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptExportPublicKeyInfoEx(hCryptProvOrNCryptKey: win32more.Windows.Win32.Security.Cryptography.HCRYPTPROV_OR_NCRYPT_KEY_HANDLE, dwKeySpec: UInt32, dwCertEncodingType: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pszPublicKeyObjId: win32more.Windows.Win32.Foundation.PSTR, dwFlags: UInt32, pvAuxInfo: VoidPtr, pInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_PUBLIC_KEY_INFO), pcbInfo: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptExportPublicKeyInfoFromBCryptKeyHandle(hBCryptKey: win32more.Windows.Win32.Security.Cryptography.BCRYPT_KEY_HANDLE, dwCertEncodingType: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pszPublicKeyObjId: win32more.Windows.Win32.Foundation.PSTR, dwFlags: UInt32, pvAuxInfo: VoidPtr, pInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_PUBLIC_KEY_INFO), pcbInfo: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptImportPublicKeyInfo(hCryptProv: UIntPtr, dwCertEncodingType: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_PUBLIC_KEY_INFO), phKey: POINTER(UIntPtr)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptImportPublicKeyInfoEx(hCryptProv: UIntPtr, dwCertEncodingType: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_PUBLIC_KEY_INFO), aiKeyAlg: win32more.Windows.Win32.Security.Cryptography.ALG_ID, dwFlags: UInt32, pvAuxInfo: VoidPtr, phKey: POINTER(UIntPtr)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptImportPublicKeyInfoEx2(dwCertEncodingType: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_PUBLIC_KEY_INFO), dwFlags: win32more.Windows.Win32.Security.Cryptography.CRYPT_IMPORT_PUBLIC_KEY_FLAGS, pvAuxInfo: VoidPtr, phKey: POINTER(win32more.Windows.Win32.Security.Cryptography.BCRYPT_KEY_HANDLE)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptAcquireCertificatePrivateKey(pCert: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT), dwFlags: win32more.Windows.Win32.Security.Cryptography.CRYPT_ACQUIRE_FLAGS, pvParameters: VoidPtr, phCryptProvOrNCryptKey: POINTER(win32more.Windows.Win32.Security.Cryptography.HCRYPTPROV_OR_NCRYPT_KEY_HANDLE), pdwKeySpec: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_KEY_SPEC), pfCallerFreeProvOrNCryptKey: POINTER(win32more.Windows.Win32.Foundation.BOOL)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptFindCertificateKeyProvInfo(pCert: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT), dwFlags: win32more.Windows.Win32.Security.Cryptography.CRYPT_FIND_FLAGS, pvReserved: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptImportPKCS8(sPrivateKeyAndParams: win32more.Windows.Win32.Security.Cryptography.CRYPT_PKCS8_IMPORT_PARAMS, dwFlags: win32more.Windows.Win32.Security.Cryptography.CRYPT_KEY_FLAGS, phCryptProv: POINTER(UIntPtr), pvAuxInfo: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptExportPKCS8(hCryptProv: UIntPtr, dwKeySpec: UInt32, pszPrivateKeyObjId: win32more.Windows.Win32.Foundation.PSTR, dwFlags: UInt32, pvAuxInfo: VoidPtr, pbPrivateKeyBlob: POINTER(Byte), pcbPrivateKeyBlob: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptHashPublicKeyInfo(hCryptProv: win32more.Windows.Win32.Security.Cryptography.HCRYPTPROV_LEGACY, Algid: win32more.Windows.Win32.Security.Cryptography.ALG_ID, dwFlags: UInt32, dwCertEncodingType: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_PUBLIC_KEY_INFO), pbComputedHash: POINTER(Byte), pcbComputedHash: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertRDNValueToStrA(dwValueType: UInt32, pValue: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB), psz: win32more.Windows.Win32.Foundation.PSTR, csz: UInt32) -> UInt32: ...
@winfunctype('CRYPT32.dll')
def CertRDNValueToStrW(dwValueType: UInt32, pValue: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB), psz: win32more.Windows.Win32.Foundation.PWSTR, csz: UInt32) -> UInt32: ...
CertRDNValueToStr = UnicodeAlias('CertRDNValueToStrW')
@winfunctype('CRYPT32.dll')
def CertNameToStrA(dwCertEncodingType: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pName: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB), dwStrType: win32more.Windows.Win32.Security.Cryptography.CERT_STRING_TYPE, psz: win32more.Windows.Win32.Foundation.PSTR, csz: UInt32) -> UInt32: ...
@winfunctype('CRYPT32.dll')
def CertNameToStrW(dwCertEncodingType: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pName: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB), dwStrType: win32more.Windows.Win32.Security.Cryptography.CERT_STRING_TYPE, psz: win32more.Windows.Win32.Foundation.PWSTR, csz: UInt32) -> UInt32: ...
CertNameToStr = UnicodeAlias('CertNameToStrW')
@winfunctype('CRYPT32.dll')
def CertStrToNameA(dwCertEncodingType: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pszX500: win32more.Windows.Win32.Foundation.PSTR, dwStrType: win32more.Windows.Win32.Security.Cryptography.CERT_STRING_TYPE, pvReserved: VoidPtr, pbEncoded: POINTER(Byte), pcbEncoded: POINTER(UInt32), ppszError: POINTER(win32more.Windows.Win32.Foundation.PSTR)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertStrToNameW(dwCertEncodingType: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pszX500: win32more.Windows.Win32.Foundation.PWSTR, dwStrType: win32more.Windows.Win32.Security.Cryptography.CERT_STRING_TYPE, pvReserved: VoidPtr, pbEncoded: POINTER(Byte), pcbEncoded: POINTER(UInt32), ppszError: POINTER(win32more.Windows.Win32.Foundation.PWSTR)) -> win32more.Windows.Win32.Foundation.BOOL: ...
CertStrToName = UnicodeAlias('CertStrToNameW')
@winfunctype('CRYPT32.dll')
def CertGetNameStringA(pCertContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT), dwType: UInt32, dwFlags: UInt32, pvTypePara: VoidPtr, pszNameString: win32more.Windows.Win32.Foundation.PSTR, cchNameString: UInt32) -> UInt32: ...
@winfunctype('CRYPT32.dll')
def CertGetNameStringW(pCertContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT), dwType: UInt32, dwFlags: UInt32, pvTypePara: VoidPtr, pszNameString: win32more.Windows.Win32.Foundation.PWSTR, cchNameString: UInt32) -> UInt32: ...
CertGetNameString = UnicodeAlias('CertGetNameStringW')
@winfunctype('CRYPT32.dll')
def CryptSignMessage(pSignPara: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_SIGN_MESSAGE_PARA), fDetachedSignature: win32more.Windows.Win32.Foundation.BOOL, cToBeSigned: UInt32, rgpbToBeSigned: POINTER(POINTER(Byte)), rgcbToBeSigned: POINTER(UInt32), pbSignedBlob: POINTER(Byte), pcbSignedBlob: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptVerifyMessageSignature(pVerifyPara: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_VERIFY_MESSAGE_PARA), dwSignerIndex: UInt32, pbSignedBlob: POINTER(Byte), cbSignedBlob: UInt32, pbDecoded: POINTER(Byte), pcbDecoded: POINTER(UInt32), ppSignerCert: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT))) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptGetMessageSignerCount(dwMsgEncodingType: UInt32, pbSignedBlob: POINTER(Byte), cbSignedBlob: UInt32) -> Int32: ...
@winfunctype('CRYPT32.dll')
def CryptGetMessageCertificates(dwMsgAndCertEncodingType: UInt32, hCryptProv: win32more.Windows.Win32.Security.Cryptography.HCRYPTPROV_LEGACY, dwFlags: UInt32, pbSignedBlob: POINTER(Byte), cbSignedBlob: UInt32) -> win32more.Windows.Win32.Security.Cryptography.HCERTSTORE: ...
@winfunctype('CRYPT32.dll')
def CryptVerifyDetachedMessageSignature(pVerifyPara: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_VERIFY_MESSAGE_PARA), dwSignerIndex: UInt32, pbDetachedSignBlob: POINTER(Byte), cbDetachedSignBlob: UInt32, cToBeSigned: UInt32, rgpbToBeSigned: POINTER(POINTER(Byte)), rgcbToBeSigned: POINTER(UInt32), ppSignerCert: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT))) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptEncryptMessage(pEncryptPara: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_ENCRYPT_MESSAGE_PARA), cRecipientCert: UInt32, rgpRecipientCert: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT)), pbToBeEncrypted: POINTER(Byte), cbToBeEncrypted: UInt32, pbEncryptedBlob: POINTER(Byte), pcbEncryptedBlob: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptDecryptMessage(pDecryptPara: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_DECRYPT_MESSAGE_PARA), pbEncryptedBlob: POINTER(Byte), cbEncryptedBlob: UInt32, pbDecrypted: POINTER(Byte), pcbDecrypted: POINTER(UInt32), ppXchgCert: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT))) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptSignAndEncryptMessage(pSignPara: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_SIGN_MESSAGE_PARA), pEncryptPara: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_ENCRYPT_MESSAGE_PARA), cRecipientCert: UInt32, rgpRecipientCert: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT)), pbToBeSignedAndEncrypted: POINTER(Byte), cbToBeSignedAndEncrypted: UInt32, pbSignedAndEncryptedBlob: POINTER(Byte), pcbSignedAndEncryptedBlob: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptDecryptAndVerifyMessageSignature(pDecryptPara: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_DECRYPT_MESSAGE_PARA), pVerifyPara: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_VERIFY_MESSAGE_PARA), dwSignerIndex: UInt32, pbEncryptedBlob: POINTER(Byte), cbEncryptedBlob: UInt32, pbDecrypted: POINTER(Byte), pcbDecrypted: POINTER(UInt32), ppXchgCert: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT)), ppSignerCert: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT))) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptDecodeMessage(dwMsgTypeFlags: UInt32, pDecryptPara: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_DECRYPT_MESSAGE_PARA), pVerifyPara: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_VERIFY_MESSAGE_PARA), dwSignerIndex: UInt32, pbEncodedBlob: POINTER(Byte), cbEncodedBlob: UInt32, dwPrevInnerContentType: UInt32, pdwMsgType: POINTER(UInt32), pdwInnerContentType: POINTER(UInt32), pbDecoded: POINTER(Byte), pcbDecoded: POINTER(UInt32), ppXchgCert: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT)), ppSignerCert: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT))) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptHashMessage(pHashPara: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_HASH_MESSAGE_PARA), fDetachedHash: win32more.Windows.Win32.Foundation.BOOL, cToBeHashed: UInt32, rgpbToBeHashed: POINTER(POINTER(Byte)), rgcbToBeHashed: POINTER(UInt32), pbHashedBlob: POINTER(Byte), pcbHashedBlob: POINTER(UInt32), pbComputedHash: POINTER(Byte), pcbComputedHash: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptVerifyMessageHash(pHashPara: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_HASH_MESSAGE_PARA), pbHashedBlob: POINTER(Byte), cbHashedBlob: UInt32, pbToBeHashed: POINTER(Byte), pcbToBeHashed: POINTER(UInt32), pbComputedHash: POINTER(Byte), pcbComputedHash: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptVerifyDetachedMessageHash(pHashPara: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_HASH_MESSAGE_PARA), pbDetachedHashBlob: POINTER(Byte), cbDetachedHashBlob: UInt32, cToBeHashed: UInt32, rgpbToBeHashed: POINTER(POINTER(Byte)), rgcbToBeHashed: POINTER(UInt32), pbComputedHash: POINTER(Byte), pcbComputedHash: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptSignMessageWithKey(pSignPara: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_KEY_SIGN_MESSAGE_PARA), pbToBeSigned: POINTER(Byte), cbToBeSigned: UInt32, pbSignedBlob: POINTER(Byte), pcbSignedBlob: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptVerifyMessageSignatureWithKey(pVerifyPara: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_KEY_VERIFY_MESSAGE_PARA), pPublicKeyInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_PUBLIC_KEY_INFO), pbSignedBlob: POINTER(Byte), cbSignedBlob: UInt32, pbDecoded: POINTER(Byte), pcbDecoded: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertOpenSystemStoreA(hProv: win32more.Windows.Win32.Security.Cryptography.HCRYPTPROV_LEGACY, szSubsystemProtocol: win32more.Windows.Win32.Foundation.PSTR) -> win32more.Windows.Win32.Security.Cryptography.HCERTSTORE: ...
@winfunctype('CRYPT32.dll')
def CertOpenSystemStoreW(hProv: win32more.Windows.Win32.Security.Cryptography.HCRYPTPROV_LEGACY, szSubsystemProtocol: win32more.Windows.Win32.Foundation.PWSTR) -> win32more.Windows.Win32.Security.Cryptography.HCERTSTORE: ...
CertOpenSystemStore = UnicodeAlias('CertOpenSystemStoreW')
@winfunctype('CRYPT32.dll')
def CertAddEncodedCertificateToSystemStoreA(szCertStoreName: win32more.Windows.Win32.Foundation.PSTR, pbCertEncoded: POINTER(Byte), cbCertEncoded: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertAddEncodedCertificateToSystemStoreW(szCertStoreName: win32more.Windows.Win32.Foundation.PWSTR, pbCertEncoded: POINTER(Byte), cbCertEncoded: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
CertAddEncodedCertificateToSystemStore = UnicodeAlias('CertAddEncodedCertificateToSystemStoreW')
@winfunctype('WINTRUST.dll')
def FindCertsByIssuer(pCertChains: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CHAIN), pcbCertChains: POINTER(UInt32), pcCertChains: POINTER(UInt32), pbEncodedIssuerName: POINTER(Byte), cbEncodedIssuerName: UInt32, pwszPurpose: win32more.Windows.Win32.Foundation.PWSTR, dwKeySpec: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('CRYPT32.dll')
def CryptQueryObject(dwObjectType: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_OBJECT_TYPE, pvObject: VoidPtr, dwExpectedContentTypeFlags: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_CONTENT_TYPE_FLAGS, dwExpectedFormatTypeFlags: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_FORMAT_TYPE_FLAGS, dwFlags: UInt32, pdwMsgAndCertEncodingType: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_ENCODING_TYPE), pdwContentType: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_CONTENT_TYPE), pdwFormatType: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_FORMAT_TYPE), phCertStore: POINTER(win32more.Windows.Win32.Security.Cryptography.HCERTSTORE), phMsg: POINTER(VoidPtr), ppvContext: POINTER(VoidPtr)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptMemAlloc(cbSize: UInt32) -> VoidPtr: ...
@winfunctype('CRYPT32.dll')
def CryptMemRealloc(pv: VoidPtr, cbSize: UInt32) -> VoidPtr: ...
@winfunctype('CRYPT32.dll')
def CryptMemFree(pv: VoidPtr) -> Void: ...
@winfunctype('CRYPT32.dll')
def CryptCreateAsyncHandle(dwFlags: UInt32, phAsync: POINTER(win32more.Windows.Win32.Security.Cryptography.HCRYPTASYNC)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptSetAsyncParam(hAsync: win32more.Windows.Win32.Security.Cryptography.HCRYPTASYNC, pszParamOid: win32more.Windows.Win32.Foundation.PSTR, pvParam: VoidPtr, pfnFree: win32more.Windows.Win32.Security.Cryptography.PFN_CRYPT_ASYNC_PARAM_FREE_FUNC) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptGetAsyncParam(hAsync: win32more.Windows.Win32.Security.Cryptography.HCRYPTASYNC, pszParamOid: win32more.Windows.Win32.Foundation.PSTR, ppvParam: POINTER(VoidPtr), ppfnFree: POINTER(win32more.Windows.Win32.Security.Cryptography.PFN_CRYPT_ASYNC_PARAM_FREE_FUNC)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptCloseAsyncHandle(hAsync: win32more.Windows.Win32.Security.Cryptography.HCRYPTASYNC) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPTNET.dll')
def CryptRetrieveObjectByUrlA(pszUrl: win32more.Windows.Win32.Foundation.PSTR, pszObjectOid: win32more.Windows.Win32.Foundation.PSTR, dwRetrievalFlags: UInt32, dwTimeout: UInt32, ppvObject: POINTER(VoidPtr), hAsyncRetrieve: win32more.Windows.Win32.Security.Cryptography.HCRYPTASYNC, pCredentials: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_CREDENTIALS), pvVerify: VoidPtr, pAuxInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_RETRIEVE_AUX_INFO)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPTNET.dll')
def CryptRetrieveObjectByUrlW(pszUrl: win32more.Windows.Win32.Foundation.PWSTR, pszObjectOid: win32more.Windows.Win32.Foundation.PSTR, dwRetrievalFlags: UInt32, dwTimeout: UInt32, ppvObject: POINTER(VoidPtr), hAsyncRetrieve: win32more.Windows.Win32.Security.Cryptography.HCRYPTASYNC, pCredentials: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_CREDENTIALS), pvVerify: VoidPtr, pAuxInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_RETRIEVE_AUX_INFO)) -> win32more.Windows.Win32.Foundation.BOOL: ...
CryptRetrieveObjectByUrl = UnicodeAlias('CryptRetrieveObjectByUrlW')
@winfunctype('CRYPTNET.dll')
def CryptInstallCancelRetrieval(pfnCancel: win32more.Windows.Win32.Security.Cryptography.PFN_CRYPT_CANCEL_RETRIEVAL, pvArg: VoidPtr, dwFlags: UInt32, pvReserved: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPTNET.dll')
def CryptUninstallCancelRetrieval(dwFlags: UInt32, pvReserved: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPTNET.dll')
def CryptGetObjectUrl(pszUrlOid: win32more.Windows.Win32.Foundation.PSTR, pvPara: VoidPtr, dwFlags: win32more.Windows.Win32.Security.Cryptography.CRYPT_GET_URL_FLAGS, pUrlArray: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_URL_ARRAY), pcbUrlArray: POINTER(UInt32), pUrlInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_URL_INFO), pcbUrlInfo: POINTER(UInt32), pvReserved: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertCreateSelfSignCertificate(hCryptProvOrNCryptKey: win32more.Windows.Win32.Security.Cryptography.HCRYPTPROV_OR_NCRYPT_KEY_HANDLE, pSubjectIssuerBlob: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB), dwFlags: win32more.Windows.Win32.Security.Cryptography.CERT_CREATE_SELFSIGN_FLAGS, pKeyProvInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_KEY_PROV_INFO), pSignatureAlgorithm: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER), pStartTime: POINTER(win32more.Windows.Win32.Foundation.SYSTEMTIME), pEndTime: POINTER(win32more.Windows.Win32.Foundation.SYSTEMTIME), pExtensions: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_EXTENSIONS)) -> POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT): ...
@winfunctype('CRYPT32.dll')
def CryptGetKeyIdentifierProperty(pKeyIdentifier: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB), dwPropId: UInt32, dwFlags: UInt32, pwszComputerName: win32more.Windows.Win32.Foundation.PWSTR, pvReserved: VoidPtr, pvData: VoidPtr, pcbData: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptSetKeyIdentifierProperty(pKeyIdentifier: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB), dwPropId: UInt32, dwFlags: UInt32, pwszComputerName: win32more.Windows.Win32.Foundation.PWSTR, pvReserved: VoidPtr, pvData: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptEnumKeyIdentifierProperties(pKeyIdentifier: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB), dwPropId: UInt32, dwFlags: UInt32, pwszComputerName: win32more.Windows.Win32.Foundation.PWSTR, pvReserved: VoidPtr, pvArg: VoidPtr, pfnEnum: win32more.Windows.Win32.Security.Cryptography.PFN_CRYPT_ENUM_KEYID_PROP) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptCreateKeyIdentifierFromCSP(dwCertEncodingType: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pszPubKeyOID: win32more.Windows.Win32.Foundation.PSTR, pPubKeyStruc: POINTER(win32more.Windows.Win32.Security.Cryptography.PUBLICKEYSTRUC), cbPubKeyStruc: UInt32, dwFlags: UInt32, pvReserved: VoidPtr, pbHash: POINTER(Byte), pcbHash: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertCreateCertificateChainEngine(pConfig: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CHAIN_ENGINE_CONFIG), phChainEngine: POINTER(win32more.Windows.Win32.Security.Cryptography.HCERTCHAINENGINE)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertFreeCertificateChainEngine(hChainEngine: win32more.Windows.Win32.Security.Cryptography.HCERTCHAINENGINE) -> Void: ...
@winfunctype('CRYPT32.dll')
def CertResyncCertificateChainEngine(hChainEngine: win32more.Windows.Win32.Security.Cryptography.HCERTCHAINENGINE) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertGetCertificateChain(hChainEngine: win32more.Windows.Win32.Security.Cryptography.HCERTCHAINENGINE, pCertContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT), pTime: POINTER(win32more.Windows.Win32.Foundation.FILETIME), hAdditionalStore: win32more.Windows.Win32.Security.Cryptography.HCERTSTORE, pChainPara: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CHAIN_PARA), dwFlags: UInt32, pvReserved: VoidPtr, ppChainContext: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CHAIN_CONTEXT))) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertFreeCertificateChain(pChainContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CHAIN_CONTEXT)) -> Void: ...
@winfunctype('CRYPT32.dll')
def CertDuplicateCertificateChain(pChainContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CHAIN_CONTEXT)) -> POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CHAIN_CONTEXT): ...
@winfunctype('CRYPT32.dll')
def CertFindChainInStore(hCertStore: win32more.Windows.Win32.Security.Cryptography.HCERTSTORE, dwCertEncodingType: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, dwFindFlags: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_CHAIN_IN_STORE_FLAGS, dwFindType: UInt32, pvFindPara: VoidPtr, pPrevChainContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CHAIN_CONTEXT)) -> POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CHAIN_CONTEXT): ...
@winfunctype('CRYPT32.dll')
def CertVerifyCertificateChainPolicy(pszPolicyOID: win32more.Windows.Win32.Foundation.PSTR, pChainContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CHAIN_CONTEXT), pPolicyPara: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CHAIN_POLICY_PARA), pPolicyStatus: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CHAIN_POLICY_STATUS)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptStringToBinaryA(pszString: win32more.Windows.Win32.Foundation.PSTR, cchString: UInt32, dwFlags: win32more.Windows.Win32.Security.Cryptography.CRYPT_STRING, pbBinary: POINTER(Byte), pcbBinary: POINTER(UInt32), pdwSkip: POINTER(UInt32), pdwFlags: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptStringToBinaryW(pszString: win32more.Windows.Win32.Foundation.PWSTR, cchString: UInt32, dwFlags: win32more.Windows.Win32.Security.Cryptography.CRYPT_STRING, pbBinary: POINTER(Byte), pcbBinary: POINTER(UInt32), pdwSkip: POINTER(UInt32), pdwFlags: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
CryptStringToBinary = UnicodeAlias('CryptStringToBinaryW')
@winfunctype('CRYPT32.dll')
def CryptBinaryToStringA(pbBinary: POINTER(Byte), cbBinary: UInt32, dwFlags: win32more.Windows.Win32.Security.Cryptography.CRYPT_STRING, pszString: win32more.Windows.Win32.Foundation.PSTR, pcchString: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptBinaryToStringW(pbBinary: POINTER(Byte), cbBinary: UInt32, dwFlags: win32more.Windows.Win32.Security.Cryptography.CRYPT_STRING, pszString: win32more.Windows.Win32.Foundation.PWSTR, pcchString: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
CryptBinaryToString = UnicodeAlias('CryptBinaryToStringW')
@winfunctype('CRYPT32.dll')
def PFXImportCertStore(pPFX: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB), szPassword: win32more.Windows.Win32.Foundation.PWSTR, dwFlags: win32more.Windows.Win32.Security.Cryptography.CRYPT_KEY_FLAGS) -> win32more.Windows.Win32.Security.Cryptography.HCERTSTORE: ...
@winfunctype('CRYPT32.dll')
def PFXIsPFXBlob(pPFX: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def PFXVerifyPassword(pPFX: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB), szPassword: win32more.Windows.Win32.Foundation.PWSTR, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def PFXExportCertStoreEx(hStore: win32more.Windows.Win32.Security.Cryptography.HCERTSTORE, pPFX: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB), szPassword: win32more.Windows.Win32.Foundation.PWSTR, pvPara: VoidPtr, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def PFXExportCertStore(hStore: win32more.Windows.Win32.Security.Cryptography.HCERTSTORE, pPFX: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB), szPassword: win32more.Windows.Win32.Foundation.PWSTR, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertOpenServerOcspResponse(pChainContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CHAIN_CONTEXT), dwFlags: UInt32, pOpenPara: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_SERVER_OCSP_RESPONSE_OPEN_PARA)) -> VoidPtr: ...
@winfunctype('CRYPT32.dll')
def CertAddRefServerOcspResponse(hServerOcspResponse: VoidPtr) -> Void: ...
@winfunctype('CRYPT32.dll')
def CertCloseServerOcspResponse(hServerOcspResponse: VoidPtr, dwFlags: UInt32) -> Void: ...
@winfunctype('CRYPT32.dll')
def CertGetServerOcspResponseContext(hServerOcspResponse: VoidPtr, dwFlags: UInt32, pvReserved: VoidPtr) -> POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_SERVER_OCSP_RESPONSE_CONTEXT): ...
@winfunctype('CRYPT32.dll')
def CertAddRefServerOcspResponseContext(pServerOcspResponseContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_SERVER_OCSP_RESPONSE_CONTEXT)) -> Void: ...
@winfunctype('CRYPT32.dll')
def CertFreeServerOcspResponseContext(pServerOcspResponseContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_SERVER_OCSP_RESPONSE_CONTEXT)) -> Void: ...
@winfunctype('CRYPT32.dll')
def CertRetrieveLogoOrBiometricInfo(pCertContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT), lpszLogoOrBiometricType: win32more.Windows.Win32.Foundation.PSTR, dwRetrievalFlags: UInt32, dwTimeout: UInt32, dwFlags: UInt32, pvReserved: VoidPtr, ppbData: POINTER(POINTER(Byte)), pcbData: POINTER(UInt32), ppwszMimeType: POINTER(win32more.Windows.Win32.Foundation.PWSTR)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertSelectCertificateChains(pSelectionContext: POINTER(Guid), dwFlags: UInt32, pChainParameters: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_SELECT_CHAIN_PARA), cCriteria: UInt32, rgpCriteria: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_SELECT_CRITERIA), hStore: win32more.Windows.Win32.Security.Cryptography.HCERTSTORE, pcSelection: POINTER(UInt32), pprgpSelection: POINTER(POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CHAIN_CONTEXT)))) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertFreeCertificateChainList(prgpSelection: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CHAIN_CONTEXT))) -> Void: ...
@winfunctype('CRYPT32.dll')
def CryptRetrieveTimeStamp(wszUrl: win32more.Windows.Win32.Foundation.PWSTR, dwRetrievalFlags: UInt32, dwTimeout: UInt32, pszHashId: win32more.Windows.Win32.Foundation.PSTR, pPara: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_TIMESTAMP_PARA), pbData: POINTER(Byte), cbData: UInt32, ppTsContext: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_TIMESTAMP_CONTEXT)), ppTsSigner: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT)), phStore: POINTER(win32more.Windows.Win32.Security.Cryptography.HCERTSTORE)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptVerifyTimeStampSignature(pbTSContentInfo: POINTER(Byte), cbTSContentInfo: UInt32, pbData: POINTER(Byte), cbData: UInt32, hAdditionalStore: win32more.Windows.Win32.Security.Cryptography.HCERTSTORE, ppTsContext: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_TIMESTAMP_CONTEXT)), ppTsSigner: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT)), phStore: POINTER(win32more.Windows.Win32.Security.Cryptography.HCERTSTORE)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertIsWeakHash(dwHashUseType: UInt32, pwszCNGHashAlgid: win32more.Windows.Win32.Foundation.PWSTR, dwChainFlags: UInt32, pSignerChainContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CHAIN_CONTEXT), pTimeStamp: POINTER(win32more.Windows.Win32.Foundation.FILETIME), pwszFileName: win32more.Windows.Win32.Foundation.PWSTR) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptProtectData(pDataIn: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB), szDataDescr: win32more.Windows.Win32.Foundation.PWSTR, pOptionalEntropy: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB), pvReserved: VoidPtr, pPromptStruct: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPTPROTECT_PROMPTSTRUCT), dwFlags: UInt32, pDataOut: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptUnprotectData(pDataIn: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB), ppszDataDescr: POINTER(win32more.Windows.Win32.Foundation.PWSTR), pOptionalEntropy: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB), pvReserved: VoidPtr, pPromptStruct: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPTPROTECT_PROMPTSTRUCT), dwFlags: UInt32, pDataOut: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptUpdateProtectedState(pOldSid: win32more.Windows.Win32.Security.PSID, pwszOldPassword: win32more.Windows.Win32.Foundation.PWSTR, dwFlags: UInt32, pdwSuccessCount: POINTER(UInt32), pdwFailureCount: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptProtectMemory(pDataIn: VoidPtr, cbDataIn: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptUnprotectMemory(pDataIn: VoidPtr, cbDataIn: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('ncrypt.dll')
def NCryptRegisterProtectionDescriptorName(pwszName: win32more.Windows.Win32.Foundation.PWSTR, pwszDescriptorString: win32more.Windows.Win32.Foundation.PWSTR, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptQueryProtectionDescriptorName(pwszName: win32more.Windows.Win32.Foundation.PWSTR, pwszDescriptorString: win32more.Windows.Win32.Foundation.PWSTR, pcDescriptorString: POINTER(UIntPtr), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptCreateProtectionDescriptor(pwszDescriptorString: win32more.Windows.Win32.Foundation.PWSTR, dwFlags: UInt32, phDescriptor: POINTER(win32more.Windows.Win32.Security.NCRYPT_DESCRIPTOR_HANDLE)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptCloseProtectionDescriptor(hDescriptor: win32more.Windows.Win32.Security.NCRYPT_DESCRIPTOR_HANDLE) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptGetProtectionDescriptorInfo(hDescriptor: win32more.Windows.Win32.Security.NCRYPT_DESCRIPTOR_HANDLE, pMemPara: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_ALLOC_PARA), dwInfoType: UInt32, ppvInfo: POINTER(VoidPtr)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptProtectSecret(hDescriptor: win32more.Windows.Win32.Security.NCRYPT_DESCRIPTOR_HANDLE, dwFlags: UInt32, pbData: POINTER(Byte), cbData: UInt32, pMemPara: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_ALLOC_PARA), hWnd: win32more.Windows.Win32.Foundation.HWND, ppbProtectedBlob: POINTER(POINTER(Byte)), pcbProtectedBlob: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptUnprotectSecret(phDescriptor: POINTER(win32more.Windows.Win32.Security.NCRYPT_DESCRIPTOR_HANDLE), dwFlags: win32more.Windows.Win32.Security.Cryptography.NCRYPT_FLAGS, pbProtectedBlob: POINTER(Byte), cbProtectedBlob: UInt32, pMemPara: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_ALLOC_PARA), hWnd: win32more.Windows.Win32.Foundation.HWND, ppbData: POINTER(POINTER(Byte)), pcbData: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptStreamOpenToProtect(hDescriptor: win32more.Windows.Win32.Security.NCRYPT_DESCRIPTOR_HANDLE, dwFlags: UInt32, hWnd: win32more.Windows.Win32.Foundation.HWND, pStreamInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROTECT_STREAM_INFO), phStream: POINTER(win32more.Windows.Win32.Security.NCRYPT_STREAM_HANDLE)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptStreamOpenToUnprotect(pStreamInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROTECT_STREAM_INFO), dwFlags: UInt32, hWnd: win32more.Windows.Win32.Foundation.HWND, phStream: POINTER(win32more.Windows.Win32.Security.NCRYPT_STREAM_HANDLE)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptStreamOpenToUnprotectEx(pStreamInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROTECT_STREAM_INFO_EX), dwFlags: UInt32, hWnd: win32more.Windows.Win32.Foundation.HWND, phStream: POINTER(win32more.Windows.Win32.Security.NCRYPT_STREAM_HANDLE)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptStreamUpdate(hStream: win32more.Windows.Win32.Security.NCRYPT_STREAM_HANDLE, pbData: POINTER(Byte), cbData: UIntPtr, fFinal: win32more.Windows.Win32.Foundation.BOOL) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptStreamClose(hStream: win32more.Windows.Win32.Security.NCRYPT_STREAM_HANDLE) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('Mssign32.dll')
def SignError() -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('Mssign32.dll')
def SignerFreeSignerContext(pSignerContext: POINTER(win32more.Windows.Win32.Security.Cryptography.SIGNER_CONTEXT)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('Mssign32.dll')
def SignerSign(pSubjectInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.SIGNER_SUBJECT_INFO), pSignerCert: POINTER(win32more.Windows.Win32.Security.Cryptography.SIGNER_CERT), pSignatureInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.SIGNER_SIGNATURE_INFO), pProviderInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.SIGNER_PROVIDER_INFO), pwszHttpTimeStamp: win32more.Windows.Win32.Foundation.PWSTR, psRequest: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_ATTRIBUTES), pSipData: VoidPtr) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('Mssign32.dll')
def SignerSignEx(dwFlags: win32more.Windows.Win32.Security.Cryptography.SIGNER_SIGN_FLAGS, pSubjectInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.SIGNER_SUBJECT_INFO), pSignerCert: POINTER(win32more.Windows.Win32.Security.Cryptography.SIGNER_CERT), pSignatureInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.SIGNER_SIGNATURE_INFO), pProviderInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.SIGNER_PROVIDER_INFO), pwszHttpTimeStamp: win32more.Windows.Win32.Foundation.PWSTR, psRequest: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_ATTRIBUTES), pSipData: VoidPtr, ppSignerContext: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.SIGNER_CONTEXT))) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('Mssign32.dll')
def SignerSignEx2(dwFlags: win32more.Windows.Win32.Security.Cryptography.SIGNER_SIGN_FLAGS, pSubjectInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.SIGNER_SUBJECT_INFO), pSignerCert: POINTER(win32more.Windows.Win32.Security.Cryptography.SIGNER_CERT), pSignatureInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.SIGNER_SIGNATURE_INFO), pProviderInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.SIGNER_PROVIDER_INFO), dwTimestampFlags: win32more.Windows.Win32.Security.Cryptography.SIGNER_TIMESTAMP_FLAGS, pszTimestampAlgorithmOid: win32more.Windows.Win32.Foundation.PSTR, pwszHttpTimeStamp: win32more.Windows.Win32.Foundation.PWSTR, psRequest: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_ATTRIBUTES), pSipData: VoidPtr, ppSignerContext: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.SIGNER_CONTEXT)), pCryptoPolicy: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_STRONG_SIGN_PARA), pReserved: VoidPtr) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('Mssign32.dll')
def SignerSignEx3(dwFlags: win32more.Windows.Win32.Security.Cryptography.SIGNER_SIGN_FLAGS, pSubjectInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.SIGNER_SUBJECT_INFO), pSignerCert: POINTER(win32more.Windows.Win32.Security.Cryptography.SIGNER_CERT), pSignatureInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.SIGNER_SIGNATURE_INFO), pProviderInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.SIGNER_PROVIDER_INFO), dwTimestampFlags: win32more.Windows.Win32.Security.Cryptography.SIGNER_TIMESTAMP_FLAGS, pszTimestampAlgorithmOid: win32more.Windows.Win32.Foundation.PSTR, pwszHttpTimeStamp: win32more.Windows.Win32.Foundation.PWSTR, psRequest: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_ATTRIBUTES), pSipData: VoidPtr, ppSignerContext: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.SIGNER_CONTEXT)), pCryptoPolicy: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_STRONG_SIGN_PARA), pDigestSignInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.SIGNER_DIGEST_SIGN_INFO), pReserved: VoidPtr) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('Mssign32.dll')
def SignerTimeStamp(pSubjectInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.SIGNER_SUBJECT_INFO), pwszHttpTimeStamp: win32more.Windows.Win32.Foundation.PWSTR, psRequest: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_ATTRIBUTES), pSipData: VoidPtr) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('Mssign32.dll')
def SignerTimeStampEx(dwFlags: UInt32, pSubjectInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.SIGNER_SUBJECT_INFO), pwszHttpTimeStamp: win32more.Windows.Win32.Foundation.PWSTR, psRequest: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_ATTRIBUTES), pSipData: VoidPtr, ppSignerContext: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.SIGNER_CONTEXT))) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('Mssign32.dll')
def SignerTimeStampEx2(dwFlags: win32more.Windows.Win32.Security.Cryptography.SIGNER_TIMESTAMP_FLAGS, pSubjectInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.SIGNER_SUBJECT_INFO), pwszHttpTimeStamp: win32more.Windows.Win32.Foundation.PWSTR, dwAlgId: win32more.Windows.Win32.Security.Cryptography.ALG_ID, psRequest: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_ATTRIBUTES), pSipData: VoidPtr, ppSignerContext: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.SIGNER_CONTEXT))) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('Mssign32.dll')
def SignerTimeStampEx3(dwFlags: win32more.Windows.Win32.Security.Cryptography.SIGNER_TIMESTAMP_FLAGS, dwIndex: UInt32, pSubjectInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.SIGNER_SUBJECT_INFO), pwszHttpTimeStamp: win32more.Windows.Win32.Foundation.PWSTR, pszAlgorithmOid: win32more.Windows.Win32.Foundation.PWSTR, psRequest: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_ATTRIBUTES), pSipData: VoidPtr, ppSignerContext: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.SIGNER_CONTEXT)), pCryptoPolicy: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_STRONG_SIGN_PARA), pReserved: VoidPtr) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('CRYPTXML.dll')
def CryptXmlClose(hCryptXml: VoidPtr) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('CRYPTXML.dll')
def CryptXmlGetTransforms(ppConfig: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_TRANSFORM_CHAIN_CONFIG))) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('CRYPTXML.dll')
def CryptXmlOpenToEncode(pConfig: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_TRANSFORM_CHAIN_CONFIG), dwFlags: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_FLAGS, wszId: win32more.Windows.Win32.Foundation.PWSTR, rgProperty: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_PROPERTY), cProperty: UInt32, pEncoded: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_BLOB), phSignature: POINTER(VoidPtr)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('CRYPTXML.dll')
def CryptXmlOpenToDecode(pConfig: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_TRANSFORM_CHAIN_CONFIG), dwFlags: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_FLAGS, rgProperty: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_PROPERTY), cProperty: UInt32, pEncoded: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_BLOB), phCryptXml: POINTER(VoidPtr)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('CRYPTXML.dll')
def CryptXmlAddObject(hSignatureOrObject: VoidPtr, dwFlags: UInt32, rgProperty: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_PROPERTY), cProperty: UInt32, pEncoded: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_BLOB), ppObject: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_OBJECT))) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('CRYPTXML.dll')
def CryptXmlCreateReference(hCryptXml: VoidPtr, dwFlags: UInt32, wszId: win32more.Windows.Win32.Foundation.PWSTR, wszURI: win32more.Windows.Win32.Foundation.PWSTR, wszType: win32more.Windows.Win32.Foundation.PWSTR, pDigestMethod: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_ALGORITHM), cTransform: UInt32, rgTransform: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_ALGORITHM), phReference: POINTER(VoidPtr)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('CRYPTXML.dll')
def CryptXmlDigestReference(hReference: VoidPtr, dwFlags: UInt32, pDataProviderIn: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_DATA_PROVIDER)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('CRYPTXML.dll')
def CryptXmlSetHMACSecret(hSignature: VoidPtr, pbSecret: POINTER(Byte), cbSecret: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('CRYPTXML.dll')
def CryptXmlSign(hSignature: VoidPtr, hKey: win32more.Windows.Win32.Security.Cryptography.HCRYPTPROV_OR_NCRYPT_KEY_HANDLE, dwKeySpec: win32more.Windows.Win32.Security.Cryptography.CERT_KEY_SPEC, dwFlags: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_FLAGS, dwKeyInfoSpec: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_KEYINFO_SPEC, pvKeyInfoSpec: VoidPtr, pSignatureMethod: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_ALGORITHM), pCanonicalization: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_ALGORITHM)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('CRYPTXML.dll')
def CryptXmlImportPublicKey(dwFlags: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_FLAGS, pKeyValue: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_KEY_VALUE), phKey: POINTER(win32more.Windows.Win32.Security.Cryptography.BCRYPT_KEY_HANDLE)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('CRYPTXML.dll')
def CryptXmlVerifySignature(hSignature: VoidPtr, hKey: win32more.Windows.Win32.Security.Cryptography.BCRYPT_KEY_HANDLE, dwFlags: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_FLAGS) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('CRYPTXML.dll')
def CryptXmlGetDocContext(hCryptXml: VoidPtr, ppStruct: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_DOC_CTXT))) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('CRYPTXML.dll')
def CryptXmlGetSignature(hCryptXml: VoidPtr, ppStruct: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_SIGNATURE))) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('CRYPTXML.dll')
def CryptXmlGetReference(hCryptXml: VoidPtr, ppStruct: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_REFERENCE))) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('CRYPTXML.dll')
def CryptXmlGetStatus(hCryptXml: VoidPtr, pStatus: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_STATUS)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('CRYPTXML.dll')
def CryptXmlEncode(hCryptXml: VoidPtr, dwCharset: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_CHARSET, rgProperty: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_PROPERTY), cProperty: UInt32, pvCallbackState: VoidPtr, pfnWrite: win32more.Windows.Win32.Security.Cryptography.PFN_CRYPT_XML_WRITE_CALLBACK) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('CRYPTXML.dll')
def CryptXmlGetAlgorithmInfo(pXmlAlgorithm: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_ALGORITHM), dwFlags: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_FLAGS, ppAlgInfo: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_ALGORITHM_INFO))) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('CRYPTXML.dll')
def CryptXmlFindAlgorithmInfo(dwFindByType: UInt32, pvFindBy: VoidPtr, dwGroupId: UInt32, dwFlags: UInt32) -> POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_ALGORITHM_INFO): ...
@winfunctype('CRYPTXML.dll')
def CryptXmlEnumAlgorithmInfo(dwGroupId: UInt32, dwFlags: UInt32, pvArg: VoidPtr, pfnEnumAlgInfo: win32more.Windows.Win32.Security.Cryptography.PFN_CRYPT_XML_ENUM_ALG_INFO) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('infocardapi.dll')
def GetToken(cPolicyChain: UInt32, pPolicyChain: POINTER(win32more.Windows.Win32.Security.Cryptography.POLICY_ELEMENT), securityToken: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.GENERIC_XML_TOKEN)), phProofTokenCrypto: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.INFORMATIONCARD_CRYPTO_HANDLE))) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('infocardapi.dll')
def ManageCardSpace() -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('infocardapi.dll')
def ImportInformationCard(fileName: win32more.Windows.Win32.Foundation.PWSTR) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('infocardapi.dll')
def Encrypt(hCrypto: POINTER(win32more.Windows.Win32.Security.Cryptography.INFORMATIONCARD_CRYPTO_HANDLE), fOAEP: win32more.Windows.Win32.Foundation.BOOL, cbInData: UInt32, pInData: POINTER(Byte), pcbOutData: POINTER(UInt32), ppOutData: POINTER(POINTER(Byte))) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('infocardapi.dll')
def Decrypt(hCrypto: POINTER(win32more.Windows.Win32.Security.Cryptography.INFORMATIONCARD_CRYPTO_HANDLE), fOAEP: win32more.Windows.Win32.Foundation.BOOL, cbInData: UInt32, pInData: POINTER(Byte), pcbOutData: POINTER(UInt32), ppOutData: POINTER(POINTER(Byte))) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('infocardapi.dll')
def SignHash(hCrypto: POINTER(win32more.Windows.Win32.Security.Cryptography.INFORMATIONCARD_CRYPTO_HANDLE), cbHash: UInt32, pHash: POINTER(Byte), hashAlgOid: win32more.Windows.Win32.Foundation.PWSTR, pcbSig: POINTER(UInt32), ppSig: POINTER(POINTER(Byte))) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('infocardapi.dll')
def VerifyHash(hCrypto: POINTER(win32more.Windows.Win32.Security.Cryptography.INFORMATIONCARD_CRYPTO_HANDLE), cbHash: UInt32, pHash: POINTER(Byte), hashAlgOid: win32more.Windows.Win32.Foundation.PWSTR, cbSig: UInt32, pSig: POINTER(Byte), pfVerified: POINTER(win32more.Windows.Win32.Foundation.BOOL)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('infocardapi.dll')
def GetCryptoTransform(hSymmetricCrypto: POINTER(win32more.Windows.Win32.Security.Cryptography.INFORMATIONCARD_CRYPTO_HANDLE), mode: UInt32, padding: win32more.Windows.Win32.Security.Cryptography.PaddingMode, feedbackSize: UInt32, direction: win32more.Windows.Win32.Security.Cryptography.Direction, cbIV: UInt32, pIV: POINTER(Byte), pphTransform: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.INFORMATIONCARD_CRYPTO_HANDLE))) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('infocardapi.dll')
def GetKeyedHash(hSymmetricCrypto: POINTER(win32more.Windows.Win32.Security.Cryptography.INFORMATIONCARD_CRYPTO_HANDLE), pphHash: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.INFORMATIONCARD_CRYPTO_HANDLE))) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('infocardapi.dll')
def TransformBlock(hCrypto: POINTER(win32more.Windows.Win32.Security.Cryptography.INFORMATIONCARD_CRYPTO_HANDLE), cbInData: UInt32, pInData: POINTER(Byte), pcbOutData: POINTER(UInt32), ppOutData: POINTER(POINTER(Byte))) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('infocardapi.dll')
def TransformFinalBlock(hCrypto: POINTER(win32more.Windows.Win32.Security.Cryptography.INFORMATIONCARD_CRYPTO_HANDLE), cbInData: UInt32, pInData: POINTER(Byte), pcbOutData: POINTER(UInt32), ppOutData: POINTER(POINTER(Byte))) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('infocardapi.dll')
def HashCore(hCrypto: POINTER(win32more.Windows.Win32.Security.Cryptography.INFORMATIONCARD_CRYPTO_HANDLE), cbInData: UInt32, pInData: POINTER(Byte)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('infocardapi.dll')
def HashFinal(hCrypto: POINTER(win32more.Windows.Win32.Security.Cryptography.INFORMATIONCARD_CRYPTO_HANDLE), cbInData: UInt32, pInData: POINTER(Byte), pcbOutData: POINTER(UInt32), ppOutData: POINTER(POINTER(Byte))) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('infocardapi.dll')
def FreeToken(pAllocMemory: POINTER(win32more.Windows.Win32.Security.Cryptography.GENERIC_XML_TOKEN)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('infocardapi.dll')
def CloseCryptoHandle(hCrypto: POINTER(win32more.Windows.Win32.Security.Cryptography.INFORMATIONCARD_CRYPTO_HANDLE)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('infocardapi.dll')
def GenerateDerivedKey(hCrypto: POINTER(win32more.Windows.Win32.Security.Cryptography.INFORMATIONCARD_CRYPTO_HANDLE), cbLabel: UInt32, pLabel: POINTER(Byte), cbNonce: UInt32, pNonce: POINTER(Byte), derivedKeyLength: UInt32, offset: UInt32, algId: win32more.Windows.Win32.Foundation.PWSTR, pcbKey: POINTER(UInt32), ppKey: POINTER(POINTER(Byte))) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('infocardapi.dll')
def GetBrowserToken(dwParamType: UInt32, pParam: VoidPtr, pcbToken: POINTER(UInt32), ppToken: POINTER(POINTER(Byte))) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('bcryptprimitives.dll')
def GetCipherInterface(pszProviderName: win32more.Windows.Win32.Foundation.PWSTR, pszAlgId: win32more.Windows.Win32.Foundation.PWSTR, ppFunctionTable: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.BCRYPT_CIPHER_FUNCTION_TABLE)), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcryptprimitives.dll')
def GetHashInterface(pszProviderName: win32more.Windows.Win32.Foundation.PWSTR, pszAlgId: win32more.Windows.Win32.Foundation.PWSTR, ppFunctionTable: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.BCRYPT_HASH_FUNCTION_TABLE)), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcryptprimitives.dll')
def GetAsymmetricEncryptionInterface(pszProviderName: win32more.Windows.Win32.Foundation.PWSTR, pszAlgId: win32more.Windows.Win32.Foundation.PWSTR, ppFunctionTable: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.BCRYPT_ASYMMETRIC_ENCRYPTION_FUNCTION_TABLE)), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcryptprimitives.dll')
def GetSecretAgreementInterface(pszProviderName: win32more.Windows.Win32.Foundation.PWSTR, pszAlgId: win32more.Windows.Win32.Foundation.PWSTR, ppFunctionTable: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.BCRYPT_SECRET_AGREEMENT_FUNCTION_TABLE)), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcryptprimitives.dll')
def GetSignatureInterface(pszProviderName: win32more.Windows.Win32.Foundation.PWSTR, pszAlgId: win32more.Windows.Win32.Foundation.PWSTR, ppFunctionTable: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.BCRYPT_SIGNATURE_FUNCTION_TABLE)), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcryptprimitives.dll')
def GetRngInterface(pszProviderName: win32more.Windows.Win32.Foundation.PWSTR, ppFunctionTable: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.BCRYPT_RNG_FUNCTION_TABLE)), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcryptprimitives.dll')
def GetKeyDerivationInterface(pszProviderName: win32more.Windows.Win32.Foundation.PWSTR, pszAlgId: win32more.Windows.Win32.Foundation.PWSTR, ppFunctionTable: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.BCRYPT_KEY_DERIVATION_FUNCTION_TABLE)), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptRegisterProvider(pszProvider: win32more.Windows.Win32.Foundation.PWSTR, dwFlags: UInt32, pReg: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_PROVIDER_REG)) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptUnregisterProvider(pszProvider: win32more.Windows.Win32.Foundation.PWSTR) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptAddContextFunctionProvider(dwTable: UInt32, pszContext: win32more.Windows.Win32.Foundation.PWSTR, dwInterface: UInt32, pszFunction: win32more.Windows.Win32.Foundation.PWSTR, pszProvider: win32more.Windows.Win32.Foundation.PWSTR, dwPosition: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptRemoveContextFunctionProvider(dwTable: UInt32, pszContext: win32more.Windows.Win32.Foundation.PWSTR, dwInterface: UInt32, pszFunction: win32more.Windows.Win32.Foundation.PWSTR, pszProvider: win32more.Windows.Win32.Foundation.PWSTR) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('ncrypt.dll')
def GetKeyStorageInterface(pszProviderName: win32more.Windows.Win32.Foundation.PWSTR, ppFunctionTable: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_STORAGE_FUNCTION_TABLE)), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('ncrypt.dll')
def SslChangeNotify(hEvent: win32more.Windows.Win32.Foundation.HANDLE, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def SslComputeClientAuthHash(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hMasterKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, hHandshakeHash: win32more.Windows.Win32.Security.Cryptography.NCRYPT_HASH_HANDLE, pszAlgId: win32more.Windows.Win32.Foundation.PWSTR, pbOutput: POINTER(Byte), cbOutput: UInt32, pcbResult: POINTER(UInt32), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def SslComputeEapKeyBlock(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hMasterKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, pbRandoms: POINTER(Byte), cbRandoms: UInt32, pbOutput: POINTER(Byte), cbOutput: UInt32, pcbResult: POINTER(UInt32), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def SslComputeFinishedHash(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hMasterKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, hHandshakeHash: win32more.Windows.Win32.Security.Cryptography.NCRYPT_HASH_HANDLE, pbOutput: POINTER(Byte), cbOutput: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def SslCreateEphemeralKey(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, phEphemeralKey: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE), dwProtocol: UInt32, dwCipherSuite: UInt32, dwKeyType: UInt32, dwKeyBitLen: UInt32, pbParams: POINTER(Byte), cbParams: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def SslCreateHandshakeHash(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, phHandshakeHash: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_HASH_HANDLE), dwProtocol: UInt32, dwCipherSuite: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def SslDecryptPacket(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, pbInput: POINTER(Byte), cbInput: UInt32, pbOutput: POINTER(Byte), cbOutput: UInt32, pcbResult: POINTER(UInt32), SequenceNumber: UInt64, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def SslEncryptPacket(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, pbInput: POINTER(Byte), cbInput: UInt32, pbOutput: POINTER(Byte), cbOutput: UInt32, pcbResult: POINTER(UInt32), SequenceNumber: UInt64, dwContentType: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def SslEnumCipherSuites(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hPrivateKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, ppCipherSuite: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_SSL_CIPHER_SUITE)), ppEnumState: POINTER(VoidPtr), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def SslEnumCipherSuitesEx(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hPrivateKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, ppCipherSuite: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_SSL_CIPHER_SUITE_EX)), ppEnumState: POINTER(VoidPtr), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def SslEnumEccCurves(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, pEccCurveCount: POINTER(UInt32), ppEccCurve: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_SSL_ECC_CURVE)), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def SslEnumProtocolProviders(pdwProviderCount: POINTER(UInt32), ppProviderList: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.NCryptProviderName)), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def SslExportKey(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, pszBlobType: win32more.Windows.Win32.Foundation.PWSTR, pbOutput: POINTER(Byte), cbOutput: UInt32, pcbResult: POINTER(UInt32), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def SslFreeBuffer(pvInput: VoidPtr) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def SslFreeObject(hObject: win32more.Windows.Win32.Security.Cryptography.NCRYPT_HANDLE, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def SslGenerateMasterKey(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hPrivateKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, hPublicKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, phMasterKey: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE), dwProtocol: UInt32, dwCipherSuite: UInt32, pParameterList: POINTER(win32more.Windows.Win32.Security.Cryptography.BCryptBufferDesc), pbOutput: POINTER(Byte), cbOutput: UInt32, pcbResult: POINTER(UInt32), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def SslGenerateSessionKeys(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hMasterKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, phReadKey: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE), phWriteKey: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE), pParameterList: POINTER(win32more.Windows.Win32.Security.Cryptography.BCryptBufferDesc), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def SslGetKeyProperty(hKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, pszProperty: win32more.Windows.Win32.Foundation.PWSTR, ppbOutput: POINTER(POINTER(Byte)), pcbOutput: POINTER(UInt32), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def SslGetProviderProperty(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, pszProperty: win32more.Windows.Win32.Foundation.PWSTR, ppbOutput: POINTER(POINTER(Byte)), pcbOutput: POINTER(UInt32), ppEnumState: POINTER(VoidPtr), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def SslHashHandshake(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hHandshakeHash: win32more.Windows.Win32.Security.Cryptography.NCRYPT_HASH_HANDLE, pbInput: POINTER(Byte), cbInput: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def SslImportKey(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, phKey: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE), pszBlobType: win32more.Windows.Win32.Foundation.PWSTR, pbKeyBlob: POINTER(Byte), cbKeyBlob: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def SslImportMasterKey(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hPrivateKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, phMasterKey: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE), dwProtocol: UInt32, dwCipherSuite: UInt32, pParameterList: POINTER(win32more.Windows.Win32.Security.Cryptography.BCryptBufferDesc), pbEncryptedKey: POINTER(Byte), cbEncryptedKey: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def SslLookupCipherSuiteInfo(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, dwProtocol: UInt32, dwCipherSuite: UInt32, dwKeyType: UInt32, pCipherSuite: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_SSL_CIPHER_SUITE), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def SslOpenPrivateKey(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, phPrivateKey: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE), pCertContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def SslOpenProvider(phSslProvider: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE), pszProviderName: win32more.Windows.Win32.Foundation.PWSTR, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def SslSignHash(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hPrivateKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, pbHashValue: POINTER(Byte), cbHashValue: UInt32, pbSignature: POINTER(Byte), cbSignature: UInt32, pcbResult: POINTER(UInt32), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def SslVerifySignature(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hPublicKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, pbHashValue: POINTER(Byte), cbHashValue: UInt32, pbSignature: POINTER(Byte), cbSignature: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def SslLookupCipherLengths(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, dwProtocol: UInt32, dwCipherSuite: UInt32, dwKeyType: UInt32, pCipherLengths: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_SSL_CIPHER_LENGTHS), cbCipherLengths: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def SslCreateClientAuthHash(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, phHandshakeHash: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_HASH_HANDLE), dwProtocol: UInt32, dwCipherSuite: UInt32, pszHashAlgId: win32more.Windows.Win32.Foundation.PWSTR, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def SslGetCipherSuitePRFHashAlgorithm(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, dwProtocol: UInt32, dwCipherSuite: UInt32, dwKeyType: UInt32, szPRFHash: win32more.Windows.Win32.Foundation.PWSTR, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def SslComputeSessionHash(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hHandshakeHash: win32more.Windows.Win32.Security.Cryptography.NCRYPT_HASH_HANDLE, dwProtocol: UInt32, pbOutput: POINTER(Byte), cbOutput: UInt32, pcbResult: POINTER(UInt32), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def SslGeneratePreMasterKey(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hPublicKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, phPreMasterKey: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE), dwProtocol: UInt32, dwCipherSuite: UInt32, pParameterList: POINTER(win32more.Windows.Win32.Security.Cryptography.BCryptBufferDesc), pbOutput: POINTER(Byte), cbOutput: UInt32, pcbResult: POINTER(UInt32), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def SslExportKeyingMaterial(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hMasterKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, sLabel: win32more.Windows.Win32.Foundation.PSTR, pbRandoms: POINTER(Byte), cbRandoms: UInt32, pbContextValue: POINTER(Byte), cbContextValue: UInt16, pbOutput: POINTER(Byte), cbOutput: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def SslExtractEarlyKey(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hPreSharedKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, phEarlyKey: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE), dwProtocol: UInt32, dwCipherSuite: UInt32, pParameterList: POINTER(win32more.Windows.Win32.Security.Cryptography.BCryptBufferDesc), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def SslExtractHandshakeKey(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hPrivateKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, hPublicKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, hEarlyKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, phHandshakeKey: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE), pParameterList: POINTER(win32more.Windows.Win32.Security.Cryptography.BCryptBufferDesc), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def SslExtractMasterKey(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hHandshakeKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, phMasterKey: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE), pParameterList: POINTER(win32more.Windows.Win32.Security.Cryptography.BCryptBufferDesc), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def SslExpandTrafficKeys(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hBaseKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, hHashValue: win32more.Windows.Win32.Security.Cryptography.NCRYPT_HASH_HANDLE, phClientTrafficKey: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE), phServerTrafficKey: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE), pParameterList: POINTER(win32more.Windows.Win32.Security.Cryptography.BCryptBufferDesc), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def SslExpandWriteKey(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hBaseTrafficKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, phWriteKey: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE), pParameterList: POINTER(win32more.Windows.Win32.Security.Cryptography.BCryptBufferDesc), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def SslExpandExporterMasterKey(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hBaseKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, hHashValue: win32more.Windows.Win32.Security.Cryptography.NCRYPT_HASH_HANDLE, phExporterMasterKey: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE), pParameterList: POINTER(win32more.Windows.Win32.Security.Cryptography.BCryptBufferDesc), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def SslExpandResumptionMasterKey(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hMasterKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, hHashValue: win32more.Windows.Win32.Security.Cryptography.NCRYPT_HASH_HANDLE, phResumptionMasterKey: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE), pParameterList: POINTER(win32more.Windows.Win32.Security.Cryptography.BCryptBufferDesc), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def SslDuplicateTranscriptHash(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hTranscriptHash: win32more.Windows.Win32.Security.Cryptography.NCRYPT_HASH_HANDLE, phTranscriptHash: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_HASH_HANDLE), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def SslExpandBinderKey(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hEarlyKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, phBinderKey: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE), pParameterList: POINTER(win32more.Windows.Win32.Security.Cryptography.BCryptBufferDesc), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def SslExpandPreSharedKey(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hResumptionMasterKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, pbTicketNonce: POINTER(Byte), cbTicketNonce: UInt32, phPreSharedKey: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE), pParameterList: POINTER(win32more.Windows.Win32.Security.Cryptography.BCryptBufferDesc), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def GetSChannelInterface(pszProviderName: win32more.Windows.Win32.Foundation.PWSTR, ppFunctionTable: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_SSL_FUNCTION_TABLE)), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('ncrypt.dll')
def SslIncrementProviderReferenceCount(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def SslDecrementProviderReferenceCount(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE) -> win32more.Windows.Win32.Foundation.HRESULT: ...
BCRYPTGENRANDOM_FLAGS = UInt32
BCRYPT_RNG_USE_ENTROPY_IN_BUFFER: win32more.Windows.Win32.Security.Cryptography.BCRYPTGENRANDOM_FLAGS = 1
BCRYPT_USE_SYSTEM_PREFERRED_RNG: win32more.Windows.Win32.Security.Cryptography.BCRYPTGENRANDOM_FLAGS = 2
class BCRYPT_ALGORITHM_IDENTIFIER(Structure):
    pszName: win32more.Windows.Win32.Foundation.PWSTR
    dwClass: UInt32
    dwFlags: UInt32
BCRYPT_ALG_HANDLE = VoidPtr
class BCRYPT_ASYMMETRIC_ENCRYPTION_FUNCTION_TABLE(Structure):
    Version: win32more.Windows.Win32.Security.Cryptography.BCRYPT_INTERFACE_VERSION
    OpenAlgorithmProvider: win32more.Windows.Win32.Security.Cryptography.BCryptOpenAlgorithmProviderFn
    GetProperty: win32more.Windows.Win32.Security.Cryptography.BCryptGetPropertyFn
    SetProperty: win32more.Windows.Win32.Security.Cryptography.BCryptSetPropertyFn
    CloseAlgorithmProvider: win32more.Windows.Win32.Security.Cryptography.BCryptCloseAlgorithmProviderFn
    GenerateKeyPair: win32more.Windows.Win32.Security.Cryptography.BCryptGenerateKeyPairFn
    FinalizeKeyPair: win32more.Windows.Win32.Security.Cryptography.BCryptFinalizeKeyPairFn
    Encrypt: win32more.Windows.Win32.Security.Cryptography.BCryptEncryptFn
    Decrypt: win32more.Windows.Win32.Security.Cryptography.BCryptDecryptFn
    ImportKeyPair: win32more.Windows.Win32.Security.Cryptography.BCryptImportKeyPairFn
    ExportKey: win32more.Windows.Win32.Security.Cryptography.BCryptExportKeyFn
    DestroyKey: win32more.Windows.Win32.Security.Cryptography.BCryptDestroyKeyFn
    SignHash: win32more.Windows.Win32.Security.Cryptography.BCryptSignHashFn
    VerifySignature: win32more.Windows.Win32.Security.Cryptography.BCryptVerifySignatureFn
class BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO(Structure):
    cbSize: UInt32
    dwInfoVersion: UInt32
    pbNonce: POINTER(Byte)
    cbNonce: UInt32
    pbAuthData: POINTER(Byte)
    cbAuthData: UInt32
    pbTag: POINTER(Byte)
    cbTag: UInt32
    pbMacContext: POINTER(Byte)
    cbMacContext: UInt32
    cbAAD: UInt32
    cbData: UInt64
    dwFlags: UInt32
class BCRYPT_CIPHER_FUNCTION_TABLE(Structure):
    Version: win32more.Windows.Win32.Security.Cryptography.BCRYPT_INTERFACE_VERSION
    OpenAlgorithmProvider: win32more.Windows.Win32.Security.Cryptography.BCryptOpenAlgorithmProviderFn
    GetProperty: win32more.Windows.Win32.Security.Cryptography.BCryptGetPropertyFn
    SetProperty: win32more.Windows.Win32.Security.Cryptography.BCryptSetPropertyFn
    CloseAlgorithmProvider: win32more.Windows.Win32.Security.Cryptography.BCryptCloseAlgorithmProviderFn
    GenerateKey: win32more.Windows.Win32.Security.Cryptography.BCryptGenerateSymmetricKeyFn
    Encrypt: win32more.Windows.Win32.Security.Cryptography.BCryptEncryptFn
    Decrypt: win32more.Windows.Win32.Security.Cryptography.BCryptDecryptFn
    ImportKey: win32more.Windows.Win32.Security.Cryptography.BCryptImportKeyFn
    ExportKey: win32more.Windows.Win32.Security.Cryptography.BCryptExportKeyFn
    DuplicateKey: win32more.Windows.Win32.Security.Cryptography.BCryptDuplicateKeyFn
    DestroyKey: win32more.Windows.Win32.Security.Cryptography.BCryptDestroyKeyFn
class BCRYPT_DH_KEY_BLOB(Structure):
    dwMagic: win32more.Windows.Win32.Security.Cryptography.BCRYPT_DH_KEY_BLOB_MAGIC
    cbKey: UInt32
BCRYPT_DH_KEY_BLOB_MAGIC = UInt32
BCRYPT_DH_PUBLIC_MAGIC: win32more.Windows.Win32.Security.Cryptography.BCRYPT_DH_KEY_BLOB_MAGIC = 1112557636
BCRYPT_DH_PRIVATE_MAGIC: win32more.Windows.Win32.Security.Cryptography.BCRYPT_DH_KEY_BLOB_MAGIC = 1448101956
class BCRYPT_DH_PARAMETER_HEADER(Structure):
    cbLength: UInt32
    dwMagic: UInt32
    cbKeyLength: UInt32
class BCRYPT_DSA_KEY_BLOB(Structure):
    dwMagic: win32more.Windows.Win32.Security.Cryptography.BCRYPT_DSA_MAGIC
    cbKey: UInt32
    Count: Byte * 4
    Seed: Byte * 20
    q: Byte * 20
class BCRYPT_DSA_KEY_BLOB_V2(Structure):
    dwMagic: win32more.Windows.Win32.Security.Cryptography.BCRYPT_DSA_MAGIC
    cbKey: UInt32
    hashAlgorithm: win32more.Windows.Win32.Security.Cryptography.HASHALGORITHM_ENUM
    standardVersion: win32more.Windows.Win32.Security.Cryptography.DSAFIPSVERSION_ENUM
    cbSeedLength: UInt32
    cbGroupSize: UInt32
    Count: Byte * 4
BCRYPT_DSA_MAGIC = UInt32
BCRYPT_DSA_PUBLIC_MAGIC: win32more.Windows.Win32.Security.Cryptography.BCRYPT_DSA_MAGIC = 1112560452
BCRYPT_DSA_PRIVATE_MAGIC: win32more.Windows.Win32.Security.Cryptography.BCRYPT_DSA_MAGIC = 1448104772
class BCRYPT_DSA_PARAMETER_HEADER(Structure):
    cbLength: UInt32
    dwMagic: UInt32
    cbKeyLength: UInt32
    Count: Byte * 4
    Seed: Byte * 20
    q: Byte * 20
class BCRYPT_DSA_PARAMETER_HEADER_V2(Structure):
    cbLength: UInt32
    dwMagic: UInt32
    cbKeyLength: UInt32
    hashAlgorithm: win32more.Windows.Win32.Security.Cryptography.HASHALGORITHM_ENUM
    standardVersion: win32more.Windows.Win32.Security.Cryptography.DSAFIPSVERSION_ENUM
    cbSeedLength: UInt32
    cbGroupSize: UInt32
    Count: Byte * 4
class BCRYPT_ECCFULLKEY_BLOB(Structure):
    dwMagic: UInt32
    dwVersion: UInt32
    dwCurveType: win32more.Windows.Win32.Security.Cryptography.ECC_CURVE_TYPE_ENUM
    dwCurveGenerationAlgId: win32more.Windows.Win32.Security.Cryptography.ECC_CURVE_ALG_ID_ENUM
    cbFieldLength: UInt32
    cbSubgroupOrder: UInt32
    cbCofactor: UInt32
    cbSeed: UInt32
class BCRYPT_ECCKEY_BLOB(Structure):
    dwMagic: UInt32
    cbKey: UInt32
class BCRYPT_ECC_CURVE_NAMES(Structure):
    dwEccCurveNames: UInt32
    pEccCurveNames: POINTER(win32more.Windows.Win32.Foundation.PWSTR)
class BCRYPT_ECC_PARAMETER_HEADER(Structure):
    dwVersion: UInt32
    dwCurveType: win32more.Windows.Win32.Security.Cryptography.ECC_CURVE_TYPE_ENUM
    dwCurveGenerationAlgId: win32more.Windows.Win32.Security.Cryptography.ECC_CURVE_ALG_ID_ENUM
    cbFieldLength: UInt32
    cbSubgroupOrder: UInt32
    cbCofactor: UInt32
    cbSeed: UInt32
BCRYPT_FLAGS = UInt32
BCRYPT_BLOCK_PADDING: win32more.Windows.Win32.Security.Cryptography.BCRYPT_FLAGS = 1
BCRYPT_PAD_NONE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_FLAGS = 1
BCRYPT_PAD_OAEP: win32more.Windows.Win32.Security.Cryptography.BCRYPT_FLAGS = 4
BCRYPT_PAD_PKCS1: win32more.Windows.Win32.Security.Cryptography.BCRYPT_FLAGS = 2
BCRYPT_PAD_PSS: win32more.Windows.Win32.Security.Cryptography.BCRYPT_FLAGS = 8
BCRYPT_HANDLE = VoidPtr
class BCRYPT_HASH_FUNCTION_TABLE(Structure):
    Version: win32more.Windows.Win32.Security.Cryptography.BCRYPT_INTERFACE_VERSION
    OpenAlgorithmProvider: win32more.Windows.Win32.Security.Cryptography.BCryptOpenAlgorithmProviderFn
    GetProperty: win32more.Windows.Win32.Security.Cryptography.BCryptGetPropertyFn
    SetProperty: win32more.Windows.Win32.Security.Cryptography.BCryptSetPropertyFn
    CloseAlgorithmProvider: win32more.Windows.Win32.Security.Cryptography.BCryptCloseAlgorithmProviderFn
    CreateHash: win32more.Windows.Win32.Security.Cryptography.BCryptCreateHashFn
    HashData: win32more.Windows.Win32.Security.Cryptography.BCryptHashDataFn
    FinishHash: win32more.Windows.Win32.Security.Cryptography.BCryptFinishHashFn
    DuplicateHash: win32more.Windows.Win32.Security.Cryptography.BCryptDuplicateHashFn
    DestroyHash: win32more.Windows.Win32.Security.Cryptography.BCryptDestroyHashFn
    CreateMultiHash: win32more.Windows.Win32.Security.Cryptography.BCryptCreateMultiHashFn
    ProcessMultiOperations: win32more.Windows.Win32.Security.Cryptography.BCryptProcessMultiOperationsFn
BCRYPT_HASH_HANDLE = VoidPtr
BCRYPT_HASH_OPERATION_TYPE = Int32
BCRYPT_HASH_OPERATION_HASH_DATA: win32more.Windows.Win32.Security.Cryptography.BCRYPT_HASH_OPERATION_TYPE = 1
BCRYPT_HASH_OPERATION_FINISH_HASH: win32more.Windows.Win32.Security.Cryptography.BCRYPT_HASH_OPERATION_TYPE = 2
BCRYPT_INTERFACE = UInt32
BCRYPT_ASYMMETRIC_ENCRYPTION_INTERFACE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_INTERFACE = 3
BCRYPT_CIPHER_INTERFACE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_INTERFACE = 1
BCRYPT_HASH_INTERFACE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_INTERFACE = 2
BCRYPT_RNG_INTERFACE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_INTERFACE = 6
BCRYPT_SECRET_AGREEMENT_INTERFACE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_INTERFACE = 4
BCRYPT_SIGNATURE_INTERFACE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_INTERFACE = 5
NCRYPT_KEY_STORAGE_INTERFACE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_INTERFACE = 65537
NCRYPT_SCHANNEL_INTERFACE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_INTERFACE = 65538
NCRYPT_SCHANNEL_SIGNATURE_INTERFACE: win32more.Windows.Win32.Security.Cryptography.BCRYPT_INTERFACE = 65539
class BCRYPT_INTERFACE_VERSION(Structure):
    MajorVersion: UInt16
    MinorVersion: UInt16
class BCRYPT_KEY_BLOB(Structure):
    Magic: UInt32
class BCRYPT_KEY_DATA_BLOB_HEADER(Structure):
    dwMagic: UInt32
    dwVersion: UInt32
    cbKeyData: UInt32
class BCRYPT_KEY_DERIVATION_FUNCTION_TABLE(Structure):
    Version: win32more.Windows.Win32.Security.Cryptography.BCRYPT_INTERFACE_VERSION
    OpenAlgorithmProvider: win32more.Windows.Win32.Security.Cryptography.BCryptOpenAlgorithmProviderFn
    GetProperty: win32more.Windows.Win32.Security.Cryptography.BCryptGetPropertyFn
    SetProperty: win32more.Windows.Win32.Security.Cryptography.BCryptSetPropertyFn
    CloseAlgorithmProvider: win32more.Windows.Win32.Security.Cryptography.BCryptCloseAlgorithmProviderFn
    GenerateKey: win32more.Windows.Win32.Security.Cryptography.BCryptGenerateSymmetricKeyFn
    DestroyKey: win32more.Windows.Win32.Security.Cryptography.BCryptDestroyKeyFn
    KeyDerivation: win32more.Windows.Win32.Security.Cryptography.BCryptKeyDerivationFn
    ExportKey: win32more.Windows.Win32.Security.Cryptography.BCryptExportKeyFn
    ImportKey: win32more.Windows.Win32.Security.Cryptography.BCryptImportKeyFn
    DuplicateKey: win32more.Windows.Win32.Security.Cryptography.BCryptDuplicateKeyFn
BCRYPT_KEY_HANDLE = VoidPtr
class BCRYPT_KEY_LENGTHS_STRUCT(Structure):
    dwMinLength: UInt32
    dwMaxLength: UInt32
    dwIncrement: UInt32
class BCRYPT_MULTI_HASH_OPERATION(Structure):
    iHash: UInt32
    hashOperation: win32more.Windows.Win32.Security.Cryptography.BCRYPT_HASH_OPERATION_TYPE
    pbBuffer: POINTER(Byte)
    cbBuffer: UInt32
class BCRYPT_MULTI_OBJECT_LENGTH_STRUCT(Structure):
    cbPerObject: UInt32
    cbPerElement: UInt32
BCRYPT_MULTI_OPERATION_TYPE = Int32
BCRYPT_OPERATION_TYPE_HASH: win32more.Windows.Win32.Security.Cryptography.BCRYPT_MULTI_OPERATION_TYPE = 1
class BCRYPT_OAEP_PADDING_INFO(Structure):
    pszAlgId: win32more.Windows.Win32.Foundation.PWSTR
    pbLabel: POINTER(Byte)
    cbLabel: UInt32
class BCRYPT_OID(Structure):
    cbOID: UInt32
    pbOID: POINTER(Byte)
class BCRYPT_OID_LIST(Structure):
    dwOIDCount: UInt32
    pOIDs: POINTER(win32more.Windows.Win32.Security.Cryptography.BCRYPT_OID)
BCRYPT_OPEN_ALGORITHM_PROVIDER_FLAGS = UInt32
BCRYPT_ALG_HANDLE_HMAC_FLAG: win32more.Windows.Win32.Security.Cryptography.BCRYPT_OPEN_ALGORITHM_PROVIDER_FLAGS = 8
BCRYPT_PROV_DISPATCH: win32more.Windows.Win32.Security.Cryptography.BCRYPT_OPEN_ALGORITHM_PROVIDER_FLAGS = 1
BCRYPT_HASH_REUSABLE_FLAG: win32more.Windows.Win32.Security.Cryptography.BCRYPT_OPEN_ALGORITHM_PROVIDER_FLAGS = 32
BCRYPT_OPERATION = UInt32
BCRYPT_CIPHER_OPERATION: win32more.Windows.Win32.Security.Cryptography.BCRYPT_OPERATION = 1
BCRYPT_HASH_OPERATION: win32more.Windows.Win32.Security.Cryptography.BCRYPT_OPERATION = 2
BCRYPT_ASYMMETRIC_ENCRYPTION_OPERATION: win32more.Windows.Win32.Security.Cryptography.BCRYPT_OPERATION = 4
BCRYPT_SECRET_AGREEMENT_OPERATION: win32more.Windows.Win32.Security.Cryptography.BCRYPT_OPERATION = 8
BCRYPT_SIGNATURE_OPERATION: win32more.Windows.Win32.Security.Cryptography.BCRYPT_OPERATION = 16
BCRYPT_RNG_OPERATION: win32more.Windows.Win32.Security.Cryptography.BCRYPT_OPERATION = 32
class BCRYPT_PKCS11_RSA_AES_WRAP_BLOB(Structure):
    dwMagic: UInt32
    cbKey: UInt32
    cbPaddingAlgId: UInt32
    cbPaddingLabel: UInt32
class BCRYPT_PKCS1_PADDING_INFO(Structure):
    pszAlgId: win32more.Windows.Win32.Foundation.PWSTR
class BCRYPT_PROVIDER_NAME(Structure):
    pszProviderName: win32more.Windows.Win32.Foundation.PWSTR
class BCRYPT_PSS_PADDING_INFO(Structure):
    pszAlgId: win32more.Windows.Win32.Foundation.PWSTR
    cbSalt: UInt32
BCRYPT_QUERY_PROVIDER_MODE = UInt32
CRYPT_ANY: win32more.Windows.Win32.Security.Cryptography.BCRYPT_QUERY_PROVIDER_MODE = 4
CRYPT_UM: win32more.Windows.Win32.Security.Cryptography.BCRYPT_QUERY_PROVIDER_MODE = 1
CRYPT_KM: win32more.Windows.Win32.Security.Cryptography.BCRYPT_QUERY_PROVIDER_MODE = 2
CRYPT_MM: win32more.Windows.Win32.Security.Cryptography.BCRYPT_QUERY_PROVIDER_MODE = 3
BCRYPT_RESOLVE_PROVIDERS_FLAGS = UInt32
CRYPT_ALL_FUNCTIONS: win32more.Windows.Win32.Security.Cryptography.BCRYPT_RESOLVE_PROVIDERS_FLAGS = 1
CRYPT_ALL_PROVIDERS: win32more.Windows.Win32.Security.Cryptography.BCRYPT_RESOLVE_PROVIDERS_FLAGS = 2
class BCRYPT_RNG_FUNCTION_TABLE(Structure):
    Version: win32more.Windows.Win32.Security.Cryptography.BCRYPT_INTERFACE_VERSION
    OpenAlgorithmProvider: win32more.Windows.Win32.Security.Cryptography.BCryptOpenAlgorithmProviderFn
    GetProperty: win32more.Windows.Win32.Security.Cryptography.BCryptGetPropertyFn
    SetProperty: win32more.Windows.Win32.Security.Cryptography.BCryptSetPropertyFn
    CloseAlgorithmProvider: win32more.Windows.Win32.Security.Cryptography.BCryptCloseAlgorithmProviderFn
    GenRandom: win32more.Windows.Win32.Security.Cryptography.BCryptGenRandomFn
class BCRYPT_RSAKEY_BLOB(Structure):
    Magic: win32more.Windows.Win32.Security.Cryptography.BCRYPT_RSAKEY_BLOB_MAGIC
    BitLength: UInt32
    cbPublicExp: UInt32
    cbModulus: UInt32
    cbPrime1: UInt32
    cbPrime2: UInt32
BCRYPT_RSAKEY_BLOB_MAGIC = UInt32
BCRYPT_RSAPUBLIC_MAGIC: win32more.Windows.Win32.Security.Cryptography.BCRYPT_RSAKEY_BLOB_MAGIC = 826364754
BCRYPT_RSAPRIVATE_MAGIC: win32more.Windows.Win32.Security.Cryptography.BCRYPT_RSAKEY_BLOB_MAGIC = 843141970
BCRYPT_RSAFULLPRIVATE_MAGIC: win32more.Windows.Win32.Security.Cryptography.BCRYPT_RSAKEY_BLOB_MAGIC = 859919186
class BCRYPT_SECRET_AGREEMENT_FUNCTION_TABLE(Structure):
    Version: win32more.Windows.Win32.Security.Cryptography.BCRYPT_INTERFACE_VERSION
    OpenAlgorithmProvider: win32more.Windows.Win32.Security.Cryptography.BCryptOpenAlgorithmProviderFn
    GetProperty: win32more.Windows.Win32.Security.Cryptography.BCryptGetPropertyFn
    SetProperty: win32more.Windows.Win32.Security.Cryptography.BCryptSetPropertyFn
    CloseAlgorithmProvider: win32more.Windows.Win32.Security.Cryptography.BCryptCloseAlgorithmProviderFn
    SecretAgreement: win32more.Windows.Win32.Security.Cryptography.BCryptSecretAgreementFn
    DeriveKey: win32more.Windows.Win32.Security.Cryptography.BCryptDeriveKeyFn
    DestroySecret: win32more.Windows.Win32.Security.Cryptography.BCryptDestroySecretFn
    GenerateKeyPair: win32more.Windows.Win32.Security.Cryptography.BCryptGenerateKeyPairFn
    FinalizeKeyPair: win32more.Windows.Win32.Security.Cryptography.BCryptFinalizeKeyPairFn
    ImportKeyPair: win32more.Windows.Win32.Security.Cryptography.BCryptImportKeyPairFn
    ExportKey: win32more.Windows.Win32.Security.Cryptography.BCryptExportKeyFn
    DestroyKey: win32more.Windows.Win32.Security.Cryptography.BCryptDestroyKeyFn
BCRYPT_SECRET_HANDLE = VoidPtr
class BCRYPT_SIGNATURE_FUNCTION_TABLE(Structure):
    Version: win32more.Windows.Win32.Security.Cryptography.BCRYPT_INTERFACE_VERSION
    OpenAlgorithmProvider: win32more.Windows.Win32.Security.Cryptography.BCryptOpenAlgorithmProviderFn
    GetProperty: win32more.Windows.Win32.Security.Cryptography.BCryptGetPropertyFn
    SetProperty: win32more.Windows.Win32.Security.Cryptography.BCryptSetPropertyFn
    CloseAlgorithmProvider: win32more.Windows.Win32.Security.Cryptography.BCryptCloseAlgorithmProviderFn
    GenerateKeyPair: win32more.Windows.Win32.Security.Cryptography.BCryptGenerateKeyPairFn
    FinalizeKeyPair: win32more.Windows.Win32.Security.Cryptography.BCryptFinalizeKeyPairFn
    SignHash: win32more.Windows.Win32.Security.Cryptography.BCryptSignHashFn
    VerifySignature: win32more.Windows.Win32.Security.Cryptography.BCryptVerifySignatureFn
    ImportKeyPair: win32more.Windows.Win32.Security.Cryptography.BCryptImportKeyPairFn
    ExportKey: win32more.Windows.Win32.Security.Cryptography.BCryptExportKeyFn
    DestroyKey: win32more.Windows.Win32.Security.Cryptography.BCryptDestroyKeyFn
BCRYPT_TABLE = UInt32
CRYPT_LOCAL: win32more.Windows.Win32.Security.Cryptography.BCRYPT_TABLE = 1
CRYPT_DOMAIN: win32more.Windows.Win32.Security.Cryptography.BCRYPT_TABLE = 2
class BCryptBuffer(Structure):
    cbBuffer: UInt32
    BufferType: UInt32
    pvBuffer: VoidPtr
class BCryptBufferDesc(Structure):
    ulVersion: UInt32
    cBuffers: UInt32
    pBuffers: POINTER(win32more.Windows.Win32.Security.Cryptography.BCryptBuffer)
@winfunctype_pointer
def BCryptCloseAlgorithmProviderFn(hAlgorithm: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def BCryptCreateHashFn(hAlgorithm: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE, phHash: POINTER(win32more.Windows.Win32.Security.Cryptography.BCRYPT_HASH_HANDLE), pbHashObject: POINTER(Byte), cbHashObject: UInt32, pbSecret: POINTER(Byte), cbSecret: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def BCryptCreateMultiHashFn(hAlgorithm: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE, phHash: POINTER(win32more.Windows.Win32.Security.Cryptography.BCRYPT_HASH_HANDLE), nHashes: UInt32, pbHashObject: POINTER(Byte), cbHashObject: UInt32, pbSecret: POINTER(Byte), cbSecret: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def BCryptDecryptFn(hKey: win32more.Windows.Win32.Security.Cryptography.BCRYPT_KEY_HANDLE, pbInput: POINTER(Byte), cbInput: UInt32, pPaddingInfo: VoidPtr, pbIV: POINTER(Byte), cbIV: UInt32, pbOutput: POINTER(Byte), cbOutput: UInt32, pcbResult: POINTER(UInt32), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def BCryptDeriveKeyCapiFn(hHash: win32more.Windows.Win32.Security.Cryptography.BCRYPT_HASH_HANDLE, hTargetAlg: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE, pbDerivedKey: POINTER(Byte), cbDerivedKey: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def BCryptDeriveKeyFn(hSharedSecret: win32more.Windows.Win32.Security.Cryptography.BCRYPT_SECRET_HANDLE, pwszKDF: win32more.Windows.Win32.Foundation.PWSTR, pParameterList: POINTER(win32more.Windows.Win32.Security.Cryptography.BCryptBufferDesc), pbDerivedKey: POINTER(Byte), cbDerivedKey: UInt32, pcbResult: POINTER(UInt32), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def BCryptDeriveKeyPBKDF2Fn(hPrf: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE, pbPassword: POINTER(Byte), cbPassword: UInt32, pbSalt: POINTER(Byte), cbSalt: UInt32, cIterations: UInt64, pbDerivedKey: POINTER(Byte), cbDerivedKey: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def BCryptDestroyHashFn(hHash: win32more.Windows.Win32.Security.Cryptography.BCRYPT_HASH_HANDLE) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def BCryptDestroyKeyFn(hKey: win32more.Windows.Win32.Security.Cryptography.BCRYPT_KEY_HANDLE) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def BCryptDestroySecretFn(hSecret: win32more.Windows.Win32.Security.Cryptography.BCRYPT_SECRET_HANDLE) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def BCryptDuplicateHashFn(hHash: win32more.Windows.Win32.Security.Cryptography.BCRYPT_HASH_HANDLE, phNewHash: POINTER(win32more.Windows.Win32.Security.Cryptography.BCRYPT_HASH_HANDLE), pbHashObject: POINTER(Byte), cbHashObject: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def BCryptDuplicateKeyFn(hKey: win32more.Windows.Win32.Security.Cryptography.BCRYPT_KEY_HANDLE, phNewKey: POINTER(win32more.Windows.Win32.Security.Cryptography.BCRYPT_KEY_HANDLE), pbKeyObject: POINTER(Byte), cbKeyObject: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def BCryptEncryptFn(hKey: win32more.Windows.Win32.Security.Cryptography.BCRYPT_KEY_HANDLE, pbInput: POINTER(Byte), cbInput: UInt32, pPaddingInfo: VoidPtr, pbIV: POINTER(Byte), cbIV: UInt32, pbOutput: POINTER(Byte), cbOutput: UInt32, pcbResult: POINTER(UInt32), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def BCryptExportKeyFn(hKey: win32more.Windows.Win32.Security.Cryptography.BCRYPT_KEY_HANDLE, hExportKey: win32more.Windows.Win32.Security.Cryptography.BCRYPT_KEY_HANDLE, pszBlobType: win32more.Windows.Win32.Foundation.PWSTR, pbOutput: POINTER(Byte), cbOutput: UInt32, pcbResult: POINTER(UInt32), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def BCryptFinalizeKeyPairFn(hKey: win32more.Windows.Win32.Security.Cryptography.BCRYPT_KEY_HANDLE, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def BCryptFinishHashFn(hHash: win32more.Windows.Win32.Security.Cryptography.BCRYPT_HASH_HANDLE, pbOutput: POINTER(Byte), cbOutput: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def BCryptFreeBufferFn(pvBuffer: VoidPtr) -> Void: ...
@winfunctype_pointer
def BCryptGenRandomFn(hAlgorithm: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE, pbBuffer: POINTER(Byte), cbBuffer: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def BCryptGenerateKeyPairFn(hAlgorithm: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE, phKey: POINTER(win32more.Windows.Win32.Security.Cryptography.BCRYPT_KEY_HANDLE), dwLength: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def BCryptGenerateSymmetricKeyFn(hAlgorithm: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE, phKey: POINTER(win32more.Windows.Win32.Security.Cryptography.BCRYPT_KEY_HANDLE), pbKeyObject: POINTER(Byte), cbKeyObject: UInt32, pbSecret: POINTER(Byte), cbSecret: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def BCryptGetPropertyFn(hObject: win32more.Windows.Win32.Security.Cryptography.BCRYPT_HANDLE, pszProperty: win32more.Windows.Win32.Foundation.PWSTR, pbOutput: POINTER(Byte), cbOutput: UInt32, pcbResult: POINTER(UInt32), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def BCryptHashDataFn(hHash: win32more.Windows.Win32.Security.Cryptography.BCRYPT_HASH_HANDLE, pbInput: POINTER(Byte), cbInput: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def BCryptImportKeyFn(hAlgorithm: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE, hImportKey: win32more.Windows.Win32.Security.Cryptography.BCRYPT_KEY_HANDLE, pszBlobType: win32more.Windows.Win32.Foundation.PWSTR, phKey: POINTER(win32more.Windows.Win32.Security.Cryptography.BCRYPT_KEY_HANDLE), pbKeyObject: POINTER(Byte), cbKeyObject: UInt32, pbInput: POINTER(Byte), cbInput: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def BCryptImportKeyPairFn(hAlgorithm: win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE, hImportKey: win32more.Windows.Win32.Security.Cryptography.BCRYPT_KEY_HANDLE, pszBlobType: win32more.Windows.Win32.Foundation.PWSTR, phKey: POINTER(win32more.Windows.Win32.Security.Cryptography.BCRYPT_KEY_HANDLE), pbInput: POINTER(Byte), cbInput: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def BCryptKeyDerivationFn(hKey: win32more.Windows.Win32.Security.Cryptography.BCRYPT_KEY_HANDLE, pParameterList: POINTER(win32more.Windows.Win32.Security.Cryptography.BCryptBufferDesc), pbDerivedKey: POINTER(Byte), cbDerivedKey: UInt32, pcbResult: POINTER(UInt32), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def BCryptOpenAlgorithmProviderFn(phAlgorithm: POINTER(win32more.Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE), pszAlgId: win32more.Windows.Win32.Foundation.PWSTR, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def BCryptProcessMultiOperationsFn(hObject: win32more.Windows.Win32.Security.Cryptography.BCRYPT_HANDLE, operationType: win32more.Windows.Win32.Security.Cryptography.BCRYPT_MULTI_OPERATION_TYPE, pOperations: VoidPtr, cbOperations: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def BCryptSecretAgreementFn(hPrivKey: win32more.Windows.Win32.Security.Cryptography.BCRYPT_KEY_HANDLE, hPubKey: win32more.Windows.Win32.Security.Cryptography.BCRYPT_KEY_HANDLE, phAgreedSecret: POINTER(win32more.Windows.Win32.Security.Cryptography.BCRYPT_SECRET_HANDLE), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def BCryptSetPropertyFn(hObject: win32more.Windows.Win32.Security.Cryptography.BCRYPT_HANDLE, pszProperty: win32more.Windows.Win32.Foundation.PWSTR, pbInput: POINTER(Byte), cbInput: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def BCryptSignHashFn(hKey: win32more.Windows.Win32.Security.Cryptography.BCRYPT_KEY_HANDLE, pPaddingInfo: VoidPtr, pbInput: POINTER(Byte), cbInput: UInt32, pbOutput: POINTER(Byte), cbOutput: UInt32, pcbResult: POINTER(UInt32), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def BCryptVerifySignatureFn(hKey: win32more.Windows.Win32.Security.Cryptography.BCRYPT_KEY_HANDLE, pPaddingInfo: VoidPtr, pbHash: POINTER(Byte), cbHash: UInt32, pbSignature: POINTER(Byte), cbSignature: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
class CARD_AUTHENTICATE(Structure):
    dwVersion: UInt32
    dwFlags: UInt32
    PinId: UInt32
    cbPinData: UInt32
    pbPinData: FlexibleArray[Byte]
class CARD_AUTHENTICATE_RESPONSE(Structure):
    dwVersion: UInt32
    cbSessionPin: UInt32
    cAttemptsRemaining: UInt32
    pbSessionPin: FlexibleArray[Byte]
class CARD_CACHE_FILE_FORMAT(Structure):
    bVersion: Byte
    bPinsFreshness: Byte
    wContainersFreshness: UInt16
    wFilesFreshness: UInt16
class CARD_CAPABILITIES(Structure):
    dwVersion: UInt32
    fCertificateCompression: win32more.Windows.Win32.Foundation.BOOL
    fKeyGen: win32more.Windows.Win32.Foundation.BOOL
class CARD_CHANGE_AUTHENTICATOR(Structure):
    dwVersion: UInt32
    dwFlags: UInt32
    dwAuthenticatingPinId: UInt32
    cbAuthenticatingPinData: UInt32
    dwTargetPinId: UInt32
    cbTargetData: UInt32
    cRetryCount: UInt32
    pbData: FlexibleArray[Byte]
class CARD_CHANGE_AUTHENTICATOR_RESPONSE(Structure):
    dwVersion: UInt32
    cAttemptsRemaining: UInt32
class CARD_DATA(Structure):
    dwVersion: UInt32
    pbAtr: POINTER(Byte)
    cbAtr: UInt32
    pwszCardName: win32more.Windows.Win32.Foundation.PWSTR
    pfnCspAlloc: win32more.Windows.Win32.Security.Cryptography.PFN_CSP_ALLOC
    pfnCspReAlloc: win32more.Windows.Win32.Security.Cryptography.PFN_CSP_REALLOC
    pfnCspFree: win32more.Windows.Win32.Security.Cryptography.PFN_CSP_FREE
    pfnCspCacheAddFile: win32more.Windows.Win32.Security.Cryptography.PFN_CSP_CACHE_ADD_FILE
    pfnCspCacheLookupFile: win32more.Windows.Win32.Security.Cryptography.PFN_CSP_CACHE_LOOKUP_FILE
    pfnCspCacheDeleteFile: win32more.Windows.Win32.Security.Cryptography.PFN_CSP_CACHE_DELETE_FILE
    pvCacheContext: VoidPtr
    pfnCspPadData: win32more.Windows.Win32.Security.Cryptography.PFN_CSP_PAD_DATA
    hSCardCtx: UIntPtr
    hScard: UIntPtr
    pvVendorSpecific: VoidPtr
    pfnCardDeleteContext: win32more.Windows.Win32.Security.Cryptography.PFN_CARD_DELETE_CONTEXT
    pfnCardQueryCapabilities: win32more.Windows.Win32.Security.Cryptography.PFN_CARD_QUERY_CAPABILITIES
    pfnCardDeleteContainer: win32more.Windows.Win32.Security.Cryptography.PFN_CARD_DELETE_CONTAINER
    pfnCardCreateContainer: win32more.Windows.Win32.Security.Cryptography.PFN_CARD_CREATE_CONTAINER
    pfnCardGetContainerInfo: win32more.Windows.Win32.Security.Cryptography.PFN_CARD_GET_CONTAINER_INFO
    pfnCardAuthenticatePin: win32more.Windows.Win32.Security.Cryptography.PFN_CARD_AUTHENTICATE_PIN
    pfnCardGetChallenge: win32more.Windows.Win32.Security.Cryptography.PFN_CARD_GET_CHALLENGE
    pfnCardAuthenticateChallenge: win32more.Windows.Win32.Security.Cryptography.PFN_CARD_AUTHENTICATE_CHALLENGE
    pfnCardUnblockPin: win32more.Windows.Win32.Security.Cryptography.PFN_CARD_UNBLOCK_PIN
    pfnCardChangeAuthenticator: win32more.Windows.Win32.Security.Cryptography.PFN_CARD_CHANGE_AUTHENTICATOR
    pfnCardDeauthenticate: win32more.Windows.Win32.Security.Cryptography.PFN_CARD_DEAUTHENTICATE
    pfnCardCreateDirectory: win32more.Windows.Win32.Security.Cryptography.PFN_CARD_CREATE_DIRECTORY
    pfnCardDeleteDirectory: win32more.Windows.Win32.Security.Cryptography.PFN_CARD_DELETE_DIRECTORY
    pvUnused3: VoidPtr
    pvUnused4: VoidPtr
    pfnCardCreateFile: win32more.Windows.Win32.Security.Cryptography.PFN_CARD_CREATE_FILE
    pfnCardReadFile: win32more.Windows.Win32.Security.Cryptography.PFN_CARD_READ_FILE
    pfnCardWriteFile: win32more.Windows.Win32.Security.Cryptography.PFN_CARD_WRITE_FILE
    pfnCardDeleteFile: win32more.Windows.Win32.Security.Cryptography.PFN_CARD_DELETE_FILE
    pfnCardEnumFiles: win32more.Windows.Win32.Security.Cryptography.PFN_CARD_ENUM_FILES
    pfnCardGetFileInfo: win32more.Windows.Win32.Security.Cryptography.PFN_CARD_GET_FILE_INFO
    pfnCardQueryFreeSpace: win32more.Windows.Win32.Security.Cryptography.PFN_CARD_QUERY_FREE_SPACE
    pfnCardQueryKeySizes: win32more.Windows.Win32.Security.Cryptography.PFN_CARD_QUERY_KEY_SIZES
    pfnCardSignData: win32more.Windows.Win32.Security.Cryptography.PFN_CARD_SIGN_DATA
    pfnCardRSADecrypt: win32more.Windows.Win32.Security.Cryptography.PFN_CARD_RSA_DECRYPT
    pfnCardConstructDHAgreement: win32more.Windows.Win32.Security.Cryptography.PFN_CARD_CONSTRUCT_DH_AGREEMENT
    pfnCardDeriveKey: win32more.Windows.Win32.Security.Cryptography.PFN_CARD_DERIVE_KEY
    pfnCardDestroyDHAgreement: win32more.Windows.Win32.Security.Cryptography.PFN_CARD_DESTROY_DH_AGREEMENT
    pfnCspGetDHAgreement: win32more.Windows.Win32.Security.Cryptography.PFN_CSP_GET_DH_AGREEMENT
    pfnCardGetChallengeEx: win32more.Windows.Win32.Security.Cryptography.PFN_CARD_GET_CHALLENGE_EX
    pfnCardAuthenticateEx: win32more.Windows.Win32.Security.Cryptography.PFN_CARD_AUTHENTICATE_EX
    pfnCardChangeAuthenticatorEx: win32more.Windows.Win32.Security.Cryptography.PFN_CARD_CHANGE_AUTHENTICATOR_EX
    pfnCardDeauthenticateEx: win32more.Windows.Win32.Security.Cryptography.PFN_CARD_DEAUTHENTICATE_EX
    pfnCardGetContainerProperty: win32more.Windows.Win32.Security.Cryptography.PFN_CARD_GET_CONTAINER_PROPERTY
    pfnCardSetContainerProperty: win32more.Windows.Win32.Security.Cryptography.PFN_CARD_SET_CONTAINER_PROPERTY
    pfnCardGetProperty: win32more.Windows.Win32.Security.Cryptography.PFN_CARD_GET_PROPERTY
    pfnCardSetProperty: win32more.Windows.Win32.Security.Cryptography.PFN_CARD_SET_PROPERTY
    pfnCspUnpadData: win32more.Windows.Win32.Security.Cryptography.PFN_CSP_UNPAD_DATA
    pfnMDImportSessionKey: win32more.Windows.Win32.Security.Cryptography.PFN_MD_IMPORT_SESSION_KEY
    pfnMDEncryptData: win32more.Windows.Win32.Security.Cryptography.PFN_MD_ENCRYPT_DATA
    pfnCardImportSessionKey: win32more.Windows.Win32.Security.Cryptography.PFN_CARD_IMPORT_SESSION_KEY
    pfnCardGetSharedKeyHandle: win32more.Windows.Win32.Security.Cryptography.PFN_CARD_GET_SHARED_KEY_HANDLE
    pfnCardGetAlgorithmProperty: win32more.Windows.Win32.Security.Cryptography.PFN_CARD_GET_ALGORITHM_PROPERTY
    pfnCardGetKeyProperty: win32more.Windows.Win32.Security.Cryptography.PFN_CARD_GET_KEY_PROPERTY
    pfnCardSetKeyProperty: win32more.Windows.Win32.Security.Cryptography.PFN_CARD_SET_KEY_PROPERTY
    pfnCardDestroyKey: win32more.Windows.Win32.Security.Cryptography.PFN_CARD_DESTROY_KEY
    pfnCardProcessEncryptedData: win32more.Windows.Win32.Security.Cryptography.PFN_CARD_PROCESS_ENCRYPTED_DATA
    pfnCardCreateContainerEx: win32more.Windows.Win32.Security.Cryptography.PFN_CARD_CREATE_CONTAINER_EX
class CARD_DERIVE_KEY(Structure):
    dwVersion: UInt32
    dwFlags: UInt32
    pwszKDF: win32more.Windows.Win32.Foundation.PWSTR
    bSecretAgreementIndex: Byte
    pParameterList: VoidPtr
    pbDerivedKey: POINTER(Byte)
    cbDerivedKey: UInt32
    pwszAlgId: win32more.Windows.Win32.Foundation.PWSTR
    dwKeyLen: UInt32
    hKey: UIntPtr
class CARD_DH_AGREEMENT_INFO(Structure):
    dwVersion: UInt32
    bContainerIndex: Byte
    dwFlags: UInt32
    dwPublicKey: UInt32
    pbPublicKey: POINTER(Byte)
    pbReserved: POINTER(Byte)
    cbReserved: UInt32
    bSecretAgreementIndex: Byte
CARD_DIRECTORY_ACCESS_CONDITION = Int32
InvalidDirAc: win32more.Windows.Win32.Security.Cryptography.CARD_DIRECTORY_ACCESS_CONDITION = 0
UserCreateDeleteDirAc: win32more.Windows.Win32.Security.Cryptography.CARD_DIRECTORY_ACCESS_CONDITION = 1
AdminCreateDeleteDirAc: win32more.Windows.Win32.Security.Cryptography.CARD_DIRECTORY_ACCESS_CONDITION = 2
class CARD_ENCRYPTED_DATA(Structure):
    pbEncryptedData: POINTER(Byte)
    cbEncryptedData: UInt32
CARD_FILE_ACCESS_CONDITION = Int32
InvalidAc: win32more.Windows.Win32.Security.Cryptography.CARD_FILE_ACCESS_CONDITION = 0
EveryoneReadUserWriteAc: win32more.Windows.Win32.Security.Cryptography.CARD_FILE_ACCESS_CONDITION = 1
UserWriteExecuteAc: win32more.Windows.Win32.Security.Cryptography.CARD_FILE_ACCESS_CONDITION = 2
EveryoneReadAdminWriteAc: win32more.Windows.Win32.Security.Cryptography.CARD_FILE_ACCESS_CONDITION = 3
UnknownAc: win32more.Windows.Win32.Security.Cryptography.CARD_FILE_ACCESS_CONDITION = 4
UserReadWriteAc: win32more.Windows.Win32.Security.Cryptography.CARD_FILE_ACCESS_CONDITION = 5
AdminReadWriteAc: win32more.Windows.Win32.Security.Cryptography.CARD_FILE_ACCESS_CONDITION = 6
class CARD_FILE_INFO(Structure):
    dwVersion: UInt32
    cbFileSize: UInt32
    AccessCondition: win32more.Windows.Win32.Security.Cryptography.CARD_FILE_ACCESS_CONDITION
class CARD_FREE_SPACE_INFO(Structure):
    dwVersion: UInt32
    dwBytesAvailable: UInt32
    dwKeyContainersAvailable: UInt32
    dwMaxKeyContainers: UInt32
class CARD_IMPORT_KEYPAIR(Structure):
    dwVersion: UInt32
    bContainerIndex: Byte
    PinId: UInt32
    dwKeySpec: UInt32
    dwKeySize: UInt32
    cbInput: UInt32
    pbInput: FlexibleArray[Byte]
class CARD_KEY_SIZES(Structure):
    dwVersion: UInt32
    dwMinimumBitlen: UInt32
    dwDefaultBitlen: UInt32
    dwMaximumBitlen: UInt32
    dwIncrementalBitlen: UInt32
class CARD_RSA_DECRYPT_INFO(Structure):
    dwVersion: UInt32
    bContainerIndex: Byte
    dwKeySpec: UInt32
    pbData: POINTER(Byte)
    cbData: UInt32
    pPaddingInfo: VoidPtr
    dwPaddingType: UInt32
class CARD_SIGNING_INFO(Structure):
    dwVersion: UInt32
    bContainerIndex: Byte
    dwKeySpec: UInt32
    dwSigningFlags: UInt32
    aiHashAlg: win32more.Windows.Win32.Security.Cryptography.ALG_ID
    pbData: POINTER(Byte)
    cbData: UInt32
    pbSignedData: POINTER(Byte)
    cbSignedData: UInt32
    pPaddingInfo: VoidPtr
    dwPaddingType: UInt32
CASetupProperty = Int32
ENUM_SETUPPROP_INVALID: win32more.Windows.Win32.Security.Cryptography.CASetupProperty = -1
ENUM_SETUPPROP_CATYPE: win32more.Windows.Win32.Security.Cryptography.CASetupProperty = 0
ENUM_SETUPPROP_CAKEYINFORMATION: win32more.Windows.Win32.Security.Cryptography.CASetupProperty = 1
ENUM_SETUPPROP_INTERACTIVE: win32more.Windows.Win32.Security.Cryptography.CASetupProperty = 2
ENUM_SETUPPROP_CANAME: win32more.Windows.Win32.Security.Cryptography.CASetupProperty = 3
ENUM_SETUPPROP_CADSSUFFIX: win32more.Windows.Win32.Security.Cryptography.CASetupProperty = 4
ENUM_SETUPPROP_VALIDITYPERIOD: win32more.Windows.Win32.Security.Cryptography.CASetupProperty = 5
ENUM_SETUPPROP_VALIDITYPERIODUNIT: win32more.Windows.Win32.Security.Cryptography.CASetupProperty = 6
ENUM_SETUPPROP_EXPIRATIONDATE: win32more.Windows.Win32.Security.Cryptography.CASetupProperty = 7
ENUM_SETUPPROP_PRESERVEDATABASE: win32more.Windows.Win32.Security.Cryptography.CASetupProperty = 8
ENUM_SETUPPROP_DATABASEDIRECTORY: win32more.Windows.Win32.Security.Cryptography.CASetupProperty = 9
ENUM_SETUPPROP_LOGDIRECTORY: win32more.Windows.Win32.Security.Cryptography.CASetupProperty = 10
ENUM_SETUPPROP_SHAREDFOLDER: win32more.Windows.Win32.Security.Cryptography.CASetupProperty = 11
ENUM_SETUPPROP_PARENTCAMACHINE: win32more.Windows.Win32.Security.Cryptography.CASetupProperty = 12
ENUM_SETUPPROP_PARENTCANAME: win32more.Windows.Win32.Security.Cryptography.CASetupProperty = 13
ENUM_SETUPPROP_REQUESTFILE: win32more.Windows.Win32.Security.Cryptography.CASetupProperty = 14
ENUM_SETUPPROP_WEBCAMACHINE: win32more.Windows.Win32.Security.Cryptography.CASetupProperty = 15
ENUM_SETUPPROP_WEBCANAME: win32more.Windows.Win32.Security.Cryptography.CASetupProperty = 16
CCertSrvSetup = Guid('{961f180f-f55c-413d-a9b3-7d2af4d8e42f}')
CCertSrvSetupKeyInformation = Guid('{38373906-5433-4633-b0fb-29b7e78262e1}')
CCertificateEnrollmentPolicyServerSetup = Guid('{afe2fa32-41b1-459d-a5de-49add8a72182}')
CCertificateEnrollmentServerSetup = Guid('{9902f3bc-88af-4cf8-ae62-7140531552b6}')
CEPSetupProperty = Int32
ENUM_CEPSETUPPROP_AUTHENTICATION: win32more.Windows.Win32.Security.Cryptography.CEPSetupProperty = 0
ENUM_CEPSETUPPROP_SSLCERTHASH: win32more.Windows.Win32.Security.Cryptography.CEPSetupProperty = 1
ENUM_CEPSETUPPROP_URL: win32more.Windows.Win32.Security.Cryptography.CEPSetupProperty = 2
ENUM_CEPSETUPPROP_KEYBASED_RENEWAL: win32more.Windows.Win32.Security.Cryptography.CEPSetupProperty = 3
class CERTIFICATE_CHAIN_BLOB(Structure):
    certCount: UInt32
    rawCertificates: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB)
class CERT_ACCESS_DESCRIPTION(Structure):
    pszAccessMethod: win32more.Windows.Win32.Foundation.PSTR
    AccessLocation: win32more.Windows.Win32.Security.Cryptography.CERT_ALT_NAME_ENTRY
class CERT_ALT_NAME_ENTRY(Structure):
    dwAltNameChoice: UInt32
    Anonymous: _Anonymous_e__Union
    _anonymous_ = ('Anonymous',)
    class _Anonymous_e__Union(Union):
        pOtherName: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_OTHER_NAME)
        pwszRfc822Name: win32more.Windows.Win32.Foundation.PWSTR
        pwszDNSName: win32more.Windows.Win32.Foundation.PWSTR
        DirectoryName: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
        pwszURL: win32more.Windows.Win32.Foundation.PWSTR
        IPAddress: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
        pszRegisteredID: win32more.Windows.Win32.Foundation.PSTR
class CERT_ALT_NAME_INFO(Structure):
    cAltEntry: UInt32
    rgAltEntry: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_ALT_NAME_ENTRY)
class CERT_AUTHORITY_INFO_ACCESS(Structure):
    cAccDescr: UInt32
    rgAccDescr: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_ACCESS_DESCRIPTION)
class CERT_AUTHORITY_KEY_ID2_INFO(Structure):
    KeyId: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    AuthorityCertIssuer: win32more.Windows.Win32.Security.Cryptography.CERT_ALT_NAME_INFO
    AuthorityCertSerialNumber: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
class CERT_AUTHORITY_KEY_ID_INFO(Structure):
    KeyId: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    CertIssuer: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    CertSerialNumber: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
class CERT_BASIC_CONSTRAINTS2_INFO(Structure):
    fCA: win32more.Windows.Win32.Foundation.BOOL
    fPathLenConstraint: win32more.Windows.Win32.Foundation.BOOL
    dwPathLenConstraint: UInt32
class CERT_BASIC_CONSTRAINTS_INFO(Structure):
    SubjectType: win32more.Windows.Win32.Security.Cryptography.CRYPT_BIT_BLOB
    fPathLenConstraint: win32more.Windows.Win32.Foundation.BOOL
    dwPathLenConstraint: UInt32
    cSubtreesConstraint: UInt32
    rgSubtreesConstraint: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB)
class CERT_BIOMETRIC_DATA(Structure):
    dwTypeOfBiometricDataChoice: win32more.Windows.Win32.Security.Cryptography.CERT_BIOMETRIC_DATA_TYPE
    Anonymous: _Anonymous_e__Union
    HashedUrl: win32more.Windows.Win32.Security.Cryptography.CERT_HASHED_URL
    _anonymous_ = ('Anonymous',)
    class _Anonymous_e__Union(Union):
        dwPredefined: UInt32
        pszObjId: win32more.Windows.Win32.Foundation.PSTR
CERT_BIOMETRIC_DATA_TYPE = UInt32
CERT_BIOMETRIC_PREDEFINED_DATA_CHOICE: win32more.Windows.Win32.Security.Cryptography.CERT_BIOMETRIC_DATA_TYPE = 1
CERT_BIOMETRIC_OID_DATA_CHOICE: win32more.Windows.Win32.Security.Cryptography.CERT_BIOMETRIC_DATA_TYPE = 2
class CERT_BIOMETRIC_EXT_INFO(Structure):
    cBiometricData: UInt32
    rgBiometricData: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_BIOMETRIC_DATA)
class CERT_CHAIN(Structure):
    cCerts: UInt32
    certs: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB)
    keyLocatorInfo: win32more.Windows.Win32.Security.Cryptography.CRYPT_KEY_PROV_INFO
class CERT_CHAIN_CONTEXT(Structure):
    cbSize: UInt32
    TrustStatus: win32more.Windows.Win32.Security.Cryptography.CERT_TRUST_STATUS
    cChain: UInt32
    rgpChain: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_SIMPLE_CHAIN))
    cLowerQualityChainContext: UInt32
    rgpLowerQualityChainContext: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CHAIN_CONTEXT))
    fHasRevocationFreshnessTime: win32more.Windows.Win32.Foundation.BOOL
    dwRevocationFreshnessTime: UInt32
    dwCreateFlags: UInt32
    ChainId: Guid
class CERT_CHAIN_ELEMENT(Structure):
    cbSize: UInt32
    pCertContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT)
    TrustStatus: win32more.Windows.Win32.Security.Cryptography.CERT_TRUST_STATUS
    pRevocationInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_REVOCATION_INFO)
    pIssuanceUsage: POINTER(win32more.Windows.Win32.Security.Cryptography.CTL_USAGE)
    pApplicationUsage: POINTER(win32more.Windows.Win32.Security.Cryptography.CTL_USAGE)
    pwszExtendedErrorInfo: win32more.Windows.Win32.Foundation.PWSTR
class CERT_CHAIN_ENGINE_CONFIG(Structure):
    cbSize: UInt32
    hRestrictedRoot: win32more.Windows.Win32.Security.Cryptography.HCERTSTORE
    hRestrictedTrust: win32more.Windows.Win32.Security.Cryptography.HCERTSTORE
    hRestrictedOther: win32more.Windows.Win32.Security.Cryptography.HCERTSTORE
    cAdditionalStore: UInt32
    rghAdditionalStore: POINTER(win32more.Windows.Win32.Security.Cryptography.HCERTSTORE)
    dwFlags: UInt32
    dwUrlRetrievalTimeout: UInt32
    MaximumCachedCertificates: UInt32
    CycleDetectionModulus: UInt32
    hExclusiveRoot: win32more.Windows.Win32.Security.Cryptography.HCERTSTORE
    hExclusiveTrustedPeople: win32more.Windows.Win32.Security.Cryptography.HCERTSTORE
    dwExclusiveFlags: UInt32
class CERT_CHAIN_FIND_BY_ISSUER_PARA(Structure):
    cbSize: UInt32
    pszUsageIdentifier: win32more.Windows.Win32.Foundation.PSTR
    dwKeySpec: UInt32
    dwAcquirePrivateKeyFlags: UInt32
    cIssuer: UInt32
    rgIssuer: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB)
    pfnFindCallback: win32more.Windows.Win32.Security.Cryptography.PFN_CERT_CHAIN_FIND_BY_ISSUER_CALLBACK
    pvFindArg: VoidPtr
class CERT_CHAIN_PARA(Structure):
    cbSize: UInt32
    RequestedUsage: win32more.Windows.Win32.Security.Cryptography.CERT_USAGE_MATCH
    RequestedIssuancePolicy: win32more.Windows.Win32.Security.Cryptography.CERT_USAGE_MATCH
    dwUrlRetrievalTimeout: UInt32
    fCheckRevocationFreshnessTime: win32more.Windows.Win32.Foundation.BOOL
    dwRevocationFreshnessTime: UInt32
    pftCacheResync: POINTER(win32more.Windows.Win32.Foundation.FILETIME)
    pStrongSignPara: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_STRONG_SIGN_PARA)
    dwStrongSignFlags: UInt32
CERT_CHAIN_POLICY_FLAGS = UInt32
CERT_CHAIN_POLICY_IGNORE_NOT_TIME_VALID_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_CHAIN_POLICY_FLAGS = 1
CERT_CHAIN_POLICY_IGNORE_CTL_NOT_TIME_VALID_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_CHAIN_POLICY_FLAGS = 2
CERT_CHAIN_POLICY_IGNORE_NOT_TIME_NESTED_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_CHAIN_POLICY_FLAGS = 4
CERT_CHAIN_POLICY_IGNORE_INVALID_BASIC_CONSTRAINTS_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_CHAIN_POLICY_FLAGS = 8
CERT_CHAIN_POLICY_IGNORE_ALL_NOT_TIME_VALID_FLAGS: win32more.Windows.Win32.Security.Cryptography.CERT_CHAIN_POLICY_FLAGS = 7
CERT_CHAIN_POLICY_ALLOW_UNKNOWN_CA_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_CHAIN_POLICY_FLAGS = 16
CERT_CHAIN_POLICY_IGNORE_WRONG_USAGE_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_CHAIN_POLICY_FLAGS = 32
CERT_CHAIN_POLICY_IGNORE_INVALID_NAME_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_CHAIN_POLICY_FLAGS = 64
CERT_CHAIN_POLICY_IGNORE_INVALID_POLICY_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_CHAIN_POLICY_FLAGS = 128
CERT_CHAIN_POLICY_IGNORE_END_REV_UNKNOWN_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_CHAIN_POLICY_FLAGS = 256
CERT_CHAIN_POLICY_IGNORE_CTL_SIGNER_REV_UNKNOWN_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_CHAIN_POLICY_FLAGS = 512
CERT_CHAIN_POLICY_IGNORE_CA_REV_UNKNOWN_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_CHAIN_POLICY_FLAGS = 1024
CERT_CHAIN_POLICY_IGNORE_ROOT_REV_UNKNOWN_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_CHAIN_POLICY_FLAGS = 2048
CERT_CHAIN_POLICY_IGNORE_ALL_REV_UNKNOWN_FLAGS: win32more.Windows.Win32.Security.Cryptography.CERT_CHAIN_POLICY_FLAGS = 3840
CERT_CHAIN_POLICY_ALLOW_TESTROOT_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_CHAIN_POLICY_FLAGS = 32768
CERT_CHAIN_POLICY_TRUST_TESTROOT_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_CHAIN_POLICY_FLAGS = 16384
CERT_CHAIN_POLICY_IGNORE_NOT_SUPPORTED_CRITICAL_EXT_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_CHAIN_POLICY_FLAGS = 8192
CERT_CHAIN_POLICY_IGNORE_PEER_TRUST_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_CHAIN_POLICY_FLAGS = 4096
CERT_CHAIN_POLICY_IGNORE_WEAK_SIGNATURE_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_CHAIN_POLICY_FLAGS = 134217728
BASIC_CONSTRAINTS_CERT_CHAIN_POLICY_CA_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_CHAIN_POLICY_FLAGS = 2147483648
BASIC_CONSTRAINTS_CERT_CHAIN_POLICY_END_ENTITY_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_CHAIN_POLICY_FLAGS = 1073741824
MICROSOFT_ROOT_CERT_CHAIN_POLICY_ENABLE_TEST_ROOT_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_CHAIN_POLICY_FLAGS = 65536
MICROSOFT_ROOT_CERT_CHAIN_POLICY_CHECK_APPLICATION_ROOT_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_CHAIN_POLICY_FLAGS = 131072
MICROSOFT_ROOT_CERT_CHAIN_POLICY_DISABLE_FLIGHT_ROOT_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_CHAIN_POLICY_FLAGS = 262144
class CERT_CHAIN_POLICY_PARA(Structure):
    cbSize: UInt32
    dwFlags: win32more.Windows.Win32.Security.Cryptography.CERT_CHAIN_POLICY_FLAGS
    pvExtraPolicyPara: VoidPtr
class CERT_CHAIN_POLICY_STATUS(Structure):
    cbSize: UInt32
    dwError: UInt32
    lChainIndex: Int32
    lElementIndex: Int32
    pvExtraPolicyStatus: VoidPtr
class CERT_CONTEXT(Structure):
    dwCertEncodingType: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_ENCODING_TYPE
    pbCertEncoded: POINTER(Byte)
    cbCertEncoded: UInt32
    pCertInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_INFO)
    hCertStore: win32more.Windows.Win32.Security.Cryptography.HCERTSTORE
CERT_CONTROL_STORE_FLAGS = UInt32
CERT_STORE_CTRL_COMMIT_FORCE_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_CONTROL_STORE_FLAGS = 1
CERT_STORE_CTRL_COMMIT_CLEAR_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_CONTROL_STORE_FLAGS = 2
CERT_STORE_CTRL_INHIBIT_DUPLICATE_HANDLE_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_CONTROL_STORE_FLAGS = 1
class CERT_CREATE_CONTEXT_PARA(Structure):
    cbSize: UInt32
    pfnFree: win32more.Windows.Win32.Security.Cryptography.PFN_CRYPT_FREE
    pvFree: VoidPtr
    pfnSort: win32more.Windows.Win32.Security.Cryptography.PFN_CERT_CREATE_CONTEXT_SORT_FUNC
    pvSort: VoidPtr
CERT_CREATE_SELFSIGN_FLAGS = UInt32
CERT_CREATE_SELFSIGN_NO_KEY_INFO: win32more.Windows.Win32.Security.Cryptography.CERT_CREATE_SELFSIGN_FLAGS = 2
CERT_CREATE_SELFSIGN_NO_SIGN: win32more.Windows.Win32.Security.Cryptography.CERT_CREATE_SELFSIGN_FLAGS = 1
class CERT_CRL_CONTEXT_PAIR(Structure):
    pCertContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT)
    pCrlContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CRL_CONTEXT)
class CERT_DH_PARAMETERS(Structure):
    p: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    g: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
class CERT_DSS_PARAMETERS(Structure):
    p: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    q: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    g: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
class CERT_ECC_SIGNATURE(Structure):
    r: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    s: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
class CERT_EXTENSION(Structure):
    pszObjId: win32more.Windows.Win32.Foundation.PSTR
    fCritical: win32more.Windows.Win32.Foundation.BOOL
    Value: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
class CERT_EXTENSIONS(Structure):
    cExtension: UInt32
    rgExtension: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_EXTENSION)
CERT_FIND_CHAIN_IN_STORE_FLAGS = UInt32
CERT_CHAIN_FIND_BY_ISSUER_COMPARE_KEY_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_CHAIN_IN_STORE_FLAGS = 1
CERT_CHAIN_FIND_BY_ISSUER_COMPLEX_CHAIN_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_CHAIN_IN_STORE_FLAGS = 2
CERT_CHAIN_FIND_BY_ISSUER_CACHE_ONLY_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_CHAIN_IN_STORE_FLAGS = 32768
CERT_CHAIN_FIND_BY_ISSUER_CACHE_ONLY_URL_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_CHAIN_IN_STORE_FLAGS = 4
CERT_CHAIN_FIND_BY_ISSUER_LOCAL_MACHINE_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_CHAIN_IN_STORE_FLAGS = 8
CERT_CHAIN_FIND_BY_ISSUER_NO_KEY_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_CHAIN_IN_STORE_FLAGS = 16384
CERT_FIND_FLAGS = UInt32
CERT_FIND_ANY: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_FLAGS = 0
CERT_FIND_CERT_ID: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_FLAGS = 1048576
CERT_FIND_CTL_USAGE: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_FLAGS = 655360
CERT_FIND_ENHKEY_USAGE: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_FLAGS = 655360
CERT_FIND_EXISTING: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_FLAGS = 851968
CERT_FIND_HASH: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_FLAGS = 65536
CERT_FIND_HAS_PRIVATE_KEY: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_FLAGS = 1376256
CERT_FIND_ISSUER_ATTR: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_FLAGS = 196612
CERT_FIND_ISSUER_NAME: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_FLAGS = 131076
CERT_FIND_ISSUER_OF: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_FLAGS = 786432
CERT_FIND_ISSUER_STR: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_FLAGS = 524292
CERT_FIND_KEY_IDENTIFIER: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_FLAGS = 983040
CERT_FIND_KEY_SPEC: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_FLAGS = 589824
CERT_FIND_MD5_HASH: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_FLAGS = 262144
CERT_FIND_PROPERTY: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_FLAGS = 327680
CERT_FIND_PUBLIC_KEY: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_FLAGS = 393216
CERT_FIND_SHA1_HASH: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_FLAGS = 65536
CERT_FIND_SIGNATURE_HASH: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_FLAGS = 917504
CERT_FIND_SUBJECT_ATTR: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_FLAGS = 196615
CERT_FIND_SUBJECT_CERT: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_FLAGS = 720896
CERT_FIND_SUBJECT_NAME: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_FLAGS = 131079
CERT_FIND_SUBJECT_STR: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_FLAGS = 524295
CERT_FIND_CROSS_CERT_DIST_POINTS: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_FLAGS = 1114112
CERT_FIND_PUBKEY_MD5_HASH: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_FLAGS = 1179648
CERT_FIND_SHA256_HASH: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_FLAGS = 1441792
CERT_FIND_SHA1_SHA256_HASH: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_FLAGS = 1507328
CERT_FIND_SUBJECT_STR_A: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_FLAGS = 458759
CERT_FIND_SUBJECT_STR_W: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_FLAGS = 524295
CERT_FIND_ISSUER_STR_A: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_FLAGS = 458756
CERT_FIND_ISSUER_STR_W: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_FLAGS = 524292
CERT_FIND_SUBJECT_INFO_ACCESS: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_FLAGS = 1245184
CERT_FIND_HASH_STR: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_FLAGS = 1310720
CERT_FIND_OPTIONAL_ENHKEY_USAGE_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_FLAGS = 1
CERT_FIND_EXT_ONLY_ENHKEY_USAGE_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_FLAGS = 2
CERT_FIND_PROP_ONLY_ENHKEY_USAGE_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_FLAGS = 4
CERT_FIND_NO_ENHKEY_USAGE_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_FLAGS = 8
CERT_FIND_OR_ENHKEY_USAGE_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_FLAGS = 16
CERT_FIND_VALID_ENHKEY_USAGE_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_FLAGS = 32
CERT_FIND_OPTIONAL_CTL_USAGE_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_FLAGS = 1
CERT_FIND_EXT_ONLY_CTL_USAGE_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_FLAGS = 2
CERT_FIND_PROP_ONLY_CTL_USAGE_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_FLAGS = 4
CERT_FIND_NO_CTL_USAGE_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_FLAGS = 8
CERT_FIND_OR_CTL_USAGE_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_FLAGS = 16
CERT_FIND_VALID_CTL_USAGE_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_FLAGS = 32
CERT_FIND_TYPE = UInt32
CTL_FIND_ANY: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_TYPE = 0
CTL_FIND_SHA1_HASH: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_TYPE = 1
CTL_FIND_MD5_HASH: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_TYPE = 2
CTL_FIND_USAGE: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_TYPE = 3
CTL_FIND_SAME_USAGE_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_TYPE = 1
CTL_FIND_EXISTING: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_TYPE = 5
CTL_FIND_SUBJECT: win32more.Windows.Win32.Security.Cryptography.CERT_FIND_TYPE = 4
class CERT_FORTEZZA_DATA_PROP(Structure):
    SerialNumber: Byte * 8
    CertIndex: Int32
    CertLabel: Byte * 36
class CERT_GENERAL_SUBTREE(Structure):
    Base: win32more.Windows.Win32.Security.Cryptography.CERT_ALT_NAME_ENTRY
    dwMinimum: UInt32
    fMaximum: win32more.Windows.Win32.Foundation.BOOL
    dwMaximum: UInt32
class CERT_HASHED_URL(Structure):
    HashAlgorithm: win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    Hash: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    pwszUrl: win32more.Windows.Win32.Foundation.PWSTR
class CERT_ID(Structure):
    dwIdChoice: win32more.Windows.Win32.Security.Cryptography.CERT_ID_OPTION
    Anonymous: _Anonymous_e__Union
    _anonymous_ = ('Anonymous',)
    class _Anonymous_e__Union(Union):
        IssuerSerialNumber: win32more.Windows.Win32.Security.Cryptography.CERT_ISSUER_SERIAL_NUMBER
        KeyId: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
        HashId: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
CERT_ID_OPTION = UInt32
CERT_ID_ISSUER_SERIAL_NUMBER: win32more.Windows.Win32.Security.Cryptography.CERT_ID_OPTION = 1
CERT_ID_KEY_IDENTIFIER: win32more.Windows.Win32.Security.Cryptography.CERT_ID_OPTION = 2
CERT_ID_SHA1_HASH: win32more.Windows.Win32.Security.Cryptography.CERT_ID_OPTION = 3
class CERT_INFO(Structure):
    dwVersion: UInt32
    SerialNumber: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    SignatureAlgorithm: win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    Issuer: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    NotBefore: win32more.Windows.Win32.Foundation.FILETIME
    NotAfter: win32more.Windows.Win32.Foundation.FILETIME
    Subject: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    SubjectPublicKeyInfo: win32more.Windows.Win32.Security.Cryptography.CERT_PUBLIC_KEY_INFO
    IssuerUniqueId: win32more.Windows.Win32.Security.Cryptography.CRYPT_BIT_BLOB
    SubjectUniqueId: win32more.Windows.Win32.Security.Cryptography.CRYPT_BIT_BLOB
    cExtension: UInt32
    rgExtension: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_EXTENSION)
class CERT_ISSUER_SERIAL_NUMBER(Structure):
    Issuer: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    SerialNumber: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
class CERT_KEYGEN_REQUEST_INFO(Structure):
    dwVersion: UInt32
    SubjectPublicKeyInfo: win32more.Windows.Win32.Security.Cryptography.CERT_PUBLIC_KEY_INFO
    pwszChallengeString: win32more.Windows.Win32.Foundation.PWSTR
class CERT_KEY_ATTRIBUTES_INFO(Structure):
    KeyId: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    IntendedKeyUsage: win32more.Windows.Win32.Security.Cryptography.CRYPT_BIT_BLOB
    pPrivateKeyUsagePeriod: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_PRIVATE_KEY_VALIDITY)
class CERT_KEY_CONTEXT(Structure):
    cbSize: UInt32
    Anonymous: _Anonymous_e__Union
    dwKeySpec: UInt32
    _anonymous_ = ('Anonymous',)
    class _Anonymous_e__Union(Union):
        hCryptProv: UIntPtr
        hNCryptKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE
CERT_KEY_SPEC = UInt32
AT_KEYEXCHANGE: win32more.Windows.Win32.Security.Cryptography.CERT_KEY_SPEC = 1
AT_SIGNATURE: win32more.Windows.Win32.Security.Cryptography.CERT_KEY_SPEC = 2
CERT_NCRYPT_KEY_SPEC: win32more.Windows.Win32.Security.Cryptography.CERT_KEY_SPEC = 4294967295
class CERT_KEY_USAGE_RESTRICTION_INFO(Structure):
    cCertPolicyId: UInt32
    rgCertPolicyId: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_POLICY_ID)
    RestrictedKeyUsage: win32more.Windows.Win32.Security.Cryptography.CRYPT_BIT_BLOB
class CERT_LDAP_STORE_OPENED_PARA(Structure):
    pvLdapSessionHandle: VoidPtr
    pwszLdapUrl: win32more.Windows.Win32.Foundation.PWSTR
class CERT_LOGOTYPE_AUDIO(Structure):
    LogotypeDetails: win32more.Windows.Win32.Security.Cryptography.CERT_LOGOTYPE_DETAILS
    pLogotypeAudioInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_LOGOTYPE_AUDIO_INFO)
class CERT_LOGOTYPE_AUDIO_INFO(Structure):
    dwFileSize: UInt32
    dwPlayTime: UInt32
    dwChannels: UInt32
    dwSampleRate: UInt32
    pwszLanguage: win32more.Windows.Win32.Foundation.PWSTR
CERT_LOGOTYPE_CHOICE = UInt32
CERT_LOGOTYPE_NO_IMAGE_RESOLUTION_CHOICE: win32more.Windows.Win32.Security.Cryptography.CERT_LOGOTYPE_CHOICE = 0
CERT_LOGOTYPE_BITS_IMAGE_RESOLUTION_CHOICE: win32more.Windows.Win32.Security.Cryptography.CERT_LOGOTYPE_CHOICE = 1
CERT_LOGOTYPE_TABLE_SIZE_IMAGE_RESOLUTION_CHOICE: win32more.Windows.Win32.Security.Cryptography.CERT_LOGOTYPE_CHOICE = 2
class CERT_LOGOTYPE_DATA(Structure):
    cLogotypeImage: UInt32
    rgLogotypeImage: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_LOGOTYPE_IMAGE)
    cLogotypeAudio: UInt32
    rgLogotypeAudio: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_LOGOTYPE_AUDIO)
class CERT_LOGOTYPE_DETAILS(Structure):
    pwszMimeType: win32more.Windows.Win32.Foundation.PWSTR
    cHashedUrl: UInt32
    rgHashedUrl: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_HASHED_URL)
class CERT_LOGOTYPE_EXT_INFO(Structure):
    cCommunityLogo: UInt32
    rgCommunityLogo: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_LOGOTYPE_INFO)
    pIssuerLogo: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_LOGOTYPE_INFO)
    pSubjectLogo: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_LOGOTYPE_INFO)
    cOtherLogo: UInt32
    rgOtherLogo: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_OTHER_LOGOTYPE_INFO)
class CERT_LOGOTYPE_IMAGE(Structure):
    LogotypeDetails: win32more.Windows.Win32.Security.Cryptography.CERT_LOGOTYPE_DETAILS
    pLogotypeImageInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_LOGOTYPE_IMAGE_INFO)
class CERT_LOGOTYPE_IMAGE_INFO(Structure):
    dwLogotypeImageInfoChoice: win32more.Windows.Win32.Security.Cryptography.CERT_LOGOTYPE_IMAGE_INFO_TYPE
    dwFileSize: UInt32
    dwXSize: UInt32
    dwYSize: UInt32
    dwLogotypeImageResolutionChoice: win32more.Windows.Win32.Security.Cryptography.CERT_LOGOTYPE_CHOICE
    Anonymous: _Anonymous_e__Union
    pwszLanguage: win32more.Windows.Win32.Foundation.PWSTR
    _anonymous_ = ('Anonymous',)
    class _Anonymous_e__Union(Union):
        dwNumBits: UInt32
        dwTableSize: UInt32
CERT_LOGOTYPE_IMAGE_INFO_TYPE = UInt32
CERT_LOGOTYPE_GRAY_SCALE_IMAGE_INFO_CHOICE: win32more.Windows.Win32.Security.Cryptography.CERT_LOGOTYPE_IMAGE_INFO_TYPE = 1
CERT_LOGOTYPE_COLOR_IMAGE_INFO_CHOICE: win32more.Windows.Win32.Security.Cryptography.CERT_LOGOTYPE_IMAGE_INFO_TYPE = 2
class CERT_LOGOTYPE_INFO(Structure):
    dwLogotypeInfoChoice: win32more.Windows.Win32.Security.Cryptography.CERT_LOGOTYPE_OPTION
    Anonymous: _Anonymous_e__Union
    _anonymous_ = ('Anonymous',)
    class _Anonymous_e__Union(Union):
        pLogotypeDirectInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_LOGOTYPE_DATA)
        pLogotypeIndirectInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_LOGOTYPE_REFERENCE)
CERT_LOGOTYPE_OPTION = UInt32
CERT_LOGOTYPE_DIRECT_INFO_CHOICE: win32more.Windows.Win32.Security.Cryptography.CERT_LOGOTYPE_OPTION = 1
CERT_LOGOTYPE_INDIRECT_INFO_CHOICE: win32more.Windows.Win32.Security.Cryptography.CERT_LOGOTYPE_OPTION = 2
class CERT_LOGOTYPE_REFERENCE(Structure):
    cHashedUrl: UInt32
    rgHashedUrl: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_HASHED_URL)
class CERT_NAME_CONSTRAINTS_INFO(Structure):
    cPermittedSubtree: UInt32
    rgPermittedSubtree: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_GENERAL_SUBTREE)
    cExcludedSubtree: UInt32
    rgExcludedSubtree: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_GENERAL_SUBTREE)
class CERT_NAME_INFO(Structure):
    cRDN: UInt32
    rgRDN: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_RDN)
class CERT_NAME_VALUE(Structure):
    dwValueType: UInt32
    Value: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
CERT_OPEN_STORE_FLAGS = UInt32
CERT_STORE_BACKUP_RESTORE_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_OPEN_STORE_FLAGS = 2048
CERT_STORE_CREATE_NEW_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_OPEN_STORE_FLAGS = 8192
CERT_STORE_DEFER_CLOSE_UNTIL_LAST_FREE_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_OPEN_STORE_FLAGS = 4
CERT_STORE_DELETE_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_OPEN_STORE_FLAGS = 16
CERT_STORE_ENUM_ARCHIVED_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_OPEN_STORE_FLAGS = 512
CERT_STORE_MAXIMUM_ALLOWED_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_OPEN_STORE_FLAGS = 4096
CERT_STORE_NO_CRYPT_RELEASE_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_OPEN_STORE_FLAGS = 1
CERT_STORE_OPEN_EXISTING_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_OPEN_STORE_FLAGS = 16384
CERT_STORE_READONLY_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_OPEN_STORE_FLAGS = 32768
CERT_STORE_SET_LOCALIZED_NAME_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_OPEN_STORE_FLAGS = 2
CERT_STORE_SHARE_CONTEXT_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_OPEN_STORE_FLAGS = 128
CERT_STORE_UPDATE_KEYID_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_OPEN_STORE_FLAGS = 1024
class CERT_OR_CRL_BLOB(Structure):
    dwChoice: UInt32
    cbEncoded: UInt32
    pbEncoded: POINTER(Byte)
class CERT_OR_CRL_BUNDLE(Structure):
    cItem: UInt32
    rgItem: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_OR_CRL_BLOB)
class CERT_OTHER_LOGOTYPE_INFO(Structure):
    pszObjId: win32more.Windows.Win32.Foundation.PSTR
    LogotypeInfo: win32more.Windows.Win32.Security.Cryptography.CERT_LOGOTYPE_INFO
class CERT_OTHER_NAME(Structure):
    pszObjId: win32more.Windows.Win32.Foundation.PSTR
    Value: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
class CERT_PAIR(Structure):
    Forward: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    Reverse: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
class CERT_PHYSICAL_STORE_INFO(Structure):
    cbSize: UInt32
    pszOpenStoreProvider: win32more.Windows.Win32.Foundation.PSTR
    dwOpenEncodingType: UInt32
    dwOpenFlags: UInt32
    OpenParameters: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    dwFlags: UInt32
    dwPriority: UInt32
class CERT_POLICIES_INFO(Structure):
    cPolicyInfo: UInt32
    rgPolicyInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_POLICY_INFO)
class CERT_POLICY95_QUALIFIER1(Structure):
    pszPracticesReference: win32more.Windows.Win32.Foundation.PWSTR
    pszNoticeIdentifier: win32more.Windows.Win32.Foundation.PSTR
    pszNSINoticeIdentifier: win32more.Windows.Win32.Foundation.PSTR
    cCPSURLs: UInt32
    rgCPSURLs: POINTER(win32more.Windows.Win32.Security.Cryptography.CPS_URLS)
class CERT_POLICY_CONSTRAINTS_INFO(Structure):
    fRequireExplicitPolicy: win32more.Windows.Win32.Foundation.BOOL
    dwRequireExplicitPolicySkipCerts: UInt32
    fInhibitPolicyMapping: win32more.Windows.Win32.Foundation.BOOL
    dwInhibitPolicyMappingSkipCerts: UInt32
class CERT_POLICY_ID(Structure):
    cCertPolicyElementId: UInt32
    rgpszCertPolicyElementId: POINTER(win32more.Windows.Win32.Foundation.PSTR)
class CERT_POLICY_INFO(Structure):
    pszPolicyIdentifier: win32more.Windows.Win32.Foundation.PSTR
    cPolicyQualifier: UInt32
    rgPolicyQualifier: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_POLICY_QUALIFIER_INFO)
class CERT_POLICY_MAPPING(Structure):
    pszIssuerDomainPolicy: win32more.Windows.Win32.Foundation.PSTR
    pszSubjectDomainPolicy: win32more.Windows.Win32.Foundation.PSTR
class CERT_POLICY_MAPPINGS_INFO(Structure):
    cPolicyMapping: UInt32
    rgPolicyMapping: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_POLICY_MAPPING)
class CERT_POLICY_QUALIFIER_INFO(Structure):
    pszPolicyQualifierId: win32more.Windows.Win32.Foundation.PSTR
    Qualifier: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
class CERT_POLICY_QUALIFIER_NOTICE_REFERENCE(Structure):
    pszOrganization: win32more.Windows.Win32.Foundation.PSTR
    cNoticeNumbers: UInt32
    rgNoticeNumbers: POINTER(Int32)
class CERT_POLICY_QUALIFIER_USER_NOTICE(Structure):
    pNoticeReference: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_POLICY_QUALIFIER_NOTICE_REFERENCE)
    pszDisplayText: win32more.Windows.Win32.Foundation.PWSTR
class CERT_PRIVATE_KEY_VALIDITY(Structure):
    NotBefore: win32more.Windows.Win32.Foundation.FILETIME
    NotAfter: win32more.Windows.Win32.Foundation.FILETIME
class CERT_PUBLIC_KEY_INFO(Structure):
    Algorithm: win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    PublicKey: win32more.Windows.Win32.Security.Cryptography.CRYPT_BIT_BLOB
class CERT_QC_STATEMENT(Structure):
    pszStatementId: win32more.Windows.Win32.Foundation.PSTR
    StatementInfo: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
class CERT_QC_STATEMENTS_EXT_INFO(Structure):
    cStatement: UInt32
    rgStatement: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_QC_STATEMENT)
CERT_QUERY_CONTENT_TYPE = UInt32
CERT_QUERY_CONTENT_CERT: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_CONTENT_TYPE = 1
CERT_QUERY_CONTENT_CTL: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_CONTENT_TYPE = 2
CERT_QUERY_CONTENT_CRL: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_CONTENT_TYPE = 3
CERT_QUERY_CONTENT_SERIALIZED_STORE: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_CONTENT_TYPE = 4
CERT_QUERY_CONTENT_SERIALIZED_CERT: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_CONTENT_TYPE = 5
CERT_QUERY_CONTENT_SERIALIZED_CTL: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_CONTENT_TYPE = 6
CERT_QUERY_CONTENT_SERIALIZED_CRL: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_CONTENT_TYPE = 7
CERT_QUERY_CONTENT_PKCS7_SIGNED: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_CONTENT_TYPE = 8
CERT_QUERY_CONTENT_PKCS7_UNSIGNED: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_CONTENT_TYPE = 9
CERT_QUERY_CONTENT_PKCS7_SIGNED_EMBED: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_CONTENT_TYPE = 10
CERT_QUERY_CONTENT_PKCS10: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_CONTENT_TYPE = 11
CERT_QUERY_CONTENT_PFX: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_CONTENT_TYPE = 12
CERT_QUERY_CONTENT_CERT_PAIR: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_CONTENT_TYPE = 13
CERT_QUERY_CONTENT_PFX_AND_LOAD: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_CONTENT_TYPE = 14
CERT_QUERY_CONTENT_TYPE_FLAGS = UInt32
CERT_QUERY_CONTENT_FLAG_CERT: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_CONTENT_TYPE_FLAGS = 2
CERT_QUERY_CONTENT_FLAG_CTL: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_CONTENT_TYPE_FLAGS = 4
CERT_QUERY_CONTENT_FLAG_CRL: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_CONTENT_TYPE_FLAGS = 8
CERT_QUERY_CONTENT_FLAG_SERIALIZED_STORE: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_CONTENT_TYPE_FLAGS = 16
CERT_QUERY_CONTENT_FLAG_SERIALIZED_CERT: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_CONTENT_TYPE_FLAGS = 32
CERT_QUERY_CONTENT_FLAG_SERIALIZED_CTL: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_CONTENT_TYPE_FLAGS = 64
CERT_QUERY_CONTENT_FLAG_SERIALIZED_CRL: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_CONTENT_TYPE_FLAGS = 128
CERT_QUERY_CONTENT_FLAG_PKCS7_SIGNED: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_CONTENT_TYPE_FLAGS = 256
CERT_QUERY_CONTENT_FLAG_PKCS7_UNSIGNED: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_CONTENT_TYPE_FLAGS = 512
CERT_QUERY_CONTENT_FLAG_PKCS7_SIGNED_EMBED: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_CONTENT_TYPE_FLAGS = 1024
CERT_QUERY_CONTENT_FLAG_PKCS10: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_CONTENT_TYPE_FLAGS = 2048
CERT_QUERY_CONTENT_FLAG_PFX: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_CONTENT_TYPE_FLAGS = 4096
CERT_QUERY_CONTENT_FLAG_CERT_PAIR: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_CONTENT_TYPE_FLAGS = 8192
CERT_QUERY_CONTENT_FLAG_PFX_AND_LOAD: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_CONTENT_TYPE_FLAGS = 16384
CERT_QUERY_CONTENT_FLAG_ALL: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_CONTENT_TYPE_FLAGS = 16382
CERT_QUERY_CONTENT_FLAG_ALL_ISSUER_CERT: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_CONTENT_TYPE_FLAGS = 818
CERT_QUERY_ENCODING_TYPE = UInt32
X509_ASN_ENCODING: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_ENCODING_TYPE = 1
PKCS_7_ASN_ENCODING: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_ENCODING_TYPE = 65536
CERT_QUERY_FORMAT_TYPE = UInt32
CERT_QUERY_FORMAT_BINARY: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_FORMAT_TYPE = 1
CERT_QUERY_FORMAT_BASE64_ENCODED: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_FORMAT_TYPE = 2
CERT_QUERY_FORMAT_ASN_ASCII_HEX_ENCODED: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_FORMAT_TYPE = 3
CERT_QUERY_FORMAT_TYPE_FLAGS = UInt32
CERT_QUERY_FORMAT_FLAG_BINARY: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_FORMAT_TYPE_FLAGS = 2
CERT_QUERY_FORMAT_FLAG_BASE64_ENCODED: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_FORMAT_TYPE_FLAGS = 4
CERT_QUERY_FORMAT_FLAG_ASN_ASCII_HEX_ENCODED: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_FORMAT_TYPE_FLAGS = 8
CERT_QUERY_FORMAT_FLAG_ALL: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_FORMAT_TYPE_FLAGS = 14
CERT_QUERY_OBJECT_TYPE = UInt32
CERT_QUERY_OBJECT_FILE: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_OBJECT_TYPE = 1
CERT_QUERY_OBJECT_BLOB: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_OBJECT_TYPE = 2
class CERT_RDN(Structure):
    cRDNAttr: UInt32
    rgRDNAttr: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_RDN_ATTR)
class CERT_RDN_ATTR(Structure):
    pszObjId: win32more.Windows.Win32.Foundation.PSTR
    dwValueType: UInt32
    Value: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
CERT_RDN_ATTR_VALUE_TYPE = Int32
CERT_RDN_ANY_TYPE: win32more.Windows.Win32.Security.Cryptography.CERT_RDN_ATTR_VALUE_TYPE = 0
CERT_RDN_NUMERIC_STRING: win32more.Windows.Win32.Security.Cryptography.CERT_RDN_ATTR_VALUE_TYPE = 3
CERT_RDN_PRINTABLE_STRING: win32more.Windows.Win32.Security.Cryptography.CERT_RDN_ATTR_VALUE_TYPE = 4
CERT_RDN_T61_STRING: win32more.Windows.Win32.Security.Cryptography.CERT_RDN_ATTR_VALUE_TYPE = 5
CERT_RDN_VIDEOTEX_STRING: win32more.Windows.Win32.Security.Cryptography.CERT_RDN_ATTR_VALUE_TYPE = 6
CERT_RDN_IA5_STRING: win32more.Windows.Win32.Security.Cryptography.CERT_RDN_ATTR_VALUE_TYPE = 7
CERT_RDN_GRAPHIC_STRING: win32more.Windows.Win32.Security.Cryptography.CERT_RDN_ATTR_VALUE_TYPE = 8
CERT_RDN_ISO646_STRING: win32more.Windows.Win32.Security.Cryptography.CERT_RDN_ATTR_VALUE_TYPE = 9
CERT_RDN_GENERAL_STRING: win32more.Windows.Win32.Security.Cryptography.CERT_RDN_ATTR_VALUE_TYPE = 10
CERT_RDN_INT4_STRING: win32more.Windows.Win32.Security.Cryptography.CERT_RDN_ATTR_VALUE_TYPE = 11
CERT_RDN_UNICODE_STRING: win32more.Windows.Win32.Security.Cryptography.CERT_RDN_ATTR_VALUE_TYPE = 12
CERT_RDN_BMP_STRING: win32more.Windows.Win32.Security.Cryptography.CERT_RDN_ATTR_VALUE_TYPE = 12
CERT_RDN_ENCODED_BLOB: win32more.Windows.Win32.Security.Cryptography.CERT_RDN_ATTR_VALUE_TYPE = 1
CERT_RDN_OCTET_STRING: win32more.Windows.Win32.Security.Cryptography.CERT_RDN_ATTR_VALUE_TYPE = 2
CERT_RDN_TELETEX_STRING: win32more.Windows.Win32.Security.Cryptography.CERT_RDN_ATTR_VALUE_TYPE = 5
CERT_RDN_UNIVERSAL_STRING: win32more.Windows.Win32.Security.Cryptography.CERT_RDN_ATTR_VALUE_TYPE = 11
CERT_RDN_UTF8_STRING: win32more.Windows.Win32.Security.Cryptography.CERT_RDN_ATTR_VALUE_TYPE = 13
CERT_RDN_VISIBLE_STRING: win32more.Windows.Win32.Security.Cryptography.CERT_RDN_ATTR_VALUE_TYPE = 9
class CERT_REGISTRY_STORE_CLIENT_GPT_PARA(Structure):
    hKeyBase: win32more.Windows.Win32.System.Registry.HKEY
    pwszRegPath: win32more.Windows.Win32.Foundation.PWSTR
class CERT_REGISTRY_STORE_ROAMING_PARA(Structure):
    hKey: win32more.Windows.Win32.System.Registry.HKEY
    pwszStoreDirectory: win32more.Windows.Win32.Foundation.PWSTR
class CERT_REQUEST_INFO(Structure):
    dwVersion: UInt32
    Subject: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    SubjectPublicKeyInfo: win32more.Windows.Win32.Security.Cryptography.CERT_PUBLIC_KEY_INFO
    cAttribute: UInt32
    rgAttribute: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_ATTRIBUTE)
class CERT_REVOCATION_CHAIN_PARA(Structure):
    cbSize: UInt32
    hChainEngine: win32more.Windows.Win32.Security.Cryptography.HCERTCHAINENGINE
    hAdditionalStore: win32more.Windows.Win32.Security.Cryptography.HCERTSTORE
    dwChainFlags: UInt32
    dwUrlRetrievalTimeout: UInt32
    pftCurrentTime: POINTER(win32more.Windows.Win32.Foundation.FILETIME)
    pftCacheResync: POINTER(win32more.Windows.Win32.Foundation.FILETIME)
    cbMaxUrlRetrievalByteCount: UInt32
class CERT_REVOCATION_CRL_INFO(Structure):
    cbSize: UInt32
    pBaseCrlContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CRL_CONTEXT)
    pDeltaCrlContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CRL_CONTEXT)
    pCrlEntry: POINTER(win32more.Windows.Win32.Security.Cryptography.CRL_ENTRY)
    fDeltaCrlEntry: win32more.Windows.Win32.Foundation.BOOL
class CERT_REVOCATION_INFO(Structure):
    cbSize: UInt32
    dwRevocationResult: UInt32
    pszRevocationOid: win32more.Windows.Win32.Foundation.PSTR
    pvOidSpecificInfo: VoidPtr
    fHasFreshnessTime: win32more.Windows.Win32.Foundation.BOOL
    dwFreshnessTime: UInt32
    pCrlInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_REVOCATION_CRL_INFO)
class CERT_REVOCATION_PARA(Structure):
    cbSize: UInt32
    pIssuerCert: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT)
    cCertStore: UInt32
    rgCertStore: POINTER(win32more.Windows.Win32.Security.Cryptography.HCERTSTORE)
    hCrlStore: win32more.Windows.Win32.Security.Cryptography.HCERTSTORE
    pftTimeToUse: POINTER(win32more.Windows.Win32.Foundation.FILETIME)
class CERT_REVOCATION_STATUS(Structure):
    cbSize: UInt32
    dwIndex: UInt32
    dwError: UInt32
    dwReason: win32more.Windows.Win32.Security.Cryptography.CERT_REVOCATION_STATUS_REASON
    fHasFreshnessTime: win32more.Windows.Win32.Foundation.BOOL
    dwFreshnessTime: UInt32
CERT_REVOCATION_STATUS_REASON = UInt32
CRL_REASON_UNSPECIFIED: win32more.Windows.Win32.Security.Cryptography.CERT_REVOCATION_STATUS_REASON = 0
CRL_REASON_KEY_COMPROMISE: win32more.Windows.Win32.Security.Cryptography.CERT_REVOCATION_STATUS_REASON = 1
CRL_REASON_CA_COMPROMISE: win32more.Windows.Win32.Security.Cryptography.CERT_REVOCATION_STATUS_REASON = 2
CRL_REASON_AFFILIATION_CHANGED: win32more.Windows.Win32.Security.Cryptography.CERT_REVOCATION_STATUS_REASON = 3
CRL_REASON_SUPERSEDED: win32more.Windows.Win32.Security.Cryptography.CERT_REVOCATION_STATUS_REASON = 4
CRL_REASON_CESSATION_OF_OPERATION: win32more.Windows.Win32.Security.Cryptography.CERT_REVOCATION_STATUS_REASON = 5
CRL_REASON_CERTIFICATE_HOLD: win32more.Windows.Win32.Security.Cryptography.CERT_REVOCATION_STATUS_REASON = 6
CRL_REASON_REMOVE_FROM_CRL: win32more.Windows.Win32.Security.Cryptography.CERT_REVOCATION_STATUS_REASON = 8
CERT_ROOT_PROGRAM_FLAGS = UInt32
CERT_ROOT_PROGRAM_FLAG_LSC: win32more.Windows.Win32.Security.Cryptography.CERT_ROOT_PROGRAM_FLAGS = 64
CERT_ROOT_PROGRAM_FLAG_ORG: win32more.Windows.Win32.Security.Cryptography.CERT_ROOT_PROGRAM_FLAGS = 128
CERT_ROOT_PROGRAM_FLAG_SUBJECT_LOGO: win32more.Windows.Win32.Security.Cryptography.CERT_ROOT_PROGRAM_FLAGS = 32
class CERT_SELECT_CHAIN_PARA(Structure):
    hChainEngine: win32more.Windows.Win32.Security.Cryptography.HCERTCHAINENGINE
    pTime: POINTER(win32more.Windows.Win32.Foundation.FILETIME)
    hAdditionalStore: win32more.Windows.Win32.Security.Cryptography.HCERTSTORE
    pChainPara: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CHAIN_PARA)
    dwFlags: UInt32
class CERT_SELECT_CRITERIA(Structure):
    dwType: win32more.Windows.Win32.Security.Cryptography.CERT_SELECT_CRITERIA_TYPE
    cPara: UInt32
    ppPara: POINTER(VoidPtr)
CERT_SELECT_CRITERIA_TYPE = UInt32
CERT_SELECT_BY_ENHKEY_USAGE: win32more.Windows.Win32.Security.Cryptography.CERT_SELECT_CRITERIA_TYPE = 1
CERT_SELECT_BY_KEY_USAGE: win32more.Windows.Win32.Security.Cryptography.CERT_SELECT_CRITERIA_TYPE = 2
CERT_SELECT_BY_POLICY_OID: win32more.Windows.Win32.Security.Cryptography.CERT_SELECT_CRITERIA_TYPE = 3
CERT_SELECT_BY_PROV_NAME: win32more.Windows.Win32.Security.Cryptography.CERT_SELECT_CRITERIA_TYPE = 4
CERT_SELECT_BY_EXTENSION: win32more.Windows.Win32.Security.Cryptography.CERT_SELECT_CRITERIA_TYPE = 5
CERT_SELECT_BY_SUBJECT_HOST_NAME: win32more.Windows.Win32.Security.Cryptography.CERT_SELECT_CRITERIA_TYPE = 6
CERT_SELECT_BY_ISSUER_ATTR: win32more.Windows.Win32.Security.Cryptography.CERT_SELECT_CRITERIA_TYPE = 7
CERT_SELECT_BY_SUBJECT_ATTR: win32more.Windows.Win32.Security.Cryptography.CERT_SELECT_CRITERIA_TYPE = 8
CERT_SELECT_BY_ISSUER_NAME: win32more.Windows.Win32.Security.Cryptography.CERT_SELECT_CRITERIA_TYPE = 9
CERT_SELECT_BY_PUBLIC_KEY: win32more.Windows.Win32.Security.Cryptography.CERT_SELECT_CRITERIA_TYPE = 10
CERT_SELECT_BY_TLS_SIGNATURES: win32more.Windows.Win32.Security.Cryptography.CERT_SELECT_CRITERIA_TYPE = 11
class CERT_SERVER_OCSP_RESPONSE_CONTEXT(Structure):
    cbSize: UInt32
    pbEncodedOcspResponse: POINTER(Byte)
    cbEncodedOcspResponse: UInt32
class CERT_SERVER_OCSP_RESPONSE_OPEN_PARA(Structure):
    cbSize: UInt32
    dwFlags: UInt32
    pcbUsedSize: POINTER(UInt32)
    pwszOcspDirectory: win32more.Windows.Win32.Foundation.PWSTR
    pfnUpdateCallback: win32more.Windows.Win32.Security.Cryptography.PFN_CERT_SERVER_OCSP_RESPONSE_UPDATE_CALLBACK
    pvUpdateCallbackArg: VoidPtr
class CERT_SIGNED_CONTENT_INFO(Structure):
    ToBeSigned: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    SignatureAlgorithm: win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    Signature: win32more.Windows.Win32.Security.Cryptography.CRYPT_BIT_BLOB
class CERT_SIMPLE_CHAIN(Structure):
    cbSize: UInt32
    TrustStatus: win32more.Windows.Win32.Security.Cryptography.CERT_TRUST_STATUS
    cElement: UInt32
    rgpElement: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CHAIN_ELEMENT))
    pTrustListInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_TRUST_LIST_INFO)
    fHasRevocationFreshnessTime: win32more.Windows.Win32.Foundation.BOOL
    dwRevocationFreshnessTime: UInt32
class CERT_STORE_PROV_FIND_INFO(Structure):
    cbSize: UInt32
    dwMsgAndCertEncodingType: UInt32
    dwFindFlags: UInt32
    dwFindType: UInt32
    pvFindPara: VoidPtr
CERT_STORE_PROV_FLAGS = UInt32
CERT_STORE_PROV_EXTERNAL_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_STORE_PROV_FLAGS = 1
CERT_STORE_PROV_DELETED_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_STORE_PROV_FLAGS = 2
CERT_STORE_PROV_NO_PERSIST_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_STORE_PROV_FLAGS = 4
CERT_STORE_PROV_SYSTEM_STORE_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_STORE_PROV_FLAGS = 8
CERT_STORE_PROV_LM_SYSTEM_STORE_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_STORE_PROV_FLAGS = 16
class CERT_STORE_PROV_INFO(Structure):
    cbSize: UInt32
    cStoreProvFunc: UInt32
    rgpvStoreProvFunc: POINTER(VoidPtr)
    hStoreProv: win32more.Windows.Win32.Security.Cryptography.HCERTSTOREPROV
    dwStoreProvFlags: win32more.Windows.Win32.Security.Cryptography.CERT_STORE_PROV_FLAGS
    hStoreProvFuncAddr2: VoidPtr
CERT_STORE_SAVE_AS = UInt32
CERT_STORE_SAVE_AS_PKCS7: win32more.Windows.Win32.Security.Cryptography.CERT_STORE_SAVE_AS = 2
CERT_STORE_SAVE_AS_STORE: win32more.Windows.Win32.Security.Cryptography.CERT_STORE_SAVE_AS = 1
CERT_STORE_SAVE_TO = UInt32
CERT_STORE_SAVE_TO_FILE: win32more.Windows.Win32.Security.Cryptography.CERT_STORE_SAVE_TO = 1
CERT_STORE_SAVE_TO_FILENAME: win32more.Windows.Win32.Security.Cryptography.CERT_STORE_SAVE_TO = 4
CERT_STORE_SAVE_TO_FILENAME_A: win32more.Windows.Win32.Security.Cryptography.CERT_STORE_SAVE_TO = 3
CERT_STORE_SAVE_TO_FILENAME_W: win32more.Windows.Win32.Security.Cryptography.CERT_STORE_SAVE_TO = 4
CERT_STORE_SAVE_TO_MEMORY: win32more.Windows.Win32.Security.Cryptography.CERT_STORE_SAVE_TO = 2
CERT_STRING_TYPE = UInt32
CERT_SIMPLE_NAME_STR: win32more.Windows.Win32.Security.Cryptography.CERT_STRING_TYPE = 1
CERT_OID_NAME_STR: win32more.Windows.Win32.Security.Cryptography.CERT_STRING_TYPE = 2
CERT_X500_NAME_STR: win32more.Windows.Win32.Security.Cryptography.CERT_STRING_TYPE = 3
CERT_STRONG_SIGN_FLAGS = UInt32
CERT_STRONG_SIGN_ENABLE_CRL_CHECK: win32more.Windows.Win32.Security.Cryptography.CERT_STRONG_SIGN_FLAGS = 1
CERT_STRONG_SIGN_ENABLE_OCSP_CHECK: win32more.Windows.Win32.Security.Cryptography.CERT_STRONG_SIGN_FLAGS = 2
class CERT_STRONG_SIGN_PARA(Structure):
    cbSize: UInt32
    dwInfoChoice: UInt32
    Anonymous: _Anonymous_e__Union
    _anonymous_ = ('Anonymous',)
    class _Anonymous_e__Union(Union):
        pvInfo: VoidPtr
        pSerializedInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_STRONG_SIGN_SERIALIZED_INFO)
        pszOID: win32more.Windows.Win32.Foundation.PSTR
class CERT_STRONG_SIGN_SERIALIZED_INFO(Structure):
    dwFlags: win32more.Windows.Win32.Security.Cryptography.CERT_STRONG_SIGN_FLAGS
    pwszCNGSignHashAlgids: win32more.Windows.Win32.Foundation.PWSTR
    pwszCNGPubKeyMinBitLengths: win32more.Windows.Win32.Foundation.PWSTR
class CERT_SUPPORTED_ALGORITHM_INFO(Structure):
    Algorithm: win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    IntendedKeyUsage: win32more.Windows.Win32.Security.Cryptography.CRYPT_BIT_BLOB
    IntendedCertPolicies: win32more.Windows.Win32.Security.Cryptography.CERT_POLICIES_INFO
CERT_SYSTEM_STORE_FLAGS = UInt32
CERT_SYSTEM_STORE_LOCATION_MASK: win32more.Windows.Win32.Security.Cryptography.CERT_SYSTEM_STORE_FLAGS = 16711680
CERT_SYSTEM_STORE_RELOCATE_FLAG: win32more.Windows.Win32.Security.Cryptography.CERT_SYSTEM_STORE_FLAGS = 2147483648
class CERT_SYSTEM_STORE_INFO(Structure):
    cbSize: UInt32
class CERT_SYSTEM_STORE_RELOCATE_PARA(Structure):
    Anonymous1: _Anonymous1_e__Union
    Anonymous2: _Anonymous2_e__Union
    _anonymous_ = ('Anonymous1', 'Anonymous2')
    class _Anonymous1_e__Union(Union):
        hKeyBase: win32more.Windows.Win32.System.Registry.HKEY
        pvBase: VoidPtr
    class _Anonymous2_e__Union(Union):
        pvSystemStore: VoidPtr
        pszSystemStore: win32more.Windows.Win32.Foundation.PSTR
        pwszSystemStore: win32more.Windows.Win32.Foundation.PWSTR
class CERT_TEMPLATE_EXT(Structure):
    pszObjId: win32more.Windows.Win32.Foundation.PSTR
    dwMajorVersion: UInt32
    fMinorVersion: win32more.Windows.Win32.Foundation.BOOL
    dwMinorVersion: UInt32
class CERT_TPM_SPECIFICATION_INFO(Structure):
    pwszFamily: win32more.Windows.Win32.Foundation.PWSTR
    dwLevel: UInt32
    dwRevision: UInt32
class CERT_TRUST_LIST_INFO(Structure):
    cbSize: UInt32
    pCtlEntry: POINTER(win32more.Windows.Win32.Security.Cryptography.CTL_ENTRY)
    pCtlContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CTL_CONTEXT)
class CERT_TRUST_STATUS(Structure):
    dwErrorStatus: UInt32
    dwInfoStatus: UInt32
class CERT_USAGE_MATCH(Structure):
    dwType: UInt32
    Usage: win32more.Windows.Win32.Security.Cryptography.CTL_USAGE
class CERT_X942_DH_PARAMETERS(Structure):
    p: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    g: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    q: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    j: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    pValidationParams: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_X942_DH_VALIDATION_PARAMS)
class CERT_X942_DH_VALIDATION_PARAMS(Structure):
    seed: win32more.Windows.Win32.Security.Cryptography.CRYPT_BIT_BLOB
    pgenCounter: UInt32
CESSetupProperty = Int32
ENUM_CESSETUPPROP_USE_IISAPPPOOLIDENTITY: win32more.Windows.Win32.Security.Cryptography.CESSetupProperty = 0
ENUM_CESSETUPPROP_CACONFIG: win32more.Windows.Win32.Security.Cryptography.CESSetupProperty = 1
ENUM_CESSETUPPROP_AUTHENTICATION: win32more.Windows.Win32.Security.Cryptography.CESSetupProperty = 2
ENUM_CESSETUPPROP_SSLCERTHASH: win32more.Windows.Win32.Security.Cryptography.CESSetupProperty = 3
ENUM_CESSETUPPROP_URL: win32more.Windows.Win32.Security.Cryptography.CESSetupProperty = 4
ENUM_CESSETUPPROP_RENEWALONLY: win32more.Windows.Win32.Security.Cryptography.CESSetupProperty = 5
ENUM_CESSETUPPROP_ALLOW_KEYBASED_RENEWAL: win32more.Windows.Win32.Security.Cryptography.CESSetupProperty = 6
class CLAIMLIST(Structure):
    count: UInt32
    claims: POINTER(win32more.Windows.Win32.Foundation.PWSTR)
class CLMD_PIV_CERT_DATA(Structure):
    dwVersion: UInt32
    dwCertTag: UInt32
    pbCert: POINTER(Byte)
    cbCert: UInt32
class CLMD_PIV_GENERATE_ASYMMETRIC_KEY(Structure):
    dwVersion: UInt32
    bAlgorithmId: Byte
    bKeyId: Byte
    pbKey: POINTER(Byte)
    cbKey: UInt32
class CLMD_PIV_PUBLIC_KEY_DATA(Structure):
    dwVersion: UInt32
    bKeyId: Byte
    pbPublicKey: POINTER(Byte)
    cbPublicKey: UInt32
class CMC_ADD_ATTRIBUTES_INFO(Structure):
    dwCmcDataReference: UInt32
    cCertReference: UInt32
    rgdwCertReference: POINTER(UInt32)
    cAttribute: UInt32
    rgAttribute: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_ATTRIBUTE)
class CMC_ADD_EXTENSIONS_INFO(Structure):
    dwCmcDataReference: UInt32
    cCertReference: UInt32
    rgdwCertReference: POINTER(UInt32)
    cExtension: UInt32
    rgExtension: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_EXTENSION)
class CMC_DATA_INFO(Structure):
    cTaggedAttribute: UInt32
    rgTaggedAttribute: POINTER(win32more.Windows.Win32.Security.Cryptography.CMC_TAGGED_ATTRIBUTE)
    cTaggedRequest: UInt32
    rgTaggedRequest: POINTER(win32more.Windows.Win32.Security.Cryptography.CMC_TAGGED_REQUEST)
    cTaggedContentInfo: UInt32
    rgTaggedContentInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CMC_TAGGED_CONTENT_INFO)
    cTaggedOtherMsg: UInt32
    rgTaggedOtherMsg: POINTER(win32more.Windows.Win32.Security.Cryptography.CMC_TAGGED_OTHER_MSG)
class CMC_PEND_INFO(Structure):
    PendToken: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    PendTime: win32more.Windows.Win32.Foundation.FILETIME
class CMC_RESPONSE_INFO(Structure):
    cTaggedAttribute: UInt32
    rgTaggedAttribute: POINTER(win32more.Windows.Win32.Security.Cryptography.CMC_TAGGED_ATTRIBUTE)
    cTaggedContentInfo: UInt32
    rgTaggedContentInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CMC_TAGGED_CONTENT_INFO)
    cTaggedOtherMsg: UInt32
    rgTaggedOtherMsg: POINTER(win32more.Windows.Win32.Security.Cryptography.CMC_TAGGED_OTHER_MSG)
class CMC_STATUS_INFO(Structure):
    dwStatus: UInt32
    cBodyList: UInt32
    rgdwBodyList: POINTER(UInt32)
    pwszStatusString: win32more.Windows.Win32.Foundation.PWSTR
    dwOtherInfoChoice: UInt32
    Anonymous: _Anonymous_e__Union
    _anonymous_ = ('Anonymous',)
    class _Anonymous_e__Union(Union):
        dwFailInfo: UInt32
        pPendInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CMC_PEND_INFO)
class CMC_TAGGED_ATTRIBUTE(Structure):
    dwBodyPartID: UInt32
    Attribute: win32more.Windows.Win32.Security.Cryptography.CRYPT_ATTRIBUTE
class CMC_TAGGED_CERT_REQUEST(Structure):
    dwBodyPartID: UInt32
    SignedCertRequest: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
class CMC_TAGGED_CONTENT_INFO(Structure):
    dwBodyPartID: UInt32
    EncodedContentInfo: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
class CMC_TAGGED_OTHER_MSG(Structure):
    dwBodyPartID: UInt32
    pszObjId: win32more.Windows.Win32.Foundation.PSTR
    Value: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
class CMC_TAGGED_REQUEST(Structure):
    dwTaggedRequestChoice: UInt32
    Anonymous: _Anonymous_e__Union
    _anonymous_ = ('Anonymous',)
    class _Anonymous_e__Union(Union):
        pTaggedCertRequest: POINTER(win32more.Windows.Win32.Security.Cryptography.CMC_TAGGED_CERT_REQUEST)
CMSCEPSetup = Guid('{aa4f5c02-8e7c-49c4-94fa-67a5cc5eadb4}')
class CMSG_CMS_RECIPIENT_INFO(Structure):
    dwRecipientChoice: UInt32
    Anonymous: _Anonymous_e__Union
    _anonymous_ = ('Anonymous',)
    class _Anonymous_e__Union(Union):
        pKeyTrans: POINTER(win32more.Windows.Win32.Security.Cryptography.CMSG_KEY_TRANS_RECIPIENT_INFO)
        pKeyAgree: POINTER(win32more.Windows.Win32.Security.Cryptography.CMSG_KEY_AGREE_RECIPIENT_INFO)
        pMailList: POINTER(win32more.Windows.Win32.Security.Cryptography.CMSG_MAIL_LIST_RECIPIENT_INFO)
class CMSG_CMS_SIGNER_INFO(Structure):
    dwVersion: UInt32
    SignerId: win32more.Windows.Win32.Security.Cryptography.CERT_ID
    HashAlgorithm: win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    HashEncryptionAlgorithm: win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    EncryptedHash: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    AuthAttrs: win32more.Windows.Win32.Security.Cryptography.CRYPT_ATTRIBUTES
    UnauthAttrs: win32more.Windows.Win32.Security.Cryptography.CRYPT_ATTRIBUTES
class CMSG_CNG_CONTENT_DECRYPT_INFO(Structure):
    cbSize: UInt32
    ContentEncryptionAlgorithm: win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    pfnAlloc: win32more.Windows.Win32.Security.Cryptography.PFN_CMSG_ALLOC
    pfnFree: win32more.Windows.Win32.Security.Cryptography.PFN_CMSG_FREE
    hNCryptKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE
    pbContentEncryptKey: POINTER(Byte)
    cbContentEncryptKey: UInt32
    hCNGContentEncryptKey: win32more.Windows.Win32.Security.Cryptography.BCRYPT_KEY_HANDLE
    pbCNGContentEncryptKeyObject: POINTER(Byte)
class CMSG_CONTENT_ENCRYPT_INFO(Structure):
    cbSize: UInt32
    hCryptProv: win32more.Windows.Win32.Security.Cryptography.HCRYPTPROV_LEGACY
    ContentEncryptionAlgorithm: win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    pvEncryptionAuxInfo: VoidPtr
    cRecipients: UInt32
    rgCmsRecipients: POINTER(win32more.Windows.Win32.Security.Cryptography.CMSG_RECIPIENT_ENCODE_INFO)
    pfnAlloc: win32more.Windows.Win32.Security.Cryptography.PFN_CMSG_ALLOC
    pfnFree: win32more.Windows.Win32.Security.Cryptography.PFN_CMSG_FREE
    dwEncryptFlags: UInt32
    Anonymous: _Anonymous_e__Union
    dwFlags: UInt32
    fCNG: win32more.Windows.Win32.Foundation.BOOL
    pbCNGContentEncryptKeyObject: POINTER(Byte)
    pbContentEncryptKey: POINTER(Byte)
    cbContentEncryptKey: UInt32
    _anonymous_ = ('Anonymous',)
    class _Anonymous_e__Union(Union):
        hContentEncryptKey: UIntPtr
        hCNGContentEncryptKey: win32more.Windows.Win32.Security.Cryptography.BCRYPT_KEY_HANDLE
class CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA(Structure):
    cbSize: UInt32
    dwSignerIndex: UInt32
    blob: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
class CMSG_CTRL_DECRYPT_PARA(Structure):
    cbSize: UInt32
    Anonymous: _Anonymous_e__Union
    dwKeySpec: UInt32
    dwRecipientIndex: UInt32
    _anonymous_ = ('Anonymous',)
    class _Anonymous_e__Union(Union):
        hCryptProv: UIntPtr
        hNCryptKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE
class CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA(Structure):
    cbSize: UInt32
    dwSignerIndex: UInt32
    dwUnauthAttrIndex: UInt32
class CMSG_CTRL_KEY_AGREE_DECRYPT_PARA(Structure):
    cbSize: UInt32
    Anonymous: _Anonymous_e__Union
    dwKeySpec: UInt32
    pKeyAgree: POINTER(win32more.Windows.Win32.Security.Cryptography.CMSG_KEY_AGREE_RECIPIENT_INFO)
    dwRecipientIndex: UInt32
    dwRecipientEncryptedKeyIndex: UInt32
    OriginatorPublicKey: win32more.Windows.Win32.Security.Cryptography.CRYPT_BIT_BLOB
    _anonymous_ = ('Anonymous',)
    class _Anonymous_e__Union(Union):
        hCryptProv: UIntPtr
        hNCryptKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE
class CMSG_CTRL_KEY_TRANS_DECRYPT_PARA(Structure):
    cbSize: UInt32
    Anonymous: _Anonymous_e__Union
    dwKeySpec: UInt32
    pKeyTrans: POINTER(win32more.Windows.Win32.Security.Cryptography.CMSG_KEY_TRANS_RECIPIENT_INFO)
    dwRecipientIndex: UInt32
    _anonymous_ = ('Anonymous',)
    class _Anonymous_e__Union(Union):
        hCryptProv: UIntPtr
        hNCryptKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE
class CMSG_CTRL_MAIL_LIST_DECRYPT_PARA(Structure):
    cbSize: UInt32
    hCryptProv: UIntPtr
    pMailList: POINTER(win32more.Windows.Win32.Security.Cryptography.CMSG_MAIL_LIST_RECIPIENT_INFO)
    dwRecipientIndex: UInt32
    dwKeyChoice: UInt32
    Anonymous: _Anonymous_e__Union
    _anonymous_ = ('Anonymous',)
    class _Anonymous_e__Union(Union):
        hKeyEncryptionKey: UIntPtr
        pvKeyEncryptionKey: VoidPtr
class CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA(Structure):
    cbSize: UInt32
    hCryptProv: win32more.Windows.Win32.Security.Cryptography.HCRYPTPROV_LEGACY
    dwSignerIndex: UInt32
    dwSignerType: UInt32
    pvSigner: VoidPtr
class CMSG_ENCRYPTED_ENCODE_INFO(Structure):
    cbSize: UInt32
    ContentEncryptionAlgorithm: win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    pvEncryptionAuxInfo: VoidPtr
class CMSG_ENVELOPED_ENCODE_INFO(Structure):
    cbSize: UInt32
    hCryptProv: win32more.Windows.Win32.Security.Cryptography.HCRYPTPROV_LEGACY
    ContentEncryptionAlgorithm: win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    pvEncryptionAuxInfo: VoidPtr
    cRecipients: UInt32
    rgpRecipients: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_INFO))
class CMSG_HASHED_ENCODE_INFO(Structure):
    cbSize: UInt32
    hCryptProv: win32more.Windows.Win32.Security.Cryptography.HCRYPTPROV_LEGACY
    HashAlgorithm: win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    pvHashAuxInfo: VoidPtr
class CMSG_KEY_AGREE_ENCRYPT_INFO(Structure):
    cbSize: UInt32
    dwRecipientIndex: UInt32
    KeyEncryptionAlgorithm: win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    UserKeyingMaterial: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    dwOriginatorChoice: win32more.Windows.Win32.Security.Cryptography.CMSG_KEY_AGREE_ORIGINATOR
    Anonymous: _Anonymous_e__Union
    cKeyAgreeKeyEncryptInfo: UInt32
    rgpKeyAgreeKeyEncryptInfo: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CMSG_KEY_AGREE_KEY_ENCRYPT_INFO))
    dwFlags: UInt32
    _anonymous_ = ('Anonymous',)
    class _Anonymous_e__Union(Union):
        OriginatorCertId: win32more.Windows.Win32.Security.Cryptography.CERT_ID
        OriginatorPublicKeyInfo: win32more.Windows.Win32.Security.Cryptography.CERT_PUBLIC_KEY_INFO
class CMSG_KEY_AGREE_KEY_ENCRYPT_INFO(Structure):
    cbSize: UInt32
    EncryptedKey: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
CMSG_KEY_AGREE_OPTION = UInt32
CMSG_KEY_AGREE_EPHEMERAL_KEY_CHOICE: win32more.Windows.Win32.Security.Cryptography.CMSG_KEY_AGREE_OPTION = 1
CMSG_KEY_AGREE_STATIC_KEY_CHOICE: win32more.Windows.Win32.Security.Cryptography.CMSG_KEY_AGREE_OPTION = 2
CMSG_KEY_AGREE_ORIGINATOR = UInt32
CMSG_KEY_AGREE_ORIGINATOR_CERT: win32more.Windows.Win32.Security.Cryptography.CMSG_KEY_AGREE_ORIGINATOR = 1
CMSG_KEY_AGREE_ORIGINATOR_PUBLIC_KEY: win32more.Windows.Win32.Security.Cryptography.CMSG_KEY_AGREE_ORIGINATOR = 2
class CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO(Structure):
    cbSize: UInt32
    KeyEncryptionAlgorithm: win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    pvKeyEncryptionAuxInfo: VoidPtr
    KeyWrapAlgorithm: win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    pvKeyWrapAuxInfo: VoidPtr
    hCryptProv: win32more.Windows.Win32.Security.Cryptography.HCRYPTPROV_LEGACY
    dwKeySpec: UInt32
    dwKeyChoice: win32more.Windows.Win32.Security.Cryptography.CMSG_KEY_AGREE_OPTION
    Anonymous: _Anonymous_e__Union
    UserKeyingMaterial: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    cRecipientEncryptedKeys: UInt32
    rgpRecipientEncryptedKeys: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO))
    _anonymous_ = ('Anonymous',)
    class _Anonymous_e__Union(Union):
        pEphemeralAlgorithm: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER)
        pSenderId: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_ID)
class CMSG_KEY_AGREE_RECIPIENT_INFO(Structure):
    dwVersion: UInt32
    dwOriginatorChoice: win32more.Windows.Win32.Security.Cryptography.CMSG_KEY_AGREE_ORIGINATOR
    Anonymous: _Anonymous_e__Union
    UserKeyingMaterial: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    KeyEncryptionAlgorithm: win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    cRecipientEncryptedKeys: UInt32
    rgpRecipientEncryptedKeys: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CMSG_RECIPIENT_ENCRYPTED_KEY_INFO))
    _anonymous_ = ('Anonymous',)
    class _Anonymous_e__Union(Union):
        OriginatorCertId: win32more.Windows.Win32.Security.Cryptography.CERT_ID
        OriginatorPublicKeyInfo: win32more.Windows.Win32.Security.Cryptography.CERT_PUBLIC_KEY_INFO
class CMSG_KEY_TRANS_ENCRYPT_INFO(Structure):
    cbSize: UInt32
    dwRecipientIndex: UInt32
    KeyEncryptionAlgorithm: win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    EncryptedKey: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    dwFlags: UInt32
class CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO(Structure):
    cbSize: UInt32
    KeyEncryptionAlgorithm: win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    pvKeyEncryptionAuxInfo: VoidPtr
    hCryptProv: win32more.Windows.Win32.Security.Cryptography.HCRYPTPROV_LEGACY
    RecipientPublicKey: win32more.Windows.Win32.Security.Cryptography.CRYPT_BIT_BLOB
    RecipientId: win32more.Windows.Win32.Security.Cryptography.CERT_ID
class CMSG_KEY_TRANS_RECIPIENT_INFO(Structure):
    dwVersion: UInt32
    RecipientId: win32more.Windows.Win32.Security.Cryptography.CERT_ID
    KeyEncryptionAlgorithm: win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    EncryptedKey: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
class CMSG_MAIL_LIST_ENCRYPT_INFO(Structure):
    cbSize: UInt32
    dwRecipientIndex: UInt32
    KeyEncryptionAlgorithm: win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    EncryptedKey: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    dwFlags: UInt32
class CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO(Structure):
    cbSize: UInt32
    KeyEncryptionAlgorithm: win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    pvKeyEncryptionAuxInfo: VoidPtr
    hCryptProv: UIntPtr
    dwKeyChoice: UInt32
    Anonymous: _Anonymous_e__Union
    KeyId: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    Date: win32more.Windows.Win32.Foundation.FILETIME
    pOtherAttr: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_ATTRIBUTE_TYPE_VALUE)
    _anonymous_ = ('Anonymous',)
    class _Anonymous_e__Union(Union):
        hKeyEncryptionKey: UIntPtr
        pvKeyEncryptionKey: VoidPtr
class CMSG_MAIL_LIST_RECIPIENT_INFO(Structure):
    dwVersion: UInt32
    KeyId: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    KeyEncryptionAlgorithm: win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    EncryptedKey: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    Date: win32more.Windows.Win32.Foundation.FILETIME
    pOtherAttr: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_ATTRIBUTE_TYPE_VALUE)
class CMSG_RC2_AUX_INFO(Structure):
    cbSize: UInt32
    dwBitLen: UInt32
class CMSG_RC4_AUX_INFO(Structure):
    cbSize: UInt32
    dwBitLen: UInt32
class CMSG_RECIPIENT_ENCODE_INFO(Structure):
    dwRecipientChoice: UInt32
    Anonymous: _Anonymous_e__Union
    _anonymous_ = ('Anonymous',)
    class _Anonymous_e__Union(Union):
        pKeyTrans: POINTER(win32more.Windows.Win32.Security.Cryptography.CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO)
        pKeyAgree: POINTER(win32more.Windows.Win32.Security.Cryptography.CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO)
        pMailList: POINTER(win32more.Windows.Win32.Security.Cryptography.CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO)
class CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO(Structure):
    cbSize: UInt32
    RecipientPublicKey: win32more.Windows.Win32.Security.Cryptography.CRYPT_BIT_BLOB
    RecipientId: win32more.Windows.Win32.Security.Cryptography.CERT_ID
    Date: win32more.Windows.Win32.Foundation.FILETIME
    pOtherAttr: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_ATTRIBUTE_TYPE_VALUE)
class CMSG_RECIPIENT_ENCRYPTED_KEY_INFO(Structure):
    RecipientId: win32more.Windows.Win32.Security.Cryptography.CERT_ID
    EncryptedKey: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    Date: win32more.Windows.Win32.Foundation.FILETIME
    pOtherAttr: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_ATTRIBUTE_TYPE_VALUE)
class CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO(Structure):
    cbSize: UInt32
    SignedInfo: win32more.Windows.Win32.Security.Cryptography.CMSG_SIGNED_ENCODE_INFO
    EnvelopedInfo: win32more.Windows.Win32.Security.Cryptography.CMSG_ENVELOPED_ENCODE_INFO
class CMSG_SIGNED_ENCODE_INFO(Structure):
    cbSize: UInt32
    cSigners: UInt32
    rgSigners: POINTER(win32more.Windows.Win32.Security.Cryptography.CMSG_SIGNER_ENCODE_INFO)
    cCertEncoded: UInt32
    rgCertEncoded: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB)
    cCrlEncoded: UInt32
    rgCrlEncoded: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB)
class CMSG_SIGNER_ENCODE_INFO(Structure):
    cbSize: UInt32
    pCertInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_INFO)
    Anonymous: _Anonymous_e__Union
    dwKeySpec: UInt32
    HashAlgorithm: win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    pvHashAuxInfo: VoidPtr
    cAuthAttr: UInt32
    rgAuthAttr: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_ATTRIBUTE)
    cUnauthAttr: UInt32
    rgUnauthAttr: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_ATTRIBUTE)
    _anonymous_ = ('Anonymous',)
    class _Anonymous_e__Union(Union):
        hCryptProv: UIntPtr
        hNCryptKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE
class CMSG_SIGNER_INFO(Structure):
    dwVersion: UInt32
    Issuer: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    SerialNumber: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    HashAlgorithm: win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    HashEncryptionAlgorithm: win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    EncryptedHash: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    AuthAttrs: win32more.Windows.Win32.Security.Cryptography.CRYPT_ATTRIBUTES
    UnauthAttrs: win32more.Windows.Win32.Security.Cryptography.CRYPT_ATTRIBUTES
class CMSG_SP3_COMPATIBLE_AUX_INFO(Structure):
    cbSize: UInt32
    dwFlags: UInt32
class CMSG_STREAM_INFO(Structure):
    cbContent: UInt32
    pfnStreamOutput: win32more.Windows.Win32.Security.Cryptography.PFN_CMSG_STREAM_OUTPUT
    pvArg: VoidPtr
class CMS_DH_KEY_INFO(Structure):
    dwVersion: UInt32
    Algid: win32more.Windows.Win32.Security.Cryptography.ALG_ID
    pszContentEncObjId: win32more.Windows.Win32.Foundation.PSTR
    PubInfo: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    pReserved: VoidPtr
class CMS_KEY_INFO(Structure):
    dwVersion: UInt32
    Algid: win32more.Windows.Win32.Security.Cryptography.ALG_ID
    pbOID: POINTER(Byte)
    cbOID: UInt32
class CONTAINER_INFO(Structure):
    dwVersion: UInt32
    dwReserved: UInt32
    cbSigPublicKey: UInt32
    pbSigPublicKey: POINTER(Byte)
    cbKeyExPublicKey: UInt32
    pbKeyExPublicKey: POINTER(Byte)
class CONTAINER_MAP_RECORD(Structure):
    wszGuid: Char * 40
    bFlags: Byte
    bReserved: Byte
    wSigKeySizeBits: UInt16
    wKeyExchangeKeySizeBits: UInt16
class CPS_URLS(Structure):
    pszURL: win32more.Windows.Win32.Foundation.PWSTR
    pAlgorithm: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER)
    pDigest: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB)
class CRL_CONTEXT(Structure):
    dwCertEncodingType: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_ENCODING_TYPE
    pbCrlEncoded: POINTER(Byte)
    cbCrlEncoded: UInt32
    pCrlInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CRL_INFO)
    hCertStore: win32more.Windows.Win32.Security.Cryptography.HCERTSTORE
class CRL_DIST_POINT(Structure):
    DistPointName: win32more.Windows.Win32.Security.Cryptography.CRL_DIST_POINT_NAME
    ReasonFlags: win32more.Windows.Win32.Security.Cryptography.CRYPT_BIT_BLOB
    CRLIssuer: win32more.Windows.Win32.Security.Cryptography.CERT_ALT_NAME_INFO
class CRL_DIST_POINTS_INFO(Structure):
    cDistPoint: UInt32
    rgDistPoint: POINTER(win32more.Windows.Win32.Security.Cryptography.CRL_DIST_POINT)
class CRL_DIST_POINT_NAME(Structure):
    dwDistPointNameChoice: UInt32
    Anonymous: _Anonymous_e__Union
    _anonymous_ = ('Anonymous',)
    class _Anonymous_e__Union(Union):
        FullName: win32more.Windows.Win32.Security.Cryptography.CERT_ALT_NAME_INFO
class CRL_ENTRY(Structure):
    SerialNumber: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    RevocationDate: win32more.Windows.Win32.Foundation.FILETIME
    cExtension: UInt32
    rgExtension: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_EXTENSION)
class CRL_FIND_ISSUED_FOR_PARA(Structure):
    pSubjectCert: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT)
    pIssuerCert: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT)
class CRL_INFO(Structure):
    dwVersion: UInt32
    SignatureAlgorithm: win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    Issuer: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    ThisUpdate: win32more.Windows.Win32.Foundation.FILETIME
    NextUpdate: win32more.Windows.Win32.Foundation.FILETIME
    cCRLEntry: UInt32
    rgCRLEntry: POINTER(win32more.Windows.Win32.Security.Cryptography.CRL_ENTRY)
    cExtension: UInt32
    rgExtension: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_EXTENSION)
class CRL_ISSUING_DIST_POINT(Structure):
    DistPointName: win32more.Windows.Win32.Security.Cryptography.CRL_DIST_POINT_NAME
    fOnlyContainsUserCerts: win32more.Windows.Win32.Foundation.BOOL
    fOnlyContainsCACerts: win32more.Windows.Win32.Foundation.BOOL
    OnlySomeReasonFlags: win32more.Windows.Win32.Security.Cryptography.CRYPT_BIT_BLOB
    fIndirectCRL: win32more.Windows.Win32.Foundation.BOOL
class CRL_REVOCATION_INFO(Structure):
    pCrlEntry: POINTER(win32more.Windows.Win32.Security.Cryptography.CRL_ENTRY)
    pCrlContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CRL_CONTEXT)
    pCrlIssuerChain: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CHAIN_CONTEXT)
class CROSS_CERT_DIST_POINTS_INFO(Structure):
    dwSyncDeltaTime: UInt32
    cDistPoint: UInt32
    rgDistPoint: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_ALT_NAME_INFO)
class CRYPTNET_URL_CACHE_FLUSH_INFO(Structure):
    cbSize: UInt32
    dwExemptSeconds: UInt32
    ExpireTime: win32more.Windows.Win32.Foundation.FILETIME
class CRYPTNET_URL_CACHE_PRE_FETCH_INFO(Structure):
    cbSize: UInt32
    dwObjectType: UInt32
    dwError: UInt32
    dwReserved: UInt32
    ThisUpdateTime: win32more.Windows.Win32.Foundation.FILETIME
    NextUpdateTime: win32more.Windows.Win32.Foundation.FILETIME
    PublishTime: win32more.Windows.Win32.Foundation.FILETIME
class CRYPTNET_URL_CACHE_RESPONSE_INFO(Structure):
    cbSize: UInt32
    wResponseType: UInt16
    wResponseFlags: UInt16
    LastModifiedTime: win32more.Windows.Win32.Foundation.FILETIME
    dwMaxAge: UInt32
    pwszETag: win32more.Windows.Win32.Foundation.PWSTR
    dwProxyId: UInt32
class CRYPTPROTECT_PROMPTSTRUCT(Structure):
    cbSize: UInt32
    dwPromptFlags: UInt32
    hwndApp: win32more.Windows.Win32.Foundation.HWND
    szPrompt: win32more.Windows.Win32.Foundation.PWSTR
class CRYPT_3DES_KEY_STATE(Structure):
    Key: Byte * 24
    IV: Byte * 8
    Feedback: Byte * 8
CRYPT_ACQUIRE_FLAGS = UInt32
CRYPT_ACQUIRE_CACHE_FLAG: win32more.Windows.Win32.Security.Cryptography.CRYPT_ACQUIRE_FLAGS = 1
CRYPT_ACQUIRE_USE_PROV_INFO_FLAG: win32more.Windows.Win32.Security.Cryptography.CRYPT_ACQUIRE_FLAGS = 2
CRYPT_ACQUIRE_COMPARE_KEY_FLAG: win32more.Windows.Win32.Security.Cryptography.CRYPT_ACQUIRE_FLAGS = 4
CRYPT_ACQUIRE_NO_HEALING: win32more.Windows.Win32.Security.Cryptography.CRYPT_ACQUIRE_FLAGS = 8
CRYPT_ACQUIRE_SILENT_FLAG: win32more.Windows.Win32.Security.Cryptography.CRYPT_ACQUIRE_FLAGS = 64
CRYPT_ACQUIRE_WINDOW_HANDLE_FLAG: win32more.Windows.Win32.Security.Cryptography.CRYPT_ACQUIRE_FLAGS = 128
CRYPT_ACQUIRE_NCRYPT_KEY_FLAGS_MASK: win32more.Windows.Win32.Security.Cryptography.CRYPT_ACQUIRE_FLAGS = 458752
CRYPT_ACQUIRE_ALLOW_NCRYPT_KEY_FLAG: win32more.Windows.Win32.Security.Cryptography.CRYPT_ACQUIRE_FLAGS = 65536
CRYPT_ACQUIRE_PREFER_NCRYPT_KEY_FLAG: win32more.Windows.Win32.Security.Cryptography.CRYPT_ACQUIRE_FLAGS = 131072
CRYPT_ACQUIRE_ONLY_NCRYPT_KEY_FLAG: win32more.Windows.Win32.Security.Cryptography.CRYPT_ACQUIRE_FLAGS = 262144
class CRYPT_AES_128_KEY_STATE(Structure):
    Key: Byte * 16
    IV: Byte * 16
    EncryptionState: Byte * 176
    DecryptionState: Byte * 176
    Feedback: Byte * 16
class CRYPT_AES_256_KEY_STATE(Structure):
    Key: Byte * 32
    IV: Byte * 16
    EncryptionState: Byte * 240
    DecryptionState: Byte * 240
    Feedback: Byte * 16
class CRYPT_ALGORITHM_IDENTIFIER(Structure):
    pszObjId: win32more.Windows.Win32.Foundation.PSTR
    Parameters: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
class CRYPT_ASYNC_RETRIEVAL_COMPLETION(Structure):
    pfnCompletion: win32more.Windows.Win32.Security.Cryptography.PFN_CRYPT_ASYNC_RETRIEVAL_COMPLETION_FUNC
    pvCompletion: VoidPtr
class CRYPT_ATTRIBUTE(Structure):
    pszObjId: win32more.Windows.Win32.Foundation.PSTR
    cValue: UInt32
    rgValue: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB)
class CRYPT_ATTRIBUTES(Structure):
    cAttr: UInt32
    rgAttr: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_ATTRIBUTE)
class CRYPT_ATTRIBUTE_TYPE_VALUE(Structure):
    pszObjId: win32more.Windows.Win32.Foundation.PSTR
    Value: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
class CRYPT_BIT_BLOB(Structure):
    cbData: UInt32
    pbData: POINTER(Byte)
    cUnusedBits: UInt32
class CRYPT_BLOB_ARRAY(Structure):
    cBlob: UInt32
    rgBlob: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB)
class CRYPT_CONTENT_INFO(Structure):
    pszObjId: win32more.Windows.Win32.Foundation.PSTR
    Content: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
class CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY(Structure):
    pszObjId: win32more.Windows.Win32.Foundation.PSTR
    cValue: UInt32
    rgValue: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB)
class CRYPT_CONTEXTS(Structure):
    cContexts: UInt32
    rgpszContexts: POINTER(win32more.Windows.Win32.Foundation.PWSTR)
class CRYPT_CONTEXT_CONFIG(Structure):
    dwFlags: win32more.Windows.Win32.Security.Cryptography.CRYPT_CONTEXT_CONFIG_FLAGS
    dwReserved: UInt32
CRYPT_CONTEXT_CONFIG_FLAGS = UInt32
CRYPT_EXCLUSIVE: win32more.Windows.Win32.Security.Cryptography.CRYPT_CONTEXT_CONFIG_FLAGS = 1
CRYPT_OVERRIDE: win32more.Windows.Win32.Security.Cryptography.CRYPT_CONTEXT_CONFIG_FLAGS = 65536
class CRYPT_CONTEXT_FUNCTIONS(Structure):
    cFunctions: UInt32
    rgpszFunctions: POINTER(win32more.Windows.Win32.Foundation.PWSTR)
class CRYPT_CONTEXT_FUNCTION_CONFIG(Structure):
    dwFlags: UInt32
    dwReserved: UInt32
class CRYPT_CONTEXT_FUNCTION_PROVIDERS(Structure):
    cProviders: UInt32
    rgpszProviders: POINTER(win32more.Windows.Win32.Foundation.PWSTR)
class CRYPT_CREDENTIALS(Structure):
    cbSize: UInt32
    pszCredentialsOid: win32more.Windows.Win32.Foundation.PSTR
    pvCredentials: VoidPtr
class CRYPT_CSP_PROVIDER(Structure):
    dwKeySpec: UInt32
    pwszProviderName: win32more.Windows.Win32.Foundation.PWSTR
    Signature: win32more.Windows.Win32.Security.Cryptography.CRYPT_BIT_BLOB
class CRYPT_DECODE_PARA(Structure):
    cbSize: UInt32
    pfnAlloc: win32more.Windows.Win32.Security.Cryptography.PFN_CRYPT_ALLOC
    pfnFree: win32more.Windows.Win32.Security.Cryptography.PFN_CRYPT_FREE
class CRYPT_DECRYPT_MESSAGE_PARA(Structure):
    cbSize: UInt32
    dwMsgAndCertEncodingType: UInt32
    cCertStore: UInt32
    rghCertStore: POINTER(win32more.Windows.Win32.Security.Cryptography.HCERTSTORE)
CRYPT_DEFAULT_CONTEXT_FLAGS = UInt32
CRYPT_DEFAULT_CONTEXT_AUTO_RELEASE_FLAG: win32more.Windows.Win32.Security.Cryptography.CRYPT_DEFAULT_CONTEXT_FLAGS = 1
CRYPT_DEFAULT_CONTEXT_PROCESS_FLAG: win32more.Windows.Win32.Security.Cryptography.CRYPT_DEFAULT_CONTEXT_FLAGS = 2
class CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA(Structure):
    cOID: UInt32
    rgpszOID: POINTER(win32more.Windows.Win32.Foundation.PSTR)
CRYPT_DEFAULT_CONTEXT_TYPE = UInt32
CRYPT_DEFAULT_CONTEXT_CERT_SIGN_OID: win32more.Windows.Win32.Security.Cryptography.CRYPT_DEFAULT_CONTEXT_TYPE = 1
CRYPT_DEFAULT_CONTEXT_MULTI_CERT_SIGN_OID: win32more.Windows.Win32.Security.Cryptography.CRYPT_DEFAULT_CONTEXT_TYPE = 2
class CRYPT_DES_KEY_STATE(Structure):
    Key: Byte * 8
    IV: Byte * 8
    Feedback: Byte * 8
class CRYPT_ECC_CMS_SHARED_INFO(Structure):
    Algorithm: win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    EntityUInfo: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    rgbSuppPubInfo: Byte * 4
class CRYPT_ECC_PRIVATE_KEY_INFO(Structure):
    dwVersion: UInt32
    PrivateKey: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    szCurveOid: win32more.Windows.Win32.Foundation.PSTR
    PublicKey: win32more.Windows.Win32.Security.Cryptography.CRYPT_BIT_BLOB
CRYPT_ENCODE_OBJECT_FLAGS = UInt32
CRYPT_ENCODE_ALLOC_FLAG: win32more.Windows.Win32.Security.Cryptography.CRYPT_ENCODE_OBJECT_FLAGS = 32768
CRYPT_ENCODE_ENABLE_PUNYCODE_FLAG: win32more.Windows.Win32.Security.Cryptography.CRYPT_ENCODE_OBJECT_FLAGS = 131072
CRYPT_UNICODE_NAME_ENCODE_DISABLE_CHECK_TYPE_FLAG: win32more.Windows.Win32.Security.Cryptography.CRYPT_ENCODE_OBJECT_FLAGS = 1073741824
CRYPT_UNICODE_NAME_ENCODE_ENABLE_T61_UNICODE_FLAG: win32more.Windows.Win32.Security.Cryptography.CRYPT_ENCODE_OBJECT_FLAGS = 2147483648
CRYPT_UNICODE_NAME_ENCODE_ENABLE_UTF8_UNICODE_FLAG: win32more.Windows.Win32.Security.Cryptography.CRYPT_ENCODE_OBJECT_FLAGS = 536870912
class CRYPT_ENCODE_PARA(Structure):
    cbSize: UInt32
    pfnAlloc: win32more.Windows.Win32.Security.Cryptography.PFN_CRYPT_ALLOC
    pfnFree: win32more.Windows.Win32.Security.Cryptography.PFN_CRYPT_FREE
class CRYPT_ENCRYPTED_PRIVATE_KEY_INFO(Structure):
    EncryptionAlgorithm: win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    EncryptedPrivateKey: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
class CRYPT_ENCRYPT_MESSAGE_PARA(Structure):
    cbSize: UInt32
    dwMsgEncodingType: UInt32
    hCryptProv: win32more.Windows.Win32.Security.Cryptography.HCRYPTPROV_LEGACY
    ContentEncryptionAlgorithm: win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    pvEncryptionAuxInfo: VoidPtr
    dwFlags: UInt32
    dwInnerContentType: UInt32
class CRYPT_ENROLLMENT_NAME_VALUE_PAIR(Structure):
    pwszName: win32more.Windows.Win32.Foundation.PWSTR
    pwszValue: win32more.Windows.Win32.Foundation.PWSTR
CRYPT_FIND_FLAGS = UInt32
CRYPT_FIND_USER_KEYSET_FLAG: win32more.Windows.Win32.Security.Cryptography.CRYPT_FIND_FLAGS = 1
CRYPT_FIND_MACHINE_KEYSET_FLAG: win32more.Windows.Win32.Security.Cryptography.CRYPT_FIND_FLAGS = 2
CRYPT_FIND_SILENT_KEYSET_FLAG: win32more.Windows.Win32.Security.Cryptography.CRYPT_FIND_FLAGS = 64
class CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO(Structure):
    cbSize: UInt32
    iDeltaCrlIndicator: Int32
    pftCacheResync: POINTER(win32more.Windows.Win32.Foundation.FILETIME)
    pLastSyncTime: POINTER(win32more.Windows.Win32.Foundation.FILETIME)
    pMaxAgeTime: POINTER(win32more.Windows.Win32.Foundation.FILETIME)
    pChainPara: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_REVOCATION_CHAIN_PARA)
    pDeltaCrlIndicator: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB)
CRYPT_GET_URL_FLAGS = UInt32
CRYPT_GET_URL_FROM_PROPERTY: win32more.Windows.Win32.Security.Cryptography.CRYPT_GET_URL_FLAGS = 1
CRYPT_GET_URL_FROM_EXTENSION: win32more.Windows.Win32.Security.Cryptography.CRYPT_GET_URL_FLAGS = 2
CRYPT_GET_URL_FROM_UNAUTH_ATTRIBUTE: win32more.Windows.Win32.Security.Cryptography.CRYPT_GET_URL_FLAGS = 4
CRYPT_GET_URL_FROM_AUTH_ATTRIBUTE: win32more.Windows.Win32.Security.Cryptography.CRYPT_GET_URL_FLAGS = 8
class CRYPT_HASH_INFO(Structure):
    HashAlgorithm: win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    Hash: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
class CRYPT_HASH_MESSAGE_PARA(Structure):
    cbSize: UInt32
    dwMsgEncodingType: UInt32
    hCryptProv: win32more.Windows.Win32.Security.Cryptography.HCRYPTPROV_LEGACY
    HashAlgorithm: win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    pvHashAuxInfo: VoidPtr
class CRYPT_IMAGE_REF(Structure):
    pszImage: win32more.Windows.Win32.Foundation.PWSTR
    dwFlags: win32more.Windows.Win32.Security.Cryptography.CRYPT_IMAGE_REF_FLAGS
CRYPT_IMAGE_REF_FLAGS = UInt32
CRYPT_MIN_DEPENDENCIES: win32more.Windows.Win32.Security.Cryptography.CRYPT_IMAGE_REF_FLAGS = 1
CRYPT_PROCESS_ISOLATE: win32more.Windows.Win32.Security.Cryptography.CRYPT_IMAGE_REF_FLAGS = 65536
class CRYPT_IMAGE_REG(Structure):
    pszImage: win32more.Windows.Win32.Foundation.PWSTR
    cInterfaces: UInt32
    rgpInterfaces: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTERFACE_REG))
CRYPT_IMPORT_PUBLIC_KEY_FLAGS = UInt32
CRYPT_OID_INFO_PUBKEY_SIGN_KEY_FLAG: win32more.Windows.Win32.Security.Cryptography.CRYPT_IMPORT_PUBLIC_KEY_FLAGS = 2147483648
CRYPT_OID_INFO_PUBKEY_ENCRYPT_KEY_FLAG: win32more.Windows.Win32.Security.Cryptography.CRYPT_IMPORT_PUBLIC_KEY_FLAGS = 1073741824
class CRYPT_INTEGER_BLOB(Structure):
    cbData: UInt32
    pbData: POINTER(Byte)
class CRYPT_INTERFACE_REG(Structure):
    dwInterface: win32more.Windows.Win32.Security.Cryptography.BCRYPT_INTERFACE
    dwFlags: win32more.Windows.Win32.Security.Cryptography.BCRYPT_TABLE
    cFunctions: UInt32
    rgpszFunctions: POINTER(win32more.Windows.Win32.Foundation.PWSTR)
CRYPT_KEY_FLAGS = UInt32
CRYPT_EXPORTABLE: win32more.Windows.Win32.Security.Cryptography.CRYPT_KEY_FLAGS = 1
CRYPT_USER_PROTECTED: win32more.Windows.Win32.Security.Cryptography.CRYPT_KEY_FLAGS = 2
CRYPT_ARCHIVABLE: win32more.Windows.Win32.Security.Cryptography.CRYPT_KEY_FLAGS = 16384
CRYPT_CREATE_IV: win32more.Windows.Win32.Security.Cryptography.CRYPT_KEY_FLAGS = 512
CRYPT_CREATE_SALT: win32more.Windows.Win32.Security.Cryptography.CRYPT_KEY_FLAGS = 4
CRYPT_DATA_KEY: win32more.Windows.Win32.Security.Cryptography.CRYPT_KEY_FLAGS = 2048
CRYPT_FORCE_KEY_PROTECTION_HIGH: win32more.Windows.Win32.Security.Cryptography.CRYPT_KEY_FLAGS = 32768
CRYPT_KEK: win32more.Windows.Win32.Security.Cryptography.CRYPT_KEY_FLAGS = 1024
CRYPT_INITIATOR: win32more.Windows.Win32.Security.Cryptography.CRYPT_KEY_FLAGS = 64
CRYPT_NO_SALT: win32more.Windows.Win32.Security.Cryptography.CRYPT_KEY_FLAGS = 16
CRYPT_ONLINE: win32more.Windows.Win32.Security.Cryptography.CRYPT_KEY_FLAGS = 128
CRYPT_PREGEN: win32more.Windows.Win32.Security.Cryptography.CRYPT_KEY_FLAGS = 64
CRYPT_RECIPIENT: win32more.Windows.Win32.Security.Cryptography.CRYPT_KEY_FLAGS = 16
CRYPT_SF: win32more.Windows.Win32.Security.Cryptography.CRYPT_KEY_FLAGS = 256
CRYPT_SGCKEY: win32more.Windows.Win32.Security.Cryptography.CRYPT_KEY_FLAGS = 8192
CRYPT_VOLATILE: win32more.Windows.Win32.Security.Cryptography.CRYPT_KEY_FLAGS = 4096
CRYPT_MACHINE_KEYSET: win32more.Windows.Win32.Security.Cryptography.CRYPT_KEY_FLAGS = 32
CRYPT_USER_KEYSET: win32more.Windows.Win32.Security.Cryptography.CRYPT_KEY_FLAGS = 4096
PKCS12_PREFER_CNG_KSP: win32more.Windows.Win32.Security.Cryptography.CRYPT_KEY_FLAGS = 256
PKCS12_ALWAYS_CNG_KSP: win32more.Windows.Win32.Security.Cryptography.CRYPT_KEY_FLAGS = 512
PKCS12_ALLOW_OVERWRITE_KEY: win32more.Windows.Win32.Security.Cryptography.CRYPT_KEY_FLAGS = 16384
PKCS12_NO_PERSIST_KEY: win32more.Windows.Win32.Security.Cryptography.CRYPT_KEY_FLAGS = 32768
PKCS12_INCLUDE_EXTENDED_PROPERTIES: win32more.Windows.Win32.Security.Cryptography.CRYPT_KEY_FLAGS = 16
CRYPT_OAEP: win32more.Windows.Win32.Security.Cryptography.CRYPT_KEY_FLAGS = 64
CRYPT_BLOB_VER3: win32more.Windows.Win32.Security.Cryptography.CRYPT_KEY_FLAGS = 128
CRYPT_DESTROYKEY: win32more.Windows.Win32.Security.Cryptography.CRYPT_KEY_FLAGS = 4
CRYPT_SSL2_FALLBACK: win32more.Windows.Win32.Security.Cryptography.CRYPT_KEY_FLAGS = 2
CRYPT_Y_ONLY: win32more.Windows.Win32.Security.Cryptography.CRYPT_KEY_FLAGS = 1
CRYPT_IPSEC_HMAC_KEY: win32more.Windows.Win32.Security.Cryptography.CRYPT_KEY_FLAGS = 256
CERT_SET_KEY_PROV_HANDLE_PROP_ID: win32more.Windows.Win32.Security.Cryptography.CRYPT_KEY_FLAGS = 1
CERT_SET_KEY_CONTEXT_PROP_ID: win32more.Windows.Win32.Security.Cryptography.CRYPT_KEY_FLAGS = 1
CRYPT_KEY_PARAM_ID = UInt32
KP_ALGID: win32more.Windows.Win32.Security.Cryptography.CRYPT_KEY_PARAM_ID = 7
KP_CERTIFICATE: win32more.Windows.Win32.Security.Cryptography.CRYPT_KEY_PARAM_ID = 26
KP_PERMISSIONS: win32more.Windows.Win32.Security.Cryptography.CRYPT_KEY_PARAM_ID = 6
KP_SALT: win32more.Windows.Win32.Security.Cryptography.CRYPT_KEY_PARAM_ID = 2
KP_SALT_EX: win32more.Windows.Win32.Security.Cryptography.CRYPT_KEY_PARAM_ID = 10
KP_BLOCKLEN: win32more.Windows.Win32.Security.Cryptography.CRYPT_KEY_PARAM_ID = 8
KP_GET_USE_COUNT: win32more.Windows.Win32.Security.Cryptography.CRYPT_KEY_PARAM_ID = 42
KP_KEYLEN: win32more.Windows.Win32.Security.Cryptography.CRYPT_KEY_PARAM_ID = 9
class CRYPT_KEY_PROV_INFO(Structure):
    pwszContainerName: win32more.Windows.Win32.Foundation.PWSTR
    pwszProvName: win32more.Windows.Win32.Foundation.PWSTR
    dwProvType: UInt32
    dwFlags: win32more.Windows.Win32.Security.Cryptography.CRYPT_KEY_FLAGS
    cProvParam: UInt32
    rgProvParam: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_KEY_PROV_PARAM)
    dwKeySpec: UInt32
class CRYPT_KEY_PROV_PARAM(Structure):
    dwParam: UInt32
    pbData: POINTER(Byte)
    cbData: UInt32
    dwFlags: UInt32
class CRYPT_KEY_SIGN_MESSAGE_PARA(Structure):
    cbSize: UInt32
    dwMsgAndCertEncodingType: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_ENCODING_TYPE
    Anonymous: _Anonymous_e__Union
    dwKeySpec: win32more.Windows.Win32.Security.Cryptography.CERT_KEY_SPEC
    HashAlgorithm: win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    pvHashAuxInfo: VoidPtr
    PubKeyAlgorithm: win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    _anonymous_ = ('Anonymous',)
    class _Anonymous_e__Union(Union):
        hCryptProv: UIntPtr
        hNCryptKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE
class CRYPT_KEY_VERIFY_MESSAGE_PARA(Structure):
    cbSize: UInt32
    dwMsgEncodingType: UInt32
    hCryptProv: win32more.Windows.Win32.Security.Cryptography.HCRYPTPROV_LEGACY
class CRYPT_MASK_GEN_ALGORITHM(Structure):
    pszObjId: win32more.Windows.Win32.Foundation.PSTR
    HashAlgorithm: win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
CRYPT_MSG_TYPE = UInt32
CMSG_DATA: win32more.Windows.Win32.Security.Cryptography.CRYPT_MSG_TYPE = 1
CMSG_SIGNED: win32more.Windows.Win32.Security.Cryptography.CRYPT_MSG_TYPE = 2
CMSG_ENVELOPED: win32more.Windows.Win32.Security.Cryptography.CRYPT_MSG_TYPE = 3
CMSG_SIGNED_AND_ENVELOPED: win32more.Windows.Win32.Security.Cryptography.CRYPT_MSG_TYPE = 4
CMSG_HASHED: win32more.Windows.Win32.Security.Cryptography.CRYPT_MSG_TYPE = 5
class CRYPT_OBJECT_LOCATOR_PROVIDER_TABLE(Structure):
    cbSize: UInt32
    pfnGet: win32more.Windows.Win32.Security.Cryptography.PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_GET
    pfnRelease: win32more.Windows.Win32.Security.Cryptography.PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_RELEASE
    pfnFreePassword: win32more.Windows.Win32.Security.Cryptography.PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FREE_PASSWORD
    pfnFree: win32more.Windows.Win32.Security.Cryptography.PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FREE
    pfnFreeIdentifier: win32more.Windows.Win32.Security.Cryptography.PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FREE_IDENTIFIER
CRYPT_OBJECT_LOCATOR_RELEASE_REASON = UInt32
CRYPT_OBJECT_LOCATOR_RELEASE_SYSTEM_SHUTDOWN: win32more.Windows.Win32.Security.Cryptography.CRYPT_OBJECT_LOCATOR_RELEASE_REASON = 1
CRYPT_OBJECT_LOCATOR_RELEASE_SERVICE_STOP: win32more.Windows.Win32.Security.Cryptography.CRYPT_OBJECT_LOCATOR_RELEASE_REASON = 2
CRYPT_OBJECT_LOCATOR_RELEASE_PROCESS_EXIT: win32more.Windows.Win32.Security.Cryptography.CRYPT_OBJECT_LOCATOR_RELEASE_REASON = 3
CRYPT_OBJECT_LOCATOR_RELEASE_DLL_UNLOAD: win32more.Windows.Win32.Security.Cryptography.CRYPT_OBJECT_LOCATOR_RELEASE_REASON = 4
class CRYPT_OBJID_TABLE(Structure):
    dwAlgId: UInt32
    pszObjId: win32more.Windows.Win32.Foundation.PSTR
class CRYPT_OID_FUNC_ENTRY(Structure):
    pszOID: win32more.Windows.Win32.Foundation.PSTR
    pvFuncAddr: VoidPtr
class CRYPT_OID_INFO(Structure):
    cbSize: UInt32
    pszOID: win32more.Windows.Win32.Foundation.PSTR
    pwszName: win32more.Windows.Win32.Foundation.PWSTR
    dwGroupId: UInt32
    Anonymous: _Anonymous_e__Union
    ExtraInfo: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    _anonymous_ = ('Anonymous',)
    class _Anonymous_e__Union(Union):
        dwValue: UInt32
        Algid: win32more.Windows.Win32.Security.Cryptography.ALG_ID
        dwLength: UInt32
class CRYPT_PASSWORD_CREDENTIALSA(Structure):
    cbSize: UInt32
    pszUsername: win32more.Windows.Win32.Foundation.PSTR
    pszPassword: win32more.Windows.Win32.Foundation.PSTR
class CRYPT_PASSWORD_CREDENTIALSW(Structure):
    cbSize: UInt32
    pszUsername: win32more.Windows.Win32.Foundation.PWSTR
    pszPassword: win32more.Windows.Win32.Foundation.PWSTR
CRYPT_PASSWORD_CREDENTIALS = UnicodeAlias('CRYPT_PASSWORD_CREDENTIALSW')
class CRYPT_PKCS12_PBE_PARAMS(Structure):
    iIterations: Int32
    cbSalt: UInt32
class CRYPT_PKCS8_EXPORT_PARAMS(Structure):
    hCryptProv: UIntPtr
    dwKeySpec: UInt32
    pszPrivateKeyObjId: win32more.Windows.Win32.Foundation.PSTR
    pEncryptPrivateKeyFunc: win32more.Windows.Win32.Security.Cryptography.PCRYPT_ENCRYPT_PRIVATE_KEY_FUNC
    pVoidEncryptFunc: VoidPtr
class CRYPT_PKCS8_IMPORT_PARAMS(Structure):
    PrivateKey: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    pResolvehCryptProvFunc: win32more.Windows.Win32.Security.Cryptography.PCRYPT_RESOLVE_HCRYPTPROV_FUNC
    pVoidResolveFunc: VoidPtr
    pDecryptPrivateKeyFunc: win32more.Windows.Win32.Security.Cryptography.PCRYPT_DECRYPT_PRIVATE_KEY_FUNC
    pVoidDecryptFunc: VoidPtr
class CRYPT_PRIVATE_KEY_INFO(Structure):
    Version: UInt32
    Algorithm: win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    PrivateKey: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    pAttributes: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_ATTRIBUTES)
class CRYPT_PROPERTY_REF(Structure):
    pszProperty: win32more.Windows.Win32.Foundation.PWSTR
    cbValue: UInt32
    pbValue: POINTER(Byte)
class CRYPT_PROVIDERS(Structure):
    cProviders: UInt32
    rgpszProviders: POINTER(win32more.Windows.Win32.Foundation.PWSTR)
class CRYPT_PROVIDER_REF(Structure):
    dwInterface: UInt32
    pszFunction: win32more.Windows.Win32.Foundation.PWSTR
    pszProvider: win32more.Windows.Win32.Foundation.PWSTR
    cProperties: UInt32
    rgpProperties: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_PROPERTY_REF))
    pUM: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_IMAGE_REF)
    pKM: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_IMAGE_REF)
class CRYPT_PROVIDER_REFS(Structure):
    cProviders: UInt32
    rgpProviders: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_PROVIDER_REF))
class CRYPT_PROVIDER_REG(Structure):
    cAliases: UInt32
    rgpszAliases: POINTER(win32more.Windows.Win32.Foundation.PWSTR)
    pUM: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_IMAGE_REG)
    pKM: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_IMAGE_REG)
class CRYPT_PSOURCE_ALGORITHM(Structure):
    pszObjId: win32more.Windows.Win32.Foundation.PSTR
    EncodingParameters: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
class CRYPT_RC2_CBC_PARAMETERS(Structure):
    dwVersion: UInt32
    fIV: win32more.Windows.Win32.Foundation.BOOL
    rgbIV: Byte * 8
class CRYPT_RC4_KEY_STATE(Structure):
    Key: Byte * 16
    SBox: Byte * 256
    i: Byte
    j: Byte
class CRYPT_RETRIEVE_AUX_INFO(Structure):
    cbSize: UInt32
    pLastSyncTime: POINTER(win32more.Windows.Win32.Foundation.FILETIME)
    dwMaxUrlRetrievalByteCount: UInt32
    pPreFetchInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPTNET_URL_CACHE_PRE_FETCH_INFO)
    pFlushInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPTNET_URL_CACHE_FLUSH_INFO)
    ppResponseInfo: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPTNET_URL_CACHE_RESPONSE_INFO))
    pwszCacheFileNamePrefix: win32more.Windows.Win32.Foundation.PWSTR
    pftCacheResync: POINTER(win32more.Windows.Win32.Foundation.FILETIME)
    fProxyCacheRetrieval: win32more.Windows.Win32.Foundation.BOOL
    dwHttpStatusCode: UInt32
    ppwszErrorResponseHeaders: POINTER(win32more.Windows.Win32.Foundation.PWSTR)
    ppErrorContentBlob: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB))
@winfunctype_pointer
def CRYPT_RETURN_HWND(phWnd: POINTER(win32more.Windows.Win32.Foundation.HWND)) -> Void: ...
class CRYPT_RSAES_OAEP_PARAMETERS(Structure):
    HashAlgorithm: win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    MaskGenAlgorithm: win32more.Windows.Win32.Security.Cryptography.CRYPT_MASK_GEN_ALGORITHM
    PSourceAlgorithm: win32more.Windows.Win32.Security.Cryptography.CRYPT_PSOURCE_ALGORITHM
class CRYPT_RSA_SSA_PSS_PARAMETERS(Structure):
    HashAlgorithm: win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    MaskGenAlgorithm: win32more.Windows.Win32.Security.Cryptography.CRYPT_MASK_GEN_ALGORITHM
    dwSaltLength: UInt32
    dwTrailerField: UInt32
class CRYPT_SEQUENCE_OF_ANY(Structure):
    cValue: UInt32
    rgValue: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB)
CRYPT_SET_HASH_PARAM = UInt32
HP_HMAC_INFO: win32more.Windows.Win32.Security.Cryptography.CRYPT_SET_HASH_PARAM = 5
HP_HASHVAL: win32more.Windows.Win32.Security.Cryptography.CRYPT_SET_HASH_PARAM = 2
CRYPT_SET_PROV_PARAM_ID = UInt32
PP_CLIENT_HWND: win32more.Windows.Win32.Security.Cryptography.CRYPT_SET_PROV_PARAM_ID = 1
PP_DELETEKEY: win32more.Windows.Win32.Security.Cryptography.CRYPT_SET_PROV_PARAM_ID = 24
PP_KEYEXCHANGE_ALG: win32more.Windows.Win32.Security.Cryptography.CRYPT_SET_PROV_PARAM_ID = 14
PP_KEYEXCHANGE_PIN: win32more.Windows.Win32.Security.Cryptography.CRYPT_SET_PROV_PARAM_ID = 32
PP_KEYEXCHANGE_KEYSIZE: win32more.Windows.Win32.Security.Cryptography.CRYPT_SET_PROV_PARAM_ID = 12
PP_KEYSET_SEC_DESCR: win32more.Windows.Win32.Security.Cryptography.CRYPT_SET_PROV_PARAM_ID = 8
PP_PIN_PROMPT_STRING: win32more.Windows.Win32.Security.Cryptography.CRYPT_SET_PROV_PARAM_ID = 44
PP_ROOT_CERTSTORE: win32more.Windows.Win32.Security.Cryptography.CRYPT_SET_PROV_PARAM_ID = 46
PP_SIGNATURE_ALG: win32more.Windows.Win32.Security.Cryptography.CRYPT_SET_PROV_PARAM_ID = 15
PP_SIGNATURE_PIN: win32more.Windows.Win32.Security.Cryptography.CRYPT_SET_PROV_PARAM_ID = 33
PP_SIGNATURE_KEYSIZE: win32more.Windows.Win32.Security.Cryptography.CRYPT_SET_PROV_PARAM_ID = 13
PP_UI_PROMPT: win32more.Windows.Win32.Security.Cryptography.CRYPT_SET_PROV_PARAM_ID = 21
PP_USE_HARDWARE_RNG: win32more.Windows.Win32.Security.Cryptography.CRYPT_SET_PROV_PARAM_ID = 38
PP_USER_CERTSTORE: win32more.Windows.Win32.Security.Cryptography.CRYPT_SET_PROV_PARAM_ID = 42
PP_SECURE_KEYEXCHANGE_PIN: win32more.Windows.Win32.Security.Cryptography.CRYPT_SET_PROV_PARAM_ID = 47
PP_SECURE_SIGNATURE_PIN: win32more.Windows.Win32.Security.Cryptography.CRYPT_SET_PROV_PARAM_ID = 48
PP_SMARTCARD_READER: win32more.Windows.Win32.Security.Cryptography.CRYPT_SET_PROV_PARAM_ID = 43
class CRYPT_SIGN_MESSAGE_PARA(Structure):
    cbSize: UInt32
    dwMsgEncodingType: UInt32
    pSigningCert: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT)
    HashAlgorithm: win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    pvHashAuxInfo: VoidPtr
    cMsgCert: UInt32
    rgpMsgCert: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT))
    cMsgCrl: UInt32
    rgpMsgCrl: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CRL_CONTEXT))
    cAuthAttr: UInt32
    rgAuthAttr: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_ATTRIBUTE)
    cUnauthAttr: UInt32
    rgUnauthAttr: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_ATTRIBUTE)
    dwFlags: UInt32
    dwInnerContentType: UInt32
class CRYPT_SMART_CARD_ROOT_INFO(Structure):
    rgbCardID: Byte * 16
    luid: win32more.Windows.Win32.Security.Cryptography.ROOT_INFO_LUID
class CRYPT_SMIME_CAPABILITIES(Structure):
    cCapability: UInt32
    rgCapability: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_SMIME_CAPABILITY)
class CRYPT_SMIME_CAPABILITY(Structure):
    pszObjId: win32more.Windows.Win32.Foundation.PSTR
    Parameters: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
CRYPT_STRING = UInt32
CRYPT_STRING_BASE64HEADER: win32more.Windows.Win32.Security.Cryptography.CRYPT_STRING = 0
CRYPT_STRING_BASE64: win32more.Windows.Win32.Security.Cryptography.CRYPT_STRING = 1
CRYPT_STRING_BINARY: win32more.Windows.Win32.Security.Cryptography.CRYPT_STRING = 2
CRYPT_STRING_BASE64REQUESTHEADER: win32more.Windows.Win32.Security.Cryptography.CRYPT_STRING = 3
CRYPT_STRING_HEX: win32more.Windows.Win32.Security.Cryptography.CRYPT_STRING = 4
CRYPT_STRING_HEXASCII: win32more.Windows.Win32.Security.Cryptography.CRYPT_STRING = 5
CRYPT_STRING_BASE64X509CRLHEADER: win32more.Windows.Win32.Security.Cryptography.CRYPT_STRING = 9
CRYPT_STRING_HEXADDR: win32more.Windows.Win32.Security.Cryptography.CRYPT_STRING = 10
CRYPT_STRING_HEXASCIIADDR: win32more.Windows.Win32.Security.Cryptography.CRYPT_STRING = 11
CRYPT_STRING_HEXRAW: win32more.Windows.Win32.Security.Cryptography.CRYPT_STRING = 12
CRYPT_STRING_STRICT: win32more.Windows.Win32.Security.Cryptography.CRYPT_STRING = 536870912
CRYPT_STRING_BASE64_ANY: win32more.Windows.Win32.Security.Cryptography.CRYPT_STRING = 6
CRYPT_STRING_ANY: win32more.Windows.Win32.Security.Cryptography.CRYPT_STRING = 7
CRYPT_STRING_HEX_ANY: win32more.Windows.Win32.Security.Cryptography.CRYPT_STRING = 8
class CRYPT_TIMESTAMP_ACCURACY(Structure):
    dwSeconds: UInt32
    dwMillis: UInt32
    dwMicros: UInt32
class CRYPT_TIMESTAMP_CONTEXT(Structure):
    cbEncoded: UInt32
    pbEncoded: POINTER(Byte)
    pTimeStamp: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_TIMESTAMP_INFO)
class CRYPT_TIMESTAMP_INFO(Structure):
    dwVersion: UInt32
    pszTSAPolicyId: win32more.Windows.Win32.Foundation.PSTR
    HashAlgorithm: win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    HashedMessage: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    SerialNumber: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    ftTime: win32more.Windows.Win32.Foundation.FILETIME
    pvAccuracy: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_TIMESTAMP_ACCURACY)
    fOrdering: win32more.Windows.Win32.Foundation.BOOL
    Nonce: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    Tsa: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    cExtension: UInt32
    rgExtension: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_EXTENSION)
class CRYPT_TIMESTAMP_PARA(Structure):
    pszTSAPolicyId: win32more.Windows.Win32.Foundation.PSTR
    fRequestCerts: win32more.Windows.Win32.Foundation.BOOL
    Nonce: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    cExtension: UInt32
    rgExtension: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_EXTENSION)
class CRYPT_TIMESTAMP_REQUEST(Structure):
    dwVersion: win32more.Windows.Win32.Security.Cryptography.CRYPT_TIMESTAMP_VERSION
    HashAlgorithm: win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    HashedMessage: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    pszTSAPolicyId: win32more.Windows.Win32.Foundation.PSTR
    Nonce: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    fCertReq: win32more.Windows.Win32.Foundation.BOOL
    cExtension: UInt32
    rgExtension: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_EXTENSION)
class CRYPT_TIMESTAMP_RESPONSE(Structure):
    dwStatus: win32more.Windows.Win32.Security.Cryptography.CRYPT_TIMESTAMP_RESPONSE_STATUS
    cFreeText: UInt32
    rgFreeText: POINTER(win32more.Windows.Win32.Foundation.PWSTR)
    FailureInfo: win32more.Windows.Win32.Security.Cryptography.CRYPT_BIT_BLOB
    ContentInfo: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
CRYPT_TIMESTAMP_RESPONSE_STATUS = UInt32
TIMESTAMP_STATUS_GRANTED: win32more.Windows.Win32.Security.Cryptography.CRYPT_TIMESTAMP_RESPONSE_STATUS = 0
TIMESTAMP_STATUS_GRANTED_WITH_MODS: win32more.Windows.Win32.Security.Cryptography.CRYPT_TIMESTAMP_RESPONSE_STATUS = 1
TIMESTAMP_STATUS_REJECTED: win32more.Windows.Win32.Security.Cryptography.CRYPT_TIMESTAMP_RESPONSE_STATUS = 2
TIMESTAMP_STATUS_WAITING: win32more.Windows.Win32.Security.Cryptography.CRYPT_TIMESTAMP_RESPONSE_STATUS = 3
TIMESTAMP_STATUS_REVOCATION_WARNING: win32more.Windows.Win32.Security.Cryptography.CRYPT_TIMESTAMP_RESPONSE_STATUS = 4
TIMESTAMP_STATUS_REVOKED: win32more.Windows.Win32.Security.Cryptography.CRYPT_TIMESTAMP_RESPONSE_STATUS = 5
CRYPT_TIMESTAMP_VERSION = UInt32
TIMESTAMP_VERSION: win32more.Windows.Win32.Security.Cryptography.CRYPT_TIMESTAMP_VERSION = 1
class CRYPT_TIME_STAMP_REQUEST_INFO(Structure):
    pszTimeStampAlgorithm: win32more.Windows.Win32.Foundation.PSTR
    pszContentType: win32more.Windows.Win32.Foundation.PSTR
    Content: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    cAttribute: UInt32
    rgAttribute: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_ATTRIBUTE)
class CRYPT_URL_ARRAY(Structure):
    cUrl: UInt32
    rgwszUrl: POINTER(win32more.Windows.Win32.Foundation.PWSTR)
class CRYPT_URL_INFO(Structure):
    cbSize: UInt32
    dwSyncDeltaTime: UInt32
    cGroup: UInt32
    rgcGroupEntry: POINTER(UInt32)
CRYPT_VERIFY_CERT_FLAGS = UInt32
CRYPT_VERIFY_CERT_SIGN_DISABLE_MD2_MD4_FLAG: win32more.Windows.Win32.Security.Cryptography.CRYPT_VERIFY_CERT_FLAGS = 1
CRYPT_VERIFY_CERT_SIGN_SET_STRONG_PROPERTIES_FLAG: win32more.Windows.Win32.Security.Cryptography.CRYPT_VERIFY_CERT_FLAGS = 2
CRYPT_VERIFY_CERT_SIGN_RETURN_STRONG_PROPERTIES_FLAG: win32more.Windows.Win32.Security.Cryptography.CRYPT_VERIFY_CERT_FLAGS = 4
class CRYPT_VERIFY_CERT_SIGN_STRONG_PROPERTIES_INFO(Structure):
    CertSignHashCNGAlgPropData: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    CertIssuerPubKeyBitLengthPropData: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
class CRYPT_VERIFY_CERT_SIGN_WEAK_HASH_INFO(Structure):
    cCNGHashAlgid: UInt32
    rgpwszCNGHashAlgid: POINTER(win32more.Windows.Win32.Foundation.PWSTR)
    dwWeakIndex: UInt32
@winfunctype_pointer
def CRYPT_VERIFY_IMAGE_A(szImage: win32more.Windows.Win32.Foundation.PSTR, pbSigData: POINTER(Byte)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def CRYPT_VERIFY_IMAGE_W(szImage: win32more.Windows.Win32.Foundation.PWSTR, pbSigData: POINTER(Byte)) -> win32more.Windows.Win32.Foundation.BOOL: ...
CRYPT_VERIFY_IMAGE = UnicodeAlias('CRYPT_VERIFY_IMAGE_W')
class CRYPT_VERIFY_MESSAGE_PARA(Structure):
    cbSize: UInt32
    dwMsgAndCertEncodingType: UInt32
    hCryptProv: win32more.Windows.Win32.Security.Cryptography.HCRYPTPROV_LEGACY
    pfnGetSignerCertificate: win32more.Windows.Win32.Security.Cryptography.PFN_CRYPT_GET_SIGNER_CERTIFICATE
    pvGetArg: VoidPtr
class CRYPT_X942_OTHER_INFO(Structure):
    pszContentEncryptionObjId: win32more.Windows.Win32.Foundation.PSTR
    rgbCounter: Byte * 4
    rgbKeyLength: Byte * 4
    PubInfo: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
class CRYPT_XML_ALGORITHM(Structure):
    cbSize: UInt32
    wszAlgorithm: win32more.Windows.Win32.Foundation.PWSTR
    Encoded: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_BLOB
class CRYPT_XML_ALGORITHM_INFO(Structure):
    cbSize: UInt32
    wszAlgorithmURI: win32more.Windows.Win32.Foundation.PWSTR
    wszName: win32more.Windows.Win32.Foundation.PWSTR
    dwGroupId: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_GROUP_ID
    wszCNGAlgid: win32more.Windows.Win32.Foundation.PWSTR
    wszCNGExtraAlgid: win32more.Windows.Win32.Foundation.PWSTR
    dwSignFlags: UInt32
    dwVerifyFlags: UInt32
    pvPaddingInfo: VoidPtr
    pvExtraInfo: VoidPtr
class CRYPT_XML_BLOB(Structure):
    dwCharset: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_CHARSET
    cbData: UInt32
    pbData: POINTER(Byte)
CRYPT_XML_CHARSET = Int32
CRYPT_XML_CHARSET_AUTO: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_CHARSET = 0
CRYPT_XML_CHARSET_UTF8: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_CHARSET = 1
CRYPT_XML_CHARSET_UTF16LE: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_CHARSET = 2
CRYPT_XML_CHARSET_UTF16BE: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_CHARSET = 3
class CRYPT_XML_CRYPTOGRAPHIC_INTERFACE(Structure):
    cbSize: UInt32
    fpCryptXmlEncodeAlgorithm: win32more.Windows.Win32.Security.Cryptography.CryptXmlDllEncodeAlgorithm
    fpCryptXmlCreateDigest: win32more.Windows.Win32.Security.Cryptography.CryptXmlDllCreateDigest
    fpCryptXmlDigestData: win32more.Windows.Win32.Security.Cryptography.CryptXmlDllDigestData
    fpCryptXmlFinalizeDigest: win32more.Windows.Win32.Security.Cryptography.CryptXmlDllFinalizeDigest
    fpCryptXmlCloseDigest: win32more.Windows.Win32.Security.Cryptography.CryptXmlDllCloseDigest
    fpCryptXmlSignData: win32more.Windows.Win32.Security.Cryptography.CryptXmlDllSignData
    fpCryptXmlVerifySignature: win32more.Windows.Win32.Security.Cryptography.CryptXmlDllVerifySignature
    fpCryptXmlGetAlgorithmInfo: win32more.Windows.Win32.Security.Cryptography.CryptXmlDllGetAlgorithmInfo
class CRYPT_XML_DATA_BLOB(Structure):
    cbData: UInt32
    pbData: POINTER(Byte)
class CRYPT_XML_DATA_PROVIDER(Structure):
    pvCallbackState: VoidPtr
    cbBufferSize: UInt32
    pfnRead: win32more.Windows.Win32.Security.Cryptography.PFN_CRYPT_XML_DATA_PROVIDER_READ
    pfnClose: win32more.Windows.Win32.Security.Cryptography.PFN_CRYPT_XML_DATA_PROVIDER_CLOSE
class CRYPT_XML_DOC_CTXT(Structure):
    cbSize: UInt32
    hDocCtxt: VoidPtr
    pTransformsConfig: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_TRANSFORM_CHAIN_CONFIG)
    cSignature: UInt32
    rgpSignature: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_SIGNATURE))
CRYPT_XML_FLAGS = UInt32
CRYPT_XML_FLAG_DISABLE_EXTENSIONS: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_FLAGS = 268435456
CRYPT_XML_FLAG_NO_SERIALIZE: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_FLAGS = 2147483648
CRYPT_XML_SIGN_ADD_KEYVALUE: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_FLAGS = 1
CRYPT_XML_GROUP_ID = UInt32
CRYPT_XML_GROUP_ID_HASH: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_GROUP_ID = 1
CRYPT_XML_GROUP_ID_SIGN: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_GROUP_ID = 2
class CRYPT_XML_ISSUER_SERIAL(Structure):
    wszIssuer: win32more.Windows.Win32.Foundation.PWSTR
    wszSerial: win32more.Windows.Win32.Foundation.PWSTR
class CRYPT_XML_KEYINFO_PARAM(Structure):
    wszId: win32more.Windows.Win32.Foundation.PWSTR
    wszKeyName: win32more.Windows.Win32.Foundation.PWSTR
    SKI: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    wszSubjectName: win32more.Windows.Win32.Foundation.PWSTR
    cCertificate: UInt32
    rgCertificate: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB)
    cCRL: UInt32
    rgCRL: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB)
CRYPT_XML_KEYINFO_SPEC = Int32
CRYPT_XML_KEYINFO_SPEC_NONE: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_KEYINFO_SPEC = 0
CRYPT_XML_KEYINFO_SPEC_ENCODED: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_KEYINFO_SPEC = 1
CRYPT_XML_KEYINFO_SPEC_PARAM: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_KEYINFO_SPEC = 2
CRYPT_XML_KEYINFO_TYPE = UInt32
CRYPT_XML_KEYINFO_TYPE_KEYNAME: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_KEYINFO_TYPE = 1
CRYPT_XML_KEYINFO_TYPE_KEYVALUE: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_KEYINFO_TYPE = 2
CRYPT_XML_KEYINFO_TYPE_RETRIEVAL: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_KEYINFO_TYPE = 3
CRYPT_XML_KEYINFO_TYPE_X509DATA: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_KEYINFO_TYPE = 4
CRYPT_XML_KEYINFO_TYPE_CUSTOM: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_KEYINFO_TYPE = 5
class CRYPT_XML_KEY_DSA_KEY_VALUE(Structure):
    P: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_DATA_BLOB
    Q: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_DATA_BLOB
    G: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_DATA_BLOB
    Y: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_DATA_BLOB
    J: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_DATA_BLOB
    Seed: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_DATA_BLOB
    Counter: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_DATA_BLOB
class CRYPT_XML_KEY_ECDSA_KEY_VALUE(Structure):
    wszNamedCurve: win32more.Windows.Win32.Foundation.PWSTR
    X: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_DATA_BLOB
    Y: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_DATA_BLOB
    ExplicitPara: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_BLOB
class CRYPT_XML_KEY_INFO(Structure):
    cbSize: UInt32
    wszId: win32more.Windows.Win32.Foundation.PWSTR
    cKeyInfo: UInt32
    rgKeyInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_KEY_INFO_ITEM)
    hVerifyKey: win32more.Windows.Win32.Security.Cryptography.BCRYPT_KEY_HANDLE
class CRYPT_XML_KEY_INFO_ITEM(Structure):
    dwType: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_KEYINFO_TYPE
    Anonymous: _Anonymous_e__Union
    _anonymous_ = ('Anonymous',)
    class _Anonymous_e__Union(Union):
        wszKeyName: win32more.Windows.Win32.Foundation.PWSTR
        KeyValue: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_KEY_VALUE
        RetrievalMethod: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_BLOB
        X509Data: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_X509DATA
        Custom: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_BLOB
class CRYPT_XML_KEY_RSA_KEY_VALUE(Structure):
    Modulus: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_DATA_BLOB
    Exponent: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_DATA_BLOB
class CRYPT_XML_KEY_VALUE(Structure):
    dwType: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_KEY_VALUE_TYPE
    Anonymous: _Anonymous_e__Union
    _anonymous_ = ('Anonymous',)
    class _Anonymous_e__Union(Union):
        DSAKeyValue: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_KEY_DSA_KEY_VALUE
        RSAKeyValue: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_KEY_RSA_KEY_VALUE
        ECDSAKeyValue: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_KEY_ECDSA_KEY_VALUE
        Custom: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_BLOB
CRYPT_XML_KEY_VALUE_TYPE = UInt32
CRYPT_XML_KEY_VALUE_TYPE_DSA: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_KEY_VALUE_TYPE = 1
CRYPT_XML_KEY_VALUE_TYPE_RSA: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_KEY_VALUE_TYPE = 2
CRYPT_XML_KEY_VALUE_TYPE_ECDSA: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_KEY_VALUE_TYPE = 3
CRYPT_XML_KEY_VALUE_TYPE_CUSTOM: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_KEY_VALUE_TYPE = 4
class CRYPT_XML_OBJECT(Structure):
    cbSize: UInt32
    hObject: VoidPtr
    wszId: win32more.Windows.Win32.Foundation.PWSTR
    wszMimeType: win32more.Windows.Win32.Foundation.PWSTR
    wszEncoding: win32more.Windows.Win32.Foundation.PWSTR
    Manifest: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_REFERENCES
    Encoded: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_BLOB
class CRYPT_XML_PROPERTY(Structure):
    dwPropId: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_PROPERTY_ID
    pvValue: VoidPtr
    cbValue: UInt32
CRYPT_XML_PROPERTY_ID = Int32
CRYPT_XML_PROPERTY_MAX_HEAP_SIZE: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_PROPERTY_ID = 1
CRYPT_XML_PROPERTY_SIGNATURE_LOCATION: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_PROPERTY_ID = 2
CRYPT_XML_PROPERTY_MAX_SIGNATURES: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_PROPERTY_ID = 3
CRYPT_XML_PROPERTY_DOC_DECLARATION: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_PROPERTY_ID = 4
CRYPT_XML_PROPERTY_XML_OUTPUT_CHARSET: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_PROPERTY_ID = 5
class CRYPT_XML_REFERENCE(Structure):
    cbSize: UInt32
    hReference: VoidPtr
    wszId: win32more.Windows.Win32.Foundation.PWSTR
    wszUri: win32more.Windows.Win32.Foundation.PWSTR
    wszType: win32more.Windows.Win32.Foundation.PWSTR
    DigestMethod: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_ALGORITHM
    DigestValue: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    cTransform: UInt32
    rgTransform: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_ALGORITHM)
class CRYPT_XML_REFERENCES(Structure):
    cReference: UInt32
    rgpReference: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_REFERENCE))
class CRYPT_XML_SIGNATURE(Structure):
    cbSize: UInt32
    hSignature: VoidPtr
    wszId: win32more.Windows.Win32.Foundation.PWSTR
    SignedInfo: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_SIGNED_INFO
    SignatureValue: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    pKeyInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_KEY_INFO)
    cObject: UInt32
    rgpObject: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_OBJECT))
class CRYPT_XML_SIGNED_INFO(Structure):
    cbSize: UInt32
    wszId: win32more.Windows.Win32.Foundation.PWSTR
    Canonicalization: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_ALGORITHM
    SignatureMethod: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_ALGORITHM
    cReference: UInt32
    rgpReference: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_REFERENCE))
    Encoded: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_BLOB
class CRYPT_XML_STATUS(Structure):
    cbSize: UInt32
    dwErrorStatus: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_STATUS_ERROR_STATUS
    dwInfoStatus: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_STATUS_INFO_STATUS
CRYPT_XML_STATUS_ERROR_STATUS = UInt32
CRYPT_XML_STATUS_ERROR_NOT_RESOLVED: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_STATUS_ERROR_STATUS = 1
CRYPT_XML_STATUS_ERROR_DIGEST_INVALID: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_STATUS_ERROR_STATUS = 2
CRYPT_XML_STATUS_ERROR_NOT_SUPPORTED_ALGORITHM: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_STATUS_ERROR_STATUS = 5
CRYPT_XML_STATUS_ERROR_NOT_SUPPORTED_TRANSFORM: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_STATUS_ERROR_STATUS = 8
CRYPT_XML_STATUS_ERROR_SIGNATURE_INVALID: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_STATUS_ERROR_STATUS = 65536
CRYPT_XML_STATUS_ERROR_KEYINFO_NOT_PARSED: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_STATUS_ERROR_STATUS = 131072
CRYPT_XML_STATUS_INFO_STATUS = UInt32
CRYPT_XML_STATUS_INTERNAL_REFERENCE: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_STATUS_INFO_STATUS = 1
CRYPT_XML_STATUS_KEY_AVAILABLE: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_STATUS_INFO_STATUS = 2
CRYPT_XML_STATUS_DIGESTING: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_STATUS_INFO_STATUS = 4
CRYPT_XML_STATUS_DIGEST_VALID: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_STATUS_INFO_STATUS = 8
CRYPT_XML_STATUS_SIGNATURE_VALID: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_STATUS_INFO_STATUS = 65536
CRYPT_XML_STATUS_OPENED_TO_ENCODE: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_STATUS_INFO_STATUS = 2147483648
class CRYPT_XML_TRANSFORM_CHAIN_CONFIG(Structure):
    cbSize: UInt32
    cTransformInfo: UInt32
    rgpTransformInfo: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_TRANSFORM_INFO))
CRYPT_XML_TRANSFORM_FLAGS = UInt32
CRYPT_XML_TRANSFORM_ON_STREAM: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_TRANSFORM_FLAGS = 1
CRYPT_XML_TRANSFORM_ON_NODESET: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_TRANSFORM_FLAGS = 2
CRYPT_XML_TRANSFORM_URI_QUERY_STRING: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_TRANSFORM_FLAGS = 3
class CRYPT_XML_TRANSFORM_INFO(Structure):
    cbSize: UInt32
    wszAlgorithm: win32more.Windows.Win32.Foundation.PWSTR
    cbBufferSize: UInt32
    dwFlags: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_TRANSFORM_FLAGS
    pfnCreateTransform: win32more.Windows.Win32.Security.Cryptography.PFN_CRYPT_XML_CREATE_TRANSFORM
class CRYPT_XML_X509DATA(Structure):
    cX509Data: UInt32
    rgX509Data: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_X509DATA_ITEM)
class CRYPT_XML_X509DATA_ITEM(Structure):
    dwType: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_X509DATA_TYPE
    Anonymous: _Anonymous_e__Union
    _anonymous_ = ('Anonymous',)
    class _Anonymous_e__Union(Union):
        IssuerSerial: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_ISSUER_SERIAL
        SKI: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_DATA_BLOB
        wszSubjectName: win32more.Windows.Win32.Foundation.PWSTR
        Certificate: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_DATA_BLOB
        CRL: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_DATA_BLOB
        Custom: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_BLOB
CRYPT_XML_X509DATA_TYPE = UInt32
CRYPT_XML_X509DATA_TYPE_ISSUER_SERIAL: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_X509DATA_TYPE = 1
CRYPT_XML_X509DATA_TYPE_SKI: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_X509DATA_TYPE = 2
CRYPT_XML_X509DATA_TYPE_SUBJECT_NAME: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_X509DATA_TYPE = 3
CRYPT_XML_X509DATA_TYPE_CERTIFICATE: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_X509DATA_TYPE = 4
CRYPT_XML_X509DATA_TYPE_CRL: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_X509DATA_TYPE = 5
CRYPT_XML_X509DATA_TYPE_CUSTOM: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_X509DATA_TYPE = 6
class CTL_ANY_SUBJECT_INFO(Structure):
    SubjectAlgorithm: win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    SubjectIdentifier: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
class CTL_CONTEXT(Structure):
    dwMsgAndCertEncodingType: UInt32
    pbCtlEncoded: POINTER(Byte)
    cbCtlEncoded: UInt32
    pCtlInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CTL_INFO)
    hCertStore: win32more.Windows.Win32.Security.Cryptography.HCERTSTORE
    hCryptMsg: VoidPtr
    pbCtlContent: POINTER(Byte)
    cbCtlContent: UInt32
class CTL_ENTRY(Structure):
    SubjectIdentifier: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    cAttribute: UInt32
    rgAttribute: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_ATTRIBUTE)
class CTL_FIND_SUBJECT_PARA(Structure):
    cbSize: UInt32
    pUsagePara: POINTER(win32more.Windows.Win32.Security.Cryptography.CTL_FIND_USAGE_PARA)
    dwSubjectType: UInt32
    pvSubject: VoidPtr
class CTL_FIND_USAGE_PARA(Structure):
    cbSize: UInt32
    SubjectUsage: win32more.Windows.Win32.Security.Cryptography.CTL_USAGE
    ListIdentifier: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    pSigner: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_INFO)
class CTL_INFO(Structure):
    dwVersion: UInt32
    SubjectUsage: win32more.Windows.Win32.Security.Cryptography.CTL_USAGE
    ListIdentifier: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    SequenceNumber: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    ThisUpdate: win32more.Windows.Win32.Foundation.FILETIME
    NextUpdate: win32more.Windows.Win32.Foundation.FILETIME
    SubjectAlgorithm: win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    cCTLEntry: UInt32
    rgCTLEntry: POINTER(win32more.Windows.Win32.Security.Cryptography.CTL_ENTRY)
    cExtension: UInt32
    rgExtension: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_EXTENSION)
class CTL_USAGE(Structure):
    cUsageIdentifier: UInt32
    rgpszUsageIdentifier: POINTER(win32more.Windows.Win32.Foundation.PSTR)
class CTL_USAGE_MATCH(Structure):
    dwType: UInt32
    Usage: win32more.Windows.Win32.Security.Cryptography.CTL_USAGE
class CTL_VERIFY_USAGE_PARA(Structure):
    cbSize: UInt32
    ListIdentifier: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    cCtlStore: UInt32
    rghCtlStore: POINTER(win32more.Windows.Win32.Security.Cryptography.HCERTSTORE)
    cSignerStore: UInt32
    rghSignerStore: POINTER(win32more.Windows.Win32.Security.Cryptography.HCERTSTORE)
class CTL_VERIFY_USAGE_STATUS(Structure):
    cbSize: UInt32
    dwError: UInt32
    dwFlags: UInt32
    ppCtl: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CTL_CONTEXT))
    dwCtlEntryIndex: UInt32
    ppSigner: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT))
    dwSignerIndex: UInt32
class CT_EXTRA_CERT_CHAIN_POLICY_STATUS(Structure):
    cbSize: UInt32
    lErrorStatus: Int32
    lErrorSubStatus: Int32
    cEntries: UInt32
    cValidated: UInt32
CertKeyType = UInt32
KeyTypeOther: win32more.Windows.Win32.Security.Cryptography.CertKeyType = 0
KeyTypeVirtualSmartCard: win32more.Windows.Win32.Security.Cryptography.CertKeyType = 1
KeyTypePhysicalSmartCard: win32more.Windows.Win32.Security.Cryptography.CertKeyType = 2
KeyTypePassport: win32more.Windows.Win32.Security.Cryptography.CertKeyType = 3
KeyTypePassportRemote: win32more.Windows.Win32.Security.Cryptography.CertKeyType = 4
KeyTypePassportSmartCard: win32more.Windows.Win32.Security.Cryptography.CertKeyType = 5
KeyTypeHardware: win32more.Windows.Win32.Security.Cryptography.CertKeyType = 6
KeyTypeSoftware: win32more.Windows.Win32.Security.Cryptography.CertKeyType = 7
KeyTypeSelfSigned: win32more.Windows.Win32.Security.Cryptography.CertKeyType = 8
@winfunctype_pointer
def CryptXmlDllCloseDigest(hDigest: VoidPtr) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def CryptXmlDllCreateDigest(pDigestMethod: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_ALGORITHM), pcbSize: POINTER(UInt32), phDigest: POINTER(VoidPtr)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def CryptXmlDllCreateKey(pEncoded: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_BLOB), phKey: POINTER(win32more.Windows.Win32.Security.Cryptography.BCRYPT_KEY_HANDLE)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def CryptXmlDllDigestData(hDigest: VoidPtr, pbData: POINTER(Byte), cbData: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def CryptXmlDllEncodeAlgorithm(pAlgInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_ALGORITHM_INFO), dwCharset: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_CHARSET, pvCallbackState: VoidPtr, pfnWrite: win32more.Windows.Win32.Security.Cryptography.PFN_CRYPT_XML_WRITE_CALLBACK) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def CryptXmlDllEncodeKeyValue(hKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, dwCharset: win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_CHARSET, pvCallbackState: VoidPtr, pfnWrite: win32more.Windows.Win32.Security.Cryptography.PFN_CRYPT_XML_WRITE_CALLBACK) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def CryptXmlDllFinalizeDigest(hDigest: VoidPtr, pbDigest: POINTER(Byte), cbDigest: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def CryptXmlDllGetAlgorithmInfo(pXmlAlgorithm: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_ALGORITHM), ppAlgInfo: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_ALGORITHM_INFO))) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def CryptXmlDllGetInterface(dwFlags: UInt32, pMethod: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_ALGORITHM_INFO), pInterface: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_CRYPTOGRAPHIC_INTERFACE)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def CryptXmlDllSignData(pSignatureMethod: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_ALGORITHM), hCryptProvOrNCryptKey: win32more.Windows.Win32.Security.Cryptography.HCRYPTPROV_OR_NCRYPT_KEY_HANDLE, dwKeySpec: UInt32, pbInput: POINTER(Byte), cbInput: UInt32, pbOutput: POINTER(Byte), cbOutput: UInt32, pcbResult: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def CryptXmlDllVerifySignature(pSignatureMethod: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_ALGORITHM), hKey: win32more.Windows.Win32.Security.Cryptography.BCRYPT_KEY_HANDLE, pbInput: POINTER(Byte), cbInput: UInt32, pbSignature: POINTER(Byte), cbSignature: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
DSAFIPSVERSION_ENUM = Int32
DSA_FIPS186_2: win32more.Windows.Win32.Security.Cryptography.DSAFIPSVERSION_ENUM = 0
DSA_FIPS186_3: win32more.Windows.Win32.Security.Cryptography.DSAFIPSVERSION_ENUM = 1
class DSSSEED(Structure):
    counter: UInt32
    seed: Byte * 20
Direction = Int32
DirectionEncrypt: win32more.Windows.Win32.Security.Cryptography.Direction = 1
DirectionDecrypt: win32more.Windows.Win32.Security.Cryptography.Direction = 2
ECC_CURVE_ALG_ID_ENUM = Int32
BCRYPT_NO_CURVE_GENERATION_ALG_ID: win32more.Windows.Win32.Security.Cryptography.ECC_CURVE_ALG_ID_ENUM = 0
ECC_CURVE_TYPE_ENUM = Int32
BCRYPT_ECC_PRIME_SHORT_WEIERSTRASS_CURVE: win32more.Windows.Win32.Security.Cryptography.ECC_CURVE_TYPE_ENUM = 1
BCRYPT_ECC_PRIME_TWISTED_EDWARDS_CURVE: win32more.Windows.Win32.Security.Cryptography.ECC_CURVE_TYPE_ENUM = 2
BCRYPT_ECC_PRIME_MONTGOMERY_CURVE: win32more.Windows.Win32.Security.Cryptography.ECC_CURVE_TYPE_ENUM = 3
class ENDPOINTADDRESS(Structure):
    serviceUrl: win32more.Windows.Win32.Foundation.PWSTR
    policyUrl: win32more.Windows.Win32.Foundation.PWSTR
    rawCertificate: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
class ENDPOINTADDRESS2(Structure):
    serviceUrl: win32more.Windows.Win32.Foundation.PWSTR
    policyUrl: win32more.Windows.Win32.Foundation.PWSTR
    identityType: UInt32
    identityBytes: VoidPtr
class EV_EXTRA_CERT_CHAIN_POLICY_PARA(Structure):
    cbSize: UInt32
    dwRootProgramQualifierFlags: win32more.Windows.Win32.Security.Cryptography.CERT_ROOT_PROGRAM_FLAGS
class EV_EXTRA_CERT_CHAIN_POLICY_STATUS(Structure):
    cbSize: UInt32
    dwQualifiers: UInt32
    dwIssuanceUsageIndex: UInt32
class GENERIC_XML_TOKEN(Structure):
    createDate: win32more.Windows.Win32.Foundation.FILETIME
    expiryDate: win32more.Windows.Win32.Foundation.FILETIME
    xmlToken: win32more.Windows.Win32.Foundation.PWSTR
    internalTokenReference: win32more.Windows.Win32.Foundation.PWSTR
    externalTokenReference: win32more.Windows.Win32.Foundation.PWSTR
    _pack_ = 1
@winfunctype_pointer
def GetAsymmetricEncryptionInterfaceFn(pszProviderName: win32more.Windows.Win32.Foundation.PWSTR, pszAlgId: win32more.Windows.Win32.Foundation.PWSTR, ppFunctionTable: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.BCRYPT_ASYMMETRIC_ENCRYPTION_FUNCTION_TABLE)), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def GetCipherInterfaceFn(pszProviderName: win32more.Windows.Win32.Foundation.PWSTR, pszAlgId: win32more.Windows.Win32.Foundation.PWSTR, ppFunctionTable: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.BCRYPT_CIPHER_FUNCTION_TABLE)), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def GetHashInterfaceFn(pszProviderName: win32more.Windows.Win32.Foundation.PWSTR, pszAlgId: win32more.Windows.Win32.Foundation.PWSTR, ppFunctionTable: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.BCRYPT_HASH_FUNCTION_TABLE)), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def GetKeyDerivationInterfaceFn(pszProviderName: win32more.Windows.Win32.Foundation.PWSTR, pszAlgId: win32more.Windows.Win32.Foundation.PWSTR, ppFunctionTable: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.BCRYPT_KEY_DERIVATION_FUNCTION_TABLE)), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def GetKeyStorageInterfaceFn(pszProviderName: win32more.Windows.Win32.Foundation.PWSTR, ppFunctionTable: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_STORAGE_FUNCTION_TABLE)), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def GetRngInterfaceFn(pszProviderName: win32more.Windows.Win32.Foundation.PWSTR, ppFunctionTable: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.BCRYPT_RNG_FUNCTION_TABLE)), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def GetSChannelInterfaceFn(pszProviderName: win32more.Windows.Win32.Foundation.PWSTR, ppFunctionTable: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_SSL_FUNCTION_TABLE)), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def GetSecretAgreementInterfaceFn(pszProviderName: win32more.Windows.Win32.Foundation.PWSTR, pszAlgId: win32more.Windows.Win32.Foundation.PWSTR, ppFunctionTable: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.BCRYPT_SECRET_AGREEMENT_FUNCTION_TABLE)), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def GetSignatureInterfaceFn(pszProviderName: win32more.Windows.Win32.Foundation.PWSTR, pszAlgId: win32more.Windows.Win32.Foundation.PWSTR, ppFunctionTable: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.BCRYPT_SIGNATURE_FUNCTION_TABLE)), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.NTSTATUS: ...
HASHALGORITHM_ENUM = Int32
DSA_HASH_ALGORITHM_SHA1: win32more.Windows.Win32.Security.Cryptography.HASHALGORITHM_ENUM = 0
DSA_HASH_ALGORITHM_SHA256: win32more.Windows.Win32.Security.Cryptography.HASHALGORITHM_ENUM = 1
DSA_HASH_ALGORITHM_SHA512: win32more.Windows.Win32.Security.Cryptography.HASHALGORITHM_ENUM = 2
HCERTCHAINENGINE = VoidPtr
HCERTSTORE = VoidPtr
HCERTSTOREPROV = VoidPtr
HCRYPTASYNC = IntPtr
HCRYPTPROV_LEGACY = UIntPtr
HCRYPTPROV_OR_NCRYPT_KEY_HANDLE = UIntPtr
class HMAC_INFO(Structure):
    HashAlgid: win32more.Windows.Win32.Security.Cryptography.ALG_ID
    pbInnerString: POINTER(Byte)
    cbInnerString: UInt32
    pbOuterString: POINTER(Byte)
    cbOuterString: UInt32
HTTPSPOLICY_CALLBACK_DATA_AUTH_TYPE = UInt32
AUTHTYPE_CLIENT: win32more.Windows.Win32.Security.Cryptography.HTTPSPOLICY_CALLBACK_DATA_AUTH_TYPE = 1
AUTHTYPE_SERVER: win32more.Windows.Win32.Security.Cryptography.HTTPSPOLICY_CALLBACK_DATA_AUTH_TYPE = 2
class HTTPSPolicyCallbackData(Structure):
    Anonymous: _Anonymous_e__Union
    dwAuthType: win32more.Windows.Win32.Security.Cryptography.HTTPSPOLICY_CALLBACK_DATA_AUTH_TYPE
    fdwChecks: UInt32
    pwszServerName: win32more.Windows.Win32.Foundation.PWSTR
    _anonymous_ = ('Anonymous',)
    class _Anonymous_e__Union(Union):
        cbStruct: UInt32
        cbSize: UInt32
class HandleType(Enum, Int32):
    Asymmetric = 1
    Symmetric = 2
    Transform = 3
    Hash = 4
class ICertSrvSetup(ComPtr):
    extends: win32more.Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('{b760a1bb-4784-44c0-8f12-555f0780ff25}')
    @commethod(7)
    def get_CAErrorId(self, pVal: POINTER(Int32)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_CAErrorString(self, pVal: POINTER(win32more.Windows.Win32.Foundation.BSTR)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def InitializeDefaults(self, bServer: win32more.Windows.Win32.Foundation.VARIANT_BOOL, bClient: win32more.Windows.Win32.Foundation.VARIANT_BOOL) -> win32more.Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def GetCASetupProperty(self, propertyId: win32more.Windows.Win32.Security.Cryptography.CASetupProperty, pPropertyValue: POINTER(win32more.Windows.Win32.System.Variant.VARIANT)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def SetCASetupProperty(self, propertyId: win32more.Windows.Win32.Security.Cryptography.CASetupProperty, pPropertyValue: POINTER(win32more.Windows.Win32.System.Variant.VARIANT)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def IsPropertyEditable(self, propertyId: win32more.Windows.Win32.Security.Cryptography.CASetupProperty, pbEditable: POINTER(win32more.Windows.Win32.Foundation.VARIANT_BOOL)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def GetSupportedCATypes(self, pCATypes: POINTER(win32more.Windows.Win32.System.Variant.VARIANT)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
    @commethod(14)
    def GetProviderNameList(self, pVal: POINTER(win32more.Windows.Win32.System.Variant.VARIANT)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
    @commethod(15)
    def GetKeyLengthList(self, bstrProviderName: win32more.Windows.Win32.Foundation.BSTR, pVal: POINTER(win32more.Windows.Win32.System.Variant.VARIANT)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
    @commethod(16)
    def GetHashAlgorithmList(self, bstrProviderName: win32more.Windows.Win32.Foundation.BSTR, pVal: POINTER(win32more.Windows.Win32.System.Variant.VARIANT)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
    @commethod(17)
    def GetPrivateKeyContainerList(self, bstrProviderName: win32more.Windows.Win32.Foundation.BSTR, pVal: POINTER(win32more.Windows.Win32.System.Variant.VARIANT)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
    @commethod(18)
    def GetExistingCACertificates(self, ppVal: POINTER(win32more.Windows.Win32.Security.Cryptography.ICertSrvSetupKeyInformationCollection)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
    @commethod(19)
    def CAImportPFX(self, bstrFileName: win32more.Windows.Win32.Foundation.BSTR, bstrPasswd: win32more.Windows.Win32.Foundation.BSTR, bOverwriteExistingKey: win32more.Windows.Win32.Foundation.VARIANT_BOOL, ppVal: POINTER(win32more.Windows.Win32.Security.Cryptography.ICertSrvSetupKeyInformation)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
    @commethod(20)
    def SetCADistinguishedName(self, bstrCADN: win32more.Windows.Win32.Foundation.BSTR, bIgnoreUnicode: win32more.Windows.Win32.Foundation.VARIANT_BOOL, bOverwriteExistingKey: win32more.Windows.Win32.Foundation.VARIANT_BOOL, bOverwriteExistingCAInDS: win32more.Windows.Win32.Foundation.VARIANT_BOOL) -> win32more.Windows.Win32.Foundation.HRESULT: ...
    @commethod(21)
    def SetDatabaseInformation(self, bstrDBDirectory: win32more.Windows.Win32.Foundation.BSTR, bstrLogDirectory: win32more.Windows.Win32.Foundation.BSTR, bstrSharedFolder: win32more.Windows.Win32.Foundation.BSTR, bForceOverwrite: win32more.Windows.Win32.Foundation.VARIANT_BOOL) -> win32more.Windows.Win32.Foundation.HRESULT: ...
    @commethod(22)
    def SetParentCAInformation(self, bstrCAConfiguration: win32more.Windows.Win32.Foundation.BSTR) -> win32more.Windows.Win32.Foundation.HRESULT: ...
    @commethod(23)
    def SetWebCAInformation(self, bstrCAConfiguration: win32more.Windows.Win32.Foundation.BSTR) -> win32more.Windows.Win32.Foundation.HRESULT: ...
    @commethod(24)
    def Install(self) -> win32more.Windows.Win32.Foundation.HRESULT: ...
    @commethod(25)
    def PreUnInstall(self, bClientOnly: win32more.Windows.Win32.Foundation.VARIANT_BOOL) -> win32more.Windows.Win32.Foundation.HRESULT: ...
    @commethod(26)
    def PostUnInstall(self) -> win32more.Windows.Win32.Foundation.HRESULT: ...
class ICertSrvSetupKeyInformation(ComPtr):
    extends: win32more.Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('{6ba73778-36da-4c39-8a85-bcfa7d000793}')
    @commethod(7)
    def get_ProviderName(self, pVal: POINTER(win32more.Windows.Win32.Foundation.BSTR)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def put_ProviderName(self, bstrVal: win32more.Windows.Win32.Foundation.BSTR) -> win32more.Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_Length(self, pVal: POINTER(Int32)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def put_Length(self, lVal: Int32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def get_Existing(self, pVal: POINTER(win32more.Windows.Win32.Foundation.VARIANT_BOOL)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def put_Existing(self, bVal: win32more.Windows.Win32.Foundation.VARIANT_BOOL) -> win32more.Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def get_ContainerName(self, pVal: POINTER(win32more.Windows.Win32.Foundation.BSTR)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
    @commethod(14)
    def put_ContainerName(self, bstrVal: win32more.Windows.Win32.Foundation.BSTR) -> win32more.Windows.Win32.Foundation.HRESULT: ...
    @commethod(15)
    def get_HashAlgorithm(self, pVal: POINTER(win32more.Windows.Win32.Foundation.BSTR)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
    @commethod(16)
    def put_HashAlgorithm(self, bstrVal: win32more.Windows.Win32.Foundation.BSTR) -> win32more.Windows.Win32.Foundation.HRESULT: ...
    @commethod(17)
    def get_ExistingCACertificate(self, pVal: POINTER(win32more.Windows.Win32.System.Variant.VARIANT)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
    @commethod(18)
    def put_ExistingCACertificate(self, varVal: win32more.Windows.Win32.System.Variant.VARIANT) -> win32more.Windows.Win32.Foundation.HRESULT: ...
class ICertSrvSetupKeyInformationCollection(ComPtr):
    extends: win32more.Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('{e65c8b00-e58f-41f9-a9ec-a28d7427c844}')
    @commethod(7)
    def get__NewEnum(self, ppVal: POINTER(win32more.Windows.Win32.System.Com.IUnknown)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_Item(self, Index: Int32, pVal: POINTER(win32more.Windows.Win32.System.Variant.VARIANT)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_Count(self, pVal: POINTER(Int32)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def Add(self, pIKeyInformation: win32more.Windows.Win32.Security.Cryptography.ICertSrvSetupKeyInformation) -> win32more.Windows.Win32.Foundation.HRESULT: ...
class ICertificateEnrollmentPolicyServerSetup(ComPtr):
    extends: win32more.Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('{859252cc-238c-4a88-b8fd-a37e7d04e68b}')
    @commethod(7)
    def get_ErrorString(self, pVal: POINTER(win32more.Windows.Win32.Foundation.BSTR)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def InitializeInstallDefaults(self) -> win32more.Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def GetProperty(self, propertyId: win32more.Windows.Win32.Security.Cryptography.CEPSetupProperty, pPropertyValue: POINTER(win32more.Windows.Win32.System.Variant.VARIANT)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def SetProperty(self, propertyId: win32more.Windows.Win32.Security.Cryptography.CEPSetupProperty, pPropertyValue: POINTER(win32more.Windows.Win32.System.Variant.VARIANT)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def Install(self) -> win32more.Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def UnInstall(self, pAuthKeyBasedRenewal: POINTER(win32more.Windows.Win32.System.Variant.VARIANT)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
class ICertificateEnrollmentServerSetup(ComPtr):
    extends: win32more.Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('{70027fdb-9dd9-4921-8944-b35cb31bd2ec}')
    @commethod(7)
    def get_ErrorString(self, pVal: POINTER(win32more.Windows.Win32.Foundation.BSTR)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def InitializeInstallDefaults(self) -> win32more.Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def GetProperty(self, propertyId: win32more.Windows.Win32.Security.Cryptography.CESSetupProperty, pPropertyValue: POINTER(win32more.Windows.Win32.System.Variant.VARIANT)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def SetProperty(self, propertyId: win32more.Windows.Win32.Security.Cryptography.CESSetupProperty, pPropertyValue: POINTER(win32more.Windows.Win32.System.Variant.VARIANT)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def SetApplicationPoolCredentials(self, bstrUsername: win32more.Windows.Win32.Foundation.BSTR, bstrPassword: win32more.Windows.Win32.Foundation.BSTR) -> win32more.Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def Install(self) -> win32more.Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def UnInstall(self, pCAConfig: POINTER(win32more.Windows.Win32.System.Variant.VARIANT), pAuthentication: POINTER(win32more.Windows.Win32.System.Variant.VARIANT)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
class IMSCEPSetup(ComPtr):
    extends: win32more.Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('{4f7761bb-9f3b-4592-9ee0-9a73259c313e}')
    @commethod(7)
    def get_MSCEPErrorId(self, pVal: POINTER(Int32)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_MSCEPErrorString(self, pVal: POINTER(win32more.Windows.Win32.Foundation.BSTR)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def InitializeDefaults(self) -> win32more.Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def GetMSCEPSetupProperty(self, propertyId: win32more.Windows.Win32.Security.Cryptography.MSCEPSetupProperty, pVal: POINTER(win32more.Windows.Win32.System.Variant.VARIANT)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def SetMSCEPSetupProperty(self, propertyId: win32more.Windows.Win32.Security.Cryptography.MSCEPSetupProperty, pPropertyValue: POINTER(win32more.Windows.Win32.System.Variant.VARIANT)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def SetAccountInformation(self, bstrUserName: win32more.Windows.Win32.Foundation.BSTR, bstrPassword: win32more.Windows.Win32.Foundation.BSTR) -> win32more.Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def IsMSCEPStoreEmpty(self, pbEmpty: POINTER(win32more.Windows.Win32.Foundation.VARIANT_BOOL)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
    @commethod(14)
    def GetProviderNameList(self, bExchange: win32more.Windows.Win32.Foundation.VARIANT_BOOL, pVal: POINTER(win32more.Windows.Win32.System.Variant.VARIANT)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
    @commethod(15)
    def GetKeyLengthList(self, bExchange: win32more.Windows.Win32.Foundation.VARIANT_BOOL, bstrProviderName: win32more.Windows.Win32.Foundation.BSTR, pVal: POINTER(win32more.Windows.Win32.System.Variant.VARIANT)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
    @commethod(16)
    def Install(self) -> win32more.Windows.Win32.Foundation.HRESULT: ...
    @commethod(17)
    def PreUnInstall(self) -> win32more.Windows.Win32.Foundation.HRESULT: ...
    @commethod(18)
    def PostUnInstall(self) -> win32more.Windows.Win32.Foundation.HRESULT: ...
class INFORMATIONCARD_ASYMMETRIC_CRYPTO_PARAMETERS(Structure):
    keySize: Int32
    keyExchangeAlgorithm: win32more.Windows.Win32.Foundation.PWSTR
    signatureAlgorithm: win32more.Windows.Win32.Foundation.PWSTR
class INFORMATIONCARD_CRYPTO_HANDLE(Structure):
    type: win32more.Windows.Win32.Security.Cryptography.HandleType
    expiration: Int64
    cryptoParameters: VoidPtr
class INFORMATIONCARD_HASH_CRYPTO_PARAMETERS(Structure):
    hashSize: Int32
    transform: win32more.Windows.Win32.Security.Cryptography.INFORMATIONCARD_TRANSFORM_CRYPTO_PARAMETERS
class INFORMATIONCARD_SYMMETRIC_CRYPTO_PARAMETERS(Structure):
    keySize: Int32
    blockSize: Int32
    feedbackSize: Int32
class INFORMATIONCARD_TRANSFORM_CRYPTO_PARAMETERS(Structure):
    inputBlockSize: Int32
    outputBlockSize: Int32
    canTransformMultipleBlocks: win32more.Windows.Win32.Foundation.BOOL
    canReuseTransform: win32more.Windows.Win32.Foundation.BOOL
class InFileSignatureResource(Structure):
    dwVersion: UInt32
    dwCrcOffset: UInt32
    rgbSignature: Byte * 88
class KEY_TYPE_SUBTYPE(Structure):
    dwKeySpec: UInt32
    Type: Guid
    Subtype: Guid
MSCEPSetupProperty = Int32
ENUM_CEPSETUPPROP_USELOCALSYSTEM: win32more.Windows.Win32.Security.Cryptography.MSCEPSetupProperty = 0
ENUM_CEPSETUPPROP_USECHALLENGE: win32more.Windows.Win32.Security.Cryptography.MSCEPSetupProperty = 1
ENUM_CEPSETUPPROP_RANAME_CN: win32more.Windows.Win32.Security.Cryptography.MSCEPSetupProperty = 2
ENUM_CEPSETUPPROP_RANAME_EMAIL: win32more.Windows.Win32.Security.Cryptography.MSCEPSetupProperty = 3
ENUM_CEPSETUPPROP_RANAME_COMPANY: win32more.Windows.Win32.Security.Cryptography.MSCEPSetupProperty = 4
ENUM_CEPSETUPPROP_RANAME_DEPT: win32more.Windows.Win32.Security.Cryptography.MSCEPSetupProperty = 5
ENUM_CEPSETUPPROP_RANAME_CITY: win32more.Windows.Win32.Security.Cryptography.MSCEPSetupProperty = 6
ENUM_CEPSETUPPROP_RANAME_STATE: win32more.Windows.Win32.Security.Cryptography.MSCEPSetupProperty = 7
ENUM_CEPSETUPPROP_RANAME_COUNTRY: win32more.Windows.Win32.Security.Cryptography.MSCEPSetupProperty = 8
ENUM_CEPSETUPPROP_SIGNINGKEYINFORMATION: win32more.Windows.Win32.Security.Cryptography.MSCEPSetupProperty = 9
ENUM_CEPSETUPPROP_EXCHANGEKEYINFORMATION: win32more.Windows.Win32.Security.Cryptography.MSCEPSetupProperty = 10
ENUM_CEPSETUPPROP_CAINFORMATION: win32more.Windows.Win32.Security.Cryptography.MSCEPSetupProperty = 11
ENUM_CEPSETUPPROP_MSCEPURL: win32more.Windows.Win32.Security.Cryptography.MSCEPSetupProperty = 12
ENUM_CEPSETUPPROP_CHALLENGEURL: win32more.Windows.Win32.Security.Cryptography.MSCEPSetupProperty = 13
NCRYPT_ALGORITHM_NAME_CLASS = UInt32
NCRYPT_ASYMMETRIC_ENCRYPTION_INTERFACE: win32more.Windows.Win32.Security.Cryptography.NCRYPT_ALGORITHM_NAME_CLASS = 3
NCRYPT_SECRET_AGREEMENT_INTERFACE: win32more.Windows.Win32.Security.Cryptography.NCRYPT_ALGORITHM_NAME_CLASS = 4
NCRYPT_SIGNATURE_INTERFACE: win32more.Windows.Win32.Security.Cryptography.NCRYPT_ALGORITHM_NAME_CLASS = 5
class NCRYPT_ALLOC_PARA(Structure):
    cbSize: UInt32
    pfnAlloc: win32more.Windows.Win32.Security.Cryptography.PFN_NCRYPT_ALLOC
    pfnFree: win32more.Windows.Win32.Security.Cryptography.PFN_NCRYPT_FREE
class NCRYPT_CIPHER_PADDING_INFO(Structure):
    cbSize: UInt32
    dwFlags: UInt32
    pbIV: POINTER(Byte)
    cbIV: UInt32
    pbOtherInfo: POINTER(Byte)
    cbOtherInfo: UInt32
class NCRYPT_EXPORTED_ISOLATED_KEY_ENVELOPE(Structure):
    Header: win32more.Windows.Win32.Security.Cryptography.NCRYPT_EXPORTED_ISOLATED_KEY_HEADER
class NCRYPT_EXPORTED_ISOLATED_KEY_HEADER(Structure):
    Version: UInt32
    KeyUsage: UInt32
    PerBootKey: Annotated[UInt32, NativeBitfieldAttribute(1)]
    Reserved: Annotated[UInt32, NativeBitfieldAttribute(31)]
    cbAlgName: UInt32
    cbNonce: UInt32
    cbAuthTag: UInt32
    cbWrappingKey: UInt32
    cbIsolatedKey: UInt32
NCRYPT_FLAGS = UInt32
NCRYPT_SILENT_FLAG: win32more.Windows.Win32.Security.Cryptography.NCRYPT_FLAGS = 64
NCRYPT_NO_PADDING_FLAG: win32more.Windows.Win32.Security.Cryptography.NCRYPT_FLAGS = 1
NCRYPT_PAD_OAEP_FLAG: win32more.Windows.Win32.Security.Cryptography.NCRYPT_FLAGS = 4
NCRYPT_PAD_PKCS1_FLAG: win32more.Windows.Win32.Security.Cryptography.NCRYPT_FLAGS = 2
NCRYPT_REGISTER_NOTIFY_FLAG: win32more.Windows.Win32.Security.Cryptography.NCRYPT_FLAGS = 1
NCRYPT_UNREGISTER_NOTIFY_FLAG: win32more.Windows.Win32.Security.Cryptography.NCRYPT_FLAGS = 2
NCRYPT_MACHINE_KEY_FLAG: win32more.Windows.Win32.Security.Cryptography.NCRYPT_FLAGS = 32
NCRYPT_UNPROTECT_NO_DECRYPT: win32more.Windows.Win32.Security.Cryptography.NCRYPT_FLAGS = 1
NCRYPT_OVERWRITE_KEY_FLAG: win32more.Windows.Win32.Security.Cryptography.NCRYPT_FLAGS = 128
NCRYPT_NO_KEY_VALIDATION: win32more.Windows.Win32.Security.Cryptography.NCRYPT_FLAGS = 8
NCRYPT_WRITE_KEY_TO_LEGACY_STORE_FLAG: win32more.Windows.Win32.Security.Cryptography.NCRYPT_FLAGS = 512
NCRYPT_PAD_PSS_FLAG: win32more.Windows.Win32.Security.Cryptography.NCRYPT_FLAGS = 8
NCRYPT_PERSIST_FLAG: win32more.Windows.Win32.Security.Cryptography.NCRYPT_FLAGS = 2147483648
NCRYPT_PERSIST_ONLY_FLAG: win32more.Windows.Win32.Security.Cryptography.NCRYPT_FLAGS = 1073741824
NCRYPT_HANDLE = UIntPtr
NCRYPT_HASH_HANDLE = UIntPtr
class NCRYPT_ISOLATED_KEY_ATTESTED_ATTRIBUTES(Structure):
    Version: UInt32
    Flags: UInt32
    cbPublicKeyBlob: UInt32
class NCRYPT_KEY_ACCESS_POLICY_BLOB(Structure):
    dwVersion: UInt32
    dwPolicyFlags: UInt32
    cbUserSid: UInt32
    cbApplicationSid: UInt32
class NCRYPT_KEY_ATTEST_PADDING_INFO(Structure):
    magic: UInt32
    pbKeyBlob: POINTER(Byte)
    cbKeyBlob: UInt32
    pbKeyAuth: POINTER(Byte)
    cbKeyAuth: UInt32
class NCRYPT_KEY_BLOB_HEADER(Structure):
    cbSize: UInt32
    dwMagic: UInt32
    cbAlgName: UInt32
    cbKeyData: UInt32
NCRYPT_KEY_HANDLE = UIntPtr
class NCRYPT_KEY_STORAGE_FUNCTION_TABLE(Structure):
    Version: win32more.Windows.Win32.Security.Cryptography.BCRYPT_INTERFACE_VERSION
    OpenProvider: win32more.Windows.Win32.Security.Cryptography.NCryptOpenStorageProviderFn
    OpenKey: win32more.Windows.Win32.Security.Cryptography.NCryptOpenKeyFn
    CreatePersistedKey: win32more.Windows.Win32.Security.Cryptography.NCryptCreatePersistedKeyFn
    GetProviderProperty: win32more.Windows.Win32.Security.Cryptography.NCryptGetProviderPropertyFn
    GetKeyProperty: win32more.Windows.Win32.Security.Cryptography.NCryptGetKeyPropertyFn
    SetProviderProperty: win32more.Windows.Win32.Security.Cryptography.NCryptSetProviderPropertyFn
    SetKeyProperty: win32more.Windows.Win32.Security.Cryptography.NCryptSetKeyPropertyFn
    FinalizeKey: win32more.Windows.Win32.Security.Cryptography.NCryptFinalizeKeyFn
    DeleteKey: win32more.Windows.Win32.Security.Cryptography.NCryptDeleteKeyFn
    FreeProvider: win32more.Windows.Win32.Security.Cryptography.NCryptFreeProviderFn
    FreeKey: win32more.Windows.Win32.Security.Cryptography.NCryptFreeKeyFn
    FreeBuffer: win32more.Windows.Win32.Security.Cryptography.NCryptFreeBufferFn
    Encrypt: win32more.Windows.Win32.Security.Cryptography.NCryptEncryptFn
    Decrypt: win32more.Windows.Win32.Security.Cryptography.NCryptDecryptFn
    IsAlgSupported: win32more.Windows.Win32.Security.Cryptography.NCryptIsAlgSupportedFn
    EnumAlgorithms: win32more.Windows.Win32.Security.Cryptography.NCryptEnumAlgorithmsFn
    EnumKeys: win32more.Windows.Win32.Security.Cryptography.NCryptEnumKeysFn
    ImportKey: win32more.Windows.Win32.Security.Cryptography.NCryptImportKeyFn
    ExportKey: win32more.Windows.Win32.Security.Cryptography.NCryptExportKeyFn
    SignHash: win32more.Windows.Win32.Security.Cryptography.NCryptSignHashFn
    VerifySignature: win32more.Windows.Win32.Security.Cryptography.NCryptVerifySignatureFn
    PromptUser: win32more.Windows.Win32.Security.Cryptography.NCryptPromptUserFn
    NotifyChangeKey: win32more.Windows.Win32.Security.Cryptography.NCryptNotifyChangeKeyFn
    SecretAgreement: win32more.Windows.Win32.Security.Cryptography.NCryptSecretAgreementFn
    DeriveKey: win32more.Windows.Win32.Security.Cryptography.NCryptDeriveKeyFn
    FreeSecret: win32more.Windows.Win32.Security.Cryptography.NCryptFreeSecretFn
    KeyDerivation: win32more.Windows.Win32.Security.Cryptography.NCryptKeyDerivationFn
    CreateClaim: win32more.Windows.Win32.Security.Cryptography.NCryptCreateClaimFn
    VerifyClaim: win32more.Windows.Win32.Security.Cryptography.NCryptVerifyClaimFn
NCRYPT_OPERATION = UInt32
NCRYPT_CIPHER_OPERATION: win32more.Windows.Win32.Security.Cryptography.NCRYPT_OPERATION = 1
NCRYPT_HASH_OPERATION: win32more.Windows.Win32.Security.Cryptography.NCRYPT_OPERATION = 2
NCRYPT_ASYMMETRIC_ENCRYPTION_OPERATION: win32more.Windows.Win32.Security.Cryptography.NCRYPT_OPERATION = 4
NCRYPT_SECRET_AGREEMENT_OPERATION: win32more.Windows.Win32.Security.Cryptography.NCRYPT_OPERATION = 8
NCRYPT_SIGNATURE_OPERATION: win32more.Windows.Win32.Security.Cryptography.NCRYPT_OPERATION = 16
class NCRYPT_PCP_HMAC_AUTH_SIGNATURE_INFO(Structure):
    dwVersion: UInt32
    iExpiration: Int32
    pabNonce: Byte * 32
    pabPolicyRef: Byte * 32
    pabHMAC: Byte * 32
class NCRYPT_PCP_RAW_POLICYDIGEST_INFO(Structure):
    dwVersion: UInt32
    cbDigest: UInt32
class NCRYPT_PCP_TPM_FW_VERSION_INFO(Structure):
    major1: UInt16
    major2: UInt16
    minor1: UInt16
    minor2: UInt16
class NCRYPT_PCP_TPM_WEB_AUTHN_ATTESTATION_STATEMENT(Structure):
    Magic: UInt32
    Version: UInt32
    HeaderSize: UInt32
    cbCertifyInfo: UInt32
    cbSignature: UInt32
    cbTpmPublic: UInt32
class NCRYPT_PLATFORM_ATTEST_PADDING_INFO(Structure):
    magic: UInt32
    pcrMask: UInt32
class NCRYPT_PROTECT_STREAM_INFO(Structure):
    pfnStreamOutput: win32more.Windows.Win32.Security.Cryptography.PFNCryptStreamOutputCallback
    pvCallbackCtxt: VoidPtr
class NCRYPT_PROTECT_STREAM_INFO_EX(Structure):
    pfnStreamOutput: win32more.Windows.Win32.Security.Cryptography.PFNCryptStreamOutputCallbackEx
    pvCallbackCtxt: VoidPtr
NCRYPT_PROV_HANDLE = UIntPtr
NCRYPT_SECRET_HANDLE = UIntPtr
class NCRYPT_SSL_CIPHER_LENGTHS(Structure):
    cbLength: UInt32
    dwHeaderLen: UInt32
    dwFixedTrailerLen: UInt32
    dwMaxVariableTrailerLen: UInt32
    dwFlags: UInt32
class NCRYPT_SSL_CIPHER_SUITE(Structure):
    dwProtocol: UInt32
    dwCipherSuite: UInt32
    dwBaseCipherSuite: UInt32
    szCipherSuite: Char * 64
    szCipher: Char * 64
    dwCipherLen: UInt32
    dwCipherBlockLen: UInt32
    szHash: Char * 64
    dwHashLen: UInt32
    szExchange: Char * 64
    dwMinExchangeLen: UInt32
    dwMaxExchangeLen: UInt32
    szCertificate: Char * 64
    dwKeyType: UInt32
class NCRYPT_SSL_CIPHER_SUITE_EX(Structure):
    dwVersion: UInt32
    dwProtocol: UInt32
    dwCipherSuite: UInt32
    dwBaseCipherSuite: UInt32
    szCipherSuite: Char * 64
    szCipher: Char * 64
    dwCipherLen: UInt32
    dwCipherBlockLen: UInt32
    szHash: Char * 64
    dwHashLen: UInt32
    szExchange: Char * 64
    dwMinExchangeLen: UInt32
    dwMaxExchangeLen: UInt32
    szCertificate: Char * 64
    dwKeyType: UInt32
    szCipherMode: Char * 64
class NCRYPT_SSL_ECC_CURVE(Structure):
    szCurveName: Char * 255
    szOID: win32more.Windows.Win32.Foundation.CHAR * 255
    dwPublicKeyLength: UInt32
    dwCurveType: UInt32
    dwFlags: UInt32
class NCRYPT_SSL_FUNCTION_TABLE(Structure):
    Version: win32more.Windows.Win32.Security.Cryptography.BCRYPT_INTERFACE_VERSION
    ComputeClientAuthHash: win32more.Windows.Win32.Security.Cryptography.SslComputeClientAuthHashFn
    ComputeEapKeyBlock: win32more.Windows.Win32.Security.Cryptography.SslComputeEapKeyBlockFn
    ComputeFinishedHash: win32more.Windows.Win32.Security.Cryptography.SslComputeFinishedHashFn
    CreateEphemeralKey: win32more.Windows.Win32.Security.Cryptography.SslCreateEphemeralKeyFn
    CreateHandshakeHash: win32more.Windows.Win32.Security.Cryptography.SslCreateHandshakeHashFn
    DecryptPacket: win32more.Windows.Win32.Security.Cryptography.SslDecryptPacketFn
    EncryptPacket: win32more.Windows.Win32.Security.Cryptography.SslEncryptPacketFn
    EnumCipherSuites: win32more.Windows.Win32.Security.Cryptography.SslEnumCipherSuitesFn
    ExportKey: win32more.Windows.Win32.Security.Cryptography.SslExportKeyFn
    FreeBuffer: win32more.Windows.Win32.Security.Cryptography.SslFreeBufferFn
    FreeObject: win32more.Windows.Win32.Security.Cryptography.SslFreeObjectFn
    GenerateMasterKey: win32more.Windows.Win32.Security.Cryptography.SslGenerateMasterKeyFn
    GenerateSessionKeys: win32more.Windows.Win32.Security.Cryptography.SslGenerateSessionKeysFn
    GetKeyProperty: win32more.Windows.Win32.Security.Cryptography.SslGetKeyPropertyFn
    GetProviderProperty: win32more.Windows.Win32.Security.Cryptography.SslGetProviderPropertyFn
    HashHandshake: win32more.Windows.Win32.Security.Cryptography.SslHashHandshakeFn
    ImportMasterKey: win32more.Windows.Win32.Security.Cryptography.SslImportMasterKeyFn
    ImportKey: win32more.Windows.Win32.Security.Cryptography.SslImportKeyFn
    LookupCipherSuiteInfo: win32more.Windows.Win32.Security.Cryptography.SslLookupCipherSuiteInfoFn
    OpenPrivateKey: win32more.Windows.Win32.Security.Cryptography.SslOpenPrivateKeyFn
    OpenProvider: win32more.Windows.Win32.Security.Cryptography.SslOpenProviderFn
    SignHash: win32more.Windows.Win32.Security.Cryptography.SslSignHashFn
    VerifySignature: win32more.Windows.Win32.Security.Cryptography.SslVerifySignatureFn
    LookupCipherLengths: win32more.Windows.Win32.Security.Cryptography.SslLookupCipherLengthsFn
    CreateClientAuthHash: win32more.Windows.Win32.Security.Cryptography.SslCreateClientAuthHashFn
    GetCipherSuitePRFHashAlgorithm: win32more.Windows.Win32.Security.Cryptography.SslGetCipherSuitePRFHashAlgorithmFn
    ComputeSessionHash: win32more.Windows.Win32.Security.Cryptography.SslComputeSessionHashFn
    GeneratePreMasterKey: win32more.Windows.Win32.Security.Cryptography.SslGeneratePreMasterKeyFn
    EnumEccCurves: win32more.Windows.Win32.Security.Cryptography.SslEnumEccCurvesFn
    ExportKeyingMaterial: win32more.Windows.Win32.Security.Cryptography.SslExportKeyingMaterialFn
    ExtractEarlyKey: win32more.Windows.Win32.Security.Cryptography.SslExtractEarlyKeyFn
    ExtractHandshakeKey: win32more.Windows.Win32.Security.Cryptography.SslExtractHandshakeKeyFn
    ExtractMasterKey: win32more.Windows.Win32.Security.Cryptography.SslExtractMasterKeyFn
    ExpandTrafficKeys: win32more.Windows.Win32.Security.Cryptography.SslExpandTrafficKeysFn
    ExpandWriteKey: win32more.Windows.Win32.Security.Cryptography.SslExpandWriteKeyFn
    ExpandExporterMasterKey: win32more.Windows.Win32.Security.Cryptography.SslExpandExporterMasterKeyFn
    EnumCipherSuitesEx: win32more.Windows.Win32.Security.Cryptography.SslEnumCipherSuitesExFn
    ExpandResumptionMasterKey: win32more.Windows.Win32.Security.Cryptography.SslExpandResumptionMasterKeyFn
    DuplicateTranscriptHash: win32more.Windows.Win32.Security.Cryptography.SslDuplicateTranscriptHashFn
    ExpandBinderKey: win32more.Windows.Win32.Security.Cryptography.SslExpandBinderKeyFn
    ExpandPreSharedKey: win32more.Windows.Win32.Security.Cryptography.SslExpandPreSharedKeyFn
class NCRYPT_SUPPORTED_LENGTHS(Structure):
    dwMinLength: UInt32
    dwMaxLength: UInt32
    dwIncrement: UInt32
    dwDefaultLength: UInt32
class NCRYPT_TPM_LOADABLE_KEY_BLOB_HEADER(Structure):
    magic: UInt32
    cbHeader: UInt32
    cbPublic: UInt32
    cbPrivate: UInt32
    cbName: UInt32
class NCRYPT_TPM_PERSISTENT_KEY_BLOB_HEADER(Structure):
    magic: UInt32
    cbHeader: UInt32
    tpmHandle: UInt32
class NCRYPT_TPM_PLATFORM_ATTESTATION_STATEMENT(Structure):
    Magic: UInt32
    Version: UInt32
    pcrAlg: UInt32
    cbSignature: UInt32
    cbQuote: UInt32
    cbPcrs: UInt32
class NCRYPT_UI_POLICY(Structure):
    dwVersion: UInt32
    dwFlags: UInt32
    pszCreationTitle: win32more.Windows.Win32.Foundation.PWSTR
    pszFriendlyName: win32more.Windows.Win32.Foundation.PWSTR
    pszDescription: win32more.Windows.Win32.Foundation.PWSTR
class NCRYPT_UI_POLICY_BLOB(Structure):
    dwVersion: UInt32
    dwFlags: UInt32
    cbCreationTitle: UInt32
    cbFriendlyName: UInt32
    cbDescription: UInt32
class NCRYPT_VBS_IDENTITY_ATTESTATION_HEADER(Structure):
    Magic: UInt32
    Version: UInt32
    cbAttributes: UInt32
    cbNonce: UInt32
    cbHashAlg: UInt32
    cbPadding: UInt32
    cbSignatureAlg: UInt32
    cbSignature: UInt32
class NCRYPT_VBS_IDENTITY_ATTESTATION_PADDING(Structure):
    Version: UInt32
    ulPaddingScheme: UInt32
    cbHashAlg: UInt32
    ulSalt: UInt32
class NCRYPT_VBS_IDENTITY_KEY_ATTESTATION_CLAIM_DETAILS(Structure):
    ulKeyFlags: UInt32
    pszSignatureHashAlg: win32more.Windows.Win32.Foundation.PWSTR
    ulPaddingScheme: UInt32
    pszPaddingHashAlg: win32more.Windows.Win32.Foundation.PWSTR
    ulPaddingSalt: UInt32
class NCRYPT_VBS_KEY_ATTESTATION_STATEMENT(Structure):
    Magic: UInt32
    Version: UInt32
    ClaimType: UInt32
class NCRYPT_VBS_ROOT_ATTESTATION_HEADER(Structure):
    Magic: UInt32
    Version: UInt32
    cbAttributes: UInt32
    cbNonce: UInt32
    cbReport: UInt32
    cbSignature: UInt32
class NCRYPT_VBS_ROOT_KEY_ATTESTATION_CLAIM_DETAILS(Structure):
    ulKeyFlags: UInt32
    ullTrustletId: UInt64
    ulTrustletSecurityVersion: UInt32
    ulTrustletDebuggable: UInt32
class NCryptAlgorithmName(Structure):
    pszName: win32more.Windows.Win32.Foundation.PWSTR
    dwClass: win32more.Windows.Win32.Security.Cryptography.NCRYPT_ALGORITHM_NAME_CLASS
    dwAlgOperations: win32more.Windows.Win32.Security.Cryptography.NCRYPT_OPERATION
    dwFlags: UInt32
@winfunctype_pointer
def NCryptCreateClaimFn(hProv: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hSubjectKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, hAuthorityKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, dwClaimType: UInt32, pParameterList: POINTER(win32more.Windows.Win32.Security.Cryptography.BCryptBufferDesc), pbClaimBlob: POINTER(Byte), cbClaimBlob: UInt32, pcbResult: POINTER(UInt32), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def NCryptCreatePersistedKeyFn(hProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, phKey: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE), pszAlgId: win32more.Windows.Win32.Foundation.PWSTR, pszKeyName: win32more.Windows.Win32.Foundation.PWSTR, dwLegacyKeySpec: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def NCryptDecryptFn(hProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, pbInput: POINTER(Byte), cbInput: UInt32, pPaddingInfo: VoidPtr, pbOutput: POINTER(Byte), cbOutput: UInt32, pcbResult: POINTER(UInt32), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def NCryptDeleteKeyFn(hProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def NCryptDeriveKeyFn(hProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hSharedSecret: win32more.Windows.Win32.Security.Cryptography.NCRYPT_SECRET_HANDLE, pwszKDF: win32more.Windows.Win32.Foundation.PWSTR, pParameterList: POINTER(win32more.Windows.Win32.Security.Cryptography.BCryptBufferDesc), pbDerivedKey: POINTER(Byte), cbDerivedKey: UInt32, pcbResult: POINTER(UInt32), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def NCryptEncryptFn(hProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, pbInput: POINTER(Byte), cbInput: UInt32, pPaddingInfo: VoidPtr, pbOutput: POINTER(Byte), cbOutput: UInt32, pcbResult: POINTER(UInt32), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def NCryptEnumAlgorithmsFn(hProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, dwAlgClass: UInt32, pdwAlgCount: POINTER(UInt32), ppAlgList: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.NCryptAlgorithmName)), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def NCryptEnumKeysFn(hProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, pszScope: win32more.Windows.Win32.Foundation.PWSTR, ppKeyName: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.NCryptKeyName)), ppEnumState: POINTER(VoidPtr), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def NCryptEnumStorageProvidersFn(pdwProviderCount: POINTER(UInt32), ppProviderList: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.NCryptProviderName)), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def NCryptExportKeyFn(hProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, hExportKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, pszBlobType: win32more.Windows.Win32.Foundation.PWSTR, pParameterList: POINTER(win32more.Windows.Win32.Security.Cryptography.BCryptBufferDesc), pbOutput: POINTER(Byte), cbOutput: UInt32, pcbResult: POINTER(UInt32), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def NCryptFinalizeKeyFn(hProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def NCryptFreeBufferFn(pvInput: VoidPtr) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def NCryptFreeKeyFn(hProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def NCryptFreeProviderFn(hProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def NCryptFreeSecretFn(hProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hSharedSecret: win32more.Windows.Win32.Security.Cryptography.NCRYPT_SECRET_HANDLE) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def NCryptGetKeyPropertyFn(hProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, pszProperty: win32more.Windows.Win32.Foundation.PWSTR, pbOutput: POINTER(Byte), cbOutput: UInt32, pcbResult: POINTER(UInt32), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def NCryptGetProviderPropertyFn(hProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, pszProperty: win32more.Windows.Win32.Foundation.PWSTR, pbOutput: POINTER(Byte), cbOutput: UInt32, pcbResult: POINTER(UInt32), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def NCryptImportKeyFn(hProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hImportKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, pszBlobType: win32more.Windows.Win32.Foundation.PWSTR, pParameterList: POINTER(win32more.Windows.Win32.Security.Cryptography.BCryptBufferDesc), phKey: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE), pbData: POINTER(Byte), cbData: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def NCryptIsAlgSupportedFn(hProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, pszAlgId: win32more.Windows.Win32.Foundation.PWSTR, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def NCryptKeyDerivationFn(hProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, pParameterList: POINTER(win32more.Windows.Win32.Security.Cryptography.BCryptBufferDesc), pbDerivedKey: POINTER(Byte), cbDerivedKey: UInt32, pcbResult: POINTER(UInt32), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
class NCryptKeyName(Structure):
    pszName: win32more.Windows.Win32.Foundation.PWSTR
    pszAlgid: win32more.Windows.Win32.Foundation.PWSTR
    dwLegacyKeySpec: win32more.Windows.Win32.Security.Cryptography.CERT_KEY_SPEC
    dwFlags: UInt32
@winfunctype_pointer
def NCryptNotifyChangeKeyFn(hProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, phEvent: POINTER(win32more.Windows.Win32.Foundation.HANDLE), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def NCryptOpenKeyFn(hProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, phKey: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE), pszKeyName: win32more.Windows.Win32.Foundation.PWSTR, dwLegacyKeySpec: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def NCryptOpenStorageProviderFn(phProvider: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE), pszProviderName: win32more.Windows.Win32.Foundation.PWSTR, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def NCryptPromptUserFn(hProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, pszOperation: win32more.Windows.Win32.Foundation.PWSTR, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
class NCryptProviderName(Structure):
    pszName: win32more.Windows.Win32.Foundation.PWSTR
    pszComment: win32more.Windows.Win32.Foundation.PWSTR
@winfunctype_pointer
def NCryptSecretAgreementFn(hProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hPrivKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, hPubKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, phAgreedSecret: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_SECRET_HANDLE), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def NCryptSetKeyPropertyFn(hProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, pszProperty: win32more.Windows.Win32.Foundation.PWSTR, pbInput: POINTER(Byte), cbInput: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def NCryptSetProviderPropertyFn(hProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, pszProperty: win32more.Windows.Win32.Foundation.PWSTR, pbInput: POINTER(Byte), cbInput: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def NCryptSignHashFn(hProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, pPaddingInfo: VoidPtr, pbHashValue: POINTER(Byte), cbHashValue: UInt32, pbSignature: POINTER(Byte), cbSignature: UInt32, pcbResult: POINTER(UInt32), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def NCryptVerifyClaimFn(hProv: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hSubjectKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, hAuthorityKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, dwClaimType: UInt32, pParameterList: POINTER(win32more.Windows.Win32.Security.Cryptography.BCryptBufferDesc), pbClaimBlob: POINTER(Byte), cbClaimBlob: UInt32, pOutput: POINTER(win32more.Windows.Win32.Security.Cryptography.BCryptBufferDesc), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def NCryptVerifySignatureFn(hProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, pPaddingInfo: VoidPtr, pbHashValue: POINTER(Byte), cbHashValue: UInt32, pbSignature: POINTER(Byte), cbSignature: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
class OCSP_BASIC_RESPONSE_ENTRY(Structure):
    CertId: win32more.Windows.Win32.Security.Cryptography.OCSP_CERT_ID
    dwCertStatus: UInt32
    Anonymous: _Anonymous_e__Union
    ThisUpdate: win32more.Windows.Win32.Foundation.FILETIME
    NextUpdate: win32more.Windows.Win32.Foundation.FILETIME
    cExtension: UInt32
    rgExtension: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_EXTENSION)
    _anonymous_ = ('Anonymous',)
    class _Anonymous_e__Union(Union):
        pRevokedInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.OCSP_BASIC_REVOKED_INFO)
class OCSP_BASIC_RESPONSE_INFO(Structure):
    dwVersion: UInt32
    dwResponderIdChoice: UInt32
    Anonymous: _Anonymous_e__Union
    ProducedAt: win32more.Windows.Win32.Foundation.FILETIME
    cResponseEntry: UInt32
    rgResponseEntry: POINTER(win32more.Windows.Win32.Security.Cryptography.OCSP_BASIC_RESPONSE_ENTRY)
    cExtension: UInt32
    rgExtension: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_EXTENSION)
    _anonymous_ = ('Anonymous',)
    class _Anonymous_e__Union(Union):
        ByNameResponderId: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
        ByKeyResponderId: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
class OCSP_BASIC_REVOKED_INFO(Structure):
    RevocationDate: win32more.Windows.Win32.Foundation.FILETIME
    dwCrlReasonCode: win32more.Windows.Win32.Security.Cryptography.CERT_REVOCATION_STATUS_REASON
class OCSP_BASIC_SIGNED_RESPONSE_INFO(Structure):
    ToBeSigned: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    SignatureInfo: win32more.Windows.Win32.Security.Cryptography.OCSP_SIGNATURE_INFO
class OCSP_CERT_ID(Structure):
    HashAlgorithm: win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    IssuerNameHash: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    IssuerKeyHash: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    SerialNumber: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
class OCSP_REQUEST_ENTRY(Structure):
    CertId: win32more.Windows.Win32.Security.Cryptography.OCSP_CERT_ID
    cExtension: UInt32
    rgExtension: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_EXTENSION)
class OCSP_REQUEST_INFO(Structure):
    dwVersion: UInt32
    pRequestorName: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_ALT_NAME_ENTRY)
    cRequestEntry: UInt32
    rgRequestEntry: POINTER(win32more.Windows.Win32.Security.Cryptography.OCSP_REQUEST_ENTRY)
    cExtension: UInt32
    rgExtension: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_EXTENSION)
class OCSP_RESPONSE_INFO(Structure):
    dwStatus: UInt32
    pszObjId: win32more.Windows.Win32.Foundation.PSTR
    Value: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
class OCSP_SIGNATURE_INFO(Structure):
    SignatureAlgorithm: win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    Signature: win32more.Windows.Win32.Security.Cryptography.CRYPT_BIT_BLOB
    cCertEncoded: UInt32
    rgCertEncoded: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB)
class OCSP_SIGNED_REQUEST_INFO(Structure):
    ToBeSigned: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB
    pOptionalSignatureInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.OCSP_SIGNATURE_INFO)
class OFFLOAD_PRIVATE_KEY(Structure):
    dwVersion: UInt32
    cbPrime1: UInt32
    cbPrime2: UInt32
    pbPrime1: POINTER(Byte)
    pbPrime2: POINTER(Byte)
@winfunctype_pointer
def PCRYPT_DECRYPT_PRIVATE_KEY_FUNC(Algorithm: win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER, EncryptedPrivateKey: win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB, pbClearTextKey: POINTER(Byte), pcbClearTextKey: POINTER(UInt32), pVoidDecryptFunc: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PCRYPT_ENCRYPT_PRIVATE_KEY_FUNC(pAlgorithm: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER), pClearTextPrivateKey: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB), pbEncryptedKey: POINTER(Byte), pcbEncryptedKey: POINTER(UInt32), pVoidEncryptFunc: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PCRYPT_RESOLVE_HCRYPTPROV_FUNC(pPrivateKeyInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_PRIVATE_KEY_INFO), phCryptProv: POINTER(UIntPtr), pVoidResolveFunc: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFNCryptStreamOutputCallback(pvCallbackCtxt: VoidPtr, pbData: POINTER(Byte), cbData: UIntPtr, fFinal: win32more.Windows.Win32.Foundation.BOOL) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def PFNCryptStreamOutputCallbackEx(pvCallbackCtxt: VoidPtr, pbData: POINTER(Byte), cbData: UIntPtr, hDescriptor: win32more.Windows.Win32.Security.NCRYPT_DESCRIPTOR_HANDLE, fFinal: win32more.Windows.Win32.Foundation.BOOL) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def PFN_AUTHENTICODE_DIGEST_SIGN(pSigningCert: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT), pMetadataBlob: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB), digestAlgId: win32more.Windows.Win32.Security.Cryptography.ALG_ID, pbToBeSignedDigest: POINTER(Byte), cbToBeSignedDigest: UInt32, pSignedDigest: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def PFN_AUTHENTICODE_DIGEST_SIGN_EX(pMetadataBlob: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB), digestAlgId: win32more.Windows.Win32.Security.Cryptography.ALG_ID, pbToBeSignedDigest: POINTER(Byte), cbToBeSignedDigest: UInt32, pSignedDigest: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB), ppSignerCert: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT)), hCertChainStore: win32more.Windows.Win32.Security.Cryptography.HCERTSTORE) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def PFN_AUTHENTICODE_DIGEST_SIGN_EX_WITHFILEHANDLE(pMetadataBlob: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB), digestAlgId: win32more.Windows.Win32.Security.Cryptography.ALG_ID, pbToBeSignedDigest: POINTER(Byte), cbToBeSignedDigest: UInt32, hFile: win32more.Windows.Win32.Foundation.HANDLE, pSignedDigest: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB), ppSignerCert: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT)), hCertChainStore: win32more.Windows.Win32.Security.Cryptography.HCERTSTORE) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def PFN_AUTHENTICODE_DIGEST_SIGN_WITHFILEHANDLE(pSigningCert: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT), pMetadataBlob: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB), digestAlgId: win32more.Windows.Win32.Security.Cryptography.ALG_ID, pbToBeSignedDigest: POINTER(Byte), cbToBeSignedDigest: UInt32, hFile: win32more.Windows.Win32.Foundation.HANDLE, pSignedDigest: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def PFN_CANCEL_ASYNC_RETRIEVAL_FUNC(hAsyncRetrieve: win32more.Windows.Win32.Security.Cryptography.HCRYPTASYNC) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CARD_ACQUIRE_CONTEXT(pCardData: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_DATA), dwFlags: UInt32) -> UInt32: ...
@winfunctype_pointer
def PFN_CARD_AUTHENTICATE_CHALLENGE(pCardData: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_DATA), pbResponseData: POINTER(Byte), cbResponseData: UInt32, pcAttemptsRemaining: POINTER(UInt32)) -> UInt32: ...
@winfunctype_pointer
def PFN_CARD_AUTHENTICATE_EX(pCardData: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_DATA), PinId: UInt32, dwFlags: UInt32, pbPinData: POINTER(Byte), cbPinData: UInt32, ppbSessionPin: POINTER(POINTER(Byte)), pcbSessionPin: POINTER(UInt32), pcAttemptsRemaining: POINTER(UInt32)) -> UInt32: ...
@winfunctype_pointer
def PFN_CARD_AUTHENTICATE_PIN(pCardData: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_DATA), pwszUserId: win32more.Windows.Win32.Foundation.PWSTR, pbPin: POINTER(Byte), cbPin: UInt32, pcAttemptsRemaining: POINTER(UInt32)) -> UInt32: ...
@winfunctype_pointer
def PFN_CARD_CHANGE_AUTHENTICATOR(pCardData: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_DATA), pwszUserId: win32more.Windows.Win32.Foundation.PWSTR, pbCurrentAuthenticator: POINTER(Byte), cbCurrentAuthenticator: UInt32, pbNewAuthenticator: POINTER(Byte), cbNewAuthenticator: UInt32, cRetryCount: UInt32, dwFlags: UInt32, pcAttemptsRemaining: POINTER(UInt32)) -> UInt32: ...
@winfunctype_pointer
def PFN_CARD_CHANGE_AUTHENTICATOR_EX(pCardData: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_DATA), dwFlags: UInt32, dwAuthenticatingPinId: UInt32, pbAuthenticatingPinData: POINTER(Byte), cbAuthenticatingPinData: UInt32, dwTargetPinId: UInt32, pbTargetData: POINTER(Byte), cbTargetData: UInt32, cRetryCount: UInt32, pcAttemptsRemaining: POINTER(UInt32)) -> UInt32: ...
@winfunctype_pointer
def PFN_CARD_CONSTRUCT_DH_AGREEMENT(pCardData: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_DATA), pAgreementInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_DH_AGREEMENT_INFO)) -> UInt32: ...
@winfunctype_pointer
def PFN_CARD_CREATE_CONTAINER(pCardData: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_DATA), bContainerIndex: Byte, dwFlags: UInt32, dwKeySpec: UInt32, dwKeySize: UInt32, pbKeyData: POINTER(Byte)) -> UInt32: ...
@winfunctype_pointer
def PFN_CARD_CREATE_CONTAINER_EX(pCardData: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_DATA), bContainerIndex: Byte, dwFlags: UInt32, dwKeySpec: UInt32, dwKeySize: UInt32, pbKeyData: POINTER(Byte), PinId: UInt32) -> UInt32: ...
@winfunctype_pointer
def PFN_CARD_CREATE_DIRECTORY(pCardData: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_DATA), pszDirectoryName: win32more.Windows.Win32.Foundation.PSTR, AccessCondition: win32more.Windows.Win32.Security.Cryptography.CARD_DIRECTORY_ACCESS_CONDITION) -> UInt32: ...
@winfunctype_pointer
def PFN_CARD_CREATE_FILE(pCardData: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_DATA), pszDirectoryName: win32more.Windows.Win32.Foundation.PSTR, pszFileName: win32more.Windows.Win32.Foundation.PSTR, cbInitialCreationSize: UInt32, AccessCondition: win32more.Windows.Win32.Security.Cryptography.CARD_FILE_ACCESS_CONDITION) -> UInt32: ...
@winfunctype_pointer
def PFN_CARD_DEAUTHENTICATE(pCardData: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_DATA), pwszUserId: win32more.Windows.Win32.Foundation.PWSTR, dwFlags: UInt32) -> UInt32: ...
@winfunctype_pointer
def PFN_CARD_DEAUTHENTICATE_EX(pCardData: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_DATA), PinId: UInt32, dwFlags: UInt32) -> UInt32: ...
@winfunctype_pointer
def PFN_CARD_DELETE_CONTAINER(pCardData: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_DATA), bContainerIndex: Byte, dwReserved: UInt32) -> UInt32: ...
@winfunctype_pointer
def PFN_CARD_DELETE_CONTEXT(pCardData: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_DATA)) -> UInt32: ...
@winfunctype_pointer
def PFN_CARD_DELETE_DIRECTORY(pCardData: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_DATA), pszDirectoryName: win32more.Windows.Win32.Foundation.PSTR) -> UInt32: ...
@winfunctype_pointer
def PFN_CARD_DELETE_FILE(pCardData: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_DATA), pszDirectoryName: win32more.Windows.Win32.Foundation.PSTR, pszFileName: win32more.Windows.Win32.Foundation.PSTR, dwFlags: UInt32) -> UInt32: ...
@winfunctype_pointer
def PFN_CARD_DERIVE_KEY(pCardData: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_DATA), pAgreementInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_DERIVE_KEY)) -> UInt32: ...
@winfunctype_pointer
def PFN_CARD_DESTROY_DH_AGREEMENT(pCardData: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_DATA), bSecretAgreementIndex: Byte, dwFlags: UInt32) -> UInt32: ...
@winfunctype_pointer
def PFN_CARD_DESTROY_KEY(pCardData: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_DATA), hKey: UIntPtr) -> UInt32: ...
@winfunctype_pointer
def PFN_CARD_ENUM_FILES(pCardData: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_DATA), pszDirectoryName: win32more.Windows.Win32.Foundation.PSTR, pmszFileNames: POINTER(win32more.Windows.Win32.Foundation.PSTR), pdwcbFileName: POINTER(UInt32), dwFlags: UInt32) -> UInt32: ...
@winfunctype_pointer
def PFN_CARD_GET_ALGORITHM_PROPERTY(pCardData: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_DATA), pwszAlgId: win32more.Windows.Win32.Foundation.PWSTR, pwszProperty: win32more.Windows.Win32.Foundation.PWSTR, pbData: POINTER(Byte), cbData: UInt32, pdwDataLen: POINTER(UInt32), dwFlags: UInt32) -> UInt32: ...
@winfunctype_pointer
def PFN_CARD_GET_CHALLENGE(pCardData: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_DATA), ppbChallengeData: POINTER(POINTER(Byte)), pcbChallengeData: POINTER(UInt32)) -> UInt32: ...
@winfunctype_pointer
def PFN_CARD_GET_CHALLENGE_EX(pCardData: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_DATA), PinId: UInt32, ppbChallengeData: POINTER(POINTER(Byte)), pcbChallengeData: POINTER(UInt32), dwFlags: UInt32) -> UInt32: ...
@winfunctype_pointer
def PFN_CARD_GET_CONTAINER_INFO(pCardData: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_DATA), bContainerIndex: Byte, dwFlags: UInt32, pContainerInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CONTAINER_INFO)) -> UInt32: ...
@winfunctype_pointer
def PFN_CARD_GET_CONTAINER_PROPERTY(pCardData: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_DATA), bContainerIndex: Byte, wszProperty: win32more.Windows.Win32.Foundation.PWSTR, pbData: POINTER(Byte), cbData: UInt32, pdwDataLen: POINTER(UInt32), dwFlags: UInt32) -> UInt32: ...
@winfunctype_pointer
def PFN_CARD_GET_FILE_INFO(pCardData: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_DATA), pszDirectoryName: win32more.Windows.Win32.Foundation.PSTR, pszFileName: win32more.Windows.Win32.Foundation.PSTR, pCardFileInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_FILE_INFO)) -> UInt32: ...
@winfunctype_pointer
def PFN_CARD_GET_KEY_PROPERTY(pCardData: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_DATA), hKey: UIntPtr, pwszProperty: win32more.Windows.Win32.Foundation.PWSTR, pbData: POINTER(Byte), cbData: UInt32, pdwDataLen: POINTER(UInt32), dwFlags: UInt32) -> UInt32: ...
@winfunctype_pointer
def PFN_CARD_GET_PROPERTY(pCardData: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_DATA), wszProperty: win32more.Windows.Win32.Foundation.PWSTR, pbData: POINTER(Byte), cbData: UInt32, pdwDataLen: POINTER(UInt32), dwFlags: UInt32) -> UInt32: ...
@winfunctype_pointer
def PFN_CARD_GET_SHARED_KEY_HANDLE(pCardData: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_DATA), pbInput: POINTER(Byte), cbInput: UInt32, ppbOutput: POINTER(POINTER(Byte)), pcbOutput: POINTER(UInt32), phKey: POINTER(UIntPtr)) -> UInt32: ...
@winfunctype_pointer
def PFN_CARD_IMPORT_SESSION_KEY(pCardData: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_DATA), bContainerIndex: Byte, pPaddingInfo: VoidPtr, pwszBlobType: win32more.Windows.Win32.Foundation.PWSTR, pwszAlgId: win32more.Windows.Win32.Foundation.PWSTR, phKey: POINTER(UIntPtr), pbInput: POINTER(Byte), cbInput: UInt32, dwFlags: UInt32) -> UInt32: ...
@winfunctype_pointer
def PFN_CARD_PROCESS_ENCRYPTED_DATA(pCardData: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_DATA), hKey: UIntPtr, pwszSecureFunction: win32more.Windows.Win32.Foundation.PWSTR, pEncryptedData: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_ENCRYPTED_DATA), cEncryptedData: UInt32, pbOutput: POINTER(Byte), cbOutput: UInt32, pdwOutputLen: POINTER(UInt32), dwFlags: UInt32) -> UInt32: ...
@winfunctype_pointer
def PFN_CARD_QUERY_CAPABILITIES(pCardData: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_DATA), pCardCapabilities: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_CAPABILITIES)) -> UInt32: ...
@winfunctype_pointer
def PFN_CARD_QUERY_FREE_SPACE(pCardData: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_DATA), dwFlags: UInt32, pCardFreeSpaceInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_FREE_SPACE_INFO)) -> UInt32: ...
@winfunctype_pointer
def PFN_CARD_QUERY_KEY_SIZES(pCardData: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_DATA), dwKeySpec: UInt32, dwFlags: UInt32, pKeySizes: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_KEY_SIZES)) -> UInt32: ...
@winfunctype_pointer
def PFN_CARD_READ_FILE(pCardData: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_DATA), pszDirectoryName: win32more.Windows.Win32.Foundation.PSTR, pszFileName: win32more.Windows.Win32.Foundation.PSTR, dwFlags: UInt32, ppbData: POINTER(POINTER(Byte)), pcbData: POINTER(UInt32)) -> UInt32: ...
@winfunctype_pointer
def PFN_CARD_RSA_DECRYPT(pCardData: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_DATA), pInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_RSA_DECRYPT_INFO)) -> UInt32: ...
@winfunctype_pointer
def PFN_CARD_SET_CONTAINER_PROPERTY(pCardData: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_DATA), bContainerIndex: Byte, wszProperty: win32more.Windows.Win32.Foundation.PWSTR, pbData: POINTER(Byte), cbDataLen: UInt32, dwFlags: UInt32) -> UInt32: ...
@winfunctype_pointer
def PFN_CARD_SET_KEY_PROPERTY(pCardData: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_DATA), hKey: UIntPtr, pwszProperty: win32more.Windows.Win32.Foundation.PWSTR, pbInput: POINTER(Byte), cbInput: UInt32, dwFlags: UInt32) -> UInt32: ...
@winfunctype_pointer
def PFN_CARD_SET_PROPERTY(pCardData: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_DATA), wszProperty: win32more.Windows.Win32.Foundation.PWSTR, pbData: POINTER(Byte), cbDataLen: UInt32, dwFlags: UInt32) -> UInt32: ...
@winfunctype_pointer
def PFN_CARD_SIGN_DATA(pCardData: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_DATA), pInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_SIGNING_INFO)) -> UInt32: ...
@winfunctype_pointer
def PFN_CARD_UNBLOCK_PIN(pCardData: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_DATA), pwszUserId: win32more.Windows.Win32.Foundation.PWSTR, pbAuthenticationData: POINTER(Byte), cbAuthenticationData: UInt32, pbNewPinData: POINTER(Byte), cbNewPinData: UInt32, cRetryCount: UInt32, dwFlags: UInt32) -> UInt32: ...
@winfunctype_pointer
def PFN_CARD_WRITE_FILE(pCardData: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_DATA), pszDirectoryName: win32more.Windows.Win32.Foundation.PSTR, pszFileName: win32more.Windows.Win32.Foundation.PSTR, dwFlags: UInt32, pbData: POINTER(Byte), cbData: UInt32) -> UInt32: ...
@winfunctype_pointer
def PFN_CERT_CHAIN_FIND_BY_ISSUER_CALLBACK(pCert: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT), pvFindArg: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_CREATE_CONTEXT_SORT_FUNC(cbTotalEncoded: UInt32, cbRemainEncoded: UInt32, cEntry: UInt32, pvSort: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_DLL_OPEN_STORE_PROV_FUNC(lpszStoreProvider: win32more.Windows.Win32.Foundation.PSTR, dwEncodingType: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, hCryptProv: win32more.Windows.Win32.Security.Cryptography.HCRYPTPROV_LEGACY, dwFlags: win32more.Windows.Win32.Security.Cryptography.CERT_OPEN_STORE_FLAGS, pvPara: VoidPtr, hCertStore: win32more.Windows.Win32.Security.Cryptography.HCERTSTORE, pStoreProvInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_STORE_PROV_INFO)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_ENUM_PHYSICAL_STORE(pvSystemStore: VoidPtr, dwFlags: UInt32, pwszStoreName: win32more.Windows.Win32.Foundation.PWSTR, pStoreInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_PHYSICAL_STORE_INFO), pvReserved: VoidPtr, pvArg: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_ENUM_SYSTEM_STORE(pvSystemStore: VoidPtr, dwFlags: win32more.Windows.Win32.Security.Cryptography.CERT_SYSTEM_STORE_FLAGS, pStoreInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_SYSTEM_STORE_INFO), pvReserved: VoidPtr, pvArg: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_ENUM_SYSTEM_STORE_LOCATION(pwszStoreLocation: win32more.Windows.Win32.Foundation.PWSTR, dwFlags: UInt32, pvReserved: VoidPtr, pvArg: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_IS_WEAK_HASH(dwHashUseType: UInt32, pwszCNGHashAlgid: win32more.Windows.Win32.Foundation.PWSTR, dwChainFlags: UInt32, pSignerChainContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CHAIN_CONTEXT), pTimeStamp: POINTER(win32more.Windows.Win32.Foundation.FILETIME), pwszFileName: win32more.Windows.Win32.Foundation.PWSTR) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_SERVER_OCSP_RESPONSE_UPDATE_CALLBACK(pChainContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CHAIN_CONTEXT), pServerOcspResponseContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_SERVER_OCSP_RESPONSE_CONTEXT), pNewCrlContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CRL_CONTEXT), pPrevCrlContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CRL_CONTEXT), pvArg: VoidPtr, dwWriteOcspFileError: UInt32) -> Void: ...
@winfunctype_pointer
def PFN_CERT_STORE_PROV_CLOSE(hStoreProv: win32more.Windows.Win32.Security.Cryptography.HCERTSTOREPROV, dwFlags: UInt32) -> Void: ...
@winfunctype_pointer
def PFN_CERT_STORE_PROV_CONTROL(hStoreProv: win32more.Windows.Win32.Security.Cryptography.HCERTSTOREPROV, dwFlags: UInt32, dwCtrlType: UInt32, pvCtrlPara: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_STORE_PROV_DELETE_CERT(hStoreProv: win32more.Windows.Win32.Security.Cryptography.HCERTSTOREPROV, pCertContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_STORE_PROV_DELETE_CRL(hStoreProv: win32more.Windows.Win32.Security.Cryptography.HCERTSTOREPROV, pCrlContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CRL_CONTEXT), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_STORE_PROV_DELETE_CTL(hStoreProv: win32more.Windows.Win32.Security.Cryptography.HCERTSTOREPROV, pCtlContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CTL_CONTEXT), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_STORE_PROV_FIND_CERT(hStoreProv: win32more.Windows.Win32.Security.Cryptography.HCERTSTOREPROV, pFindInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_STORE_PROV_FIND_INFO), pPrevCertContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT), dwFlags: UInt32, ppvStoreProvFindInfo: POINTER(VoidPtr), ppProvCertContext: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT))) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_STORE_PROV_FIND_CRL(hStoreProv: win32more.Windows.Win32.Security.Cryptography.HCERTSTOREPROV, pFindInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_STORE_PROV_FIND_INFO), pPrevCrlContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CRL_CONTEXT), dwFlags: UInt32, ppvStoreProvFindInfo: POINTER(VoidPtr), ppProvCrlContext: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CRL_CONTEXT))) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_STORE_PROV_FIND_CTL(hStoreProv: win32more.Windows.Win32.Security.Cryptography.HCERTSTOREPROV, pFindInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_STORE_PROV_FIND_INFO), pPrevCtlContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CTL_CONTEXT), dwFlags: UInt32, ppvStoreProvFindInfo: POINTER(VoidPtr), ppProvCtlContext: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CTL_CONTEXT))) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_STORE_PROV_FREE_FIND_CERT(hStoreProv: win32more.Windows.Win32.Security.Cryptography.HCERTSTOREPROV, pCertContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT), pvStoreProvFindInfo: VoidPtr, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_STORE_PROV_FREE_FIND_CRL(hStoreProv: win32more.Windows.Win32.Security.Cryptography.HCERTSTOREPROV, pCrlContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CRL_CONTEXT), pvStoreProvFindInfo: VoidPtr, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_STORE_PROV_FREE_FIND_CTL(hStoreProv: win32more.Windows.Win32.Security.Cryptography.HCERTSTOREPROV, pCtlContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CTL_CONTEXT), pvStoreProvFindInfo: VoidPtr, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_STORE_PROV_GET_CERT_PROPERTY(hStoreProv: win32more.Windows.Win32.Security.Cryptography.HCERTSTOREPROV, pCertContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT), dwPropId: UInt32, dwFlags: UInt32, pvData: VoidPtr, pcbData: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_STORE_PROV_GET_CRL_PROPERTY(hStoreProv: win32more.Windows.Win32.Security.Cryptography.HCERTSTOREPROV, pCrlContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CRL_CONTEXT), dwPropId: UInt32, dwFlags: UInt32, pvData: VoidPtr, pcbData: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_STORE_PROV_GET_CTL_PROPERTY(hStoreProv: win32more.Windows.Win32.Security.Cryptography.HCERTSTOREPROV, pCtlContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CTL_CONTEXT), dwPropId: UInt32, dwFlags: UInt32, pvData: VoidPtr, pcbData: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_STORE_PROV_READ_CERT(hStoreProv: win32more.Windows.Win32.Security.Cryptography.HCERTSTOREPROV, pStoreCertContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT), dwFlags: UInt32, ppProvCertContext: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT))) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_STORE_PROV_READ_CRL(hStoreProv: win32more.Windows.Win32.Security.Cryptography.HCERTSTOREPROV, pStoreCrlContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CRL_CONTEXT), dwFlags: UInt32, ppProvCrlContext: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CRL_CONTEXT))) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_STORE_PROV_READ_CTL(hStoreProv: win32more.Windows.Win32.Security.Cryptography.HCERTSTOREPROV, pStoreCtlContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CTL_CONTEXT), dwFlags: UInt32, ppProvCtlContext: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CTL_CONTEXT))) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_STORE_PROV_SET_CERT_PROPERTY(hStoreProv: win32more.Windows.Win32.Security.Cryptography.HCERTSTOREPROV, pCertContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT), dwPropId: UInt32, dwFlags: UInt32, pvData: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_STORE_PROV_SET_CRL_PROPERTY(hStoreProv: win32more.Windows.Win32.Security.Cryptography.HCERTSTOREPROV, pCrlContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CRL_CONTEXT), dwPropId: UInt32, dwFlags: UInt32, pvData: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_STORE_PROV_SET_CTL_PROPERTY(hStoreProv: win32more.Windows.Win32.Security.Cryptography.HCERTSTOREPROV, pCtlContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CTL_CONTEXT), dwPropId: UInt32, dwFlags: UInt32, pvData: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_STORE_PROV_WRITE_CERT(hStoreProv: win32more.Windows.Win32.Security.Cryptography.HCERTSTOREPROV, pCertContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_STORE_PROV_WRITE_CRL(hStoreProv: win32more.Windows.Win32.Security.Cryptography.HCERTSTOREPROV, pCrlContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CRL_CONTEXT), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_STORE_PROV_WRITE_CTL(hStoreProv: win32more.Windows.Win32.Security.Cryptography.HCERTSTOREPROV, pCtlContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CTL_CONTEXT), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CMSG_ALLOC(cb: UIntPtr) -> VoidPtr: ...
@winfunctype_pointer
def PFN_CMSG_CNG_IMPORT_CONTENT_ENCRYPT_KEY(pCNGContentDecryptInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CMSG_CNG_CONTENT_DECRYPT_INFO), dwFlags: UInt32, pvReserved: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CMSG_CNG_IMPORT_KEY_AGREE(pCNGContentDecryptInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CMSG_CNG_CONTENT_DECRYPT_INFO), pKeyAgreeDecryptPara: POINTER(win32more.Windows.Win32.Security.Cryptography.CMSG_CTRL_KEY_AGREE_DECRYPT_PARA), dwFlags: UInt32, pvReserved: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CMSG_CNG_IMPORT_KEY_TRANS(pCNGContentDecryptInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CMSG_CNG_CONTENT_DECRYPT_INFO), pKeyTransDecryptPara: POINTER(win32more.Windows.Win32.Security.Cryptography.CMSG_CTRL_KEY_TRANS_DECRYPT_PARA), dwFlags: UInt32, pvReserved: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CMSG_EXPORT_ENCRYPT_KEY(hCryptProv: UIntPtr, hEncryptKey: UIntPtr, pPublicKeyInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_PUBLIC_KEY_INFO), pbData: POINTER(Byte), pcbData: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CMSG_EXPORT_KEY_AGREE(pContentEncryptInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CMSG_CONTENT_ENCRYPT_INFO), pKeyAgreeEncodeInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO), pKeyAgreeEncryptInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CMSG_KEY_AGREE_ENCRYPT_INFO), dwFlags: UInt32, pvReserved: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CMSG_EXPORT_KEY_TRANS(pContentEncryptInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CMSG_CONTENT_ENCRYPT_INFO), pKeyTransEncodeInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO), pKeyTransEncryptInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CMSG_KEY_TRANS_ENCRYPT_INFO), dwFlags: UInt32, pvReserved: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CMSG_EXPORT_MAIL_LIST(pContentEncryptInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CMSG_CONTENT_ENCRYPT_INFO), pMailListEncodeInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO), pMailListEncryptInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CMSG_MAIL_LIST_ENCRYPT_INFO), dwFlags: UInt32, pvReserved: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CMSG_FREE(pv: VoidPtr) -> Void: ...
@winfunctype_pointer
def PFN_CMSG_GEN_CONTENT_ENCRYPT_KEY(pContentEncryptInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CMSG_CONTENT_ENCRYPT_INFO), dwFlags: UInt32, pvReserved: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CMSG_GEN_ENCRYPT_KEY(phCryptProv: POINTER(UIntPtr), paiEncrypt: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER), pvEncryptAuxInfo: VoidPtr, pPublicKeyInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_PUBLIC_KEY_INFO), pfnAlloc: win32more.Windows.Win32.Security.Cryptography.PFN_CMSG_ALLOC, phEncryptKey: POINTER(UIntPtr), ppbEncryptParameters: POINTER(POINTER(Byte)), pcbEncryptParameters: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CMSG_IMPORT_ENCRYPT_KEY(hCryptProv: UIntPtr, dwKeySpec: UInt32, paiEncrypt: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER), paiPubKey: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER), pbEncodedKey: POINTER(Byte), cbEncodedKey: UInt32, phEncryptKey: POINTER(UIntPtr)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CMSG_IMPORT_KEY_AGREE(pContentEncryptionAlgorithm: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER), pKeyAgreeDecryptPara: POINTER(win32more.Windows.Win32.Security.Cryptography.CMSG_CTRL_KEY_AGREE_DECRYPT_PARA), dwFlags: UInt32, pvReserved: VoidPtr, phContentEncryptKey: POINTER(UIntPtr)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CMSG_IMPORT_KEY_TRANS(pContentEncryptionAlgorithm: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER), pKeyTransDecryptPara: POINTER(win32more.Windows.Win32.Security.Cryptography.CMSG_CTRL_KEY_TRANS_DECRYPT_PARA), dwFlags: UInt32, pvReserved: VoidPtr, phContentEncryptKey: POINTER(UIntPtr)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CMSG_IMPORT_MAIL_LIST(pContentEncryptionAlgorithm: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER), pMailListDecryptPara: POINTER(win32more.Windows.Win32.Security.Cryptography.CMSG_CTRL_MAIL_LIST_DECRYPT_PARA), dwFlags: UInt32, pvReserved: VoidPtr, phContentEncryptKey: POINTER(UIntPtr)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CMSG_STREAM_OUTPUT(pvArg: VoidPtr, pbData: POINTER(Byte), cbData: UInt32, fFinal: win32more.Windows.Win32.Foundation.BOOL) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CRYPT_ALLOC(cbSize: UIntPtr) -> VoidPtr: ...
@winfunctype_pointer
def PFN_CRYPT_ASYNC_PARAM_FREE_FUNC(pszParamOid: win32more.Windows.Win32.Foundation.PSTR, pvParam: VoidPtr) -> Void: ...
@winfunctype_pointer
def PFN_CRYPT_ASYNC_RETRIEVAL_COMPLETION_FUNC(pvCompletion: VoidPtr, dwCompletionCode: UInt32, pszUrl: win32more.Windows.Win32.Foundation.PSTR, pszObjectOid: win32more.Windows.Win32.Foundation.PSTR, pvObject: VoidPtr) -> Void: ...
@winfunctype_pointer
def PFN_CRYPT_CANCEL_RETRIEVAL(dwFlags: UInt32, pvArg: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CRYPT_ENUM_KEYID_PROP(pKeyIdentifier: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB), dwFlags: UInt32, pvReserved: VoidPtr, pvArg: VoidPtr, cProp: UInt32, rgdwPropId: POINTER(UInt32), rgpvData: POINTER(VoidPtr), rgcbData: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CRYPT_ENUM_OID_FUNC(dwEncodingType: UInt32, pszFuncName: win32more.Windows.Win32.Foundation.PSTR, pszOID: win32more.Windows.Win32.Foundation.PSTR, cValue: UInt32, rgdwValueType: POINTER(UInt32), rgpwszValueName: POINTER(win32more.Windows.Win32.Foundation.PWSTR), rgpbValueData: POINTER(POINTER(Byte)), rgcbValueData: POINTER(UInt32), pvArg: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CRYPT_ENUM_OID_INFO(pInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_OID_INFO), pvArg: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CRYPT_EXPORT_PUBLIC_KEY_INFO_EX2_FUNC(hNCryptKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, dwCertEncodingType: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pszPublicKeyObjId: win32more.Windows.Win32.Foundation.PSTR, dwFlags: UInt32, pvAuxInfo: VoidPtr, pInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_PUBLIC_KEY_INFO), pcbInfo: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CRYPT_EXPORT_PUBLIC_KEY_INFO_FROM_BCRYPT_HANDLE_FUNC(hBCryptKey: win32more.Windows.Win32.Security.Cryptography.BCRYPT_KEY_HANDLE, dwCertEncodingType: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pszPublicKeyObjId: win32more.Windows.Win32.Foundation.PSTR, dwFlags: UInt32, pvAuxInfo: VoidPtr, pInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_PUBLIC_KEY_INFO), pcbInfo: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CRYPT_EXTRACT_ENCODED_SIGNATURE_PARAMETERS_FUNC(dwCertEncodingType: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pSignatureAlgorithm: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER), ppvDecodedSignPara: POINTER(VoidPtr), ppwszCNGHashAlgid: POINTER(win32more.Windows.Win32.Foundation.PWSTR)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CRYPT_FREE(pv: VoidPtr) -> Void: ...
@winfunctype_pointer
def PFN_CRYPT_GET_SIGNER_CERTIFICATE(pvGetArg: VoidPtr, dwCertEncodingType: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pSignerId: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_INFO), hMsgCertStore: win32more.Windows.Win32.Security.Cryptography.HCERTSTORE) -> POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT): ...
@winfunctype_pointer
def PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FLUSH(pContext: VoidPtr, rgIdentifierOrNameList: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB)), dwIdentifierOrNameListCount: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FREE(pPluginContext: VoidPtr, pbData: POINTER(Byte)) -> Void: ...
@winfunctype_pointer
def PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FREE_IDENTIFIER(pPluginContext: VoidPtr, pIdentifier: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB)) -> Void: ...
@winfunctype_pointer
def PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FREE_PASSWORD(pPluginContext: VoidPtr, pwszPassword: win32more.Windows.Win32.Foundation.PWSTR) -> Void: ...
@winfunctype_pointer
def PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_GET(pPluginContext: VoidPtr, pIdentifier: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB), dwNameType: UInt32, pNameBlob: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB), ppbContent: POINTER(POINTER(Byte)), pcbContent: POINTER(UInt32), ppwszPassword: POINTER(win32more.Windows.Win32.Foundation.PWSTR), ppIdentifier: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB))) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_INITIALIZE(pfnFlush: win32more.Windows.Win32.Security.Cryptography.PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FLUSH, pContext: VoidPtr, pdwExpectedObjectCount: POINTER(UInt32), ppFuncTable: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_OBJECT_LOCATOR_PROVIDER_TABLE)), ppPluginContext: POINTER(VoidPtr)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_RELEASE(dwReason: win32more.Windows.Win32.Security.Cryptography.CRYPT_OBJECT_LOCATOR_RELEASE_REASON, pPluginContext: VoidPtr) -> Void: ...
@winfunctype_pointer
def PFN_CRYPT_SIGN_AND_ENCODE_HASH_FUNC(hKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, dwCertEncodingType: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pSignatureAlgorithm: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER), pvDecodedSignPara: VoidPtr, pwszCNGPubKeyAlgid: win32more.Windows.Win32.Foundation.PWSTR, pwszCNGHashAlgid: win32more.Windows.Win32.Foundation.PWSTR, pbComputedHash: POINTER(Byte), cbComputedHash: UInt32, pbSignature: POINTER(Byte), pcbSignature: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CRYPT_VERIFY_ENCODED_SIGNATURE_FUNC(dwCertEncodingType: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pPubKeyInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_PUBLIC_KEY_INFO), pSignatureAlgorithm: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER), pvDecodedSignPara: VoidPtr, pwszCNGPubKeyAlgid: win32more.Windows.Win32.Foundation.PWSTR, pwszCNGHashAlgid: win32more.Windows.Win32.Foundation.PWSTR, pbComputedHash: POINTER(Byte), cbComputedHash: UInt32, pbSignature: POINTER(Byte), cbSignature: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CRYPT_XML_CREATE_TRANSFORM(pTransform: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_ALGORITHM), pProviderIn: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_DATA_PROVIDER), pProviderOut: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_DATA_PROVIDER)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def PFN_CRYPT_XML_DATA_PROVIDER_CLOSE(pvCallbackState: VoidPtr) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def PFN_CRYPT_XML_DATA_PROVIDER_READ(pvCallbackState: VoidPtr, pbData: POINTER(Byte), cbData: UInt32, pcbRead: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def PFN_CRYPT_XML_ENUM_ALG_INFO(pInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_XML_ALGORITHM_INFO), pvArg: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CRYPT_XML_WRITE_CALLBACK(pvCallbackState: VoidPtr, pbData: POINTER(Byte), cbData: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def PFN_CSP_ALLOC(Size: UIntPtr) -> VoidPtr: ...
@winfunctype_pointer
def PFN_CSP_CACHE_ADD_FILE(pvCacheContext: VoidPtr, wszTag: win32more.Windows.Win32.Foundation.PWSTR, dwFlags: UInt32, pbData: POINTER(Byte), cbData: UInt32) -> UInt32: ...
@winfunctype_pointer
def PFN_CSP_CACHE_DELETE_FILE(pvCacheContext: VoidPtr, wszTag: win32more.Windows.Win32.Foundation.PWSTR, dwFlags: UInt32) -> UInt32: ...
@winfunctype_pointer
def PFN_CSP_CACHE_LOOKUP_FILE(pvCacheContext: VoidPtr, wszTag: win32more.Windows.Win32.Foundation.PWSTR, dwFlags: UInt32, ppbData: POINTER(POINTER(Byte)), pcbData: POINTER(UInt32)) -> UInt32: ...
@winfunctype_pointer
def PFN_CSP_FREE(Address: VoidPtr) -> Void: ...
@winfunctype_pointer
def PFN_CSP_GET_DH_AGREEMENT(pCardData: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_DATA), hSecretAgreement: VoidPtr, pbSecretAgreementIndex: POINTER(Byte), dwFlags: UInt32) -> UInt32: ...
@winfunctype_pointer
def PFN_CSP_PAD_DATA(pSigningInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_SIGNING_INFO), cbMaxWidth: UInt32, pcbPaddedBuffer: POINTER(UInt32), ppbPaddedBuffer: POINTER(POINTER(Byte))) -> UInt32: ...
@winfunctype_pointer
def PFN_CSP_REALLOC(Address: VoidPtr, Size: UIntPtr) -> VoidPtr: ...
@winfunctype_pointer
def PFN_CSP_UNPAD_DATA(pRSADecryptInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_RSA_DECRYPT_INFO), pcbUnpaddedData: POINTER(UInt32), ppbUnpaddedData: POINTER(POINTER(Byte))) -> UInt32: ...
@winfunctype_pointer
def PFN_EXPORT_PRIV_KEY_FUNC(hCryptProv: UIntPtr, dwKeySpec: UInt32, pszPrivateKeyObjId: win32more.Windows.Win32.Foundation.PSTR, dwFlags: UInt32, pvAuxInfo: VoidPtr, pPrivateKeyInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_PRIVATE_KEY_INFO), pcbPrivateKeyInfo: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_FREE_ENCODED_OBJECT_FUNC(pszObjectOid: win32more.Windows.Win32.Foundation.PSTR, pObject: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_BLOB_ARRAY), pvFreeContext: VoidPtr) -> Void: ...
@winfunctype_pointer
def PFN_IMPORT_PRIV_KEY_FUNC(hCryptProv: UIntPtr, pPrivateKeyInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_PRIVATE_KEY_INFO), dwFlags: UInt32, pvAuxInfo: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_IMPORT_PUBLIC_KEY_INFO_EX2_FUNC(dwCertEncodingType: win32more.Windows.Win32.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_PUBLIC_KEY_INFO), dwFlags: UInt32, pvAuxInfo: VoidPtr, phKey: POINTER(win32more.Windows.Win32.Security.Cryptography.BCRYPT_KEY_HANDLE)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_MD_ENCRYPT_DATA(pCardData: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_DATA), hKey: UIntPtr, pwszSecureFunction: win32more.Windows.Win32.Foundation.PWSTR, pbInput: POINTER(Byte), cbInput: UInt32, dwFlags: UInt32, ppEncryptedData: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_ENCRYPTED_DATA)), pcEncryptedData: POINTER(UInt32)) -> UInt32: ...
@winfunctype_pointer
def PFN_MD_IMPORT_SESSION_KEY(pCardData: POINTER(win32more.Windows.Win32.Security.Cryptography.CARD_DATA), pwszBlobType: win32more.Windows.Win32.Foundation.PWSTR, pwszAlgId: win32more.Windows.Win32.Foundation.PWSTR, phKey: POINTER(UIntPtr), pbInput: POINTER(Byte), cbInput: UInt32) -> UInt32: ...
@winfunctype_pointer
def PFN_NCRYPT_ALLOC(cbSize: UIntPtr) -> VoidPtr: ...
@winfunctype_pointer
def PFN_NCRYPT_FREE(pv: VoidPtr) -> Void: ...
@winfunctype_pointer
def PFN_OFFLOAD_MOD_EXPO(pbBase: POINTER(Byte), pbExponent: POINTER(Byte), cbExponent: UInt32, pbModulus: POINTER(Byte), cbModulus: UInt32, pbResult: POINTER(Byte), pvOffloadPrivateKey: VoidPtr, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
class PIN_CACHE_POLICY(Structure):
    dwVersion: UInt32
    PinCachePolicyType: win32more.Windows.Win32.Security.Cryptography.PIN_CACHE_POLICY_TYPE
    dwPinCachePolicyInfo: UInt32
PIN_CACHE_POLICY_TYPE = Int32
PinCacheNormal: win32more.Windows.Win32.Security.Cryptography.PIN_CACHE_POLICY_TYPE = 0
PinCacheTimed: win32more.Windows.Win32.Security.Cryptography.PIN_CACHE_POLICY_TYPE = 1
PinCacheNone: win32more.Windows.Win32.Security.Cryptography.PIN_CACHE_POLICY_TYPE = 2
PinCacheAlwaysPrompt: win32more.Windows.Win32.Security.Cryptography.PIN_CACHE_POLICY_TYPE = 3
class PIN_INFO(Structure):
    dwVersion: UInt32
    PinType: win32more.Windows.Win32.Security.Cryptography.SECRET_TYPE
    PinPurpose: win32more.Windows.Win32.Security.Cryptography.SECRET_PURPOSE
    dwChangePermission: UInt32
    dwUnblockPermission: UInt32
    PinCachePolicy: win32more.Windows.Win32.Security.Cryptography.PIN_CACHE_POLICY
    dwFlags: UInt32
class PKCS12_PBES2_EXPORT_PARAMS(Structure):
    dwSize: UInt32
    hNcryptDescriptor: VoidPtr
    pwszPbes2Alg: win32more.Windows.Win32.Foundation.PWSTR
class POLICY_ELEMENT(Structure):
    targetEndpointAddress: win32more.Windows.Win32.Foundation.PWSTR
    issuerEndpointAddress: win32more.Windows.Win32.Foundation.PWSTR
    issuedTokenParameters: win32more.Windows.Win32.Foundation.PWSTR
    privacyNoticeLink: win32more.Windows.Win32.Foundation.PWSTR
    privacyNoticeVersion: UInt32
    useManagedPresentation: win32more.Windows.Win32.Foundation.BOOL
class PRIVKEYVER3(Structure):
    magic: UInt32
    bitlenP: UInt32
    bitlenQ: UInt32
    bitlenJ: UInt32
    bitlenX: UInt32
    DSSSeed: win32more.Windows.Win32.Security.Cryptography.DSSSEED
class PROV_ENUMALGS(Structure):
    aiAlgid: win32more.Windows.Win32.Security.Cryptography.ALG_ID
    dwBitLen: UInt32
    dwNameLen: UInt32
    szName: win32more.Windows.Win32.Foundation.CHAR * 20
class PROV_ENUMALGS_EX(Structure):
    aiAlgid: win32more.Windows.Win32.Security.Cryptography.ALG_ID
    dwDefaultLen: UInt32
    dwMinLen: UInt32
    dwMaxLen: UInt32
    dwProtocols: UInt32
    dwNameLen: UInt32
    szName: win32more.Windows.Win32.Foundation.CHAR * 20
    dwLongNameLen: UInt32
    szLongName: win32more.Windows.Win32.Foundation.CHAR * 40
class PUBKEY(Structure):
    magic: UInt32
    bitlen: UInt32
class PUBKEYVER3(Structure):
    magic: UInt32
    bitlenP: UInt32
    bitlenQ: UInt32
    bitlenJ: UInt32
    DSSSeed: win32more.Windows.Win32.Security.Cryptography.DSSSEED
class PUBLICKEYSTRUC(Structure):
    bType: Byte
    bVersion: Byte
    reserved: UInt16
    aiKeyAlg: win32more.Windows.Win32.Security.Cryptography.ALG_ID
class PaddingMode(Enum, Int32):
    None_ = 1
    PKCS7 = 2
    Zeros = 3
    ANSIX923 = 4
    ISO10126 = 5
class RECIPIENTPOLICY(Structure):
    recipient: win32more.Windows.Win32.Security.Cryptography.ENDPOINTADDRESS
    issuer: win32more.Windows.Win32.Security.Cryptography.ENDPOINTADDRESS
    tokenType: win32more.Windows.Win32.Foundation.PWSTR
    requiredClaims: win32more.Windows.Win32.Security.Cryptography.CLAIMLIST
    optionalClaims: win32more.Windows.Win32.Security.Cryptography.CLAIMLIST
    privacyUrl: win32more.Windows.Win32.Foundation.PWSTR
    privacyVersion: UInt32
class RECIPIENTPOLICY2(Structure):
    recipient: win32more.Windows.Win32.Security.Cryptography.ENDPOINTADDRESS2
    issuer: win32more.Windows.Win32.Security.Cryptography.ENDPOINTADDRESS2
    tokenType: win32more.Windows.Win32.Foundation.PWSTR
    requiredClaims: win32more.Windows.Win32.Security.Cryptography.CLAIMLIST
    optionalClaims: win32more.Windows.Win32.Security.Cryptography.CLAIMLIST
    privacyUrl: win32more.Windows.Win32.Foundation.PWSTR
    privacyVersion: UInt32
class ROOT_INFO_LUID(Structure):
    LowPart: UInt32
    HighPart: Int32
class RSAPUBKEY(Structure):
    magic: UInt32
    bitlen: UInt32
    pubexp: UInt32
class SCHANNEL_ALG(Structure):
    dwUse: UInt32
    Algid: win32more.Windows.Win32.Security.Cryptography.ALG_ID
    cBits: UInt32
    dwFlags: UInt32
    dwReserved: UInt32
SECRET_PURPOSE = Int32
AuthenticationPin: win32more.Windows.Win32.Security.Cryptography.SECRET_PURPOSE = 0
DigitalSignaturePin: win32more.Windows.Win32.Security.Cryptography.SECRET_PURPOSE = 1
EncryptionPin: win32more.Windows.Win32.Security.Cryptography.SECRET_PURPOSE = 2
NonRepudiationPin: win32more.Windows.Win32.Security.Cryptography.SECRET_PURPOSE = 3
AdministratorPin: win32more.Windows.Win32.Security.Cryptography.SECRET_PURPOSE = 4
PrimaryCardPin: win32more.Windows.Win32.Security.Cryptography.SECRET_PURPOSE = 5
UnblockOnlyPin: win32more.Windows.Win32.Security.Cryptography.SECRET_PURPOSE = 6
SECRET_TYPE = Int32
AlphaNumericPinType: win32more.Windows.Win32.Security.Cryptography.SECRET_TYPE = 0
ExternalPinType: win32more.Windows.Win32.Security.Cryptography.SECRET_TYPE = 1
ChallengeResponsePinType: win32more.Windows.Win32.Security.Cryptography.SECRET_TYPE = 2
EmptyPinType: win32more.Windows.Win32.Security.Cryptography.SECRET_TYPE = 3
class SIGNER_ATTR_AUTHCODE(Structure):
    cbSize: UInt32
    fCommercial: win32more.Windows.Win32.Foundation.BOOL
    fIndividual: win32more.Windows.Win32.Foundation.BOOL
    pwszName: win32more.Windows.Win32.Foundation.PWSTR
    pwszInfo: win32more.Windows.Win32.Foundation.PWSTR
class SIGNER_BLOB_INFO(Structure):
    cbSize: UInt32
    pGuidSubject: POINTER(Guid)
    cbBlob: UInt32
    pbBlob: POINTER(Byte)
    pwszDisplayName: win32more.Windows.Win32.Foundation.PWSTR
class SIGNER_CERT(Structure):
    cbSize: UInt32
    dwCertChoice: win32more.Windows.Win32.Security.Cryptography.SIGNER_CERT_CHOICE
    Anonymous: _Anonymous_e__Union
    hwnd: win32more.Windows.Win32.Foundation.HWND
    _anonymous_ = ('Anonymous',)
    class _Anonymous_e__Union(Union):
        pwszSpcFile: win32more.Windows.Win32.Foundation.PWSTR
        pCertStoreInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.SIGNER_CERT_STORE_INFO)
        pSpcChainInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.SIGNER_SPC_CHAIN_INFO)
SIGNER_CERT_CHOICE = UInt32
SIGNER_CERT_SPC_FILE: win32more.Windows.Win32.Security.Cryptography.SIGNER_CERT_CHOICE = 1
SIGNER_CERT_STORE: win32more.Windows.Win32.Security.Cryptography.SIGNER_CERT_CHOICE = 2
SIGNER_CERT_SPC_CHAIN: win32more.Windows.Win32.Security.Cryptography.SIGNER_CERT_CHOICE = 3
SIGNER_CERT_POLICY = UInt32
SIGNER_CERT_POLICY_STORE: win32more.Windows.Win32.Security.Cryptography.SIGNER_CERT_POLICY = 1
SIGNER_CERT_POLICY_CHAIN: win32more.Windows.Win32.Security.Cryptography.SIGNER_CERT_POLICY = 2
SIGNER_CERT_POLICY_SPC: win32more.Windows.Win32.Security.Cryptography.SIGNER_CERT_POLICY = 4
SIGNER_CERT_POLICY_CHAIN_NO_ROOT: win32more.Windows.Win32.Security.Cryptography.SIGNER_CERT_POLICY = 8
class SIGNER_CERT_STORE_INFO(Structure):
    cbSize: UInt32
    pSigningCert: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT)
    dwCertPolicy: win32more.Windows.Win32.Security.Cryptography.SIGNER_CERT_POLICY
    hCertStore: win32more.Windows.Win32.Security.Cryptography.HCERTSTORE
class SIGNER_CONTEXT(Structure):
    cbSize: UInt32
    cbBlob: UInt32
    pbBlob: POINTER(Byte)
class SIGNER_DIGEST_SIGN_INFO(Structure):
    cbSize: UInt32
    dwDigestSignChoice: UInt32
    Anonymous: _Anonymous_e__Union
    pMetadataBlob: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB)
    dwReserved: UInt32
    dwReserved2: UInt32
    dwReserved3: UInt32
    _anonymous_ = ('Anonymous',)
    class _Anonymous_e__Union(Union):
        pfnAuthenticodeDigestSign: win32more.Windows.Win32.Security.Cryptography.PFN_AUTHENTICODE_DIGEST_SIGN
        pfnAuthenticodeDigestSignWithFileHandle: win32more.Windows.Win32.Security.Cryptography.PFN_AUTHENTICODE_DIGEST_SIGN_WITHFILEHANDLE
        pfnAuthenticodeDigestSignEx: win32more.Windows.Win32.Security.Cryptography.PFN_AUTHENTICODE_DIGEST_SIGN_EX
        pfnAuthenticodeDigestSignExWithFileHandle: win32more.Windows.Win32.Security.Cryptography.PFN_AUTHENTICODE_DIGEST_SIGN_EX_WITHFILEHANDLE
class SIGNER_DIGEST_SIGN_INFO_V1(Structure):
    cbSize: UInt32
    pfnAuthenticodeDigestSign: win32more.Windows.Win32.Security.Cryptography.PFN_AUTHENTICODE_DIGEST_SIGN
    pMetadataBlob: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB)
class SIGNER_DIGEST_SIGN_INFO_V2(Structure):
    cbSize: UInt32
    pfnAuthenticodeDigestSign: win32more.Windows.Win32.Security.Cryptography.PFN_AUTHENTICODE_DIGEST_SIGN
    pfnAuthenticodeDigestSignEx: win32more.Windows.Win32.Security.Cryptography.PFN_AUTHENTICODE_DIGEST_SIGN_EX
    pMetadataBlob: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB)
class SIGNER_FILE_INFO(Structure):
    cbSize: UInt32
    pwszFileName: win32more.Windows.Win32.Foundation.PWSTR
    hFile: win32more.Windows.Win32.Foundation.HANDLE
SIGNER_PRIVATE_KEY_CHOICE = UInt32
PVK_TYPE_FILE_NAME: win32more.Windows.Win32.Security.Cryptography.SIGNER_PRIVATE_KEY_CHOICE = 1
PVK_TYPE_KEYCONTAINER: win32more.Windows.Win32.Security.Cryptography.SIGNER_PRIVATE_KEY_CHOICE = 2
class SIGNER_PROVIDER_INFO(Structure):
    cbSize: UInt32
    pwszProviderName: win32more.Windows.Win32.Foundation.PWSTR
    dwProviderType: UInt32
    dwKeySpec: UInt32
    dwPvkChoice: win32more.Windows.Win32.Security.Cryptography.SIGNER_PRIVATE_KEY_CHOICE
    Anonymous: _Anonymous_e__Union
    _anonymous_ = ('Anonymous',)
    class _Anonymous_e__Union(Union):
        pwszPvkFileName: win32more.Windows.Win32.Foundation.PWSTR
        pwszKeyContainer: win32more.Windows.Win32.Foundation.PWSTR
SIGNER_SIGNATURE_ATTRIBUTE_CHOICE = UInt32
SIGNER_NO_ATTR: win32more.Windows.Win32.Security.Cryptography.SIGNER_SIGNATURE_ATTRIBUTE_CHOICE = 0
SIGNER_AUTHCODE_ATTR: win32more.Windows.Win32.Security.Cryptography.SIGNER_SIGNATURE_ATTRIBUTE_CHOICE = 1
class SIGNER_SIGNATURE_INFO(Structure):
    cbSize: UInt32
    algidHash: win32more.Windows.Win32.Security.Cryptography.ALG_ID
    dwAttrChoice: win32more.Windows.Win32.Security.Cryptography.SIGNER_SIGNATURE_ATTRIBUTE_CHOICE
    Anonymous: _Anonymous_e__Union
    psAuthenticated: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_ATTRIBUTES)
    psUnauthenticated: POINTER(win32more.Windows.Win32.Security.Cryptography.CRYPT_ATTRIBUTES)
    _anonymous_ = ('Anonymous',)
    class _Anonymous_e__Union(Union):
        pAttrAuthcode: POINTER(win32more.Windows.Win32.Security.Cryptography.SIGNER_ATTR_AUTHCODE)
SIGNER_SIGN_FLAGS = UInt32
SIG_APPEND: win32more.Windows.Win32.Security.Cryptography.SIGNER_SIGN_FLAGS = 4096
SPC_INC_PE_RESOURCES_FLAG: win32more.Windows.Win32.Security.Cryptography.SIGNER_SIGN_FLAGS = 128
SPC_INC_PE_DEBUG_INFO_FLAG: win32more.Windows.Win32.Security.Cryptography.SIGNER_SIGN_FLAGS = 64
SPC_INC_PE_IMPORT_ADDR_TABLE_FLAG: win32more.Windows.Win32.Security.Cryptography.SIGNER_SIGN_FLAGS = 32
SPC_EXC_PE_PAGE_HASHES_FLAG: win32more.Windows.Win32.Security.Cryptography.SIGNER_SIGN_FLAGS = 16
SPC_INC_PE_PAGE_HASHES_FLAG: win32more.Windows.Win32.Security.Cryptography.SIGNER_SIGN_FLAGS = 256
SPC_DIGEST_GENERATE_FLAG: win32more.Windows.Win32.Security.Cryptography.SIGNER_SIGN_FLAGS = 512
SPC_DIGEST_SIGN_FLAG: win32more.Windows.Win32.Security.Cryptography.SIGNER_SIGN_FLAGS = 1024
SPC_DIGEST_SIGN_EX_FLAG: win32more.Windows.Win32.Security.Cryptography.SIGNER_SIGN_FLAGS = 16384
class SIGNER_SPC_CHAIN_INFO(Structure):
    cbSize: UInt32
    pwszSpcFile: win32more.Windows.Win32.Foundation.PWSTR
    dwCertPolicy: UInt32
    hCertStore: win32more.Windows.Win32.Security.Cryptography.HCERTSTORE
SIGNER_SUBJECT_CHOICE = UInt32
SIGNER_SUBJECT_FILE: win32more.Windows.Win32.Security.Cryptography.SIGNER_SUBJECT_CHOICE = 1
SIGNER_SUBJECT_BLOB: win32more.Windows.Win32.Security.Cryptography.SIGNER_SUBJECT_CHOICE = 2
class SIGNER_SUBJECT_INFO(Structure):
    cbSize: UInt32
    pdwIndex: POINTER(UInt32)
    dwSubjectChoice: win32more.Windows.Win32.Security.Cryptography.SIGNER_SUBJECT_CHOICE
    Anonymous: _Anonymous_e__Union
    _anonymous_ = ('Anonymous',)
    class _Anonymous_e__Union(Union):
        pSignerFileInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.SIGNER_FILE_INFO)
        pSignerBlobInfo: POINTER(win32more.Windows.Win32.Security.Cryptography.SIGNER_BLOB_INFO)
SIGNER_TIMESTAMP_FLAGS = UInt32
SIGNER_TIMESTAMP_AUTHENTICODE: win32more.Windows.Win32.Security.Cryptography.SIGNER_TIMESTAMP_FLAGS = 1
SIGNER_TIMESTAMP_RFC3161: win32more.Windows.Win32.Security.Cryptography.SIGNER_TIMESTAMP_FLAGS = 2
class SSL_ECCKEY_BLOB(Structure):
    dwCurveType: UInt32
    cbKey: UInt32
class SSL_F12_EXTRA_CERT_CHAIN_POLICY_STATUS(Structure):
    cbSize: UInt32
    dwErrorLevel: UInt32
    dwErrorCategory: UInt32
    dwReserved: UInt32
    wszErrorText: Char * 256
class SSL_HPKP_HEADER_EXTRA_CERT_CHAIN_POLICY_PARA(Structure):
    cbSize: UInt32
    dwReserved: UInt32
    pwszServerName: win32more.Windows.Win32.Foundation.PWSTR
    rgpszHpkpValue: win32more.Windows.Win32.Foundation.PSTR * 2
class SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_PARA(Structure):
    cbSize: UInt32
    dwReserved: UInt32
    pwszServerName: win32more.Windows.Win32.Foundation.PWSTR
class SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_STATUS(Structure):
    cbSize: UInt32
    lError: Int32
    wszErrorText: Char * 512
@winfunctype_pointer
def SslComputeClientAuthHashFn(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hMasterKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, hHandshakeHash: win32more.Windows.Win32.Security.Cryptography.NCRYPT_HASH_HANDLE, pszAlgId: win32more.Windows.Win32.Foundation.PWSTR, pbOutput: POINTER(Byte), cbOutput: UInt32, pcbResult: POINTER(UInt32), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def SslComputeEapKeyBlockFn(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hMasterKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, pbRandoms: POINTER(Byte), cbRandoms: UInt32, pbOutput: POINTER(Byte), cbOutput: UInt32, pcbResult: POINTER(UInt32), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def SslComputeFinishedHashFn(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hMasterKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, hHandshakeHash: win32more.Windows.Win32.Security.Cryptography.NCRYPT_HASH_HANDLE, pbOutput: POINTER(Byte), cbOutput: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def SslComputeSessionHashFn(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hHandshakeHash: win32more.Windows.Win32.Security.Cryptography.NCRYPT_HASH_HANDLE, dwProtocol: UInt32, pbOutput: POINTER(Byte), cbOutput: UInt32, pcbResult: POINTER(UInt32), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def SslCreateClientAuthHashFn(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, phHandshakeHash: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_HASH_HANDLE), dwProtocol: UInt32, dwCipherSuite: UInt32, pszHashAlgId: win32more.Windows.Win32.Foundation.PWSTR, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def SslCreateEphemeralKeyFn(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, phEphemeralKey: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE), dwProtocol: UInt32, dwCipherSuite: UInt32, dwKeyType: UInt32, dwKeyBitLen: UInt32, pbParams: POINTER(Byte), cbParams: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def SslCreateHandshakeHashFn(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, phHandshakeHash: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_HASH_HANDLE), dwProtocol: UInt32, dwCipherSuite: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def SslDecryptPacketFn(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, pbInput: POINTER(Byte), cbInput: UInt32, pbOutput: POINTER(Byte), cbOutput: UInt32, pcbResult: POINTER(UInt32), SequenceNumber: UInt64, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def SslDuplicateTranscriptHashFn(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hTranscriptHash: win32more.Windows.Win32.Security.Cryptography.NCRYPT_HASH_HANDLE, phDuplicateTranscriptHash: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_HASH_HANDLE), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def SslEncryptPacketFn(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, pbInput: POINTER(Byte), cbInput: UInt32, pbOutput: POINTER(Byte), cbOutput: UInt32, pcbResult: POINTER(UInt32), SequenceNumber: UInt64, dwContentType: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def SslEnumCipherSuitesExFn(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hPrivateKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, ppCipherSuite: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_SSL_CIPHER_SUITE_EX)), ppEnumState: POINTER(VoidPtr), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def SslEnumCipherSuitesFn(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hPrivateKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, ppCipherSuite: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_SSL_CIPHER_SUITE)), ppEnumState: POINTER(VoidPtr), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def SslEnumEccCurvesFn(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, pEccCurveCount: POINTER(UInt32), ppEccCurve: POINTER(POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_SSL_ECC_CURVE)), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def SslExpandBinderKeyFn(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hEarlyKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, phBinderKey: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE), pParameterList: POINTER(win32more.Windows.Win32.Security.Cryptography.BCryptBufferDesc), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def SslExpandExporterMasterKeyFn(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hBaseKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, hHashValue: win32more.Windows.Win32.Security.Cryptography.NCRYPT_HASH_HANDLE, phExporterMasterKey: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE), pParameterList: POINTER(win32more.Windows.Win32.Security.Cryptography.BCryptBufferDesc), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def SslExpandPreSharedKeyFn(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hResumptionMasterKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, pbTicketNonce: POINTER(Byte), cbTicketNonce: UInt32, phPreSharedKey: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE), pParameterList: POINTER(win32more.Windows.Win32.Security.Cryptography.BCryptBufferDesc), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def SslExpandResumptionMasterKeyFn(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hMasterKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, hHashValue: win32more.Windows.Win32.Security.Cryptography.NCRYPT_HASH_HANDLE, phResumptionMasterKey: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE), pParameterList: POINTER(win32more.Windows.Win32.Security.Cryptography.BCryptBufferDesc), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def SslExpandTrafficKeysFn(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hBaseKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, hHashValue: win32more.Windows.Win32.Security.Cryptography.NCRYPT_HASH_HANDLE, phClientTrafficKey: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE), phServerTrafficKey: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE), pParameterList: POINTER(win32more.Windows.Win32.Security.Cryptography.BCryptBufferDesc), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def SslExpandWriteKeyFn(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hBaseTrafficKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, phWriteKey: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE), pParameterList: POINTER(win32more.Windows.Win32.Security.Cryptography.BCryptBufferDesc), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def SslExportKeyFn(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, pszBlobType: win32more.Windows.Win32.Foundation.PWSTR, pbOutput: POINTER(Byte), cbOutput: UInt32, pcbResult: POINTER(UInt32), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def SslExportKeyingMaterialFn(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hMasterKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, sLabel: win32more.Windows.Win32.Foundation.PSTR, pbRandoms: POINTER(Byte), cbRandoms: UInt32, pbContextValue: POINTER(Byte), cbContextValue: UInt16, pbOutput: POINTER(Byte), cbOutput: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def SslExtractEarlyKeyFn(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hPreSharedKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, phEarlyKey: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE), dwProtocol: UInt32, dwCipherSuite: UInt32, pParameterList: POINTER(win32more.Windows.Win32.Security.Cryptography.BCryptBufferDesc), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def SslExtractHandshakeKeyFn(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hPrivateKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, hPublicKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, hEarlyKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, phHandshakeKey: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE), pParameterList: POINTER(win32more.Windows.Win32.Security.Cryptography.BCryptBufferDesc), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def SslExtractMasterKeyFn(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hHandshakeKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, phMasterKey: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE), pParameterList: POINTER(win32more.Windows.Win32.Security.Cryptography.BCryptBufferDesc), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def SslFreeBufferFn(pvInput: VoidPtr) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def SslFreeObjectFn(hObject: win32more.Windows.Win32.Security.Cryptography.NCRYPT_HANDLE, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def SslGenerateMasterKeyFn(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hPrivateKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, hPublicKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, phMasterKey: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE), dwProtocol: UInt32, dwCipherSuite: UInt32, pParameterList: POINTER(win32more.Windows.Win32.Security.Cryptography.BCryptBufferDesc), pbOutput: POINTER(Byte), cbOutput: UInt32, pcbResult: POINTER(UInt32), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def SslGeneratePreMasterKeyFn(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hPublicKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, phPreMasterKey: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE), dwProtocol: UInt32, dwCipherSuite: UInt32, pParameterList: POINTER(win32more.Windows.Win32.Security.Cryptography.BCryptBufferDesc), pbOutput: POINTER(Byte), cbOutput: UInt32, pcbResult: POINTER(UInt32), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def SslGenerateSessionKeysFn(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hMasterKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, phReadKey: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE), phWriteKey: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE), pParameterList: POINTER(win32more.Windows.Win32.Security.Cryptography.BCryptBufferDesc), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def SslGetCipherSuitePRFHashAlgorithmFn(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, dwProtocol: UInt32, dwCipherSuite: UInt32, dwKeyType: UInt32, szPRFHash: win32more.Windows.Win32.Foundation.PWSTR, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def SslGetKeyPropertyFn(hKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, pszProperty: win32more.Windows.Win32.Foundation.PWSTR, ppbOutput: POINTER(POINTER(Byte)), pcbOutput: POINTER(UInt32), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def SslGetProviderPropertyFn(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, pszProperty: win32more.Windows.Win32.Foundation.PWSTR, ppbOutput: POINTER(POINTER(Byte)), pcbOutput: POINTER(UInt32), ppEnumState: POINTER(VoidPtr), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def SslHashHandshakeFn(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hHandshakeHash: win32more.Windows.Win32.Security.Cryptography.NCRYPT_HASH_HANDLE, pbInput: POINTER(Byte), cbInput: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def SslImportKeyFn(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, phKey: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE), pszBlobType: win32more.Windows.Win32.Foundation.PWSTR, pbKeyBlob: POINTER(Byte), cbKeyBlob: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def SslImportMasterKeyFn(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hPrivateKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, phMasterKey: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE), dwProtocol: UInt32, dwCipherSuite: UInt32, pParameterList: POINTER(win32more.Windows.Win32.Security.Cryptography.BCryptBufferDesc), pbEncryptedKey: POINTER(Byte), cbEncryptedKey: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def SslInitializeInterfaceFn(pszProviderName: win32more.Windows.Win32.Foundation.PWSTR, pFunctionTable: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_SSL_FUNCTION_TABLE), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def SslLookupCipherLengthsFn(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, dwProtocol: UInt32, dwCipherSuite: UInt32, dwKeyType: UInt32, pCipherLengths: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_SSL_CIPHER_LENGTHS), cbCipherLengths: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def SslLookupCipherSuiteInfoFn(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, dwProtocol: UInt32, dwCipherSuite: UInt32, dwKeyType: UInt32, pCipherSuite: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_SSL_CIPHER_SUITE), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def SslOpenPrivateKeyFn(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, phPrivateKey: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE), pCertContext: POINTER(win32more.Windows.Win32.Security.Cryptography.CERT_CONTEXT), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def SslOpenProviderFn(phSslProvider: POINTER(win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE), pszProviderName: win32more.Windows.Win32.Foundation.PWSTR, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def SslSignHashFn(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hPrivateKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, pbHashValue: POINTER(Byte), cbHashValue: UInt32, pbSignature: POINTER(Byte), cbSignature: UInt32, pcbResult: POINTER(UInt32), dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def SslVerifySignatureFn(hSslProvider: win32more.Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE, hPublicKey: win32more.Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE, pbHashValue: POINTER(Byte), cbHashValue: UInt32, pbSignature: POINTER(Byte), cbSignature: UInt32, dwFlags: UInt32) -> win32more.Windows.Win32.Foundation.HRESULT: ...
class VTableProvStrucW(Structure):
    Version: UInt32
    FuncVerifyImage: win32more.Windows.Win32.Security.Cryptography.CRYPT_VERIFY_IMAGE_W
    FuncReturnhWnd: win32more.Windows.Win32.Security.Cryptography.CRYPT_RETURN_HWND
    dwProvType: UInt32
    pbContextInfo: POINTER(Byte)
    cbContextInfo: UInt32
    pszProvName: win32more.Windows.Win32.Foundation.PWSTR
VTableProvStruc = UnicodeAlias('VTableProvStrucW')


make_ready(__name__)
