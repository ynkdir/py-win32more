from __future__ import annotations
from win32more.win32.prelude import *
import win32more.Windows.Win32.Data.HtmlHelp
import win32more.Windows.Win32.Devices.DeviceAndDriverInstallation
import win32more.Windows.Win32.Devices.Properties
import win32more.Windows.Win32.Foundation
import win32more.Windows.Win32.Graphics.Gdi
import win32more.Windows.Win32.System.Diagnostics.Debug
import win32more.Windows.Win32.System.Registry
import win32more.Windows.Win32.System.SystemInformation
import win32more.Windows.Win32.UI.Controls
import win32more.Windows.Win32.UI.WindowsAndMessaging
NUM_CM_PROB_V1: UInt32 = 37
NUM_CM_PROB_V2: UInt32 = 50
NUM_CM_PROB_V3: UInt32 = 51
NUM_CM_PROB_V4: UInt32 = 52
NUM_CM_PROB_V5: UInt32 = 53
NUM_CM_PROB_V6: UInt32 = 54
NUM_CM_PROB_V7: UInt32 = 55
NUM_CM_PROB_V8: UInt32 = 57
NUM_CM_PROB_V9: UInt32 = 58
NUM_CM_PROB: UInt32 = 58
LCPRI_FORCECONFIG: UInt32 = 0
LCPRI_BOOTCONFIG: UInt32 = 1
LCPRI_DESIRED: UInt32 = 8192
LCPRI_NORMAL: UInt32 = 12288
LCPRI_LASTBESTCONFIG: UInt32 = 16383
LCPRI_SUBOPTIMAL: UInt32 = 20480
LCPRI_LASTSOFTCONFIG: UInt32 = 32767
LCPRI_RESTART: UInt32 = 32768
LCPRI_REBOOT: UInt32 = 36864
LCPRI_POWEROFF: UInt32 = 40960
LCPRI_HARDRECONFIG: UInt32 = 49152
LCPRI_HARDWIRED: UInt32 = 57344
LCPRI_IMPOSSIBLE: UInt32 = 61440
LCPRI_DISABLED: UInt32 = 65535
MAX_LCPRI: UInt32 = 65535
CM_DEVICE_PANEL_SIDE_UNKNOWN: UInt32 = 0
CM_DEVICE_PANEL_SIDE_TOP: UInt32 = 1
CM_DEVICE_PANEL_SIDE_BOTTOM: UInt32 = 2
CM_DEVICE_PANEL_SIDE_LEFT: UInt32 = 3
CM_DEVICE_PANEL_SIDE_RIGHT: UInt32 = 4
CM_DEVICE_PANEL_SIDE_FRONT: UInt32 = 5
CM_DEVICE_PANEL_SIDE_BACK: UInt32 = 6
CM_DEVICE_PANEL_EDGE_UNKNOWN: UInt32 = 0
CM_DEVICE_PANEL_EDGE_TOP: UInt32 = 1
CM_DEVICE_PANEL_EDGE_BOTTOM: UInt32 = 2
CM_DEVICE_PANEL_EDGE_LEFT: UInt32 = 3
CM_DEVICE_PANEL_EDGE_RIGHT: UInt32 = 4
CM_DEVICE_PANEL_SHAPE_UNKNOWN: UInt32 = 0
CM_DEVICE_PANEL_SHAPE_RECTANGLE: UInt32 = 1
CM_DEVICE_PANEL_SHAPE_OVAL: UInt32 = 2
CM_DEVICE_PANEL_ORIENTATION_HORIZONTAL: UInt32 = 0
CM_DEVICE_PANEL_ORIENTATION_VERTICAL: UInt32 = 1
CM_DEVICE_PANEL_JOINT_TYPE_UNKNOWN: UInt32 = 0
CM_DEVICE_PANEL_JOINT_TYPE_PLANAR: UInt32 = 1
CM_DEVICE_PANEL_JOINT_TYPE_HINGE: UInt32 = 2
CM_DEVICE_PANEL_JOINT_TYPE_PIVOT: UInt32 = 3
CM_DEVICE_PANEL_JOINT_TYPE_SWIVEL: UInt32 = 4
GUID_DEVCLASS_1394: Guid = Guid('{6bdd1fc1-810f-11d0-bec7-08002be2092f}')
GUID_DEVCLASS_1394DEBUG: Guid = Guid('{66f250d6-7801-4a64-b139-eea80a450b24}')
GUID_DEVCLASS_61883: Guid = Guid('{7ebefbc0-3200-11d2-b4c2-00a0c9697d07}')
GUID_DEVCLASS_ADAPTER: Guid = Guid('{4d36e964-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_APMSUPPORT: Guid = Guid('{d45b1c18-c8fa-11d1-9f77-0000f805f530}')
GUID_DEVCLASS_AUDIOPROCESSINGOBJECT: Guid = Guid('{5989fce8-9cd0-467d-8a6a-5419e31529d4}')
GUID_DEVCLASS_AVC: Guid = Guid('{c06ff265-ae09-48f0-812c-16753d7cba83}')
GUID_DEVCLASS_BATTERY: Guid = Guid('{72631e54-78a4-11d0-bcf7-00aa00b7b32a}')
GUID_DEVCLASS_BIOMETRIC: Guid = Guid('{53d29ef7-377c-4d14-864b-eb3a85769359}')
GUID_DEVCLASS_BLUETOOTH: Guid = Guid('{e0cbf06c-cd8b-4647-bb8a-263b43f0f974}')
GUID_DEVCLASS_CAMERA: Guid = Guid('{ca3e7ab9-b4c3-4ae6-8251-579ef933890f}')
GUID_DEVCLASS_CDROM: Guid = Guid('{4d36e965-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_COMPUTEACCELERATOR: Guid = Guid('{f01a9d53-3ff6-48d2-9f97-c8a7004be10c}')
GUID_DEVCLASS_COMPUTER: Guid = Guid('{4d36e966-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_DECODER: Guid = Guid('{6bdd1fc2-810f-11d0-bec7-08002be2092f}')
GUID_DEVCLASS_DISKDRIVE: Guid = Guid('{4d36e967-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_DISPLAY: Guid = Guid('{4d36e968-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_DOT4: Guid = Guid('{48721b56-6795-11d2-b1a8-0080c72e74a2}')
GUID_DEVCLASS_DOT4PRINT: Guid = Guid('{49ce6ac8-6f86-11d2-b1e5-0080c72e74a2}')
GUID_DEVCLASS_EHSTORAGESILO: Guid = Guid('{9da2b80f-f89f-4a49-a5c2-511b085b9e8a}')
GUID_DEVCLASS_ENUM1394: Guid = Guid('{c459df55-db08-11d1-b009-00a0c9081ff6}')
GUID_DEVCLASS_EXTENSION: Guid = Guid('{e2f84ce7-8efa-411c-aa69-97454ca4cb57}')
GUID_DEVCLASS_FDC: Guid = Guid('{4d36e969-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_FIRMWARE: Guid = Guid('{f2e7dd72-6468-4e36-b6f1-6488f42c1b52}')
GUID_DEVCLASS_FLOPPYDISK: Guid = Guid('{4d36e980-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_GENERIC: Guid = Guid('{ff494df1-c4ed-4fac-9b3f-3786f6e91e7e}')
GUID_DEVCLASS_GPS: Guid = Guid('{6bdd1fc3-810f-11d0-bec7-08002be2092f}')
GUID_DEVCLASS_HDC: Guid = Guid('{4d36e96a-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_HIDCLASS: Guid = Guid('{745a17a0-74d3-11d0-b6fe-00a0c90f57da}')
GUID_DEVCLASS_HOLOGRAPHIC: Guid = Guid('{d612553d-06b1-49ca-8938-e39ef80eb16f}')
GUID_DEVCLASS_I3C: Guid = Guid('{13cfe1b1-6b17-424c-ac3f-16ace8733898}')
GUID_DEVCLASS_IMAGE: Guid = Guid('{6bdd1fc6-810f-11d0-bec7-08002be2092f}')
GUID_DEVCLASS_INFINIBAND: Guid = Guid('{30ef7132-d858-4a0c-ac24-b9028a5cca3f}')
GUID_DEVCLASS_INFRARED: Guid = Guid('{6bdd1fc5-810f-11d0-bec7-08002be2092f}')
GUID_DEVCLASS_KEYBOARD: Guid = Guid('{4d36e96b-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_LEGACYDRIVER: Guid = Guid('{8ecc055d-047f-11d1-a537-0000f8753ed1}')
GUID_DEVCLASS_MEDIA: Guid = Guid('{4d36e96c-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_MEDIUM_CHANGER: Guid = Guid('{ce5939ae-ebde-11d0-b181-0000f8753ec4}')
GUID_DEVCLASS_MEMORY: Guid = Guid('{5099944a-f6b9-4057-a056-8c550228544c}')
GUID_DEVCLASS_MODEM: Guid = Guid('{4d36e96d-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_MONITOR: Guid = Guid('{4d36e96e-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_MOUSE: Guid = Guid('{4d36e96f-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_MTD: Guid = Guid('{4d36e970-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_MULTIFUNCTION: Guid = Guid('{4d36e971-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_MULTIPORTSERIAL: Guid = Guid('{50906cb8-ba12-11d1-bf5d-0000f805f530}')
GUID_DEVCLASS_NET: Guid = Guid('{4d36e972-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_NETCLIENT: Guid = Guid('{4d36e973-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_NETDRIVER: Guid = Guid('{87ef9ad1-8f70-49ee-b215-ab1fcadcbe3c}')
GUID_DEVCLASS_NETSERVICE: Guid = Guid('{4d36e974-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_NETTRANS: Guid = Guid('{4d36e975-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_NETUIO: Guid = Guid('{78912bc1-cb8e-4b28-a329-f322ebadbe0f}')
GUID_DEVCLASS_NODRIVER: Guid = Guid('{4d36e976-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_PCMCIA: Guid = Guid('{4d36e977-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_PNPPRINTERS: Guid = Guid('{4658ee7e-f050-11d1-b6bd-00c04fa372a7}')
GUID_DEVCLASS_PORTS: Guid = Guid('{4d36e978-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_PRIMITIVE: Guid = Guid('{242681d1-eed3-41d2-a1ef-1468fc843106}')
GUID_DEVCLASS_PRINTER: Guid = Guid('{4d36e979-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_PRINTERUPGRADE: Guid = Guid('{4d36e97a-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_PRINTQUEUE: Guid = Guid('{1ed2bbf9-11f0-4084-b21f-ad83a8e6dcdc}')
GUID_DEVCLASS_PROCESSOR: Guid = Guid('{50127dc3-0f36-415e-a6cc-4cb3be910b65}')
GUID_DEVCLASS_SBP2: Guid = Guid('{d48179be-ec20-11d1-b6b8-00c04fa372a7}')
GUID_DEVCLASS_SCMDISK: Guid = Guid('{53966cb1-4d46-4166-bf23-c522403cd495}')
GUID_DEVCLASS_SCMVOLUME: Guid = Guid('{53ccb149-e543-4c84-b6e0-bce4f6b7e806}')
GUID_DEVCLASS_SCSIADAPTER: Guid = Guid('{4d36e97b-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_SECURITYACCELERATOR: Guid = Guid('{268c95a1-edfe-11d3-95c3-0010dc4050a5}')
GUID_DEVCLASS_SENSOR: Guid = Guid('{5175d334-c371-4806-b3ba-71fd53c9258d}')
GUID_DEVCLASS_SIDESHOW: Guid = Guid('{997b5d8d-c442-4f2e-baf3-9c8e671e9e21}')
GUID_DEVCLASS_SMARTCARDREADER: Guid = Guid('{50dd5230-ba8a-11d1-bf5d-0000f805f530}')
GUID_DEVCLASS_SMRDISK: Guid = Guid('{53487c23-680f-4585-acc3-1f10d6777e82}')
GUID_DEVCLASS_SMRVOLUME: Guid = Guid('{53b3cf03-8f5a-4788-91b6-d19ed9fcccbf}')
GUID_DEVCLASS_SOFTWARECOMPONENT: Guid = Guid('{5c4c3332-344d-483c-8739-259e934c9cc8}')
GUID_DEVCLASS_SOUND: Guid = Guid('{4d36e97c-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_SYSTEM: Guid = Guid('{4d36e97d-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_TAPEDRIVE: Guid = Guid('{6d807884-7d21-11cf-801c-08002be10318}')
GUID_DEVCLASS_UNKNOWN: Guid = Guid('{4d36e97e-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_UCM: Guid = Guid('{e6f1aa1c-7f3b-4473-b2e8-c97d8ac71d53}')
GUID_DEVCLASS_USB: Guid = Guid('{36fc9e60-c465-11cf-8056-444553540000}')
GUID_DEVCLASS_VOLUME: Guid = Guid('{71a27cdd-812a-11d0-bec7-08002be2092f}')
GUID_DEVCLASS_VOLUMESNAPSHOT: Guid = Guid('{533c5b84-ec70-11d2-9505-00c04f79deaf}')
GUID_DEVCLASS_WCEUSBS: Guid = Guid('{25dbce51-6c8f-4a72-8a6d-b54c2b4fc835}')
GUID_DEVCLASS_WPD: Guid = Guid('{eec5ad98-8080-425f-922a-dabf3de3f69a}')
GUID_DEVCLASS_FSFILTER_TOP: Guid = Guid('{b369baf4-5568-4e82-a87e-a93eb16bca87}')
GUID_DEVCLASS_FSFILTER_ACTIVITYMONITOR: Guid = Guid('{b86dff51-a31e-4bac-b3cf-e8cfe75c9fc2}')
GUID_DEVCLASS_FSFILTER_UNDELETE: Guid = Guid('{fe8f1572-c67a-48c0-bbac-0b5c6d66cafb}')
GUID_DEVCLASS_FSFILTER_ANTIVIRUS: Guid = Guid('{b1d1a169-c54f-4379-81db-bee7d88d7454}')
GUID_DEVCLASS_FSFILTER_REPLICATION: Guid = Guid('{48d3ebc4-4cf8-48ff-b869-9c68ad42eb9f}')
GUID_DEVCLASS_FSFILTER_CONTINUOUSBACKUP: Guid = Guid('{71aa14f8-6fad-4622-ad77-92bb9d7e6947}')
GUID_DEVCLASS_FSFILTER_CONTENTSCREENER: Guid = Guid('{3e3f0674-c83c-4558-bb26-9820e1eba5c5}')
GUID_DEVCLASS_FSFILTER_QUOTAMANAGEMENT: Guid = Guid('{8503c911-a6c7-4919-8f79-5028f5866b0c}')
GUID_DEVCLASS_FSFILTER_SYSTEMRECOVERY: Guid = Guid('{2db15374-706e-4131-a0c7-d7c78eb0289a}')
GUID_DEVCLASS_FSFILTER_CFSMETADATASERVER: Guid = Guid('{cdcf0939-b75b-4630-bf76-80f7ba655884}')
GUID_DEVCLASS_FSFILTER_HSM: Guid = Guid('{d546500a-2aeb-45f6-9482-f4b1799c3177}')
GUID_DEVCLASS_FSFILTER_COMPRESSION: Guid = Guid('{f3586baf-b5aa-49b5-8d6c-0569284c639f}')
GUID_DEVCLASS_FSFILTER_ENCRYPTION: Guid = Guid('{a0a701c0-a511-42ff-aa6c-06dc0395576f}')
GUID_DEVCLASS_FSFILTER_VIRTUALIZATION: Guid = Guid('{f75a86c0-10d8-4c3a-b233-ed60e4cdfaac}')
GUID_DEVCLASS_FSFILTER_PHYSICALQUOTAMANAGEMENT: Guid = Guid('{6a0a8e78-bba6-4fc4-a709-1e33cd09d67e}')
GUID_DEVCLASS_FSFILTER_OPENFILEBACKUP: Guid = Guid('{f8ecafa6-66d1-41a5-899b-66585d7216b7}')
GUID_DEVCLASS_FSFILTER_SECURITYENHANCER: Guid = Guid('{d02bc3da-0c8e-4945-9bd5-f1883c226c8c}')
GUID_DEVCLASS_FSFILTER_COPYPROTECTION: Guid = Guid('{89786ff1-9c12-402f-9c9e-17753c7f4375}')
GUID_DEVCLASS_FSFILTER_BOTTOM: Guid = Guid('{37765ea0-5958-4fc9-b04b-2fdfef97e59e}')
GUID_DEVCLASS_FSFILTER_SYSTEM: Guid = Guid('{5d1b9aaa-01e2-46af-849f-272b3f324c46}')
GUID_DEVCLASS_FSFILTER_INFRASTRUCTURE: Guid = Guid('{e55fa6f9-128c-4d04-abab-630c74b1453a}')
LINE_LEN: UInt32 = 256
MAX_INF_STRING_LENGTH: UInt32 = 4096
MAX_INF_SECTION_NAME_LENGTH: UInt32 = 255
MAX_TITLE_LEN: UInt32 = 60
MAX_INSTRUCTION_LEN: UInt32 = 256
MAX_LABEL_LEN: UInt32 = 30
MAX_SERVICE_NAME_LEN: UInt32 = 256
MAX_SUBTITLE_LEN: UInt32 = 256
SP_MAX_MACHINENAME_LENGTH: UInt32 = 263
SP_ALTPLATFORM_FLAGS_VERSION_RANGE: UInt32 = 1
SP_ALTPLATFORM_FLAGS_SUITE_MASK: UInt32 = 2
DIRID_ABSOLUTE: Int32 = -1
DIRID_ABSOLUTE_16BIT: UInt32 = 65535
DIRID_NULL: UInt32 = 0
DIRID_SRCPATH: UInt32 = 1
DIRID_WINDOWS: UInt32 = 10
DIRID_SYSTEM: UInt32 = 11
DIRID_DRIVERS: UInt32 = 12
DIRID_IOSUBSYS: UInt32 = 12
DIRID_DRIVER_STORE: UInt32 = 13
DIRID_INF: UInt32 = 17
DIRID_HELP: UInt32 = 18
DIRID_FONTS: UInt32 = 20
DIRID_VIEWERS: UInt32 = 21
DIRID_COLOR: UInt32 = 23
DIRID_APPS: UInt32 = 24
DIRID_SHARED: UInt32 = 25
DIRID_BOOT: UInt32 = 30
DIRID_SYSTEM16: UInt32 = 50
DIRID_SPOOL: UInt32 = 51
DIRID_SPOOLDRIVERS: UInt32 = 52
DIRID_USERPROFILE: UInt32 = 53
DIRID_LOADER: UInt32 = 54
DIRID_PRINTPROCESSOR: UInt32 = 55
DIRID_DEFAULT: UInt32 = 11
DIRID_COMMON_STARTMENU: UInt32 = 16406
DIRID_COMMON_PROGRAMS: UInt32 = 16407
DIRID_COMMON_STARTUP: UInt32 = 16408
DIRID_COMMON_DESKTOPDIRECTORY: UInt32 = 16409
DIRID_COMMON_FAVORITES: UInt32 = 16415
DIRID_COMMON_APPDATA: UInt32 = 16419
DIRID_PROGRAM_FILES: UInt32 = 16422
DIRID_SYSTEM_X86: UInt32 = 16425
DIRID_PROGRAM_FILES_X86: UInt32 = 16426
DIRID_PROGRAM_FILES_COMMON: UInt32 = 16427
DIRID_PROGRAM_FILES_COMMONX86: UInt32 = 16428
DIRID_COMMON_TEMPLATES: UInt32 = 16429
DIRID_COMMON_DOCUMENTS: UInt32 = 16430
DIRID_USER: UInt32 = 32768
SPFILENOTIFY_STARTQUEUE: UInt32 = 1
SPFILENOTIFY_ENDQUEUE: UInt32 = 2
SPFILENOTIFY_STARTSUBQUEUE: UInt32 = 3
SPFILENOTIFY_ENDSUBQUEUE: UInt32 = 4
SPFILENOTIFY_STARTDELETE: UInt32 = 5
SPFILENOTIFY_ENDDELETE: UInt32 = 6
SPFILENOTIFY_DELETEERROR: UInt32 = 7
SPFILENOTIFY_STARTRENAME: UInt32 = 8
SPFILENOTIFY_ENDRENAME: UInt32 = 9
SPFILENOTIFY_RENAMEERROR: UInt32 = 10
SPFILENOTIFY_STARTCOPY: UInt32 = 11
SPFILENOTIFY_ENDCOPY: UInt32 = 12
SPFILENOTIFY_COPYERROR: UInt32 = 13
SPFILENOTIFY_NEEDMEDIA: UInt32 = 14
SPFILENOTIFY_QUEUESCAN: UInt32 = 15
SPFILENOTIFY_CABINETINFO: UInt32 = 16
SPFILENOTIFY_FILEINCABINET: UInt32 = 17
SPFILENOTIFY_NEEDNEWCABINET: UInt32 = 18
SPFILENOTIFY_FILEEXTRACTED: UInt32 = 19
SPFILENOTIFY_FILEOPDELAYED: UInt32 = 20
SPFILENOTIFY_STARTBACKUP: UInt32 = 21
SPFILENOTIFY_BACKUPERROR: UInt32 = 22
SPFILENOTIFY_ENDBACKUP: UInt32 = 23
SPFILENOTIFY_QUEUESCAN_EX: UInt32 = 24
SPFILENOTIFY_STARTREGISTRATION: UInt32 = 25
SPFILENOTIFY_ENDREGISTRATION: UInt32 = 32
SPFILENOTIFY_QUEUESCAN_SIGNERINFO: UInt32 = 64
SPFILENOTIFY_LANGMISMATCH: UInt32 = 65536
SPFILENOTIFY_TARGETEXISTS: UInt32 = 131072
SPFILENOTIFY_TARGETNEWER: UInt32 = 262144
FILEOP_RENAME: UInt32 = 1
FILEOP_BACKUP: UInt32 = 3
FILEOP_ABORT: UInt32 = 0
FILEOP_DOIT: UInt32 = 1
FILEOP_SKIP: UInt32 = 2
FILEOP_RETRY: UInt32 = 1
FILEOP_NEWPATH: UInt32 = 4
COPYFLG_WARN_IF_SKIP: UInt32 = 1
COPYFLG_NOSKIP: UInt32 = 2
COPYFLG_NOVERSIONCHECK: UInt32 = 4
COPYFLG_FORCE_FILE_IN_USE: UInt32 = 8
COPYFLG_NO_OVERWRITE: UInt32 = 16
COPYFLG_NO_VERSION_DIALOG: UInt32 = 32
COPYFLG_OVERWRITE_OLDER_ONLY: UInt32 = 64
COPYFLG_PROTECTED_WINDOWS_DRIVER_FILE: UInt32 = 256
COPYFLG_REPLACEONLY: UInt32 = 1024
COPYFLG_NODECOMP: UInt32 = 2048
COPYFLG_REPLACE_BOOT_FILE: UInt32 = 4096
COPYFLG_NOPRUNE: UInt32 = 8192
COPYFLG_IN_USE_TRY_RENAME: UInt32 = 16384
DELFLG_IN_USE: UInt32 = 1
DELFLG_IN_USE1: UInt32 = 65536
SPREG_SUCCESS: UInt32 = 0
SPREG_LOADLIBRARY: UInt32 = 1
SPREG_GETPROCADDR: UInt32 = 2
SPREG_REGSVR: UInt32 = 3
SPREG_DLLINSTALL: UInt32 = 4
SPREG_TIMEOUT: UInt32 = 5
SPREG_UNKNOWN: UInt32 = 4294967295
SPINT_ACTIVE: UInt32 = 1
SPINT_DEFAULT: UInt32 = 2
SPINT_REMOVED: UInt32 = 4
SPID_ACTIVE: UInt32 = 1
SPID_DEFAULT: UInt32 = 2
SPID_REMOVED: UInt32 = 4
ENABLECLASS_QUERY: UInt32 = 0
ENABLECLASS_SUCCESS: UInt32 = 1
ENABLECLASS_FAILURE: UInt32 = 2
MAX_INSTALLWIZARD_DYNAPAGES: UInt32 = 20
NDW_INSTALLFLAG_DIDFACTDEFS: UInt32 = 1
NDW_INSTALLFLAG_HARDWAREALLREADYIN: UInt32 = 2
NDW_INSTALLFLAG_NEEDSHUTDOWN: UInt32 = 512
NDW_INSTALLFLAG_EXPRESSINTRO: UInt32 = 1024
NDW_INSTALLFLAG_SKIPISDEVINSTALLED: UInt32 = 2048
NDW_INSTALLFLAG_NODETECTEDDEVS: UInt32 = 4096
NDW_INSTALLFLAG_INSTALLSPECIFIC: UInt32 = 8192
NDW_INSTALLFLAG_SKIPCLASSLIST: UInt32 = 16384
NDW_INSTALLFLAG_CI_PICKED_OEM: UInt32 = 32768
NDW_INSTALLFLAG_PCMCIAMODE: UInt32 = 65536
NDW_INSTALLFLAG_PCMCIADEVICE: UInt32 = 131072
NDW_INSTALLFLAG_USERCANCEL: UInt32 = 262144
NDW_INSTALLFLAG_KNOWNCLASS: UInt32 = 524288
DYNAWIZ_FLAG_PAGESADDED: UInt32 = 1
DYNAWIZ_FLAG_ANALYZE_HANDLECONFLICT: UInt32 = 8
DYNAWIZ_FLAG_INSTALLDET_NEXT: UInt32 = 2
DYNAWIZ_FLAG_INSTALLDET_PREV: UInt32 = 4
MIN_IDD_DYNAWIZ_RESOURCE_ID: UInt32 = 10000
MAX_IDD_DYNAWIZ_RESOURCE_ID: UInt32 = 11000
IDD_DYNAWIZ_FIRSTPAGE: UInt32 = 10000
IDD_DYNAWIZ_SELECT_PREVPAGE: UInt32 = 10001
IDD_DYNAWIZ_SELECT_NEXTPAGE: UInt32 = 10002
IDD_DYNAWIZ_ANALYZE_PREVPAGE: UInt32 = 10003
IDD_DYNAWIZ_ANALYZE_NEXTPAGE: UInt32 = 10004
IDD_DYNAWIZ_SELECTDEV_PAGE: UInt32 = 10009
IDD_DYNAWIZ_ANALYZEDEV_PAGE: UInt32 = 10010
IDD_DYNAWIZ_INSTALLDETECTEDDEVS_PAGE: UInt32 = 10011
IDD_DYNAWIZ_SELECTCLASS_PAGE: UInt32 = 10012
IDD_DYNAWIZ_INSTALLDETECTED_PREVPAGE: UInt32 = 10006
IDD_DYNAWIZ_INSTALLDETECTED_NEXTPAGE: UInt32 = 10007
IDD_DYNAWIZ_INSTALLDETECTED_NODEVS: UInt32 = 10008
DRIVER_HARDWAREID_RANK: UInt32 = 4095
DRIVER_HARDWAREID_MASK: UInt32 = 2147487743
DRIVER_UNTRUSTED_RANK: UInt32 = 2147483648
DRIVER_W9X_SUSPECT_RANK: UInt32 = 3221225472
DRIVER_COMPATID_RANK: UInt32 = 16383
DRIVER_UNTRUSTED_HARDWAREID_RANK: UInt32 = 36863
DRIVER_UNTRUSTED_COMPATID_RANK: UInt32 = 49151
DRIVER_W9X_SUSPECT_HARDWAREID_RANK: UInt32 = 53247
DRIVER_W9X_SUSPECT_COMPATID_RANK: UInt32 = 65535
SPPSR_SELECT_DEVICE_RESOURCES: UInt32 = 1
SPPSR_ENUM_BASIC_DEVICE_PROPERTIES: UInt32 = 2
SPPSR_ENUM_ADV_DEVICE_PROPERTIES: UInt32 = 3
INFINFO_INF_SPEC_IS_HINF: UInt32 = 1
INFINFO_INF_NAME_IS_ABSOLUTE: UInt32 = 2
INFINFO_DEFAULT_SEARCH: UInt32 = 3
INFINFO_REVERSE_DEFAULT_SEARCH: UInt32 = 4
INFINFO_INF_PATH_LIST_SEARCH: UInt32 = 5
SRCLIST_TEMPORARY: UInt32 = 1
SRCLIST_NOBROWSE: UInt32 = 2
SRCLIST_SYSTEM: UInt32 = 16
SRCLIST_USER: UInt32 = 32
SRCLIST_SYSIFADMIN: UInt32 = 64
SRCLIST_SUBDIRS: UInt32 = 256
SRCLIST_APPEND: UInt32 = 512
SRCLIST_NOSTRIPPLATFORM: UInt32 = 1024
IDF_NOBROWSE: UInt32 = 1
IDF_NOSKIP: UInt32 = 2
IDF_NODETAILS: UInt32 = 4
IDF_NOCOMPRESSED: UInt32 = 8
IDF_CHECKFIRST: UInt32 = 256
IDF_NOBEEP: UInt32 = 512
IDF_NOFOREGROUND: UInt32 = 1024
IDF_WARNIFSKIP: UInt32 = 2048
IDF_NOREMOVABLEMEDIAPROMPT: UInt32 = 4096
IDF_USEDISKNAMEASPROMPT: UInt32 = 8192
IDF_OEMDISK: UInt32 = 2147483648
DPROMPT_SUCCESS: UInt32 = 0
DPROMPT_CANCEL: UInt32 = 1
DPROMPT_SKIPFILE: UInt32 = 2
DPROMPT_BUFFERTOOSMALL: UInt32 = 3
DPROMPT_OUTOFMEMORY: UInt32 = 4
SETDIRID_NOT_FULL_PATH: UInt32 = 1
SRCINFO_PATH: UInt32 = 1
SRCINFO_TAGFILE: UInt32 = 2
SRCINFO_DESCRIPTION: UInt32 = 3
SRCINFO_FLAGS: UInt32 = 4
SRCINFO_TAGFILE2: UInt32 = 5
SRC_FLAGS_CABFILE: UInt32 = 16
SP_FLAG_CABINETCONTINUATION: UInt32 = 2048
SP_BACKUP_BACKUPPASS: UInt32 = 1
SP_BACKUP_DEMANDPASS: UInt32 = 2
SP_BACKUP_SPECIAL: UInt32 = 4
SP_BACKUP_BOOTFILE: UInt32 = 8
SPQ_DELAYED_COPY: UInt32 = 1
SPQ_FLAG_BACKUP_AWARE: UInt32 = 1
SPQ_FLAG_ABORT_IF_UNSIGNED: UInt32 = 2
SPQ_FLAG_FILES_MODIFIED: UInt32 = 4
SPQ_FLAG_DO_SHUFFLEMOVE: UInt32 = 8
SPQ_FLAG_VALID: UInt32 = 15
SPOST_MAX: UInt32 = 3
SUOI_FORCEDELETE: UInt32 = 1
SUOI_INTERNAL1: UInt32 = 2
SPDSL_IGNORE_DISK: UInt32 = 1
SPDSL_DISALLOW_NEGATIVE_ADJUST: UInt32 = 2
SPFILEQ_FILE_IN_USE: UInt32 = 1
SPFILEQ_REBOOT_RECOMMENDED: UInt32 = 2
SPFILEQ_REBOOT_IN_PROGRESS: UInt32 = 4
FLG_ADDREG_DELREG_BIT: UInt32 = 32768
FLG_ADDREG_BINVALUETYPE: UInt32 = 1
FLG_ADDREG_NOCLOBBER: UInt32 = 2
FLG_ADDREG_DELVAL: UInt32 = 4
FLG_ADDREG_APPEND: UInt32 = 8
FLG_ADDREG_KEYONLY: UInt32 = 16
FLG_ADDREG_OVERWRITEONLY: UInt32 = 32
FLG_ADDREG_64BITKEY: UInt32 = 4096
FLG_ADDREG_KEYONLY_COMMON: UInt32 = 8192
FLG_ADDREG_32BITKEY: UInt32 = 16384
FLG_ADDREG_TYPE_SZ: UInt32 = 0
FLG_ADDREG_TYPE_MULTI_SZ: UInt32 = 65536
FLG_ADDREG_TYPE_EXPAND_SZ: UInt32 = 131072
FLG_DELREG_VALUE: UInt32 = 0
FLG_DELREG_TYPE_SZ: UInt32 = 0
FLG_DELREG_TYPE_MULTI_SZ: UInt32 = 65536
FLG_DELREG_TYPE_EXPAND_SZ: UInt32 = 131072
FLG_DELREG_64BITKEY: UInt32 = 4096
FLG_DELREG_KEYONLY_COMMON: UInt32 = 8192
FLG_DELREG_32BITKEY: UInt32 = 16384
FLG_DELREG_OPERATION_MASK: UInt32 = 254
FLG_BITREG_CLEARBITS: UInt32 = 0
FLG_BITREG_SETBITS: UInt32 = 1
FLG_BITREG_64BITKEY: UInt32 = 4096
FLG_BITREG_32BITKEY: UInt32 = 16384
FLG_INI2REG_64BITKEY: UInt32 = 4096
FLG_INI2REG_32BITKEY: UInt32 = 16384
FLG_REGSVR_DLLREGISTER: UInt32 = 1
FLG_REGSVR_DLLINSTALL: UInt32 = 2
FLG_PROFITEM_CURRENTUSER: UInt32 = 1
FLG_PROFITEM_DELETE: UInt32 = 2
FLG_PROFITEM_GROUP: UInt32 = 4
FLG_PROFITEM_CSIDL: UInt32 = 8
FLG_ADDPROPERTY_NOCLOBBER: UInt32 = 1
FLG_ADDPROPERTY_OVERWRITEONLY: UInt32 = 2
FLG_ADDPROPERTY_APPEND: UInt32 = 4
FLG_ADDPROPERTY_OR: UInt32 = 8
FLG_ADDPROPERTY_AND: UInt32 = 16
FLG_DELPROPERTY_MULTI_SZ_DELSTRING: UInt32 = 1
SPINST_LOGCONFIG: UInt32 = 1
SPINST_INIFILES: UInt32 = 2
SPINST_REGISTRY: UInt32 = 4
SPINST_INI2REG: UInt32 = 8
SPINST_FILES: UInt32 = 16
SPINST_BITREG: UInt32 = 32
SPINST_REGSVR: UInt32 = 64
SPINST_UNREGSVR: UInt32 = 128
SPINST_PROFILEITEMS: UInt32 = 256
SPINST_COPYINF: UInt32 = 512
SPINST_PROPERTIES: UInt32 = 1024
SPINST_ALL: UInt32 = 2047
SPINST_SINGLESECTION: UInt32 = 65536
SPINST_LOGCONFIG_IS_FORCED: UInt32 = 131072
SPINST_LOGCONFIGS_ARE_OVERRIDES: UInt32 = 262144
SPINST_REGISTERCALLBACKAWARE: UInt32 = 524288
SPINST_DEVICEINSTALL: UInt32 = 1048576
SPFILELOG_SYSTEMLOG: UInt32 = 1
SPFILELOG_FORCENEW: UInt32 = 2
SPFILELOG_QUERYONLY: UInt32 = 4
SPFILELOG_OEMFILE: UInt32 = 1
LogSevInformation: UInt32 = 0
LogSevWarning: UInt32 = 1
LogSevError: UInt32 = 2
LogSevFatalError: UInt32 = 3
LogSevMaximum: UInt32 = 4
DIOD_INHERIT_CLASSDRVS: UInt32 = 2
DIOD_CANCEL_REMOVE: UInt32 = 4
DIODI_NO_ADD: UInt32 = 1
SPRDI_FIND_DUPS: UInt32 = 1
SPDIT_NODRIVER: UInt32 = 0
DIBCI_NOINSTALLCLASS: UInt32 = 1
DIBCI_NODISPLAYCLASS: UInt32 = 2
DIOCR_INSTALLER: UInt32 = 1
DIOCR_INTERFACE: UInt32 = 2
DIREG_DEV: UInt32 = 1
DIREG_DRV: UInt32 = 2
DIREG_BOTH: UInt32 = 4
DICLASSPROP_INSTALLER: UInt32 = 1
DICLASSPROP_INTERFACE: UInt32 = 2
SPCRP_UPPERFILTERS: UInt32 = 17
SPCRP_LOWERFILTERS: UInt32 = 18
SPCRP_SECURITY: UInt32 = 23
SPCRP_SECURITY_SDS: UInt32 = 24
SPCRP_DEVTYPE: UInt32 = 25
SPCRP_EXCLUSIVE: UInt32 = 26
SPCRP_CHARACTERISTICS: UInt32 = 27
SPCRP_MAXIMUM_PROPERTY: UInt32 = 28
DMI_MASK: UInt32 = 1
DMI_BKCOLOR: UInt32 = 2
DMI_USERECT: UInt32 = 4
DIGCDP_FLAG_BASIC: UInt32 = 1
DIGCDP_FLAG_ADVANCED: UInt32 = 2
DIGCDP_FLAG_REMOTE_BASIC: UInt32 = 3
DIGCDP_FLAG_REMOTE_ADVANCED: UInt32 = 4
IDI_RESOURCEFIRST: UInt32 = 159
IDI_RESOURCE: UInt32 = 159
IDI_RESOURCELAST: UInt32 = 161
IDI_RESOURCEOVERLAYFIRST: UInt32 = 161
IDI_RESOURCEOVERLAYLAST: UInt32 = 161
IDI_CONFLICT: UInt32 = 161
IDI_CLASSICON_OVERLAYFIRST: UInt32 = 500
IDI_CLASSICON_OVERLAYLAST: UInt32 = 502
IDI_PROBLEM_OVL: UInt32 = 500
IDI_DISABLED_OVL: UInt32 = 501
IDI_FORCED_OVL: UInt32 = 502
SPWPT_SELECTDEVICE: UInt32 = 1
SPWP_USE_DEVINFO_DATA: UInt32 = 1
SIGNERSCORE_UNKNOWN: UInt32 = 4278190080
SIGNERSCORE_W9X_SUSPECT: UInt32 = 3221225472
SIGNERSCORE_UNSIGNED: UInt32 = 2147483648
SIGNERSCORE_AUTHENTICODE: UInt32 = 251658240
SIGNERSCORE_WHQL: UInt32 = 218103813
SIGNERSCORE_UNCLASSIFIED: UInt32 = 218103812
SIGNERSCORE_INBOX: UInt32 = 218103811
SIGNERSCORE_LOGO_STANDARD: UInt32 = 218103810
SIGNERSCORE_LOGO_PREMIUM: UInt32 = 218103809
SIGNERSCORE_MASK: UInt32 = 4278190080
SIGNERSCORE_SIGNED_MASK: UInt32 = 4026531840
DICUSTOMDEVPROP_MERGE_MULTISZ: UInt32 = 1
SCWMI_CLOBBER_SECURITY: UInt32 = 1
MAX_DEVICE_ID_LEN: UInt32 = 200
MAX_DEVNODE_ID_LEN: UInt32 = 200
MAX_GUID_STRING_LEN: UInt32 = 39
MAX_CLASS_NAME_LEN: UInt32 = 32
MAX_PROFILE_LEN: UInt32 = 80
MAX_CONFIG_VALUE: UInt32 = 9999
MAX_INSTANCE_VALUE: UInt32 = 9999
MAX_MEM_REGISTERS: UInt32 = 9
MAX_IO_PORTS: UInt32 = 20
MAX_IRQS: UInt32 = 7
MAX_DMA_CHANNELS: UInt32 = 7
DWORD_MAX: UInt32 = 4294967295
CONFIGMG_VERSION: UInt32 = 1024
IO_ALIAS_10_BIT_DECODE: UInt32 = 4
IO_ALIAS_12_BIT_DECODE: UInt32 = 16
IO_ALIAS_16_BIT_DECODE: UInt32 = 0
IO_ALIAS_POSITIVE_DECODE: UInt32 = 255
IOA_Local: UInt32 = 255
CM_RESDES_WIDTH_DEFAULT: UInt32 = 0
CM_RESDES_WIDTH_32: UInt32 = 1
CM_RESDES_WIDTH_64: UInt32 = 2
CM_RESDES_WIDTH_BITS: UInt32 = 3
PCD_MAX_MEMORY: UInt32 = 2
PCD_MAX_IO: UInt32 = 2
mPMF_AUDIO_ENABLE: UInt32 = 8
CM_HWPI_NOT_DOCKABLE: UInt32 = 0
CM_HWPI_UNDOCKED: UInt32 = 1
CM_HWPI_DOCKED: UInt32 = 2
CM_ADD_RANGE_ADDIFCONFLICT: UInt32 = 0
CM_ADD_RANGE_DONOTADDIFCONFLICT: UInt32 = 1
CM_ADD_RANGE_BITS: UInt32 = 1
LOG_CONF_BITS: UInt32 = 7
PRIORITY_EQUAL_FIRST: UInt32 = 8
PRIORITY_EQUAL_LAST: UInt32 = 0
PRIORITY_BIT: UInt32 = 8
RegDisposition_OpenAlways: UInt32 = 0
RegDisposition_OpenExisting: UInt32 = 1
RegDisposition_Bits: UInt32 = 1
CM_ADD_ID_HARDWARE: UInt32 = 0
CM_ADD_ID_COMPATIBLE: UInt32 = 1
CM_ADD_ID_BITS: UInt32 = 1
CM_CREATE_DEVNODE_NORMAL: UInt32 = 0
CM_CREATE_DEVNODE_NO_WAIT_INSTALL: UInt32 = 1
CM_CREATE_DEVNODE_PHANTOM: UInt32 = 2
CM_CREATE_DEVNODE_GENERATE_ID: UInt32 = 4
CM_CREATE_DEVNODE_DO_NOT_INSTALL: UInt32 = 8
CM_CREATE_DEVNODE_BITS: UInt32 = 15
CM_CREATE_DEVINST_NORMAL: UInt32 = 0
CM_CREATE_DEVINST_NO_WAIT_INSTALL: UInt32 = 1
CM_CREATE_DEVINST_PHANTOM: UInt32 = 2
CM_CREATE_DEVINST_GENERATE_ID: UInt32 = 4
CM_CREATE_DEVINST_DO_NOT_INSTALL: UInt32 = 8
CM_CREATE_DEVINST_BITS: UInt32 = 15
CM_DELETE_CLASS_ONLY: UInt32 = 0
CM_DELETE_CLASS_SUBKEYS: UInt32 = 1
CM_DELETE_CLASS_INTERFACE: UInt32 = 2
CM_DELETE_CLASS_BITS: UInt32 = 3
CM_DETECT_NEW_PROFILE: UInt32 = 1
CM_DETECT_CRASHED: UInt32 = 2
CM_DETECT_HWPROF_FIRST_BOOT: UInt32 = 4
CM_DETECT_RUN: UInt32 = 2147483648
CM_DETECT_BITS: UInt32 = 2147483655
CM_DISABLE_POLITE: UInt32 = 0
CM_DISABLE_ABSOLUTE: UInt32 = 1
CM_DISABLE_HARDWARE: UInt32 = 2
CM_DISABLE_UI_NOT_OK: UInt32 = 4
CM_DISABLE_PERSIST: UInt32 = 8
CM_DISABLE_BITS: UInt32 = 15
CM_GETIDLIST_FILTER_NONE: UInt32 = 0
CM_GETIDLIST_FILTER_ENUMERATOR: UInt32 = 1
CM_GETIDLIST_FILTER_SERVICE: UInt32 = 2
CM_GETIDLIST_FILTER_EJECTRELATIONS: UInt32 = 4
CM_GETIDLIST_FILTER_REMOVALRELATIONS: UInt32 = 8
CM_GETIDLIST_FILTER_POWERRELATIONS: UInt32 = 16
CM_GETIDLIST_FILTER_BUSRELATIONS: UInt32 = 32
CM_GETIDLIST_DONOTGENERATE: UInt32 = 268435520
CM_GETIDLIST_FILTER_BITS: UInt32 = 268435583
CM_GETIDLIST_FILTER_TRANSPORTRELATIONS: UInt32 = 128
CM_GETIDLIST_FILTER_PRESENT: UInt32 = 256
CM_GETIDLIST_FILTER_CLASS: UInt32 = 512
CM_DRP_DEVICEDESC: UInt32 = 1
CM_DRP_HARDWAREID: UInt32 = 2
CM_DRP_COMPATIBLEIDS: UInt32 = 3
CM_DRP_UNUSED0: UInt32 = 4
CM_DRP_SERVICE: UInt32 = 5
CM_DRP_UNUSED1: UInt32 = 6
CM_DRP_UNUSED2: UInt32 = 7
CM_DRP_CLASS: UInt32 = 8
CM_DRP_CLASSGUID: UInt32 = 9
CM_DRP_DRIVER: UInt32 = 10
CM_DRP_CONFIGFLAGS: UInt32 = 11
CM_DRP_MFG: UInt32 = 12
CM_DRP_FRIENDLYNAME: UInt32 = 13
CM_DRP_LOCATION_INFORMATION: UInt32 = 14
CM_DRP_PHYSICAL_DEVICE_OBJECT_NAME: UInt32 = 15
CM_DRP_CAPABILITIES: UInt32 = 16
CM_DRP_UI_NUMBER: UInt32 = 17
CM_DRP_UPPERFILTERS: UInt32 = 18
CM_CRP_UPPERFILTERS: UInt32 = 18
CM_DRP_LOWERFILTERS: UInt32 = 19
CM_CRP_LOWERFILTERS: UInt32 = 19
CM_DRP_BUSTYPEGUID: UInt32 = 20
CM_DRP_LEGACYBUSTYPE: UInt32 = 21
CM_DRP_BUSNUMBER: UInt32 = 22
CM_DRP_ENUMERATOR_NAME: UInt32 = 23
CM_DRP_SECURITY: UInt32 = 24
CM_CRP_SECURITY: UInt32 = 24
CM_DRP_SECURITY_SDS: UInt32 = 25
CM_CRP_SECURITY_SDS: UInt32 = 25
CM_DRP_DEVTYPE: UInt32 = 26
CM_CRP_DEVTYPE: UInt32 = 26
CM_DRP_EXCLUSIVE: UInt32 = 27
CM_CRP_EXCLUSIVE: UInt32 = 27
CM_DRP_CHARACTERISTICS: UInt32 = 28
CM_CRP_CHARACTERISTICS: UInt32 = 28
CM_DRP_ADDRESS: UInt32 = 29
CM_DRP_UI_NUMBER_DESC_FORMAT: UInt32 = 30
CM_DRP_DEVICE_POWER_DATA: UInt32 = 31
CM_DRP_REMOVAL_POLICY: UInt32 = 32
CM_DRP_REMOVAL_POLICY_HW_DEFAULT: UInt32 = 33
CM_DRP_REMOVAL_POLICY_OVERRIDE: UInt32 = 34
CM_DRP_INSTALL_STATE: UInt32 = 35
CM_DRP_LOCATION_PATHS: UInt32 = 36
CM_DRP_BASE_CONTAINERID: UInt32 = 37
CM_DRP_MIN: UInt32 = 1
CM_CRP_MIN: UInt32 = 1
CM_DRP_MAX: UInt32 = 37
CM_CRP_MAX: UInt32 = 37
CM_OPEN_CLASS_KEY_INSTALLER: UInt32 = 0
CM_OPEN_CLASS_KEY_INTERFACE: UInt32 = 1
CM_OPEN_CLASS_KEY_BITS: UInt32 = 1
CM_REMOVE_UI_OK: UInt32 = 0
CM_REMOVE_UI_NOT_OK: UInt32 = 1
CM_REMOVE_NO_RESTART: UInt32 = 2
CM_REMOVE_DISABLE: UInt32 = 4
CM_REMOVE_BITS: UInt32 = 7
CM_QUERY_REMOVE_UI_OK: UInt32 = 0
CM_QUERY_REMOVE_UI_NOT_OK: UInt32 = 1
CM_REGISTER_DEVICE_DRIVER_STATIC: UInt32 = 0
CM_REGISTER_DEVICE_DRIVER_DISABLEABLE: UInt32 = 1
CM_REGISTER_DEVICE_DRIVER_REMOVABLE: UInt32 = 2
CM_REGISTER_DEVICE_DRIVER_BITS: UInt32 = 3
CM_REGISTRY_HARDWARE: UInt32 = 0
CM_REGISTRY_SOFTWARE: UInt32 = 1
CM_REGISTRY_USER: UInt32 = 256
CM_REGISTRY_CONFIG: UInt32 = 512
CM_REGISTRY_BITS: UInt32 = 769
CM_SET_DEVNODE_PROBLEM_NORMAL: UInt32 = 0
CM_SET_DEVNODE_PROBLEM_OVERRIDE: UInt32 = 1
CM_SET_DEVNODE_PROBLEM_BITS: UInt32 = 1
CM_SET_DEVINST_PROBLEM_NORMAL: UInt32 = 0
CM_SET_DEVINST_PROBLEM_OVERRIDE: UInt32 = 1
CM_SET_DEVINST_PROBLEM_BITS: UInt32 = 1
CM_SET_HW_PROF_FLAGS_UI_NOT_OK: UInt32 = 1
CM_SET_HW_PROF_FLAGS_BITS: UInt32 = 1
CM_SETUP_DEVNODE_READY: UInt32 = 0
CM_SETUP_DEVINST_READY: UInt32 = 0
CM_SETUP_DOWNLOAD: UInt32 = 1
CM_SETUP_WRITE_LOG_CONFS: UInt32 = 2
CM_SETUP_PROP_CHANGE: UInt32 = 3
CM_SETUP_DEVNODE_RESET: UInt32 = 4
CM_SETUP_DEVINST_RESET: UInt32 = 4
CM_SETUP_DEVNODE_CONFIG: UInt32 = 5
CM_SETUP_DEVINST_CONFIG: UInt32 = 5
CM_SETUP_DEVNODE_CONFIG_CLASS: UInt32 = 6
CM_SETUP_DEVINST_CONFIG_CLASS: UInt32 = 6
CM_SETUP_DEVNODE_CONFIG_EXTENSIONS: UInt32 = 7
CM_SETUP_DEVINST_CONFIG_EXTENSIONS: UInt32 = 7
CM_SETUP_DEVNODE_CONFIG_RESET: UInt32 = 8
CM_SETUP_DEVINST_CONFIG_RESET: UInt32 = 8
CM_SETUP_BITS: UInt32 = 15
CM_QUERY_ARBITRATOR_RAW: UInt32 = 0
CM_QUERY_ARBITRATOR_TRANSLATED: UInt32 = 1
CM_QUERY_ARBITRATOR_BITS: UInt32 = 1
CM_CUSTOMDEVPROP_MERGE_MULTISZ: UInt32 = 1
CM_CUSTOMDEVPROP_BITS: UInt32 = 1
CM_NAME_ATTRIBUTE_NAME_RETRIEVED_FROM_DEVICE: UInt32 = 1
CM_NAME_ATTRIBUTE_USER_ASSIGNED_NAME: UInt32 = 2
CM_CLASS_PROPERTY_INSTALLER: UInt32 = 0
CM_CLASS_PROPERTY_INTERFACE: UInt32 = 1
CM_CLASS_PROPERTY_BITS: UInt32 = 1
CM_NOTIFY_FILTER_FLAG_ALL_INTERFACE_CLASSES: UInt32 = 1
CM_NOTIFY_FILTER_FLAG_ALL_DEVICE_INSTANCES: UInt32 = 2
CM_GLOBAL_STATE_CAN_DO_UI: UInt32 = 1
CM_GLOBAL_STATE_ON_BIG_STACK: UInt32 = 2
CM_GLOBAL_STATE_SERVICES_AVAILABLE: UInt32 = 4
CM_GLOBAL_STATE_SHUTTING_DOWN: UInt32 = 8
CM_GLOBAL_STATE_DETECTION_PENDING: UInt32 = 16
CM_GLOBAL_STATE_REBOOT_REQUIRED: UInt32 = 32
MAX_KEY_LEN: UInt32 = 100
SZ_KEY_OPTIONDESC: String = 'OptionDesc'
SZ_KEY_LDIDOEM: String = 'LdidOEM'
SZ_KEY_SRCDISKFILES: String = 'SourceDisksFiles'
SZ_KEY_SRCDISKNAMES: String = 'SourceDisksNames'
SZ_KEY_STRINGS: String = 'Strings'
SZ_KEY_DESTDIRS: String = 'DestinationDirs'
SZ_KEY_LAYOUT_FILE: String = 'LayoutFile'
SZ_KEY_DEFDESTDIR: String = 'DefaultDestDir'
SZ_KEY_LFN_SECTION: String = 'VarLDID.LFN'
SZ_KEY_SFN_SECTION: String = 'VarLDID.SFN'
SZ_KEY_UPDATEINIS: String = 'UpdateInis'
SZ_KEY_UPDATEINIFIELDS: String = 'UpdateIniFields'
SZ_KEY_INI2REG: String = 'Ini2Reg'
SZ_KEY_COPYFILES: String = 'CopyFiles'
SZ_KEY_RENFILES: String = 'RenFiles'
SZ_KEY_DELFILES: String = 'DelFiles'
SZ_KEY_ADDREG: String = 'AddReg'
SZ_KEY_ADDREGNOCLOBBER: String = 'AddRegNoClobber'
SZ_KEY_DELREG: String = 'DelReg'
SZ_KEY_BITREG: String = 'BitReg'
SZ_KEY_COPYINF: String = 'CopyINF'
SZ_KEY_LOGCONFIG: String = 'LogConfig'
SZ_KEY_ADDSERVICE: String = 'AddService'
SZ_KEY_DELSERVICE: String = 'DelService'
SZ_KEY_ADDTRIGGER: String = 'AddTrigger'
SZ_KEY_FAILUREACTIONS: String = 'FailureActions'
SZ_KEY_ADDINTERFACE: String = 'AddInterface'
SZ_KEY_ADDIME: String = 'AddIme'
SZ_KEY_DELIME: String = 'DelIme'
SZ_KEY_REGSVR: String = 'RegisterDlls'
SZ_KEY_UNREGSVR: String = 'UnregisterDlls'
SZ_KEY_PROFILEITEMS: String = 'ProfileItems'
SZ_KEY_MODULES: String = 'Modules'
SZ_KEY_DEFAULTOPTION: String = 'DefaultOption'
SZ_KEY_LISTOPTIONS: String = 'ListOptions'
SZ_KEY_CLEANONLY: String = 'CleanOnly'
SZ_KEY_UPGRADEONLY: String = 'UpgradeOnly'
SZ_KEY_EXCLUDEID: String = 'ExcludeId'
SZ_KEY_ADDPOWERSETTING: String = 'AddPowerSetting'
SZ_KEY_ADDPROP: String = 'AddProperty'
SZ_KEY_DELPROP: String = 'DelProperty'
SZ_KEY_FEATURESCORE: String = 'FeatureScore'
SZ_KEY_ADDEVENTPROVIDER: String = 'AddEventProvider'
SZ_KEY_ADDCOMSERVER: String = 'AddComServer'
SZ_KEY_ADDCOMCLASS: String = 'AddComClass'
SZ_KEY_ADDCHANNEL: String = 'AddChannel'
SZ_KEY_IMPORTCHANNEL: String = 'ImportChannel'
SZ_KEY_ADDAUTOLOGGER: String = 'AddAutoLogger'
SZ_KEY_UPDATEAUTOLOGGER: String = 'UpdateAutoLogger'
SZ_KEY_ADDAUTOLOGGERPROVIDER: String = 'AddAutoLoggerProvider'
SZ_KEY_ADDFILTER: String = 'AddFilter'
SZ_KEY_FILTERLEVEL: String = 'FilterLevel'
SZ_KEY_FILTERPOSITION: String = 'FilterPosition'
SZ_KEY_ADDCOMPONENT: String = 'AddComponent'
SZ_KEY_PHASE1: String = 'Phase1'
SZ_KEY_HARDWARE: String = 'Hardware'
INFSTR_KEY_CONFIGPRIORITY: String = 'ConfigPriority'
MAX_PRIORITYSTR_LEN: UInt32 = 16
INFSTR_CFGPRI_HARDWIRED: String = 'HARDWIRED'
INFSTR_CFGPRI_DESIRED: String = 'DESIRED'
INFSTR_CFGPRI_NORMAL: String = 'NORMAL'
INFSTR_CFGPRI_SUBOPTIMAL: String = 'SUBOPTIMAL'
INFSTR_CFGPRI_DISABLED: String = 'DISABLED'
INFSTR_CFGPRI_RESTART: String = 'RESTART'
INFSTR_CFGPRI_REBOOT: String = 'REBOOT'
INFSTR_CFGPRI_POWEROFF: String = 'POWEROFF'
INFSTR_CFGPRI_HARDRECONFIG: String = 'HARDRECONFIG'
INFSTR_CFGPRI_FORCECONFIG: String = 'FORCECONFIG'
INFSTR_CFGTYPE_BASIC: String = 'BASIC'
INFSTR_CFGTYPE_FORCED: String = 'FORCED'
INFSTR_CFGTYPE_OVERRIDE: String = 'OVERRIDE'
INFSTR_KEY_MEMCONFIG: String = 'MemConfig'
INFSTR_KEY_MEMLARGECONFIG: String = 'MemLargeConfig'
INFSTR_KEY_IOCONFIG: String = 'IOConfig'
INFSTR_KEY_IRQCONFIG: String = 'IRQConfig'
INFSTR_KEY_DMACONFIG: String = 'DMAConfig'
INFSTR_KEY_PCCARDCONFIG: String = 'PcCardConfig'
INFSTR_KEY_MFCARDCONFIG: String = 'MfCardConfig'
INFSTR_SECT_CLASS_INSTALL: String = 'ClassInstall'
INFSTR_SECT_CLASS_INSTALL_32: String = 'ClassInstall32'
INFSTR_SECT_DEFAULT_INSTALL: String = 'DefaultInstall'
INFSTR_SECT_DEFAULT_UNINSTALL: String = 'DefaultUninstall'
INFSTR_SECT_INTERFACE_INSTALL_32: String = 'InterfaceInstall32'
INFSTR_SECT_VERSION: String = 'Version'
INFSTR_KEY_PROVIDER: String = 'Provider'
INFSTR_KEY_SIGNATURE: String = 'Signature'
INFSTR_KEY_DRIVERSET: String = 'DriverSet'
MAX_INF_FLAG: UInt32 = 20
INFSTR_KEY_HARDWARE_CLASS: String = 'Class'
INFSTR_KEY_HARDWARE_CLASSGUID: String = 'ClassGUID'
INFSTR_KEY_NOSETUPINF: String = 'NoSetupInf'
INFSTR_KEY_FROMINET: String = 'FromINet'
INFSTR_KEY_CATALOGFILE: String = 'CatalogFile'
INFSTR_KEY_PNPLOCKDOWN: String = 'PnpLockDown'
INFSTR_KEY_EXTENSIONID: String = 'ExtensionId'
INFSTR_SECT_MFG: String = 'Manufacturer'
INFSTR_SECT_TARGETCOMPUTERS: String = 'TargetComputers'
INFSTR_SECT_EXTENSIONCONTRACTS: String = 'ExtensionContracts'
INFSTR_KEY_CLASS: String = 'Class'
INFSTR_KEY_CLASSGUID: String = 'ClassGUID'
INFSTR_RESTART: String = 'Restart'
INFSTR_REBOOT: String = 'Reboot'
INFSTR_KEY_DISPLAYNAME: String = 'DisplayName'
INFSTR_KEY_SERVICETYPE: String = 'ServiceType'
INFSTR_KEY_STARTTYPE: String = 'StartType'
INFSTR_KEY_ERRORCONTROL: String = 'ErrorControl'
INFSTR_KEY_SERVICEBINARY: String = 'ServiceBinary'
INFSTR_KEY_LOADORDERGROUP: String = 'LoadOrderGroup'
INFSTR_KEY_DEPENDENCIES: String = 'Dependencies'
INFSTR_KEY_REQUIREDPRIVILEGES: String = 'RequiredPrivileges'
INFSTR_KEY_STARTNAME: String = 'StartName'
INFSTR_KEY_SECURITY: String = 'Security'
INFSTR_KEY_DESCRIPTION: String = 'Description'
INFSTR_KEY_SERVICESIDTYPE: String = 'ServiceSidType'
INFSTR_KEY_DELAYEDAUTOSTART: String = 'DelayedAutoStart'
INFSTR_KEY_BOOTFLAGS: String = 'BootFlags'
INFSTR_KEY_TRIGGER_TYPE: String = 'TriggerType'
INFSTR_KEY_ACTION: String = 'Action'
INFSTR_KEY_SUB_TYPE: String = 'SubType'
INFSTR_KEY_DATA_ITEM: String = 'DataItem'
INFSTR_KEY_RESET_PERIOD: String = 'ResetPeriod'
INFSTR_KEY_NON_CRASH_FAILURES: String = 'NonCrashFailures'
INFSTR_KEY_FAILURE_ACTION: String = 'Action'
INFSTR_KEY_PROVIDER_NAME: String = 'ProviderName'
INFSTR_KEY_RESOURCE_FILE: String = 'ResourceFile'
INFSTR_KEY_MESSAGE_FILE: String = 'MessageFile'
INFSTR_KEY_PARAMETER_FILE: String = 'ParameterFile'
INFSTR_KEY_COM_SERVER_TYPE: String = 'ServerType'
INFSTR_KEY_COM_SERVER_BINARY: String = 'ServerBinary'
INFSTR_KEY_COM_SERVER_BINARY_WOW64: String = 'ServerBinaryWow64'
INFSTR_KEY_COM_SERVER_ADD_COM_CLASS: String = 'AddComClass'
INFSTR_KEY_COM_CLASS_THREADING_MODEL: String = 'ThreadingModel'
INFSTR_KEY_COM_CLASS_DESCRIPTION: String = 'Description'
INFSTR_KEY_COMPONENTIDS: String = 'ComponentIds'
INFSTR_KEY_CHANNEL_ACCESS: String = 'Access'
INFSTR_KEY_CHANNEL_ISOLATION: String = 'Isolation'
INFSTR_KEY_CHANNEL_ENABLED: String = 'Enabled'
INFSTR_KEY_CHANNEL_VALUE: String = 'Value'
INFSTR_KEY_LOGGING_MAXSIZE: String = 'LoggingMaxSize'
INFSTR_KEY_LOGGING_RETENTION: String = 'LoggingRetention'
INFSTR_KEY_LOGGING_AUTOBACKUP: String = 'LoggingAutoBackup'
INFSTR_KEY_START: String = 'Start'
INFSTR_KEY_BUFFER_SIZE: String = 'BufferSize'
INFSTR_KEY_CLOCK_TYPE: String = 'ClockType'
INFSTR_KEY_DISABLE_REALTIME_PERSISTENCE: String = 'DisableRealtimePersistence'
INFSTR_KEY_FILE_NAME: String = 'FileName'
INFSTR_KEY_FILE_MAX: String = 'FileMax'
INFSTR_KEY_FLUSH_TIMER: String = 'FlushTimer'
INFSTR_KEY_LOG_FILE_MODE: String = 'LogFileMode'
INFSTR_KEY_MAX_FILE_SIZE: String = 'MaxFileSize'
INFSTR_KEY_MAXIMUM_BUFFERS: String = 'MaximumBuffers'
INFSTR_KEY_MINIMUM_BUFFERS: String = 'MinimumBuffers'
INFSTR_KEY_ENABLED: String = 'Enabled'
INFSTR_KEY_ENABLE_FLAGS: String = 'EnableFlags'
INFSTR_KEY_ENABLE_LEVEL: String = 'EnableLevel'
INFSTR_KEY_ENABLE_PROPERTY: String = 'EnableProperty'
INFSTR_KEY_MATCH_ANY_KEYWORD: String = 'MatchAnyKeyword'
INFSTR_KEY_MATCH_ALL_KEYWORD: String = 'MatchAllKeyword'
INFSTR_SECT_DETMODULES: String = 'Det.Modules'
INFSTR_SECT_DETCLASSINFO: String = 'Det.ClassInfo'
INFSTR_SECT_MANUALDEV: String = 'Det.ManualDev'
INFSTR_SECT_AVOIDCFGSYSDEV: String = 'Det.AvoidCfgSysDev'
INFSTR_SECT_REGCFGSYSDEV: String = 'Det.RegCfgSysDev'
INFSTR_SECT_DEVINFS: String = 'Det.DevINFs'
INFSTR_SECT_AVOIDINIDEV: String = 'Det.AvoidIniDev'
INFSTR_SECT_AVOIDENVDEV: String = 'Det.AvoidEnvDev'
INFSTR_SECT_REGINIDEV: String = 'Det.RegIniDev'
INFSTR_SECT_REGENVDEV: String = 'Det.RegEnvDev'
INFSTR_SECT_HPOMNIBOOK: String = 'Det.HPOmnibook'
INFSTR_SECT_FORCEHWVERIFY: String = 'Det.ForceHWVerify'
INFSTR_SECT_DETOPTIONS: String = 'Det.Options'
INFSTR_SECT_BADPNPBIOS: String = 'BadPnpBios'
INFSTR_SECT_GOODACPIBIOS: String = 'GoodACPIBios'
INFSTR_SECT_BADACPIBIOS: String = 'BadACPIBios'
INFSTR_SECT_BADROUTINGTABLEBIOS: String = 'BadPCIIRQRoutingTableBios'
INFSTR_SECT_BADPMCALLBIOS: String = 'BadProtectedModeCallBios'
INFSTR_SECT_BADRMCALLBIOS: String = 'BadRealModeCallBios'
INFSTR_SECT_MACHINEIDBIOS: String = 'MachineIDBios'
INFSTR_SECT_BADDISKBIOS: String = 'BadDiskBios'
INFSTR_SECT_BADDSBIOS: String = 'BadDSBios'
INFSTR_KEY_DETPARAMS: String = 'Params'
INFSTR_KEY_SKIPLIST: String = 'SkipList'
INFSTR_KEY_DETECTLIST: String = 'DetectList'
INFSTR_KEY_EXCLUDERES: String = 'ExcludeRes'
INFSTR_SUBKEY_LOGCONFIG: String = 'LogConfig'
INFSTR_SUBKEY_DET: String = 'Det'
INFSTR_SUBKEY_FACTDEF: String = 'FactDef'
INFSTR_SUBKEY_POSSIBLEDUPS: String = 'PosDup'
INFSTR_SUBKEY_NORESOURCEDUPS: String = 'NoResDup'
INFSTR_SUBKEY_HW: String = 'Hw'
INFSTR_SUBKEY_CTL: String = 'CTL'
INFSTR_SUBKEY_SERVICES: String = 'Services'
INFSTR_SUBKEY_SOFTWARE: String = 'Software'
INFSTR_SUBKEY_INTERFACES: String = 'Interfaces'
INFSTR_SUBKEY_COINSTALLERS: String = 'CoInstallers'
INFSTR_SUBKEY_LOGCONFIGOVERRIDE: String = 'LogConfigOverride'
INFSTR_SUBKEY_WMI: String = 'WMI'
INFSTR_SUBKEY_EVENTS: String = 'Events'
INFSTR_SUBKEY_COM: String = 'COM'
INFSTR_SUBKEY_FILTERS: String = 'Filters'
INFSTR_SUBKEY_COMPONENTS: String = 'Components'
INFSTR_CONTROLFLAGS_SECTION: String = 'ControlFlags'
INFSTR_KEY_COPYFILESONLY: String = 'CopyFilesOnly'
INFSTR_KEY_EXCLUDEFROMSELECT: String = 'ExcludeFromSelect'
INFSTR_KEY_ALWAYSEXCLUDEFROMSELECT: String = 'AlwaysExcludeFromSelect'
INFSTR_KEY_INTERACTIVEINSTALL: String = 'InteractiveInstall'
INFSTR_KEY_REQUESTADDITIONALSOFTWARE: String = 'RequestAdditionalSoftware'
INFSTR_PLATFORM_WIN: String = 'Win'
INFSTR_PLATFORM_NT: String = 'NT'
INFSTR_PLATFORM_NTX86: String = 'NTx86'
INFSTR_PLATFORM_NTMIPS: String = 'NTMIPS'
INFSTR_PLATFORM_NTALPHA: String = 'NTAlpha'
INFSTR_PLATFORM_NTPPC: String = 'NTPPC'
INFSTR_PLATFORM_NTIA64: String = 'NTIA64'
INFSTR_PLATFORM_NTAXP64: String = 'NTAXP64'
INFSTR_PLATFORM_NTAMD64: String = 'NTAMD64'
INFSTR_PLATFORM_NTARM: String = 'NTARM'
INFSTR_PLATFORM_NTARM64: String = 'NTARM64'
MAX_INFSTR_STRKEY_LEN: UInt32 = 32
INFSTR_STRKEY_DRVDESC: String = 'DriverDesc'
INFSTR_DRIVERSELECT_SECTION: String = 'DriverSelect'
INFSTR_DRIVERSELECT_FUNCTIONS: String = 'DriverSelectFunctions'
INFSTR_DRIVERVERSION_SECTION: String = 'DriverVer'
INFSTR_SOFTWAREVERSION_SECTION: String = 'SoftwareVersion'
INFSTR_SECT_CFGSYS: String = 'ConfigSysDrivers'
INFSTR_SECT_AUTOEXECBAT: String = 'AutoexecBatDrivers'
INFSTR_SECT_SYSINI: String = 'SystemIniDrivers'
INFSTR_SECT_SYSINIDRV: String = 'SystemIniDriversLine'
INFSTR_SECT_WININIRUN: String = 'WinIniRunLine'
INFSTR_KEY_PATH: String = 'Path'
INFSTR_KEY_NAME: String = 'Name'
INFSTR_KEY_IO: String = 'IO'
INFSTR_KEY_MEM: String = 'Mem'
INFSTR_KEY_IRQ: String = 'IRQ'
INFSTR_KEY_DMA: String = 'DMA'
INFSTR_BUS_ISA: String = 'BUS_ISA'
INFSTR_BUS_EISA: String = 'BUS_EISA'
INFSTR_BUS_MCA: String = 'BUS_MCA'
INFSTR_BUS_ALL: String = 'BUS_ALL'
INFSTR_RISK_NONE: String = 'RISK_NONE'
INFSTR_RISK_VERYLOW: String = 'RISK_VERYLOW'
INFSTR_RISK_BIOSROMRD: String = 'RISK_BIOSROMRD'
INFSTR_RISK_QUERYDRV: String = 'RISK_QUERYDRV'
INFSTR_RISK_SWINT: String = 'RISK_SWINT'
INFSTR_RISK_LOW: String = 'RISK_LOW'
INFSTR_RISK_DELICATE: String = 'RISK_DELICATE'
INFSTR_RISK_MEMRD: String = 'RISK_MEMRD'
INFSTR_RISK_IORD: String = 'RISK_IORD'
INFSTR_RISK_MEMWR: String = 'RISK_MEMWR'
INFSTR_RISK_IOWR: String = 'RISK_IOWR'
INFSTR_RISK_UNRELIABLE: String = 'RISK_UNRELIABLE'
INFSTR_RISK_VERYHIGH: String = 'RISK_VERYHIGH'
INFSTR_CLASS_SAFEEXCL: String = 'SAFE_EXCL'
INFSTR_SECT_DISPLAY_CLEANUP: String = 'DisplayCleanup'
GUID_HWPROFILE_QUERY_CHANGE: Guid = Guid('{cb3a4001-46f0-11d0-b08f-00609713053f}')
GUID_HWPROFILE_CHANGE_CANCELLED: Guid = Guid('{cb3a4002-46f0-11d0-b08f-00609713053f}')
GUID_HWPROFILE_CHANGE_COMPLETE: Guid = Guid('{cb3a4003-46f0-11d0-b08f-00609713053f}')
GUID_DEVICE_INTERFACE_ARRIVAL: Guid = Guid('{cb3a4004-46f0-11d0-b08f-00609713053f}')
GUID_DEVICE_INTERFACE_REMOVAL: Guid = Guid('{cb3a4005-46f0-11d0-b08f-00609713053f}')
GUID_TARGET_DEVICE_QUERY_REMOVE: Guid = Guid('{cb3a4006-46f0-11d0-b08f-00609713053f}')
GUID_TARGET_DEVICE_REMOVE_CANCELLED: Guid = Guid('{cb3a4007-46f0-11d0-b08f-00609713053f}')
GUID_TARGET_DEVICE_REMOVE_COMPLETE: Guid = Guid('{cb3a4008-46f0-11d0-b08f-00609713053f}')
GUID_PNP_CUSTOM_NOTIFICATION: Guid = Guid('{aca73f8e-8d23-11d1-ac7d-0000f87571d0}')
GUID_PNP_POWER_NOTIFICATION: Guid = Guid('{c2cf0660-eb7a-11d1-bd7f-0000f87571d0}')
GUID_PNP_POWER_SETTING_CHANGE: Guid = Guid('{29c69b3e-c79a-43bf-bbde-a932fa1bea7e}')
GUID_TARGET_DEVICE_TRANSPORT_RELATIONS_CHANGED: Guid = Guid('{fcf528f6-a82f-47b1-ad3a-8050594cad28}')
GUID_KERNEL_SOFT_RESTART_PREPARE: Guid = Guid('{de373def-a85c-4f76-8cbf-f96bea8bd10f}')
GUID_KERNEL_SOFT_RESTART_CANCEL: Guid = Guid('{31d737e7-8c0b-468a-956e-9f433ec358fb}')
GUID_RECOVERY_PCI_PREPARE_SHUTDOWN: Guid = Guid('{90d889de-8704-44cf-8115-ed8528d2b2da}')
GUID_RECOVERY_NVMED_PREPARE_SHUTDOWN: Guid = Guid('{4b9770ea-bde7-400b-a9b9-4f684f54cc2a}')
GUID_KERNEL_SOFT_RESTART_FINALIZE: Guid = Guid('{20e91abd-350a-4d4f-8577-99c81507473a}')
GUID_KERNEL_SOFT_RESTART_PRE_COMPLETE: Guid = Guid('{af855082-530b-4a85-b5a6-120b63089451}')
GUID_BUS_INTERFACE_STANDARD: Guid = Guid('{496b8280-6f25-11d0-beaf-08002be2092f}')
GUID_PCI_BUS_INTERFACE_STANDARD: Guid = Guid('{496b8281-6f25-11d0-beaf-08002be2092f}')
GUID_PCI_BUS_INTERFACE_STANDARD2: Guid = Guid('{de94e966-fdff-4c9c-9998-6747b150e74c}')
GUID_ARBITER_INTERFACE_STANDARD: Guid = Guid('{e644f185-8c0e-11d0-becf-08002be2092f}')
GUID_TRANSLATOR_INTERFACE_STANDARD: Guid = Guid('{6c154a92-aacf-11d0-8d2a-00a0c906b244}')
GUID_ACPI_INTERFACE_STANDARD: Guid = Guid('{b091a08a-ba97-11d0-bd14-00aa00b7b32a}')
GUID_INT_ROUTE_INTERFACE_STANDARD: Guid = Guid('{70941bf4-0073-11d1-a09e-00c04fc340b1}')
GUID_PCMCIA_BUS_INTERFACE_STANDARD: Guid = Guid('{76173af0-c504-11d1-947f-00c04fb960ee}')
GUID_ACPI_REGS_INTERFACE_STANDARD: Guid = Guid('{06141966-7245-6369-462e-4e656c736f6e}')
GUID_LEGACY_DEVICE_DETECTION_STANDARD: Guid = Guid('{50feb0de-596a-11d2-a5b8-0000f81a4619}')
GUID_PCI_DEVICE_PRESENT_INTERFACE: Guid = Guid('{d1b82c26-bf49-45ef-b216-71cbd7889b57}')
GUID_MF_ENUMERATION_INTERFACE: Guid = Guid('{aeb895f0-5586-11d1-8d84-00a0c906b244}')
GUID_REENUMERATE_SELF_INTERFACE_STANDARD: Guid = Guid('{2aeb0243-6a6e-486b-82fc-d815f6b97006}')
GUID_AGP_TARGET_BUS_INTERFACE_STANDARD: Guid = Guid('{b15cfce8-06d1-4d37-9d4c-bedde0c2a6ff}')
GUID_ACPI_CMOS_INTERFACE_STANDARD: Guid = Guid('{3a8d0384-6505-40ca-bc39-56c15f8c5fed}')
GUID_ACPI_PORT_RANGES_INTERFACE_STANDARD: Guid = Guid('{f14f609b-cbbd-4957-a674-bc00213f1c97}')
GUID_ACPI_INTERFACE_STANDARD2: Guid = Guid('{e8695f63-1831-4870-a8cf-9c2f03f9dcb5}')
GUID_PNP_LOCATION_INTERFACE: Guid = Guid('{70211b0e-0afb-47db-afc1-410bf842497a}')
GUID_PCI_EXPRESS_LINK_QUIESCENT_INTERFACE: Guid = Guid('{146cd41c-dae3-4437-8aff-2af3f038099b}')
GUID_PCI_EXPRESS_ROOT_PORT_INTERFACE: Guid = Guid('{83a7734a-84c7-4161-9a98-6000ed0c4a33}')
GUID_MSIX_TABLE_CONFIG_INTERFACE: Guid = Guid('{1a6a460b-194f-455d-b34b-b84c5b05712b}')
GUID_D3COLD_SUPPORT_INTERFACE: Guid = Guid('{b38290e5-3cd0-4f9d-9937-f5fe2b44d47a}')
GUID_PROCESSOR_PCC_INTERFACE_STANDARD: Guid = Guid('{37b17e9a-c21c-4296-972d-11c4b32b28f0}')
GUID_PCI_VIRTUALIZATION_INTERFACE: Guid = Guid('{64897b47-3a4a-4d75-bc74-89dd6c078293}')
GUID_PCC_INTERFACE_STANDARD: Guid = Guid('{3ee8ba63-0f59-4a24-8a45-35808bdd1249}')
GUID_PCC_INTERFACE_INTERNAL: Guid = Guid('{7cce62ce-c189-4814-a6a7-12112089e938}')
GUID_THERMAL_COOLING_INTERFACE: Guid = Guid('{ecbe47a8-c498-4bb9-bd70-e867e0940d22}')
GUID_PCI_LINK_CONFIG_INTERFACE: Guid = Guid('{67593984-7cc0-4760-8d01-cbffd2d080f7}')
GUID_POWER_LIMIT_INTERFACE: Guid = Guid('{3b96f4f2-ce49-44d1-91f8-652b8121e93a}')
GUID_DMA_CACHE_COHERENCY_INTERFACE: Guid = Guid('{b520f7fa-8a5a-4e40-a3f6-6be1e162d935}')
GUID_DEVICE_RESET_INTERFACE_STANDARD: Guid = Guid('{649fdf26-3bc0-4813-ad24-7e0c1eda3fa3}')
GUID_IOMMU_BUS_INTERFACE: Guid = Guid('{1efee0b2-d278-4ae4-bddc-1b34dd648043}')
GUID_PCI_SECURITY_INTERFACE: Guid = Guid('{6e7f1451-199e-4acc-ba2d-762b4edf4674}')
GUID_SCM_BUS_INTERFACE: Guid = Guid('{25944783-ce79-4232-815e-4a30014e8eb4}')
GUID_SECURE_DRIVER_INTERFACE: Guid = Guid('{370f67e1-4ff5-4a94-9a35-06c5d9cc30e2}')
GUID_SDEV_IDENTIFIER_INTERFACE: Guid = Guid('{49d67af8-916c-4ee8-9df1-889f17d21e91}')
GUID_SCM_BUS_NVD_INTERFACE: Guid = Guid('{8de064ff-b630-42e4-88ea-6f24c8641175}')
GUID_SCM_BUS_LD_INTERFACE: Guid = Guid('{9b89307d-d76b-4f48-b186-54041ae92e8d}')
GUID_SCM_PHYSICAL_NVDIMM_INTERFACE: Guid = Guid('{0079c21b-917e-405e-a9ce-0732b5bbcebd}')
GUID_PNP_EXTENDED_ADDRESS_INTERFACE: Guid = Guid('{b8e992ec-a797-4dc4-8846-84d041707446}')
GUID_D3COLD_AUX_POWER_AND_TIMING_INTERFACE: Guid = Guid('{0044d8aa-f664-4588-9ffc-2afeaf5950b9}')
GUID_PCI_FPGA_CONTROL_INTERFACE: Guid = Guid('{2df3f7a8-b9b3-4063-9215-b5d14a0b266e}')
GUID_PCI_PTM_CONTROL_INTERFACE: Guid = Guid('{348a5ebb-ba24-44b7-9916-285687735117}')
GUID_BUS_RESOURCE_UPDATE_INTERFACE: Guid = Guid('{27d0102d-bfb2-4164-81dd-dbb82f968b48}')
GUID_NPEM_CONTROL_INTERFACE: Guid = Guid('{4d95573d-b774-488a-b120-4f284a9eff51}')
GUID_PCI_ATS_INTERFACE: Guid = Guid('{010a7fe8-96f5-4943-bedf-95e651b93412}')
GUID_BUS_TYPE_INTERNAL: Guid = Guid('{1530ea73-086b-11d1-a09f-00c04fc340b1}')
GUID_BUS_TYPE_PCMCIA: Guid = Guid('{09343630-af9f-11d0-92e9-0000f81e1b30}')
GUID_BUS_TYPE_PCI: Guid = Guid('{c8ebdfb0-b510-11d0-80e5-00a0c92542e3}')
GUID_BUS_TYPE_ISAPNP: Guid = Guid('{e676f854-d87d-11d0-92b2-00a0c9055fc5}')
GUID_BUS_TYPE_EISA: Guid = Guid('{ddc35509-f3fc-11d0-a537-0000f8753ed1}')
GUID_BUS_TYPE_MCA: Guid = Guid('{1c75997a-dc33-11d0-92b2-00a0c9055fc5}')
GUID_BUS_TYPE_SERENUM: Guid = Guid('{77114a87-8944-11d1-bd90-00a0c906be2d}')
GUID_BUS_TYPE_USB: Guid = Guid('{9d7debbc-c85d-11d1-9eb4-006008c3a19a}')
GUID_BUS_TYPE_LPTENUM: Guid = Guid('{c4ca1000-2ddc-11d5-a17a-00c04f60524d}')
GUID_BUS_TYPE_USBPRINT: Guid = Guid('{441ee000-4342-11d5-a184-00c04f60524d}')
GUID_BUS_TYPE_DOT4PRT: Guid = Guid('{441ee001-4342-11d5-a184-00c04f60524d}')
GUID_BUS_TYPE_1394: Guid = Guid('{f74e73eb-9ac5-45eb-be4d-772cc71ddfb3}')
GUID_BUS_TYPE_HID: Guid = Guid('{eeaf37d0-1963-47c4-aa48-72476db7cf49}')
GUID_BUS_TYPE_AVC: Guid = Guid('{c06ff265-ae09-48f0-812c-16753d7cba83}')
GUID_BUS_TYPE_IRDA: Guid = Guid('{7ae17dc1-c944-44d6-881f-4c2e61053bc1}')
GUID_BUS_TYPE_SD: Guid = Guid('{e700cc04-4036-4e89-9579-89ebf45f00cd}')
GUID_BUS_TYPE_ACPI: Guid = Guid('{d7b46895-001a-4942-891f-a7d46610a843}')
GUID_BUS_TYPE_SW_DEVICE: Guid = Guid('{06d10322-7de0-4cef-8e25-197d0e7442e2}')
GUID_BUS_TYPE_SCM: Guid = Guid('{375a5912-804c-45aa-bdc2-fdd25a1d9512}')
GUID_POWER_DEVICE_ENABLE: Guid = Guid('{827c0a6f-feb0-11d0-bd26-00aa00b7b32a}')
GUID_POWER_DEVICE_TIMEOUTS: Guid = Guid('{a45da735-feb0-11d0-bd26-00aa00b7b32a}')
GUID_POWER_DEVICE_WAKE_ENABLE: Guid = Guid('{a9546a82-feb0-11d0-bd26-00aa00b7b32a}')
GUID_WUDF_DEVICE_HOST_PROBLEM: Guid = Guid('{c43d25bd-9346-40ee-a2d2-d70c15f8b75b}')
GUID_PARTITION_UNIT_INTERFACE_STANDARD: Guid = Guid('{52363f5b-d891-429b-8195-aec5fef6853c}')
GUID_QUERY_CRASHDUMP_FUNCTIONS: Guid = Guid('{9cc6b8ff-32e2-4834-b1de-b32ef8880a4b}')
@winfunctype('SETUPAPI.dll')
def SetupGetInfInformationA(InfSpec: VoidPtr, SearchControl: UInt32, ReturnBuffer: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_INF_INFORMATION), ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetInfInformationW(InfSpec: VoidPtr, SearchControl: UInt32, ReturnBuffer: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_INF_INFORMATION), ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupGetInfInformation = UnicodeAlias('SetupGetInfInformationW')
@winfunctype('SETUPAPI.dll')
def SetupQueryInfFileInformationA(InfInformation: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_INF_INFORMATION), InfIndex: UInt32, ReturnBuffer: win32more.Windows.Win32.Foundation.PSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueryInfFileInformationW(InfInformation: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_INF_INFORMATION), InfIndex: UInt32, ReturnBuffer: win32more.Windows.Win32.Foundation.PWSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupQueryInfFileInformation = UnicodeAlias('SetupQueryInfFileInformationW')
@winfunctype('SETUPAPI.dll')
def SetupQueryInfOriginalFileInformationA(InfInformation: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_INF_INFORMATION), InfIndex: UInt32, AlternatePlatformInfo: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_ALTPLATFORM_INFO_V2), OriginalFileInfo: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_ORIGINAL_FILE_INFO_A)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueryInfOriginalFileInformationW(InfInformation: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_INF_INFORMATION), InfIndex: UInt32, AlternatePlatformInfo: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_ALTPLATFORM_INFO_V2), OriginalFileInfo: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_ORIGINAL_FILE_INFO_W)) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupQueryInfOriginalFileInformation = UnicodeAlias('SetupQueryInfOriginalFileInformationW')
@winfunctype('SETUPAPI.dll')
def SetupQueryInfVersionInformationA(InfInformation: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_INF_INFORMATION), InfIndex: UInt32, Key: win32more.Windows.Win32.Foundation.PSTR, ReturnBuffer: win32more.Windows.Win32.Foundation.PSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueryInfVersionInformationW(InfInformation: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_INF_INFORMATION), InfIndex: UInt32, Key: win32more.Windows.Win32.Foundation.PWSTR, ReturnBuffer: win32more.Windows.Win32.Foundation.PWSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupQueryInfVersionInformation = UnicodeAlias('SetupQueryInfVersionInformationW')
@winfunctype('SETUPAPI.dll')
def SetupGetInfDriverStoreLocationA(FileName: win32more.Windows.Win32.Foundation.PSTR, AlternatePlatformInfo: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_ALTPLATFORM_INFO_V2), LocaleName: win32more.Windows.Win32.Foundation.PSTR, ReturnBuffer: win32more.Windows.Win32.Foundation.PSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetInfDriverStoreLocationW(FileName: win32more.Windows.Win32.Foundation.PWSTR, AlternatePlatformInfo: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_ALTPLATFORM_INFO_V2), LocaleName: win32more.Windows.Win32.Foundation.PWSTR, ReturnBuffer: win32more.Windows.Win32.Foundation.PWSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupGetInfDriverStoreLocation = UnicodeAlias('SetupGetInfDriverStoreLocationW')
@winfunctype('SETUPAPI.dll')
def SetupGetInfPublishedNameA(DriverStoreLocation: win32more.Windows.Win32.Foundation.PSTR, ReturnBuffer: win32more.Windows.Win32.Foundation.PSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetInfPublishedNameW(DriverStoreLocation: win32more.Windows.Win32.Foundation.PWSTR, ReturnBuffer: win32more.Windows.Win32.Foundation.PWSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupGetInfPublishedName = UnicodeAlias('SetupGetInfPublishedNameW')
@winfunctype('SETUPAPI.dll')
def SetupGetInfFileListA(DirectoryPath: win32more.Windows.Win32.Foundation.PSTR, InfStyle: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.INF_STYLE, ReturnBuffer: win32more.Windows.Win32.Foundation.PSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetInfFileListW(DirectoryPath: win32more.Windows.Win32.Foundation.PWSTR, InfStyle: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.INF_STYLE, ReturnBuffer: win32more.Windows.Win32.Foundation.PWSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupGetInfFileList = UnicodeAlias('SetupGetInfFileListW')
@winfunctype('SETUPAPI.dll')
def SetupOpenInfFileW(FileName: win32more.Windows.Win32.Foundation.PWSTR, InfClass: win32more.Windows.Win32.Foundation.PWSTR, InfStyle: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.INF_STYLE, ErrorLine: POINTER(UInt32)) -> VoidPtr: ...
SetupOpenInfFile = UnicodeAlias('SetupOpenInfFileW')
@winfunctype('SETUPAPI.dll')
def SetupOpenInfFileA(FileName: win32more.Windows.Win32.Foundation.PSTR, InfClass: win32more.Windows.Win32.Foundation.PSTR, InfStyle: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.INF_STYLE, ErrorLine: POINTER(UInt32)) -> VoidPtr: ...
@winfunctype('SETUPAPI.dll')
def SetupOpenMasterInf() -> VoidPtr: ...
@winfunctype('SETUPAPI.dll')
def SetupOpenAppendInfFileW(FileName: win32more.Windows.Win32.Foundation.PWSTR, InfHandle: VoidPtr, ErrorLine: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupOpenAppendInfFile = UnicodeAlias('SetupOpenAppendInfFileW')
@winfunctype('SETUPAPI.dll')
def SetupOpenAppendInfFileA(FileName: win32more.Windows.Win32.Foundation.PSTR, InfHandle: VoidPtr, ErrorLine: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupCloseInfFile(InfHandle: VoidPtr) -> Void: ...
@winfunctype('SETUPAPI.dll')
def SetupFindFirstLineA(InfHandle: VoidPtr, Section: win32more.Windows.Win32.Foundation.PSTR, Key: win32more.Windows.Win32.Foundation.PSTR, Context: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupFindFirstLineW(InfHandle: VoidPtr, Section: win32more.Windows.Win32.Foundation.PWSTR, Key: win32more.Windows.Win32.Foundation.PWSTR, Context: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT)) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupFindFirstLine = UnicodeAlias('SetupFindFirstLineW')
@winfunctype('SETUPAPI.dll')
def SetupFindNextLine(ContextIn: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT), ContextOut: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupFindNextMatchLineA(ContextIn: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT), Key: win32more.Windows.Win32.Foundation.PSTR, ContextOut: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupFindNextMatchLineW(ContextIn: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT), Key: win32more.Windows.Win32.Foundation.PWSTR, ContextOut: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT)) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupFindNextMatchLine = UnicodeAlias('SetupFindNextMatchLineW')
@winfunctype('SETUPAPI.dll')
def SetupGetLineByIndexA(InfHandle: VoidPtr, Section: win32more.Windows.Win32.Foundation.PSTR, Index: UInt32, Context: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetLineByIndexW(InfHandle: VoidPtr, Section: win32more.Windows.Win32.Foundation.PWSTR, Index: UInt32, Context: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT)) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupGetLineByIndex = UnicodeAlias('SetupGetLineByIndexW')
@winfunctype('SETUPAPI.dll')
def SetupGetLineCountA(InfHandle: VoidPtr, Section: win32more.Windows.Win32.Foundation.PSTR) -> Int32: ...
@winfunctype('SETUPAPI.dll')
def SetupGetLineCountW(InfHandle: VoidPtr, Section: win32more.Windows.Win32.Foundation.PWSTR) -> Int32: ...
SetupGetLineCount = UnicodeAlias('SetupGetLineCountW')
@winfunctype('SETUPAPI.dll')
def SetupGetLineTextA(Context: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT), InfHandle: VoidPtr, Section: win32more.Windows.Win32.Foundation.PSTR, Key: win32more.Windows.Win32.Foundation.PSTR, ReturnBuffer: win32more.Windows.Win32.Foundation.PSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetLineTextW(Context: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT), InfHandle: VoidPtr, Section: win32more.Windows.Win32.Foundation.PWSTR, Key: win32more.Windows.Win32.Foundation.PWSTR, ReturnBuffer: win32more.Windows.Win32.Foundation.PWSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupGetLineText = UnicodeAlias('SetupGetLineTextW')
@winfunctype('SETUPAPI.dll')
def SetupGetFieldCount(Context: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT)) -> UInt32: ...
@winfunctype('SETUPAPI.dll')
def SetupGetStringFieldA(Context: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT), FieldIndex: UInt32, ReturnBuffer: win32more.Windows.Win32.Foundation.PSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetStringFieldW(Context: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT), FieldIndex: UInt32, ReturnBuffer: win32more.Windows.Win32.Foundation.PWSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupGetStringField = UnicodeAlias('SetupGetStringFieldW')
@winfunctype('SETUPAPI.dll')
def SetupGetIntField(Context: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT), FieldIndex: UInt32, IntegerValue: POINTER(Int32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetMultiSzFieldA(Context: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT), FieldIndex: UInt32, ReturnBuffer: win32more.Windows.Win32.Foundation.PSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetMultiSzFieldW(Context: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT), FieldIndex: UInt32, ReturnBuffer: win32more.Windows.Win32.Foundation.PWSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupGetMultiSzField = UnicodeAlias('SetupGetMultiSzFieldW')
@winfunctype('SETUPAPI.dll')
def SetupGetBinaryField(Context: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT), FieldIndex: UInt32, ReturnBuffer: POINTER(Byte), ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetFileCompressionInfoA(SourceFileName: win32more.Windows.Win32.Foundation.PSTR, ActualSourceFileName: POINTER(win32more.Windows.Win32.Foundation.PSTR), SourceFileSize: POINTER(UInt32), TargetFileSize: POINTER(UInt32), CompressionType: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.FILE_COMPRESSION_TYPE)) -> UInt32: ...
@winfunctype('SETUPAPI.dll')
def SetupGetFileCompressionInfoW(SourceFileName: win32more.Windows.Win32.Foundation.PWSTR, ActualSourceFileName: POINTER(win32more.Windows.Win32.Foundation.PWSTR), SourceFileSize: POINTER(UInt32), TargetFileSize: POINTER(UInt32), CompressionType: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.FILE_COMPRESSION_TYPE)) -> UInt32: ...
SetupGetFileCompressionInfo = UnicodeAlias('SetupGetFileCompressionInfoW')
@winfunctype('SETUPAPI.dll')
def SetupGetFileCompressionInfoExA(SourceFileName: win32more.Windows.Win32.Foundation.PSTR, ActualSourceFileNameBuffer: win32more.Windows.Win32.Foundation.PSTR, ActualSourceFileNameBufferLen: UInt32, RequiredBufferLen: POINTER(UInt32), SourceFileSize: POINTER(UInt32), TargetFileSize: POINTER(UInt32), CompressionType: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.FILE_COMPRESSION_TYPE)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetFileCompressionInfoExW(SourceFileName: win32more.Windows.Win32.Foundation.PWSTR, ActualSourceFileNameBuffer: win32more.Windows.Win32.Foundation.PWSTR, ActualSourceFileNameBufferLen: UInt32, RequiredBufferLen: POINTER(UInt32), SourceFileSize: POINTER(UInt32), TargetFileSize: POINTER(UInt32), CompressionType: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.FILE_COMPRESSION_TYPE)) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupGetFileCompressionInfoEx = UnicodeAlias('SetupGetFileCompressionInfoExW')
@winfunctype('SETUPAPI.dll')
def SetupDecompressOrCopyFileA(SourceFileName: win32more.Windows.Win32.Foundation.PSTR, TargetFileName: win32more.Windows.Win32.Foundation.PSTR, CompressionType: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.FILE_COMPRESSION_TYPE)) -> UInt32: ...
@winfunctype('SETUPAPI.dll')
def SetupDecompressOrCopyFileW(SourceFileName: win32more.Windows.Win32.Foundation.PWSTR, TargetFileName: win32more.Windows.Win32.Foundation.PWSTR, CompressionType: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.FILE_COMPRESSION_TYPE)) -> UInt32: ...
SetupDecompressOrCopyFile = UnicodeAlias('SetupDecompressOrCopyFileW')
@winfunctype('SETUPAPI.dll')
def SetupGetSourceFileLocationA(InfHandle: VoidPtr, InfContext: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT), FileName: win32more.Windows.Win32.Foundation.PSTR, SourceId: POINTER(UInt32), ReturnBuffer: win32more.Windows.Win32.Foundation.PSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetSourceFileLocationW(InfHandle: VoidPtr, InfContext: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT), FileName: win32more.Windows.Win32.Foundation.PWSTR, SourceId: POINTER(UInt32), ReturnBuffer: win32more.Windows.Win32.Foundation.PWSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupGetSourceFileLocation = UnicodeAlias('SetupGetSourceFileLocationW')
@winfunctype('SETUPAPI.dll')
def SetupGetSourceFileSizeA(InfHandle: VoidPtr, InfContext: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT), FileName: win32more.Windows.Win32.Foundation.PSTR, Section: win32more.Windows.Win32.Foundation.PSTR, FileSize: POINTER(UInt32), RoundingFactor: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetSourceFileSizeW(InfHandle: VoidPtr, InfContext: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT), FileName: win32more.Windows.Win32.Foundation.PWSTR, Section: win32more.Windows.Win32.Foundation.PWSTR, FileSize: POINTER(UInt32), RoundingFactor: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupGetSourceFileSize = UnicodeAlias('SetupGetSourceFileSizeW')
@winfunctype('SETUPAPI.dll')
def SetupGetTargetPathA(InfHandle: VoidPtr, InfContext: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT), Section: win32more.Windows.Win32.Foundation.PSTR, ReturnBuffer: win32more.Windows.Win32.Foundation.PSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetTargetPathW(InfHandle: VoidPtr, InfContext: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT), Section: win32more.Windows.Win32.Foundation.PWSTR, ReturnBuffer: win32more.Windows.Win32.Foundation.PWSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupGetTargetPath = UnicodeAlias('SetupGetTargetPathW')
@winfunctype('SETUPAPI.dll')
def SetupSetSourceListA(Flags: UInt32, SourceList: POINTER(win32more.Windows.Win32.Foundation.PSTR), SourceCount: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupSetSourceListW(Flags: UInt32, SourceList: POINTER(win32more.Windows.Win32.Foundation.PWSTR), SourceCount: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupSetSourceList = UnicodeAlias('SetupSetSourceListW')
@winfunctype('SETUPAPI.dll')
def SetupCancelTemporarySourceList() -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupAddToSourceListA(Flags: UInt32, Source: win32more.Windows.Win32.Foundation.PSTR) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupAddToSourceListW(Flags: UInt32, Source: win32more.Windows.Win32.Foundation.PWSTR) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupAddToSourceList = UnicodeAlias('SetupAddToSourceListW')
@winfunctype('SETUPAPI.dll')
def SetupRemoveFromSourceListA(Flags: UInt32, Source: win32more.Windows.Win32.Foundation.PSTR) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupRemoveFromSourceListW(Flags: UInt32, Source: win32more.Windows.Win32.Foundation.PWSTR) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupRemoveFromSourceList = UnicodeAlias('SetupRemoveFromSourceListW')
@winfunctype('SETUPAPI.dll')
def SetupQuerySourceListA(Flags: UInt32, List: POINTER(POINTER(win32more.Windows.Win32.Foundation.PSTR)), Count: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQuerySourceListW(Flags: UInt32, List: POINTER(POINTER(win32more.Windows.Win32.Foundation.PWSTR)), Count: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupQuerySourceList = UnicodeAlias('SetupQuerySourceListW')
@winfunctype('SETUPAPI.dll')
def SetupFreeSourceListA(List: POINTER(POINTER(win32more.Windows.Win32.Foundation.PSTR)), Count: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupFreeSourceListW(List: POINTER(POINTER(win32more.Windows.Win32.Foundation.PWSTR)), Count: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupFreeSourceList = UnicodeAlias('SetupFreeSourceListW')
@winfunctype('SETUPAPI.dll')
def SetupPromptForDiskA(hwndParent: win32more.Windows.Win32.Foundation.HWND, DialogTitle: win32more.Windows.Win32.Foundation.PSTR, DiskName: win32more.Windows.Win32.Foundation.PSTR, PathToSource: win32more.Windows.Win32.Foundation.PSTR, FileSought: win32more.Windows.Win32.Foundation.PSTR, TagFile: win32more.Windows.Win32.Foundation.PSTR, DiskPromptStyle: UInt32, PathBuffer: win32more.Windows.Win32.Foundation.PSTR, PathBufferSize: UInt32, PathRequiredSize: POINTER(UInt32)) -> UInt32: ...
@winfunctype('SETUPAPI.dll')
def SetupPromptForDiskW(hwndParent: win32more.Windows.Win32.Foundation.HWND, DialogTitle: win32more.Windows.Win32.Foundation.PWSTR, DiskName: win32more.Windows.Win32.Foundation.PWSTR, PathToSource: win32more.Windows.Win32.Foundation.PWSTR, FileSought: win32more.Windows.Win32.Foundation.PWSTR, TagFile: win32more.Windows.Win32.Foundation.PWSTR, DiskPromptStyle: UInt32, PathBuffer: win32more.Windows.Win32.Foundation.PWSTR, PathBufferSize: UInt32, PathRequiredSize: POINTER(UInt32)) -> UInt32: ...
SetupPromptForDisk = UnicodeAlias('SetupPromptForDiskW')
@winfunctype('SETUPAPI.dll')
def SetupCopyErrorA(hwndParent: win32more.Windows.Win32.Foundation.HWND, DialogTitle: win32more.Windows.Win32.Foundation.PSTR, DiskName: win32more.Windows.Win32.Foundation.PSTR, PathToSource: win32more.Windows.Win32.Foundation.PSTR, SourceFile: win32more.Windows.Win32.Foundation.PSTR, TargetPathFile: win32more.Windows.Win32.Foundation.PSTR, Win32ErrorCode: UInt32, Style: UInt32, PathBuffer: win32more.Windows.Win32.Foundation.PSTR, PathBufferSize: UInt32, PathRequiredSize: POINTER(UInt32)) -> UInt32: ...
@winfunctype('SETUPAPI.dll')
def SetupCopyErrorW(hwndParent: win32more.Windows.Win32.Foundation.HWND, DialogTitle: win32more.Windows.Win32.Foundation.PWSTR, DiskName: win32more.Windows.Win32.Foundation.PWSTR, PathToSource: win32more.Windows.Win32.Foundation.PWSTR, SourceFile: win32more.Windows.Win32.Foundation.PWSTR, TargetPathFile: win32more.Windows.Win32.Foundation.PWSTR, Win32ErrorCode: UInt32, Style: UInt32, PathBuffer: win32more.Windows.Win32.Foundation.PWSTR, PathBufferSize: UInt32, PathRequiredSize: POINTER(UInt32)) -> UInt32: ...
SetupCopyError = UnicodeAlias('SetupCopyErrorW')
@winfunctype('SETUPAPI.dll')
def SetupRenameErrorA(hwndParent: win32more.Windows.Win32.Foundation.HWND, DialogTitle: win32more.Windows.Win32.Foundation.PSTR, SourceFile: win32more.Windows.Win32.Foundation.PSTR, TargetFile: win32more.Windows.Win32.Foundation.PSTR, Win32ErrorCode: UInt32, Style: UInt32) -> UInt32: ...
@winfunctype('SETUPAPI.dll')
def SetupRenameErrorW(hwndParent: win32more.Windows.Win32.Foundation.HWND, DialogTitle: win32more.Windows.Win32.Foundation.PWSTR, SourceFile: win32more.Windows.Win32.Foundation.PWSTR, TargetFile: win32more.Windows.Win32.Foundation.PWSTR, Win32ErrorCode: UInt32, Style: UInt32) -> UInt32: ...
SetupRenameError = UnicodeAlias('SetupRenameErrorW')
@winfunctype('SETUPAPI.dll')
def SetupDeleteErrorA(hwndParent: win32more.Windows.Win32.Foundation.HWND, DialogTitle: win32more.Windows.Win32.Foundation.PSTR, File: win32more.Windows.Win32.Foundation.PSTR, Win32ErrorCode: UInt32, Style: UInt32) -> UInt32: ...
@winfunctype('SETUPAPI.dll')
def SetupDeleteErrorW(hwndParent: win32more.Windows.Win32.Foundation.HWND, DialogTitle: win32more.Windows.Win32.Foundation.PWSTR, File: win32more.Windows.Win32.Foundation.PWSTR, Win32ErrorCode: UInt32, Style: UInt32) -> UInt32: ...
SetupDeleteError = UnicodeAlias('SetupDeleteErrorW')
@winfunctype('SETUPAPI.dll')
def SetupBackupErrorA(hwndParent: win32more.Windows.Win32.Foundation.HWND, DialogTitle: win32more.Windows.Win32.Foundation.PSTR, SourceFile: win32more.Windows.Win32.Foundation.PSTR, TargetFile: win32more.Windows.Win32.Foundation.PSTR, Win32ErrorCode: UInt32, Style: UInt32) -> UInt32: ...
@winfunctype('SETUPAPI.dll')
def SetupBackupErrorW(hwndParent: win32more.Windows.Win32.Foundation.HWND, DialogTitle: win32more.Windows.Win32.Foundation.PWSTR, SourceFile: win32more.Windows.Win32.Foundation.PWSTR, TargetFile: win32more.Windows.Win32.Foundation.PWSTR, Win32ErrorCode: UInt32, Style: UInt32) -> UInt32: ...
SetupBackupError = UnicodeAlias('SetupBackupErrorW')
@winfunctype('SETUPAPI.dll')
def SetupSetDirectoryIdA(InfHandle: VoidPtr, Id: UInt32, Directory: win32more.Windows.Win32.Foundation.PSTR) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupSetDirectoryIdW(InfHandle: VoidPtr, Id: UInt32, Directory: win32more.Windows.Win32.Foundation.PWSTR) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupSetDirectoryId = UnicodeAlias('SetupSetDirectoryIdW')
@winfunctype('SETUPAPI.dll')
def SetupSetDirectoryIdExA(InfHandle: VoidPtr, Id: UInt32, Directory: win32more.Windows.Win32.Foundation.PSTR, Flags: UInt32, Reserved1: UInt32, Reserved2: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupSetDirectoryIdExW(InfHandle: VoidPtr, Id: UInt32, Directory: win32more.Windows.Win32.Foundation.PWSTR, Flags: UInt32, Reserved1: UInt32, Reserved2: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupSetDirectoryIdEx = UnicodeAlias('SetupSetDirectoryIdExW')
@winfunctype('SETUPAPI.dll')
def SetupGetSourceInfoA(InfHandle: VoidPtr, SourceId: UInt32, InfoDesired: UInt32, ReturnBuffer: win32more.Windows.Win32.Foundation.PSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetSourceInfoW(InfHandle: VoidPtr, SourceId: UInt32, InfoDesired: UInt32, ReturnBuffer: win32more.Windows.Win32.Foundation.PWSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupGetSourceInfo = UnicodeAlias('SetupGetSourceInfoW')
@winfunctype('SETUPAPI.dll')
def SetupInstallFileA(InfHandle: VoidPtr, InfContext: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT), SourceFile: win32more.Windows.Win32.Foundation.PSTR, SourcePathRoot: win32more.Windows.Win32.Foundation.PSTR, DestinationName: win32more.Windows.Win32.Foundation.PSTR, CopyStyle: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_COPY_STYLE, CopyMsgHandler: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PSP_FILE_CALLBACK_A, Context: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupInstallFileW(InfHandle: VoidPtr, InfContext: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT), SourceFile: win32more.Windows.Win32.Foundation.PWSTR, SourcePathRoot: win32more.Windows.Win32.Foundation.PWSTR, DestinationName: win32more.Windows.Win32.Foundation.PWSTR, CopyStyle: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_COPY_STYLE, CopyMsgHandler: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PSP_FILE_CALLBACK_W, Context: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupInstallFile = UnicodeAlias('SetupInstallFileW')
@winfunctype('SETUPAPI.dll')
def SetupInstallFileExA(InfHandle: VoidPtr, InfContext: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT), SourceFile: win32more.Windows.Win32.Foundation.PSTR, SourcePathRoot: win32more.Windows.Win32.Foundation.PSTR, DestinationName: win32more.Windows.Win32.Foundation.PSTR, CopyStyle: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_COPY_STYLE, CopyMsgHandler: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PSP_FILE_CALLBACK_A, Context: VoidPtr, FileWasInUse: POINTER(win32more.Windows.Win32.Foundation.BOOL)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupInstallFileExW(InfHandle: VoidPtr, InfContext: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT), SourceFile: win32more.Windows.Win32.Foundation.PWSTR, SourcePathRoot: win32more.Windows.Win32.Foundation.PWSTR, DestinationName: win32more.Windows.Win32.Foundation.PWSTR, CopyStyle: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_COPY_STYLE, CopyMsgHandler: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PSP_FILE_CALLBACK_W, Context: VoidPtr, FileWasInUse: POINTER(win32more.Windows.Win32.Foundation.BOOL)) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupInstallFileEx = UnicodeAlias('SetupInstallFileExW')
@winfunctype('SETUPAPI.dll')
def SetupOpenFileQueue() -> VoidPtr: ...
@winfunctype('SETUPAPI.dll')
def SetupCloseFileQueue(QueueHandle: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupSetFileQueueAlternatePlatformA(QueueHandle: VoidPtr, AlternatePlatformInfo: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_ALTPLATFORM_INFO_V2), AlternateDefaultCatalogFile: win32more.Windows.Win32.Foundation.PSTR) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupSetFileQueueAlternatePlatformW(QueueHandle: VoidPtr, AlternatePlatformInfo: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_ALTPLATFORM_INFO_V2), AlternateDefaultCatalogFile: win32more.Windows.Win32.Foundation.PWSTR) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupSetFileQueueAlternatePlatform = UnicodeAlias('SetupSetFileQueueAlternatePlatformW')
@winfunctype('SETUPAPI.dll')
def SetupSetPlatformPathOverrideA(Override: win32more.Windows.Win32.Foundation.PSTR) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupSetPlatformPathOverrideW(Override: win32more.Windows.Win32.Foundation.PWSTR) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupSetPlatformPathOverride = UnicodeAlias('SetupSetPlatformPathOverrideW')
@winfunctype('SETUPAPI.dll')
def SetupQueueCopyA(QueueHandle: VoidPtr, SourceRootPath: win32more.Windows.Win32.Foundation.PSTR, SourcePath: win32more.Windows.Win32.Foundation.PSTR, SourceFilename: win32more.Windows.Win32.Foundation.PSTR, SourceDescription: win32more.Windows.Win32.Foundation.PSTR, SourceTagfile: win32more.Windows.Win32.Foundation.PSTR, TargetDirectory: win32more.Windows.Win32.Foundation.PSTR, TargetFilename: win32more.Windows.Win32.Foundation.PSTR, CopyStyle: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueueCopyW(QueueHandle: VoidPtr, SourceRootPath: win32more.Windows.Win32.Foundation.PWSTR, SourcePath: win32more.Windows.Win32.Foundation.PWSTR, SourceFilename: win32more.Windows.Win32.Foundation.PWSTR, SourceDescription: win32more.Windows.Win32.Foundation.PWSTR, SourceTagfile: win32more.Windows.Win32.Foundation.PWSTR, TargetDirectory: win32more.Windows.Win32.Foundation.PWSTR, TargetFilename: win32more.Windows.Win32.Foundation.PWSTR, CopyStyle: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupQueueCopy = UnicodeAlias('SetupQueueCopyW')
@winfunctype('SETUPAPI.dll')
def SetupQueueCopyIndirectA(CopyParams: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_FILE_COPY_PARAMS_A)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueueCopyIndirectW(CopyParams: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_FILE_COPY_PARAMS_W)) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupQueueCopyIndirect = UnicodeAlias('SetupQueueCopyIndirectW')
@winfunctype('SETUPAPI.dll')
def SetupQueueDefaultCopyA(QueueHandle: VoidPtr, InfHandle: VoidPtr, SourceRootPath: win32more.Windows.Win32.Foundation.PSTR, SourceFilename: win32more.Windows.Win32.Foundation.PSTR, TargetFilename: win32more.Windows.Win32.Foundation.PSTR, CopyStyle: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueueDefaultCopyW(QueueHandle: VoidPtr, InfHandle: VoidPtr, SourceRootPath: win32more.Windows.Win32.Foundation.PWSTR, SourceFilename: win32more.Windows.Win32.Foundation.PWSTR, TargetFilename: win32more.Windows.Win32.Foundation.PWSTR, CopyStyle: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupQueueDefaultCopy = UnicodeAlias('SetupQueueDefaultCopyW')
@winfunctype('SETUPAPI.dll')
def SetupQueueCopySectionA(QueueHandle: VoidPtr, SourceRootPath: win32more.Windows.Win32.Foundation.PSTR, InfHandle: VoidPtr, ListInfHandle: VoidPtr, Section: win32more.Windows.Win32.Foundation.PSTR, CopyStyle: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueueCopySectionW(QueueHandle: VoidPtr, SourceRootPath: win32more.Windows.Win32.Foundation.PWSTR, InfHandle: VoidPtr, ListInfHandle: VoidPtr, Section: win32more.Windows.Win32.Foundation.PWSTR, CopyStyle: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupQueueCopySection = UnicodeAlias('SetupQueueCopySectionW')
@winfunctype('SETUPAPI.dll')
def SetupQueueDeleteA(QueueHandle: VoidPtr, PathPart1: win32more.Windows.Win32.Foundation.PSTR, PathPart2: win32more.Windows.Win32.Foundation.PSTR) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueueDeleteW(QueueHandle: VoidPtr, PathPart1: win32more.Windows.Win32.Foundation.PWSTR, PathPart2: win32more.Windows.Win32.Foundation.PWSTR) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupQueueDelete = UnicodeAlias('SetupQueueDeleteW')
@winfunctype('SETUPAPI.dll')
def SetupQueueDeleteSectionA(QueueHandle: VoidPtr, InfHandle: VoidPtr, ListInfHandle: VoidPtr, Section: win32more.Windows.Win32.Foundation.PSTR) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueueDeleteSectionW(QueueHandle: VoidPtr, InfHandle: VoidPtr, ListInfHandle: VoidPtr, Section: win32more.Windows.Win32.Foundation.PWSTR) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupQueueDeleteSection = UnicodeAlias('SetupQueueDeleteSectionW')
@winfunctype('SETUPAPI.dll')
def SetupQueueRenameA(QueueHandle: VoidPtr, SourcePath: win32more.Windows.Win32.Foundation.PSTR, SourceFilename: win32more.Windows.Win32.Foundation.PSTR, TargetPath: win32more.Windows.Win32.Foundation.PSTR, TargetFilename: win32more.Windows.Win32.Foundation.PSTR) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueueRenameW(QueueHandle: VoidPtr, SourcePath: win32more.Windows.Win32.Foundation.PWSTR, SourceFilename: win32more.Windows.Win32.Foundation.PWSTR, TargetPath: win32more.Windows.Win32.Foundation.PWSTR, TargetFilename: win32more.Windows.Win32.Foundation.PWSTR) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupQueueRename = UnicodeAlias('SetupQueueRenameW')
@winfunctype('SETUPAPI.dll')
def SetupQueueRenameSectionA(QueueHandle: VoidPtr, InfHandle: VoidPtr, ListInfHandle: VoidPtr, Section: win32more.Windows.Win32.Foundation.PSTR) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueueRenameSectionW(QueueHandle: VoidPtr, InfHandle: VoidPtr, ListInfHandle: VoidPtr, Section: win32more.Windows.Win32.Foundation.PWSTR) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupQueueRenameSection = UnicodeAlias('SetupQueueRenameSectionW')
@winfunctype('SETUPAPI.dll')
def SetupCommitFileQueueA(Owner: win32more.Windows.Win32.Foundation.HWND, QueueHandle: VoidPtr, MsgHandler: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PSP_FILE_CALLBACK_A, Context: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupCommitFileQueueW(Owner: win32more.Windows.Win32.Foundation.HWND, QueueHandle: VoidPtr, MsgHandler: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PSP_FILE_CALLBACK_W, Context: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupCommitFileQueue = UnicodeAlias('SetupCommitFileQueueW')
@winfunctype('SETUPAPI.dll')
def SetupScanFileQueueA(FileQueue: VoidPtr, Flags: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUPSCANFILEQUEUE_FLAGS, Window: win32more.Windows.Win32.Foundation.HWND, CallbackRoutine: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PSP_FILE_CALLBACK_A, CallbackContext: VoidPtr, Result: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupScanFileQueueW(FileQueue: VoidPtr, Flags: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUPSCANFILEQUEUE_FLAGS, Window: win32more.Windows.Win32.Foundation.HWND, CallbackRoutine: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PSP_FILE_CALLBACK_W, CallbackContext: VoidPtr, Result: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupScanFileQueue = UnicodeAlias('SetupScanFileQueueW')
@winfunctype('SETUPAPI.dll')
def SetupGetFileQueueCount(FileQueue: VoidPtr, SubQueueFileOp: UInt32, NumOperations: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetFileQueueFlags(FileQueue: VoidPtr, Flags: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupSetFileQueueFlags(FileQueue: VoidPtr, FlagMask: UInt32, Flags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupCopyOEMInfA(SourceInfFileName: win32more.Windows.Win32.Foundation.PSTR, OEMSourceMediaLocation: win32more.Windows.Win32.Foundation.PSTR, OEMSourceMediaType: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.OEM_SOURCE_MEDIA_TYPE, CopyStyle: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_COPY_STYLE, DestinationInfFileName: win32more.Windows.Win32.Foundation.PSTR, DestinationInfFileNameSize: UInt32, RequiredSize: POINTER(UInt32), DestinationInfFileNameComponent: POINTER(win32more.Windows.Win32.Foundation.PSTR)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupCopyOEMInfW(SourceInfFileName: win32more.Windows.Win32.Foundation.PWSTR, OEMSourceMediaLocation: win32more.Windows.Win32.Foundation.PWSTR, OEMSourceMediaType: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.OEM_SOURCE_MEDIA_TYPE, CopyStyle: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_COPY_STYLE, DestinationInfFileName: win32more.Windows.Win32.Foundation.PWSTR, DestinationInfFileNameSize: UInt32, RequiredSize: POINTER(UInt32), DestinationInfFileNameComponent: POINTER(win32more.Windows.Win32.Foundation.PWSTR)) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupCopyOEMInf = UnicodeAlias('SetupCopyOEMInfW')
@winfunctype('SETUPAPI.dll')
def SetupUninstallOEMInfA(InfFileName: win32more.Windows.Win32.Foundation.PSTR, Flags: UInt32, Reserved: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupUninstallOEMInfW(InfFileName: win32more.Windows.Win32.Foundation.PWSTR, Flags: UInt32, Reserved: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupUninstallOEMInf = UnicodeAlias('SetupUninstallOEMInfW')
@winfunctype('SETUPAPI.dll')
def SetupUninstallNewlyCopiedInfs(FileQueue: VoidPtr, Flags: UInt32, Reserved: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupCreateDiskSpaceListA(Reserved1: VoidPtr, Reserved2: UInt32, Flags: UInt32) -> VoidPtr: ...
@winfunctype('SETUPAPI.dll')
def SetupCreateDiskSpaceListW(Reserved1: VoidPtr, Reserved2: UInt32, Flags: UInt32) -> VoidPtr: ...
SetupCreateDiskSpaceList = UnicodeAlias('SetupCreateDiskSpaceListW')
@winfunctype('SETUPAPI.dll')
def SetupDuplicateDiskSpaceListA(DiskSpace: VoidPtr, Reserved1: VoidPtr, Reserved2: UInt32, Flags: UInt32) -> VoidPtr: ...
@winfunctype('SETUPAPI.dll')
def SetupDuplicateDiskSpaceListW(DiskSpace: VoidPtr, Reserved1: VoidPtr, Reserved2: UInt32, Flags: UInt32) -> VoidPtr: ...
SetupDuplicateDiskSpaceList = UnicodeAlias('SetupDuplicateDiskSpaceListW')
@winfunctype('SETUPAPI.dll')
def SetupDestroyDiskSpaceList(DiskSpace: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueryDrivesInDiskSpaceListA(DiskSpace: VoidPtr, ReturnBuffer: win32more.Windows.Win32.Foundation.PSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueryDrivesInDiskSpaceListW(DiskSpace: VoidPtr, ReturnBuffer: win32more.Windows.Win32.Foundation.PWSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupQueryDrivesInDiskSpaceList = UnicodeAlias('SetupQueryDrivesInDiskSpaceListW')
@winfunctype('SETUPAPI.dll')
def SetupQuerySpaceRequiredOnDriveA(DiskSpace: VoidPtr, DriveSpec: win32more.Windows.Win32.Foundation.PSTR, SpaceRequired: POINTER(Int64), Reserved1: VoidPtr, Reserved2: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQuerySpaceRequiredOnDriveW(DiskSpace: VoidPtr, DriveSpec: win32more.Windows.Win32.Foundation.PWSTR, SpaceRequired: POINTER(Int64), Reserved1: VoidPtr, Reserved2: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupQuerySpaceRequiredOnDrive = UnicodeAlias('SetupQuerySpaceRequiredOnDriveW')
@winfunctype('SETUPAPI.dll')
def SetupAdjustDiskSpaceListA(DiskSpace: VoidPtr, DriveRoot: win32more.Windows.Win32.Foundation.PSTR, Amount: Int64, Reserved1: VoidPtr, Reserved2: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupAdjustDiskSpaceListW(DiskSpace: VoidPtr, DriveRoot: win32more.Windows.Win32.Foundation.PWSTR, Amount: Int64, Reserved1: VoidPtr, Reserved2: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupAdjustDiskSpaceList = UnicodeAlias('SetupAdjustDiskSpaceListW')
@winfunctype('SETUPAPI.dll')
def SetupAddToDiskSpaceListA(DiskSpace: VoidPtr, TargetFilespec: win32more.Windows.Win32.Foundation.PSTR, FileSize: Int64, Operation: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_FILE_OPERATION, Reserved1: VoidPtr, Reserved2: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupAddToDiskSpaceListW(DiskSpace: VoidPtr, TargetFilespec: win32more.Windows.Win32.Foundation.PWSTR, FileSize: Int64, Operation: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_FILE_OPERATION, Reserved1: VoidPtr, Reserved2: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupAddToDiskSpaceList = UnicodeAlias('SetupAddToDiskSpaceListW')
@winfunctype('SETUPAPI.dll')
def SetupAddSectionToDiskSpaceListA(DiskSpace: VoidPtr, InfHandle: VoidPtr, ListInfHandle: VoidPtr, SectionName: win32more.Windows.Win32.Foundation.PSTR, Operation: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_FILE_OPERATION, Reserved1: VoidPtr, Reserved2: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupAddSectionToDiskSpaceListW(DiskSpace: VoidPtr, InfHandle: VoidPtr, ListInfHandle: VoidPtr, SectionName: win32more.Windows.Win32.Foundation.PWSTR, Operation: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_FILE_OPERATION, Reserved1: VoidPtr, Reserved2: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupAddSectionToDiskSpaceList = UnicodeAlias('SetupAddSectionToDiskSpaceListW')
@winfunctype('SETUPAPI.dll')
def SetupAddInstallSectionToDiskSpaceListA(DiskSpace: VoidPtr, InfHandle: VoidPtr, LayoutInfHandle: VoidPtr, SectionName: win32more.Windows.Win32.Foundation.PSTR, Reserved1: VoidPtr, Reserved2: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupAddInstallSectionToDiskSpaceListW(DiskSpace: VoidPtr, InfHandle: VoidPtr, LayoutInfHandle: VoidPtr, SectionName: win32more.Windows.Win32.Foundation.PWSTR, Reserved1: VoidPtr, Reserved2: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupAddInstallSectionToDiskSpaceList = UnicodeAlias('SetupAddInstallSectionToDiskSpaceListW')
@winfunctype('SETUPAPI.dll')
def SetupRemoveFromDiskSpaceListA(DiskSpace: VoidPtr, TargetFilespec: win32more.Windows.Win32.Foundation.PSTR, Operation: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_FILE_OPERATION, Reserved1: VoidPtr, Reserved2: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupRemoveFromDiskSpaceListW(DiskSpace: VoidPtr, TargetFilespec: win32more.Windows.Win32.Foundation.PWSTR, Operation: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_FILE_OPERATION, Reserved1: VoidPtr, Reserved2: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupRemoveFromDiskSpaceList = UnicodeAlias('SetupRemoveFromDiskSpaceListW')
@winfunctype('SETUPAPI.dll')
def SetupRemoveSectionFromDiskSpaceListA(DiskSpace: VoidPtr, InfHandle: VoidPtr, ListInfHandle: VoidPtr, SectionName: win32more.Windows.Win32.Foundation.PSTR, Operation: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_FILE_OPERATION, Reserved1: VoidPtr, Reserved2: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupRemoveSectionFromDiskSpaceListW(DiskSpace: VoidPtr, InfHandle: VoidPtr, ListInfHandle: VoidPtr, SectionName: win32more.Windows.Win32.Foundation.PWSTR, Operation: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_FILE_OPERATION, Reserved1: VoidPtr, Reserved2: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupRemoveSectionFromDiskSpaceList = UnicodeAlias('SetupRemoveSectionFromDiskSpaceListW')
@winfunctype('SETUPAPI.dll')
def SetupRemoveInstallSectionFromDiskSpaceListA(DiskSpace: VoidPtr, InfHandle: VoidPtr, LayoutInfHandle: VoidPtr, SectionName: win32more.Windows.Win32.Foundation.PSTR, Reserved1: VoidPtr, Reserved2: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupRemoveInstallSectionFromDiskSpaceListW(DiskSpace: VoidPtr, InfHandle: VoidPtr, LayoutInfHandle: VoidPtr, SectionName: win32more.Windows.Win32.Foundation.PWSTR, Reserved1: VoidPtr, Reserved2: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupRemoveInstallSectionFromDiskSpaceList = UnicodeAlias('SetupRemoveInstallSectionFromDiskSpaceListW')
@winfunctype('SETUPAPI.dll')
def SetupIterateCabinetA(CabinetFile: win32more.Windows.Win32.Foundation.PSTR, Reserved: UInt32, MsgHandler: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PSP_FILE_CALLBACK_A, Context: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupIterateCabinetW(CabinetFile: win32more.Windows.Win32.Foundation.PWSTR, Reserved: UInt32, MsgHandler: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PSP_FILE_CALLBACK_W, Context: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupIterateCabinet = UnicodeAlias('SetupIterateCabinetW')
@winfunctype('SETUPAPI.dll')
def SetupPromptReboot(FileQueue: VoidPtr, Owner: win32more.Windows.Win32.Foundation.HWND, ScanOnly: win32more.Windows.Win32.Foundation.BOOL) -> Int32: ...
@winfunctype('SETUPAPI.dll')
def SetupInitDefaultQueueCallback(OwnerWindow: win32more.Windows.Win32.Foundation.HWND) -> VoidPtr: ...
@winfunctype('SETUPAPI.dll')
def SetupInitDefaultQueueCallbackEx(OwnerWindow: win32more.Windows.Win32.Foundation.HWND, AlternateProgressWindow: win32more.Windows.Win32.Foundation.HWND, ProgressMessage: UInt32, Reserved1: UInt32, Reserved2: VoidPtr) -> VoidPtr: ...
@winfunctype('SETUPAPI.dll')
def SetupTermDefaultQueueCallback(Context: VoidPtr) -> Void: ...
@winfunctype('SETUPAPI.dll')
def SetupDefaultQueueCallbackA(Context: VoidPtr, Notification: UInt32, Param1: UIntPtr, Param2: UIntPtr) -> UInt32: ...
@winfunctype('SETUPAPI.dll')
def SetupDefaultQueueCallbackW(Context: VoidPtr, Notification: UInt32, Param1: UIntPtr, Param2: UIntPtr) -> UInt32: ...
SetupDefaultQueueCallback = UnicodeAlias('SetupDefaultQueueCallbackW')
@winfunctype('SETUPAPI.dll')
def SetupInstallFromInfSectionA(Owner: win32more.Windows.Win32.Foundation.HWND, InfHandle: VoidPtr, SectionName: win32more.Windows.Win32.Foundation.PSTR, Flags: UInt32, RelativeKeyRoot: win32more.Windows.Win32.System.Registry.HKEY, SourceRootPath: win32more.Windows.Win32.Foundation.PSTR, CopyFlags: UInt32, MsgHandler: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PSP_FILE_CALLBACK_A, Context: VoidPtr, DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupInstallFromInfSectionW(Owner: win32more.Windows.Win32.Foundation.HWND, InfHandle: VoidPtr, SectionName: win32more.Windows.Win32.Foundation.PWSTR, Flags: UInt32, RelativeKeyRoot: win32more.Windows.Win32.System.Registry.HKEY, SourceRootPath: win32more.Windows.Win32.Foundation.PWSTR, CopyFlags: UInt32, MsgHandler: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PSP_FILE_CALLBACK_W, Context: VoidPtr, DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA)) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupInstallFromInfSection = UnicodeAlias('SetupInstallFromInfSectionW')
@winfunctype('SETUPAPI.dll')
def SetupInstallFilesFromInfSectionA(InfHandle: VoidPtr, LayoutInfHandle: VoidPtr, FileQueue: VoidPtr, SectionName: win32more.Windows.Win32.Foundation.PSTR, SourceRootPath: win32more.Windows.Win32.Foundation.PSTR, CopyFlags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupInstallFilesFromInfSectionW(InfHandle: VoidPtr, LayoutInfHandle: VoidPtr, FileQueue: VoidPtr, SectionName: win32more.Windows.Win32.Foundation.PWSTR, SourceRootPath: win32more.Windows.Win32.Foundation.PWSTR, CopyFlags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupInstallFilesFromInfSection = UnicodeAlias('SetupInstallFilesFromInfSectionW')
@winfunctype('SETUPAPI.dll')
def SetupInstallServicesFromInfSectionA(InfHandle: VoidPtr, SectionName: win32more.Windows.Win32.Foundation.PSTR, Flags: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SPSVCINST_FLAGS) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupInstallServicesFromInfSectionW(InfHandle: VoidPtr, SectionName: win32more.Windows.Win32.Foundation.PWSTR, Flags: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SPSVCINST_FLAGS) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupInstallServicesFromInfSection = UnicodeAlias('SetupInstallServicesFromInfSectionW')
@winfunctype('SETUPAPI.dll')
def SetupInstallServicesFromInfSectionExA(InfHandle: VoidPtr, SectionName: win32more.Windows.Win32.Foundation.PSTR, Flags: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SPSVCINST_FLAGS, DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA), Reserved1: VoidPtr, Reserved2: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupInstallServicesFromInfSectionExW(InfHandle: VoidPtr, SectionName: win32more.Windows.Win32.Foundation.PWSTR, Flags: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SPSVCINST_FLAGS, DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA), Reserved1: VoidPtr, Reserved2: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupInstallServicesFromInfSectionEx = UnicodeAlias('SetupInstallServicesFromInfSectionExW')
@winfunctype('SETUPAPI.dll')
def InstallHinfSectionA(Window: win32more.Windows.Win32.Foundation.HWND, ModuleHandle: win32more.Windows.Win32.Foundation.HINSTANCE, CommandLine: win32more.Windows.Win32.Foundation.PSTR, ShowCommand: Int32) -> Void: ...
@winfunctype('SETUPAPI.dll')
def InstallHinfSectionW(Window: win32more.Windows.Win32.Foundation.HWND, ModuleHandle: win32more.Windows.Win32.Foundation.HINSTANCE, CommandLine: win32more.Windows.Win32.Foundation.PWSTR, ShowCommand: Int32) -> Void: ...
InstallHinfSection = UnicodeAlias('InstallHinfSectionW')
@winfunctype('SETUPAPI.dll')
def SetupInitializeFileLogA(LogFileName: win32more.Windows.Win32.Foundation.PSTR, Flags: UInt32) -> VoidPtr: ...
@winfunctype('SETUPAPI.dll')
def SetupInitializeFileLogW(LogFileName: win32more.Windows.Win32.Foundation.PWSTR, Flags: UInt32) -> VoidPtr: ...
SetupInitializeFileLog = UnicodeAlias('SetupInitializeFileLogW')
@winfunctype('SETUPAPI.dll')
def SetupTerminateFileLog(FileLogHandle: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupLogFileA(FileLogHandle: VoidPtr, LogSectionName: win32more.Windows.Win32.Foundation.PSTR, SourceFilename: win32more.Windows.Win32.Foundation.PSTR, TargetFilename: win32more.Windows.Win32.Foundation.PSTR, Checksum: UInt32, DiskTagfile: win32more.Windows.Win32.Foundation.PSTR, DiskDescription: win32more.Windows.Win32.Foundation.PSTR, OtherInfo: win32more.Windows.Win32.Foundation.PSTR, Flags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupLogFileW(FileLogHandle: VoidPtr, LogSectionName: win32more.Windows.Win32.Foundation.PWSTR, SourceFilename: win32more.Windows.Win32.Foundation.PWSTR, TargetFilename: win32more.Windows.Win32.Foundation.PWSTR, Checksum: UInt32, DiskTagfile: win32more.Windows.Win32.Foundation.PWSTR, DiskDescription: win32more.Windows.Win32.Foundation.PWSTR, OtherInfo: win32more.Windows.Win32.Foundation.PWSTR, Flags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupLogFile = UnicodeAlias('SetupLogFileW')
@winfunctype('SETUPAPI.dll')
def SetupRemoveFileLogEntryA(FileLogHandle: VoidPtr, LogSectionName: win32more.Windows.Win32.Foundation.PSTR, TargetFilename: win32more.Windows.Win32.Foundation.PSTR) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupRemoveFileLogEntryW(FileLogHandle: VoidPtr, LogSectionName: win32more.Windows.Win32.Foundation.PWSTR, TargetFilename: win32more.Windows.Win32.Foundation.PWSTR) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupRemoveFileLogEntry = UnicodeAlias('SetupRemoveFileLogEntryW')
@winfunctype('SETUPAPI.dll')
def SetupQueryFileLogA(FileLogHandle: VoidPtr, LogSectionName: win32more.Windows.Win32.Foundation.PSTR, TargetFilename: win32more.Windows.Win32.Foundation.PSTR, DesiredInfo: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SetupFileLogInfo, DataOut: win32more.Windows.Win32.Foundation.PSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueryFileLogW(FileLogHandle: VoidPtr, LogSectionName: win32more.Windows.Win32.Foundation.PWSTR, TargetFilename: win32more.Windows.Win32.Foundation.PWSTR, DesiredInfo: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SetupFileLogInfo, DataOut: win32more.Windows.Win32.Foundation.PWSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupQueryFileLog = UnicodeAlias('SetupQueryFileLogW')
@winfunctype('SETUPAPI.dll')
def SetupOpenLog(Erase: win32more.Windows.Win32.Foundation.BOOL) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupLogErrorA(MessageString: win32more.Windows.Win32.Foundation.PSTR, Severity: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupLogErrorW(MessageString: win32more.Windows.Win32.Foundation.PWSTR, Severity: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupLogError = UnicodeAlias('SetupLogErrorW')
@winfunctype('SETUPAPI.dll')
def SetupCloseLog() -> Void: ...
@winfunctype('SETUPAPI.dll')
def SetupGetThreadLogToken() -> UInt64: ...
@winfunctype('SETUPAPI.dll')
def SetupSetThreadLogToken(LogToken: UInt64) -> Void: ...
@cfunctype('SETUPAPI.dll', variadic=True)
def SetupWriteTextLog(LogToken: UInt64, Category: UInt32, Flags: UInt32, MessageStr: win32more.Windows.Win32.Foundation.PSTR, *__arglist) -> Void: ...
@cfunctype('SETUPAPI.dll', variadic=True)
def SetupWriteTextLogError(LogToken: UInt64, Category: UInt32, LogFlags: UInt32, Error: UInt32, MessageStr: win32more.Windows.Win32.Foundation.PSTR, *__arglist) -> Void: ...
@winfunctype('SETUPAPI.dll')
def SetupWriteTextLogInfLine(LogToken: UInt64, Flags: UInt32, InfHandle: VoidPtr, Context: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT)) -> Void: ...
@winfunctype('SETUPAPI.dll')
def SetupGetBackupInformationA(QueueHandle: VoidPtr, BackupParams: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_BACKUP_QUEUE_PARAMS_V2_A)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetBackupInformationW(QueueHandle: VoidPtr, BackupParams: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_BACKUP_QUEUE_PARAMS_V2_W)) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupGetBackupInformation = UnicodeAlias('SetupGetBackupInformationW')
@winfunctype('SETUPAPI.dll')
def SetupPrepareQueueForRestoreA(QueueHandle: VoidPtr, BackupPath: win32more.Windows.Win32.Foundation.PSTR, RestoreFlags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupPrepareQueueForRestoreW(QueueHandle: VoidPtr, BackupPath: win32more.Windows.Win32.Foundation.PWSTR, RestoreFlags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupPrepareQueueForRestore = UnicodeAlias('SetupPrepareQueueForRestoreW')
@winfunctype('SETUPAPI.dll')
def SetupSetNonInteractiveMode(NonInteractiveFlag: win32more.Windows.Win32.Foundation.BOOL) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetNonInteractiveMode() -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiCreateDeviceInfoList(ClassGuid: POINTER(Guid), hwndParent: win32more.Windows.Win32.Foundation.HWND) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO: ...
@winfunctype('SETUPAPI.dll')
def SetupDiCreateDeviceInfoListExA(ClassGuid: POINTER(Guid), hwndParent: win32more.Windows.Win32.Foundation.HWND, MachineName: win32more.Windows.Win32.Foundation.PSTR, Reserved: VoidPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO: ...
@winfunctype('SETUPAPI.dll')
def SetupDiCreateDeviceInfoListExW(ClassGuid: POINTER(Guid), hwndParent: win32more.Windows.Win32.Foundation.HWND, MachineName: win32more.Windows.Win32.Foundation.PWSTR, Reserved: VoidPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO: ...
SetupDiCreateDeviceInfoListEx = UnicodeAlias('SetupDiCreateDeviceInfoListExW')
@winfunctype('SETUPAPI.dll')
def SetupDiGetDeviceInfoListClass(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, ClassGuid: POINTER(Guid)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetDeviceInfoListDetailA(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoSetDetailData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_LIST_DETAIL_DATA_A)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetDeviceInfoListDetailW(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoSetDetailData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_LIST_DETAIL_DATA_W)) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupDiGetDeviceInfoListDetail = UnicodeAlias('SetupDiGetDeviceInfoListDetailW')
@winfunctype('SETUPAPI.dll')
def SetupDiCreateDeviceInfoA(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceName: win32more.Windows.Win32.Foundation.PSTR, ClassGuid: POINTER(Guid), DeviceDescription: win32more.Windows.Win32.Foundation.PSTR, hwndParent: win32more.Windows.Win32.Foundation.HWND, CreationFlags: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_CREATION_FLAGS, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiCreateDeviceInfoW(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceName: win32more.Windows.Win32.Foundation.PWSTR, ClassGuid: POINTER(Guid), DeviceDescription: win32more.Windows.Win32.Foundation.PWSTR, hwndParent: win32more.Windows.Win32.Foundation.HWND, CreationFlags: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_CREATION_FLAGS, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA)) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupDiCreateDeviceInfo = UnicodeAlias('SetupDiCreateDeviceInfoW')
@winfunctype('SETUPAPI.dll')
def SetupDiOpenDeviceInfoA(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInstanceId: win32more.Windows.Win32.Foundation.PSTR, hwndParent: win32more.Windows.Win32.Foundation.HWND, OpenFlags: UInt32, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiOpenDeviceInfoW(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInstanceId: win32more.Windows.Win32.Foundation.PWSTR, hwndParent: win32more.Windows.Win32.Foundation.HWND, OpenFlags: UInt32, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA)) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupDiOpenDeviceInfo = UnicodeAlias('SetupDiOpenDeviceInfoW')
@winfunctype('SETUPAPI.dll')
def SetupDiGetDeviceInstanceIdA(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA), DeviceInstanceId: win32more.Windows.Win32.Foundation.PSTR, DeviceInstanceIdSize: UInt32, RequiredSize: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetDeviceInstanceIdW(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA), DeviceInstanceId: win32more.Windows.Win32.Foundation.PWSTR, DeviceInstanceIdSize: UInt32, RequiredSize: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupDiGetDeviceInstanceId = UnicodeAlias('SetupDiGetDeviceInstanceIdW')
@winfunctype('SETUPAPI.dll')
def SetupDiDeleteDeviceInfo(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiEnumDeviceInfo(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, MemberIndex: UInt32, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiDestroyDeviceInfoList(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiEnumDeviceInterfaces(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA), InterfaceClassGuid: POINTER(Guid), MemberIndex: UInt32, DeviceInterfaceData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiCreateDeviceInterfaceA(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA), InterfaceClassGuid: POINTER(Guid), ReferenceString: win32more.Windows.Win32.Foundation.PSTR, CreationFlags: UInt32, DeviceInterfaceData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiCreateDeviceInterfaceW(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA), InterfaceClassGuid: POINTER(Guid), ReferenceString: win32more.Windows.Win32.Foundation.PWSTR, CreationFlags: UInt32, DeviceInterfaceData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA)) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupDiCreateDeviceInterface = UnicodeAlias('SetupDiCreateDeviceInterfaceW')
@winfunctype('SETUPAPI.dll')
def SetupDiOpenDeviceInterfaceA(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DevicePath: win32more.Windows.Win32.Foundation.PSTR, OpenFlags: UInt32, DeviceInterfaceData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiOpenDeviceInterfaceW(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DevicePath: win32more.Windows.Win32.Foundation.PWSTR, OpenFlags: UInt32, DeviceInterfaceData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA)) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupDiOpenDeviceInterface = UnicodeAlias('SetupDiOpenDeviceInterfaceW')
@winfunctype('SETUPAPI.dll')
def SetupDiGetDeviceInterfaceAlias(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInterfaceData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA), AliasInterfaceClassGuid: POINTER(Guid), AliasDeviceInterfaceData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiDeleteDeviceInterfaceData(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInterfaceData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiRemoveDeviceInterface(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInterfaceData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetDeviceInterfaceDetailA(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInterfaceData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA), DeviceInterfaceDetailData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DETAIL_DATA_A), DeviceInterfaceDetailDataSize: UInt32, RequiredSize: POINTER(UInt32), DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetDeviceInterfaceDetailW(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInterfaceData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA), DeviceInterfaceDetailData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DETAIL_DATA_W), DeviceInterfaceDetailDataSize: UInt32, RequiredSize: POINTER(UInt32), DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA)) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupDiGetDeviceInterfaceDetail = UnicodeAlias('SetupDiGetDeviceInterfaceDetailW')
@winfunctype('SETUPAPI.dll')
def SetupDiInstallDeviceInterfaces(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSetDeviceInterfaceDefault(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInterfaceData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA), Flags: UInt32, Reserved: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiRegisterDeviceInfo(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA), Flags: UInt32, CompareProc: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PSP_DETSIG_CMPPROC, CompareContext: VoidPtr, DupDeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiBuildDriverInfoList(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA), DriverType: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DRIVER_TYPE) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiCancelDriverInfoSearch(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiEnumDriverInfoA(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA), DriverType: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DRIVER_TYPE, MemberIndex: UInt32, DriverInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINFO_DATA_V2_A)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiEnumDriverInfoW(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA), DriverType: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DRIVER_TYPE, MemberIndex: UInt32, DriverInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINFO_DATA_V2_W)) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupDiEnumDriverInfo = UnicodeAlias('SetupDiEnumDriverInfoW')
@winfunctype('SETUPAPI.dll')
def SetupDiGetSelectedDriverA(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA), DriverInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINFO_DATA_V2_A)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetSelectedDriverW(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA), DriverInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINFO_DATA_V2_W)) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupDiGetSelectedDriver = UnicodeAlias('SetupDiGetSelectedDriverW')
@winfunctype('SETUPAPI.dll')
def SetupDiSetSelectedDriverA(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA), DriverInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINFO_DATA_V2_A)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSetSelectedDriverW(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA), DriverInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINFO_DATA_V2_W)) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupDiSetSelectedDriver = UnicodeAlias('SetupDiSetSelectedDriverW')
@winfunctype('SETUPAPI.dll')
def SetupDiGetDriverInfoDetailA(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA), DriverInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINFO_DATA_V2_A), DriverInfoDetailData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINFO_DETAIL_DATA_A), DriverInfoDetailDataSize: UInt32, RequiredSize: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetDriverInfoDetailW(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA), DriverInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINFO_DATA_V2_W), DriverInfoDetailData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINFO_DETAIL_DATA_W), DriverInfoDetailDataSize: UInt32, RequiredSize: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupDiGetDriverInfoDetail = UnicodeAlias('SetupDiGetDriverInfoDetailW')
@winfunctype('SETUPAPI.dll')
def SetupDiDestroyDriverInfoList(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA), DriverType: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DRIVER_TYPE) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassDevsA(ClassGuid: POINTER(Guid), Enumerator: win32more.Windows.Win32.Foundation.PSTR, hwndParent: win32more.Windows.Win32.Foundation.HWND, Flags: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_GET_CLASS_DEVS_FLAGS) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassDevsW(ClassGuid: POINTER(Guid), Enumerator: win32more.Windows.Win32.Foundation.PWSTR, hwndParent: win32more.Windows.Win32.Foundation.HWND, Flags: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_GET_CLASS_DEVS_FLAGS) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO: ...
SetupDiGetClassDevs = UnicodeAlias('SetupDiGetClassDevsW')
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassDevsExA(ClassGuid: POINTER(Guid), Enumerator: win32more.Windows.Win32.Foundation.PSTR, hwndParent: win32more.Windows.Win32.Foundation.HWND, Flags: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_GET_CLASS_DEVS_FLAGS, DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, MachineName: win32more.Windows.Win32.Foundation.PSTR, Reserved: VoidPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassDevsExW(ClassGuid: POINTER(Guid), Enumerator: win32more.Windows.Win32.Foundation.PWSTR, hwndParent: win32more.Windows.Win32.Foundation.HWND, Flags: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_GET_CLASS_DEVS_FLAGS, DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, MachineName: win32more.Windows.Win32.Foundation.PWSTR, Reserved: VoidPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO: ...
SetupDiGetClassDevsEx = UnicodeAlias('SetupDiGetClassDevsExW')
@winfunctype('SETUPAPI.dll')
def SetupDiGetINFClassA(InfName: win32more.Windows.Win32.Foundation.PSTR, ClassGuid: POINTER(Guid), ClassName: win32more.Windows.Win32.Foundation.PSTR, ClassNameSize: UInt32, RequiredSize: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetINFClassW(InfName: win32more.Windows.Win32.Foundation.PWSTR, ClassGuid: POINTER(Guid), ClassName: win32more.Windows.Win32.Foundation.PWSTR, ClassNameSize: UInt32, RequiredSize: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupDiGetINFClass = UnicodeAlias('SetupDiGetINFClassW')
@winfunctype('SETUPAPI.dll')
def SetupDiBuildClassInfoList(Flags: UInt32, ClassGuidList: POINTER(Guid), ClassGuidListSize: UInt32, RequiredSize: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiBuildClassInfoListExA(Flags: UInt32, ClassGuidList: POINTER(Guid), ClassGuidListSize: UInt32, RequiredSize: POINTER(UInt32), MachineName: win32more.Windows.Win32.Foundation.PSTR, Reserved: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiBuildClassInfoListExW(Flags: UInt32, ClassGuidList: POINTER(Guid), ClassGuidListSize: UInt32, RequiredSize: POINTER(UInt32), MachineName: win32more.Windows.Win32.Foundation.PWSTR, Reserved: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupDiBuildClassInfoListEx = UnicodeAlias('SetupDiBuildClassInfoListExW')
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassDescriptionA(ClassGuid: POINTER(Guid), ClassDescription: win32more.Windows.Win32.Foundation.PSTR, ClassDescriptionSize: UInt32, RequiredSize: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassDescriptionW(ClassGuid: POINTER(Guid), ClassDescription: win32more.Windows.Win32.Foundation.PWSTR, ClassDescriptionSize: UInt32, RequiredSize: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupDiGetClassDescription = UnicodeAlias('SetupDiGetClassDescriptionW')
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassDescriptionExA(ClassGuid: POINTER(Guid), ClassDescription: win32more.Windows.Win32.Foundation.PSTR, ClassDescriptionSize: UInt32, RequiredSize: POINTER(UInt32), MachineName: win32more.Windows.Win32.Foundation.PSTR, Reserved: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassDescriptionExW(ClassGuid: POINTER(Guid), ClassDescription: win32more.Windows.Win32.Foundation.PWSTR, ClassDescriptionSize: UInt32, RequiredSize: POINTER(UInt32), MachineName: win32more.Windows.Win32.Foundation.PWSTR, Reserved: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupDiGetClassDescriptionEx = UnicodeAlias('SetupDiGetClassDescriptionExW')
@winfunctype('SETUPAPI.dll')
def SetupDiCallClassInstaller(InstallFunction: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DI_FUNCTION, DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSelectDevice(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSelectBestCompatDrv(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiInstallDevice(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiInstallDriverFiles(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiRegisterCoDeviceInstallers(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiRemoveDevice(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiUnremoveDevice(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiRestartDevices(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiChangeState(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiInstallClassA(hwndParent: win32more.Windows.Win32.Foundation.HWND, InfFileName: win32more.Windows.Win32.Foundation.PSTR, Flags: UInt32, FileQueue: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiInstallClassW(hwndParent: win32more.Windows.Win32.Foundation.HWND, InfFileName: win32more.Windows.Win32.Foundation.PWSTR, Flags: UInt32, FileQueue: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupDiInstallClass = UnicodeAlias('SetupDiInstallClassW')
@winfunctype('SETUPAPI.dll')
def SetupDiInstallClassExA(hwndParent: win32more.Windows.Win32.Foundation.HWND, InfFileName: win32more.Windows.Win32.Foundation.PSTR, Flags: UInt32, FileQueue: VoidPtr, InterfaceClassGuid: POINTER(Guid), Reserved1: VoidPtr, Reserved2: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiInstallClassExW(hwndParent: win32more.Windows.Win32.Foundation.HWND, InfFileName: win32more.Windows.Win32.Foundation.PWSTR, Flags: UInt32, FileQueue: VoidPtr, InterfaceClassGuid: POINTER(Guid), Reserved1: VoidPtr, Reserved2: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupDiInstallClassEx = UnicodeAlias('SetupDiInstallClassExW')
@winfunctype('SETUPAPI.dll')
def SetupDiOpenClassRegKey(ClassGuid: POINTER(Guid), samDesired: UInt32) -> win32more.Windows.Win32.System.Registry.HKEY: ...
@winfunctype('SETUPAPI.dll')
def SetupDiOpenClassRegKeyExA(ClassGuid: POINTER(Guid), samDesired: UInt32, Flags: UInt32, MachineName: win32more.Windows.Win32.Foundation.PSTR, Reserved: VoidPtr) -> win32more.Windows.Win32.System.Registry.HKEY: ...
@winfunctype('SETUPAPI.dll')
def SetupDiOpenClassRegKeyExW(ClassGuid: POINTER(Guid), samDesired: UInt32, Flags: UInt32, MachineName: win32more.Windows.Win32.Foundation.PWSTR, Reserved: VoidPtr) -> win32more.Windows.Win32.System.Registry.HKEY: ...
SetupDiOpenClassRegKeyEx = UnicodeAlias('SetupDiOpenClassRegKeyExW')
@winfunctype('SETUPAPI.dll')
def SetupDiCreateDeviceInterfaceRegKeyA(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInterfaceData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA), Reserved: UInt32, samDesired: UInt32, InfHandle: VoidPtr, InfSectionName: win32more.Windows.Win32.Foundation.PSTR) -> win32more.Windows.Win32.System.Registry.HKEY: ...
@winfunctype('SETUPAPI.dll')
def SetupDiCreateDeviceInterfaceRegKeyW(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInterfaceData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA), Reserved: UInt32, samDesired: UInt32, InfHandle: VoidPtr, InfSectionName: win32more.Windows.Win32.Foundation.PWSTR) -> win32more.Windows.Win32.System.Registry.HKEY: ...
SetupDiCreateDeviceInterfaceRegKey = UnicodeAlias('SetupDiCreateDeviceInterfaceRegKeyW')
@winfunctype('SETUPAPI.dll')
def SetupDiOpenDeviceInterfaceRegKey(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInterfaceData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA), Reserved: UInt32, samDesired: UInt32) -> win32more.Windows.Win32.System.Registry.HKEY: ...
@winfunctype('SETUPAPI.dll')
def SetupDiDeleteDeviceInterfaceRegKey(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInterfaceData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA), Reserved: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiCreateDevRegKeyA(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA), Scope: UInt32, HwProfile: UInt32, KeyType: UInt32, InfHandle: VoidPtr, InfSectionName: win32more.Windows.Win32.Foundation.PSTR) -> win32more.Windows.Win32.System.Registry.HKEY: ...
@winfunctype('SETUPAPI.dll')
def SetupDiCreateDevRegKeyW(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA), Scope: UInt32, HwProfile: UInt32, KeyType: UInt32, InfHandle: VoidPtr, InfSectionName: win32more.Windows.Win32.Foundation.PWSTR) -> win32more.Windows.Win32.System.Registry.HKEY: ...
SetupDiCreateDevRegKey = UnicodeAlias('SetupDiCreateDevRegKeyW')
@winfunctype('SETUPAPI.dll')
def SetupDiOpenDevRegKey(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA), Scope: UInt32, HwProfile: UInt32, KeyType: UInt32, samDesired: UInt32) -> win32more.Windows.Win32.System.Registry.HKEY: ...
@winfunctype('SETUPAPI.dll')
def SetupDiDeleteDevRegKey(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA), Scope: UInt32, HwProfile: UInt32, KeyType: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetHwProfileList(HwProfileList: POINTER(UInt32), HwProfileListSize: UInt32, RequiredSize: POINTER(UInt32), CurrentlyActiveIndex: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetHwProfileListExA(HwProfileList: POINTER(UInt32), HwProfileListSize: UInt32, RequiredSize: POINTER(UInt32), CurrentlyActiveIndex: POINTER(UInt32), MachineName: win32more.Windows.Win32.Foundation.PSTR, Reserved: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetHwProfileListExW(HwProfileList: POINTER(UInt32), HwProfileListSize: UInt32, RequiredSize: POINTER(UInt32), CurrentlyActiveIndex: POINTER(UInt32), MachineName: win32more.Windows.Win32.Foundation.PWSTR, Reserved: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupDiGetHwProfileListEx = UnicodeAlias('SetupDiGetHwProfileListExW')
@winfunctype('SETUPAPI.dll')
def SetupDiGetDevicePropertyKeys(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA), PropertyKeyArray: POINTER(win32more.Windows.Win32.Foundation.DEVPROPKEY), PropertyKeyCount: UInt32, RequiredPropertyKeyCount: POINTER(UInt32), Flags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetDevicePropertyW(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA), PropertyKey: POINTER(win32more.Windows.Win32.Foundation.DEVPROPKEY), PropertyType: POINTER(win32more.Windows.Win32.Devices.Properties.DEVPROPTYPE), PropertyBuffer: POINTER(Byte), PropertyBufferSize: UInt32, RequiredSize: POINTER(UInt32), Flags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSetDevicePropertyW(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA), PropertyKey: POINTER(win32more.Windows.Win32.Foundation.DEVPROPKEY), PropertyType: win32more.Windows.Win32.Devices.Properties.DEVPROPTYPE, PropertyBuffer: POINTER(Byte), PropertyBufferSize: UInt32, Flags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetDeviceInterfacePropertyKeys(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInterfaceData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA), PropertyKeyArray: POINTER(win32more.Windows.Win32.Foundation.DEVPROPKEY), PropertyKeyCount: UInt32, RequiredPropertyKeyCount: POINTER(UInt32), Flags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetDeviceInterfacePropertyW(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInterfaceData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA), PropertyKey: POINTER(win32more.Windows.Win32.Foundation.DEVPROPKEY), PropertyType: POINTER(win32more.Windows.Win32.Devices.Properties.DEVPROPTYPE), PropertyBuffer: POINTER(Byte), PropertyBufferSize: UInt32, RequiredSize: POINTER(UInt32), Flags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSetDeviceInterfacePropertyW(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInterfaceData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA), PropertyKey: POINTER(win32more.Windows.Win32.Foundation.DEVPROPKEY), PropertyType: win32more.Windows.Win32.Devices.Properties.DEVPROPTYPE, PropertyBuffer: POINTER(Byte), PropertyBufferSize: UInt32, Flags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassPropertyKeys(ClassGuid: POINTER(Guid), PropertyKeyArray: POINTER(win32more.Windows.Win32.Foundation.DEVPROPKEY), PropertyKeyCount: UInt32, RequiredPropertyKeyCount: POINTER(UInt32), Flags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassPropertyKeysExW(ClassGuid: POINTER(Guid), PropertyKeyArray: POINTER(win32more.Windows.Win32.Foundation.DEVPROPKEY), PropertyKeyCount: UInt32, RequiredPropertyKeyCount: POINTER(UInt32), Flags: UInt32, MachineName: win32more.Windows.Win32.Foundation.PWSTR, Reserved: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassPropertyW(ClassGuid: POINTER(Guid), PropertyKey: POINTER(win32more.Windows.Win32.Foundation.DEVPROPKEY), PropertyType: POINTER(win32more.Windows.Win32.Devices.Properties.DEVPROPTYPE), PropertyBuffer: POINTER(Byte), PropertyBufferSize: UInt32, RequiredSize: POINTER(UInt32), Flags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassPropertyExW(ClassGuid: POINTER(Guid), PropertyKey: POINTER(win32more.Windows.Win32.Foundation.DEVPROPKEY), PropertyType: POINTER(win32more.Windows.Win32.Devices.Properties.DEVPROPTYPE), PropertyBuffer: POINTER(Byte), PropertyBufferSize: UInt32, RequiredSize: POINTER(UInt32), Flags: UInt32, MachineName: win32more.Windows.Win32.Foundation.PWSTR, Reserved: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSetClassPropertyW(ClassGuid: POINTER(Guid), PropertyKey: POINTER(win32more.Windows.Win32.Foundation.DEVPROPKEY), PropertyType: win32more.Windows.Win32.Devices.Properties.DEVPROPTYPE, PropertyBuffer: POINTER(Byte), PropertyBufferSize: UInt32, Flags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSetClassPropertyExW(ClassGuid: POINTER(Guid), PropertyKey: POINTER(win32more.Windows.Win32.Foundation.DEVPROPKEY), PropertyType: win32more.Windows.Win32.Devices.Properties.DEVPROPTYPE, PropertyBuffer: POINTER(Byte), PropertyBufferSize: UInt32, Flags: UInt32, MachineName: win32more.Windows.Win32.Foundation.PWSTR, Reserved: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetDeviceRegistryPropertyA(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA), Property: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_REGISTRY_PROPERTY, PropertyRegDataType: POINTER(UInt32), PropertyBuffer: POINTER(Byte), PropertyBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetDeviceRegistryPropertyW(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA), Property: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_REGISTRY_PROPERTY, PropertyRegDataType: POINTER(UInt32), PropertyBuffer: POINTER(Byte), PropertyBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupDiGetDeviceRegistryProperty = UnicodeAlias('SetupDiGetDeviceRegistryPropertyW')
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassRegistryPropertyA(ClassGuid: POINTER(Guid), Property: UInt32, PropertyRegDataType: POINTER(UInt32), PropertyBuffer: POINTER(Byte), PropertyBufferSize: UInt32, RequiredSize: POINTER(UInt32), MachineName: win32more.Windows.Win32.Foundation.PSTR, Reserved: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassRegistryPropertyW(ClassGuid: POINTER(Guid), Property: UInt32, PropertyRegDataType: POINTER(UInt32), PropertyBuffer: POINTER(Byte), PropertyBufferSize: UInt32, RequiredSize: POINTER(UInt32), MachineName: win32more.Windows.Win32.Foundation.PWSTR, Reserved: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupDiGetClassRegistryProperty = UnicodeAlias('SetupDiGetClassRegistryPropertyW')
@winfunctype('SETUPAPI.dll')
def SetupDiSetDeviceRegistryPropertyA(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA), Property: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_REGISTRY_PROPERTY, PropertyBuffer: POINTER(Byte), PropertyBufferSize: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSetDeviceRegistryPropertyW(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA), Property: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_REGISTRY_PROPERTY, PropertyBuffer: POINTER(Byte), PropertyBufferSize: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupDiSetDeviceRegistryProperty = UnicodeAlias('SetupDiSetDeviceRegistryPropertyW')
@winfunctype('SETUPAPI.dll')
def SetupDiSetClassRegistryPropertyA(ClassGuid: POINTER(Guid), Property: UInt32, PropertyBuffer: POINTER(Byte), PropertyBufferSize: UInt32, MachineName: win32more.Windows.Win32.Foundation.PSTR, Reserved: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSetClassRegistryPropertyW(ClassGuid: POINTER(Guid), Property: UInt32, PropertyBuffer: POINTER(Byte), PropertyBufferSize: UInt32, MachineName: win32more.Windows.Win32.Foundation.PWSTR, Reserved: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupDiSetClassRegistryProperty = UnicodeAlias('SetupDiSetClassRegistryPropertyW')
@winfunctype('SETUPAPI.dll')
def SetupDiGetDeviceInstallParamsA(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA), DeviceInstallParams: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINSTALL_PARAMS_A)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetDeviceInstallParamsW(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA), DeviceInstallParams: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINSTALL_PARAMS_W)) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupDiGetDeviceInstallParams = UnicodeAlias('SetupDiGetDeviceInstallParamsW')
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassInstallParamsA(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA), ClassInstallParams: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER), ClassInstallParamsSize: UInt32, RequiredSize: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassInstallParamsW(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA), ClassInstallParams: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER), ClassInstallParamsSize: UInt32, RequiredSize: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupDiGetClassInstallParams = UnicodeAlias('SetupDiGetClassInstallParamsW')
@winfunctype('SETUPAPI.dll')
def SetupDiSetDeviceInstallParamsA(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA), DeviceInstallParams: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINSTALL_PARAMS_A)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSetDeviceInstallParamsW(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA), DeviceInstallParams: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINSTALL_PARAMS_W)) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupDiSetDeviceInstallParams = UnicodeAlias('SetupDiSetDeviceInstallParamsW')
@winfunctype('SETUPAPI.dll')
def SetupDiSetClassInstallParamsA(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA), ClassInstallParams: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER), ClassInstallParamsSize: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSetClassInstallParamsW(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA), ClassInstallParams: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER), ClassInstallParamsSize: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupDiSetClassInstallParams = UnicodeAlias('SetupDiSetClassInstallParamsW')
@winfunctype('SETUPAPI.dll')
def SetupDiGetDriverInstallParamsA(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA), DriverInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINFO_DATA_V2_A), DriverInstallParams: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINSTALL_PARAMS)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetDriverInstallParamsW(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA), DriverInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINFO_DATA_V2_W), DriverInstallParams: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINSTALL_PARAMS)) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupDiGetDriverInstallParams = UnicodeAlias('SetupDiGetDriverInstallParamsW')
@winfunctype('SETUPAPI.dll')
def SetupDiSetDriverInstallParamsA(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA), DriverInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINFO_DATA_V2_A), DriverInstallParams: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINSTALL_PARAMS)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSetDriverInstallParamsW(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA), DriverInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINFO_DATA_V2_W), DriverInstallParams: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINSTALL_PARAMS)) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupDiSetDriverInstallParams = UnicodeAlias('SetupDiSetDriverInstallParamsW')
@winfunctype('SETUPAPI.dll')
def SetupDiLoadClassIcon(ClassGuid: POINTER(Guid), LargeIcon: POINTER(win32more.Windows.Win32.UI.WindowsAndMessaging.HICON), MiniIconIndex: POINTER(Int32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiLoadDeviceIcon(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA), cxIcon: UInt32, cyIcon: UInt32, Flags: UInt32, hIcon: POINTER(win32more.Windows.Win32.UI.WindowsAndMessaging.HICON)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiDrawMiniIcon(hdc: win32more.Windows.Win32.Graphics.Gdi.HDC, rc: win32more.Windows.Win32.Foundation.RECT, MiniIconIndex: Int32, Flags: UInt32) -> Int32: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassBitmapIndex(ClassGuid: POINTER(Guid), MiniIconIndex: POINTER(Int32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassImageList(ClassImageListData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSIMAGELIST_DATA)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassImageListExA(ClassImageListData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSIMAGELIST_DATA), MachineName: win32more.Windows.Win32.Foundation.PSTR, Reserved: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassImageListExW(ClassImageListData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSIMAGELIST_DATA), MachineName: win32more.Windows.Win32.Foundation.PWSTR, Reserved: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupDiGetClassImageListEx = UnicodeAlias('SetupDiGetClassImageListExW')
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassImageIndex(ClassImageListData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSIMAGELIST_DATA), ClassGuid: POINTER(Guid), ImageIndex: POINTER(Int32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiDestroyClassImageList(ClassImageListData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSIMAGELIST_DATA)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassDevPropertySheetsA(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA), PropertySheetHeader: POINTER(win32more.Windows.Win32.UI.Controls.PROPSHEETHEADERA_V2), PropertySheetHeaderPageListSize: UInt32, RequiredSize: POINTER(UInt32), PropertySheetType: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassDevPropertySheetsW(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA), PropertySheetHeader: POINTER(win32more.Windows.Win32.UI.Controls.PROPSHEETHEADERW_V2), PropertySheetHeaderPageListSize: UInt32, RequiredSize: POINTER(UInt32), PropertySheetType: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupDiGetClassDevPropertySheets = UnicodeAlias('SetupDiGetClassDevPropertySheetsW')
@winfunctype('SETUPAPI.dll')
def SetupDiAskForOEMDisk(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSelectOEMDrv(hwndParent: win32more.Windows.Win32.Foundation.HWND, DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiClassNameFromGuidA(ClassGuid: POINTER(Guid), ClassName: win32more.Windows.Win32.Foundation.PSTR, ClassNameSize: UInt32, RequiredSize: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiClassNameFromGuidW(ClassGuid: POINTER(Guid), ClassName: win32more.Windows.Win32.Foundation.PWSTR, ClassNameSize: UInt32, RequiredSize: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupDiClassNameFromGuid = UnicodeAlias('SetupDiClassNameFromGuidW')
@winfunctype('SETUPAPI.dll')
def SetupDiClassNameFromGuidExA(ClassGuid: POINTER(Guid), ClassName: win32more.Windows.Win32.Foundation.PSTR, ClassNameSize: UInt32, RequiredSize: POINTER(UInt32), MachineName: win32more.Windows.Win32.Foundation.PSTR, Reserved: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiClassNameFromGuidExW(ClassGuid: POINTER(Guid), ClassName: win32more.Windows.Win32.Foundation.PWSTR, ClassNameSize: UInt32, RequiredSize: POINTER(UInt32), MachineName: win32more.Windows.Win32.Foundation.PWSTR, Reserved: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupDiClassNameFromGuidEx = UnicodeAlias('SetupDiClassNameFromGuidExW')
@winfunctype('SETUPAPI.dll')
def SetupDiClassGuidsFromNameA(ClassName: win32more.Windows.Win32.Foundation.PSTR, ClassGuidList: POINTER(Guid), ClassGuidListSize: UInt32, RequiredSize: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiClassGuidsFromNameW(ClassName: win32more.Windows.Win32.Foundation.PWSTR, ClassGuidList: POINTER(Guid), ClassGuidListSize: UInt32, RequiredSize: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupDiClassGuidsFromName = UnicodeAlias('SetupDiClassGuidsFromNameW')
@winfunctype('SETUPAPI.dll')
def SetupDiClassGuidsFromNameExA(ClassName: win32more.Windows.Win32.Foundation.PSTR, ClassGuidList: POINTER(Guid), ClassGuidListSize: UInt32, RequiredSize: POINTER(UInt32), MachineName: win32more.Windows.Win32.Foundation.PSTR, Reserved: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiClassGuidsFromNameExW(ClassName: win32more.Windows.Win32.Foundation.PWSTR, ClassGuidList: POINTER(Guid), ClassGuidListSize: UInt32, RequiredSize: POINTER(UInt32), MachineName: win32more.Windows.Win32.Foundation.PWSTR, Reserved: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupDiClassGuidsFromNameEx = UnicodeAlias('SetupDiClassGuidsFromNameExW')
@winfunctype('SETUPAPI.dll')
def SetupDiGetHwProfileFriendlyNameA(HwProfile: UInt32, FriendlyName: win32more.Windows.Win32.Foundation.PSTR, FriendlyNameSize: UInt32, RequiredSize: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetHwProfileFriendlyNameW(HwProfile: UInt32, FriendlyName: win32more.Windows.Win32.Foundation.PWSTR, FriendlyNameSize: UInt32, RequiredSize: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupDiGetHwProfileFriendlyName = UnicodeAlias('SetupDiGetHwProfileFriendlyNameW')
@winfunctype('SETUPAPI.dll')
def SetupDiGetHwProfileFriendlyNameExA(HwProfile: UInt32, FriendlyName: win32more.Windows.Win32.Foundation.PSTR, FriendlyNameSize: UInt32, RequiredSize: POINTER(UInt32), MachineName: win32more.Windows.Win32.Foundation.PSTR, Reserved: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetHwProfileFriendlyNameExW(HwProfile: UInt32, FriendlyName: win32more.Windows.Win32.Foundation.PWSTR, FriendlyNameSize: UInt32, RequiredSize: POINTER(UInt32), MachineName: win32more.Windows.Win32.Foundation.PWSTR, Reserved: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupDiGetHwProfileFriendlyNameEx = UnicodeAlias('SetupDiGetHwProfileFriendlyNameExW')
@winfunctype('SETUPAPI.dll')
def SetupDiGetWizardPage(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA), InstallWizardData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_INSTALLWIZARD_DATA), PageType: UInt32, Flags: UInt32) -> win32more.Windows.Win32.UI.Controls.HPROPSHEETPAGE: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetSelectedDevice(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSetSelectedDevice(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetActualModelsSectionA(Context: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT), AlternatePlatformInfo: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_ALTPLATFORM_INFO_V2), InfSectionWithExt: win32more.Windows.Win32.Foundation.PSTR, InfSectionWithExtSize: UInt32, RequiredSize: POINTER(UInt32), Reserved: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetActualModelsSectionW(Context: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT), AlternatePlatformInfo: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_ALTPLATFORM_INFO_V2), InfSectionWithExt: win32more.Windows.Win32.Foundation.PWSTR, InfSectionWithExtSize: UInt32, RequiredSize: POINTER(UInt32), Reserved: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupDiGetActualModelsSection = UnicodeAlias('SetupDiGetActualModelsSectionW')
@winfunctype('SETUPAPI.dll')
def SetupDiGetActualSectionToInstallA(InfHandle: VoidPtr, InfSectionName: win32more.Windows.Win32.Foundation.PSTR, InfSectionWithExt: win32more.Windows.Win32.Foundation.PSTR, InfSectionWithExtSize: UInt32, RequiredSize: POINTER(UInt32), Extension: POINTER(win32more.Windows.Win32.Foundation.PSTR)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetActualSectionToInstallW(InfHandle: VoidPtr, InfSectionName: win32more.Windows.Win32.Foundation.PWSTR, InfSectionWithExt: win32more.Windows.Win32.Foundation.PWSTR, InfSectionWithExtSize: UInt32, RequiredSize: POINTER(UInt32), Extension: POINTER(win32more.Windows.Win32.Foundation.PWSTR)) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupDiGetActualSectionToInstall = UnicodeAlias('SetupDiGetActualSectionToInstallW')
@winfunctype('SETUPAPI.dll')
def SetupDiGetActualSectionToInstallExA(InfHandle: VoidPtr, InfSectionName: win32more.Windows.Win32.Foundation.PSTR, AlternatePlatformInfo: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_ALTPLATFORM_INFO_V2), InfSectionWithExt: win32more.Windows.Win32.Foundation.PSTR, InfSectionWithExtSize: UInt32, RequiredSize: POINTER(UInt32), Extension: POINTER(win32more.Windows.Win32.Foundation.PSTR), Reserved: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetActualSectionToInstallExW(InfHandle: VoidPtr, InfSectionName: win32more.Windows.Win32.Foundation.PWSTR, AlternatePlatformInfo: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_ALTPLATFORM_INFO_V2), InfSectionWithExt: win32more.Windows.Win32.Foundation.PWSTR, InfSectionWithExtSize: UInt32, RequiredSize: POINTER(UInt32), Extension: POINTER(win32more.Windows.Win32.Foundation.PWSTR), Reserved: VoidPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupDiGetActualSectionToInstallEx = UnicodeAlias('SetupDiGetActualSectionToInstallExW')
@winfunctype('SETUPAPI.dll')
def SetupEnumInfSectionsA(InfHandle: VoidPtr, Index: UInt32, Buffer: win32more.Windows.Win32.Foundation.PSTR, Size: UInt32, SizeNeeded: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupEnumInfSectionsW(InfHandle: VoidPtr, Index: UInt32, Buffer: win32more.Windows.Win32.Foundation.PWSTR, Size: UInt32, SizeNeeded: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupEnumInfSections = UnicodeAlias('SetupEnumInfSectionsW')
@winfunctype('SETUPAPI.dll')
def SetupVerifyInfFileA(InfName: win32more.Windows.Win32.Foundation.PSTR, AltPlatformInfo: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_ALTPLATFORM_INFO_V2), InfSignerInfo: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_INF_SIGNER_INFO_V2_A)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupVerifyInfFileW(InfName: win32more.Windows.Win32.Foundation.PWSTR, AltPlatformInfo: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_ALTPLATFORM_INFO_V2), InfSignerInfo: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_INF_SIGNER_INFO_V2_W)) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupVerifyInfFile = UnicodeAlias('SetupVerifyInfFileW')
@winfunctype('SETUPAPI.dll')
def SetupDiGetCustomDevicePropertyA(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA), CustomPropertyName: win32more.Windows.Win32.Foundation.PSTR, Flags: UInt32, PropertyRegDataType: POINTER(UInt32), PropertyBuffer: POINTER(Byte), PropertyBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetCustomDevicePropertyW(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA), CustomPropertyName: win32more.Windows.Win32.Foundation.PWSTR, Flags: UInt32, PropertyRegDataType: POINTER(UInt32), PropertyBuffer: POINTER(Byte), PropertyBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupDiGetCustomDeviceProperty = UnicodeAlias('SetupDiGetCustomDevicePropertyW')
@winfunctype('SETUPAPI.dll')
def SetupConfigureWmiFromInfSectionA(InfHandle: VoidPtr, SectionName: win32more.Windows.Win32.Foundation.PSTR, Flags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupConfigureWmiFromInfSectionW(InfHandle: VoidPtr, SectionName: win32more.Windows.Win32.Foundation.PWSTR, Flags: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
SetupConfigureWmiFromInfSection = UnicodeAlias('SetupConfigureWmiFromInfSectionW')
@winfunctype('CFGMGR32.dll')
def CM_Add_Empty_Log_Conf(plcLogConf: POINTER(UIntPtr), dnDevInst: UInt32, Priority: win32more.Windows.Win32.Data.HtmlHelp.PRIORITY, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Add_Empty_Log_Conf_Ex(plcLogConf: POINTER(UIntPtr), dnDevInst: UInt32, Priority: win32more.Windows.Win32.Data.HtmlHelp.PRIORITY, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Add_IDA(dnDevInst: UInt32, pszID: win32more.Windows.Win32.Foundation.PSTR, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Add_IDW(dnDevInst: UInt32, pszID: win32more.Windows.Win32.Foundation.PWSTR, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
CM_Add_ID = UnicodeAlias('CM_Add_IDW')
@winfunctype('CFGMGR32.dll')
def CM_Add_ID_ExA(dnDevInst: UInt32, pszID: win32more.Windows.Win32.Foundation.PSTR, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Add_ID_ExW(dnDevInst: UInt32, pszID: win32more.Windows.Win32.Foundation.PWSTR, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
CM_Add_ID_Ex = UnicodeAlias('CM_Add_ID_ExW')
@winfunctype('CFGMGR32.dll')
def CM_Add_Range(ullStartValue: UInt64, ullEndValue: UInt64, rlh: UIntPtr, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Add_Res_Des(prdResDes: POINTER(UIntPtr), lcLogConf: UIntPtr, ResourceID: UInt32, ResourceData: VoidPtr, ResourceLen: UInt32, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Add_Res_Des_Ex(prdResDes: POINTER(UIntPtr), lcLogConf: UIntPtr, ResourceID: UInt32, ResourceData: VoidPtr, ResourceLen: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Connect_MachineA(UNCServerName: win32more.Windows.Win32.Foundation.PSTR, phMachine: POINTER(IntPtr)) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Connect_MachineW(UNCServerName: win32more.Windows.Win32.Foundation.PWSTR, phMachine: POINTER(IntPtr)) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
CM_Connect_Machine = UnicodeAlias('CM_Connect_MachineW')
@winfunctype('CFGMGR32.dll')
def CM_Create_DevNodeA(pdnDevInst: POINTER(UInt32), pDeviceID: win32more.Windows.Win32.Foundation.PSTR, dnParent: UInt32, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Create_DevNodeW(pdnDevInst: POINTER(UInt32), pDeviceID: win32more.Windows.Win32.Foundation.PWSTR, dnParent: UInt32, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
CM_Create_DevNode = UnicodeAlias('CM_Create_DevNodeW')
@winfunctype('CFGMGR32.dll')
def CM_Create_DevNode_ExA(pdnDevInst: POINTER(UInt32), pDeviceID: win32more.Windows.Win32.Foundation.PSTR, dnParent: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Create_DevNode_ExW(pdnDevInst: POINTER(UInt32), pDeviceID: win32more.Windows.Win32.Foundation.PWSTR, dnParent: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
CM_Create_DevNode_Ex = UnicodeAlias('CM_Create_DevNode_ExW')
@winfunctype('CFGMGR32.dll')
def CM_Create_Range_List(prlh: POINTER(UIntPtr), ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Delete_Class_Key(ClassGuid: POINTER(Guid), ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Delete_Class_Key_Ex(ClassGuid: POINTER(Guid), ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Delete_DevNode_Key(dnDevNode: UInt32, ulHardwareProfile: UInt32, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Delete_DevNode_Key_Ex(dnDevNode: UInt32, ulHardwareProfile: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Delete_Range(ullStartValue: UInt64, ullEndValue: UInt64, rlh: UIntPtr, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Detect_Resource_Conflict(dnDevInst: UInt32, ResourceID: UInt32, ResourceData: VoidPtr, ResourceLen: UInt32, pbConflictDetected: POINTER(win32more.Windows.Win32.Foundation.BOOL), ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Detect_Resource_Conflict_Ex(dnDevInst: UInt32, ResourceID: UInt32, ResourceData: VoidPtr, ResourceLen: UInt32, pbConflictDetected: POINTER(win32more.Windows.Win32.Foundation.BOOL), ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Disable_DevNode(dnDevInst: UInt32, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Disable_DevNode_Ex(dnDevInst: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Disconnect_Machine(hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Dup_Range_List(rlhOld: UIntPtr, rlhNew: UIntPtr, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Enable_DevNode(dnDevInst: UInt32, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Enable_DevNode_Ex(dnDevInst: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Enumerate_Classes(ulClassIndex: UInt32, ClassGuid: POINTER(Guid), ulFlags: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_ENUMERATE_FLAGS) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Enumerate_Classes_Ex(ulClassIndex: UInt32, ClassGuid: POINTER(Guid), ulFlags: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_ENUMERATE_FLAGS, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Enumerate_EnumeratorsA(ulEnumIndex: UInt32, Buffer: win32more.Windows.Win32.Foundation.PSTR, pulLength: POINTER(UInt32), ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Enumerate_EnumeratorsW(ulEnumIndex: UInt32, Buffer: win32more.Windows.Win32.Foundation.PWSTR, pulLength: POINTER(UInt32), ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
CM_Enumerate_Enumerators = UnicodeAlias('CM_Enumerate_EnumeratorsW')
@winfunctype('CFGMGR32.dll')
def CM_Enumerate_Enumerators_ExA(ulEnumIndex: UInt32, Buffer: win32more.Windows.Win32.Foundation.PSTR, pulLength: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Enumerate_Enumerators_ExW(ulEnumIndex: UInt32, Buffer: win32more.Windows.Win32.Foundation.PWSTR, pulLength: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
CM_Enumerate_Enumerators_Ex = UnicodeAlias('CM_Enumerate_Enumerators_ExW')
@winfunctype('CFGMGR32.dll')
def CM_Find_Range(pullStart: POINTER(UInt64), ullStart: UInt64, ulLength: UInt32, ullAlignment: UInt64, ullEnd: UInt64, rlh: UIntPtr, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_First_Range(rlh: UIntPtr, pullStart: POINTER(UInt64), pullEnd: POINTER(UInt64), preElement: POINTER(UIntPtr), ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Free_Log_Conf(lcLogConfToBeFreed: UIntPtr, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Free_Log_Conf_Ex(lcLogConfToBeFreed: UIntPtr, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Free_Log_Conf_Handle(lcLogConf: UIntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Free_Range_List(rlh: UIntPtr, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Free_Res_Des(prdResDes: POINTER(UIntPtr), rdResDes: UIntPtr, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Free_Res_Des_Ex(prdResDes: POINTER(UIntPtr), rdResDes: UIntPtr, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Free_Res_Des_Handle(rdResDes: UIntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Child(pdnDevInst: POINTER(UInt32), dnDevInst: UInt32, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Child_Ex(pdnDevInst: POINTER(UInt32), dnDevInst: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Class_NameA(ClassGuid: POINTER(Guid), Buffer: win32more.Windows.Win32.Foundation.PSTR, pulLength: POINTER(UInt32), ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Class_NameW(ClassGuid: POINTER(Guid), Buffer: win32more.Windows.Win32.Foundation.PWSTR, pulLength: POINTER(UInt32), ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
CM_Get_Class_Name = UnicodeAlias('CM_Get_Class_NameW')
@winfunctype('CFGMGR32.dll')
def CM_Get_Class_Name_ExA(ClassGuid: POINTER(Guid), Buffer: win32more.Windows.Win32.Foundation.PSTR, pulLength: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Class_Name_ExW(ClassGuid: POINTER(Guid), Buffer: win32more.Windows.Win32.Foundation.PWSTR, pulLength: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
CM_Get_Class_Name_Ex = UnicodeAlias('CM_Get_Class_Name_ExW')
@winfunctype('CFGMGR32.dll')
def CM_Get_Class_Key_NameA(ClassGuid: POINTER(Guid), pszKeyName: win32more.Windows.Win32.Foundation.PSTR, pulLength: POINTER(UInt32), ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Class_Key_NameW(ClassGuid: POINTER(Guid), pszKeyName: win32more.Windows.Win32.Foundation.PWSTR, pulLength: POINTER(UInt32), ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
CM_Get_Class_Key_Name = UnicodeAlias('CM_Get_Class_Key_NameW')
@winfunctype('CFGMGR32.dll')
def CM_Get_Class_Key_Name_ExA(ClassGuid: POINTER(Guid), pszKeyName: win32more.Windows.Win32.Foundation.PSTR, pulLength: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Class_Key_Name_ExW(ClassGuid: POINTER(Guid), pszKeyName: win32more.Windows.Win32.Foundation.PWSTR, pulLength: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
CM_Get_Class_Key_Name_Ex = UnicodeAlias('CM_Get_Class_Key_Name_ExW')
@winfunctype('CFGMGR32.dll')
def CM_Get_Depth(pulDepth: POINTER(UInt32), dnDevInst: UInt32, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Depth_Ex(pulDepth: POINTER(UInt32), dnDevInst: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_IDA(dnDevInst: UInt32, Buffer: win32more.Windows.Win32.Foundation.PSTR, BufferLen: UInt32, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_IDW(dnDevInst: UInt32, Buffer: win32more.Windows.Win32.Foundation.PWSTR, BufferLen: UInt32, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
CM_Get_Device_ID = UnicodeAlias('CM_Get_Device_IDW')
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_ID_ExA(dnDevInst: UInt32, Buffer: win32more.Windows.Win32.Foundation.PSTR, BufferLen: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_ID_ExW(dnDevInst: UInt32, Buffer: win32more.Windows.Win32.Foundation.PWSTR, BufferLen: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
CM_Get_Device_ID_Ex = UnicodeAlias('CM_Get_Device_ID_ExW')
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_ID_ListA(pszFilter: win32more.Windows.Win32.Foundation.PSTR, Buffer: win32more.Windows.Win32.Foundation.PSTR, BufferLen: UInt32, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_ID_ListW(pszFilter: win32more.Windows.Win32.Foundation.PWSTR, Buffer: win32more.Windows.Win32.Foundation.PWSTR, BufferLen: UInt32, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
CM_Get_Device_ID_List = UnicodeAlias('CM_Get_Device_ID_ListW')
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_ID_List_ExA(pszFilter: win32more.Windows.Win32.Foundation.PSTR, Buffer: win32more.Windows.Win32.Foundation.PSTR, BufferLen: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_ID_List_ExW(pszFilter: win32more.Windows.Win32.Foundation.PWSTR, Buffer: win32more.Windows.Win32.Foundation.PWSTR, BufferLen: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
CM_Get_Device_ID_List_Ex = UnicodeAlias('CM_Get_Device_ID_List_ExW')
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_ID_List_SizeA(pulLen: POINTER(UInt32), pszFilter: win32more.Windows.Win32.Foundation.PSTR, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_ID_List_SizeW(pulLen: POINTER(UInt32), pszFilter: win32more.Windows.Win32.Foundation.PWSTR, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
CM_Get_Device_ID_List_Size = UnicodeAlias('CM_Get_Device_ID_List_SizeW')
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_ID_List_Size_ExA(pulLen: POINTER(UInt32), pszFilter: win32more.Windows.Win32.Foundation.PSTR, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_ID_List_Size_ExW(pulLen: POINTER(UInt32), pszFilter: win32more.Windows.Win32.Foundation.PWSTR, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
CM_Get_Device_ID_List_Size_Ex = UnicodeAlias('CM_Get_Device_ID_List_Size_ExW')
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_ID_Size(pulLen: POINTER(UInt32), dnDevInst: UInt32, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_ID_Size_Ex(pulLen: POINTER(UInt32), dnDevInst: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_DevNode_PropertyW(dnDevInst: UInt32, PropertyKey: POINTER(win32more.Windows.Win32.Foundation.DEVPROPKEY), PropertyType: POINTER(win32more.Windows.Win32.Devices.Properties.DEVPROPTYPE), PropertyBuffer: POINTER(Byte), PropertyBufferSize: POINTER(UInt32), ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_DevNode_Property_ExW(dnDevInst: UInt32, PropertyKey: POINTER(win32more.Windows.Win32.Foundation.DEVPROPKEY), PropertyType: POINTER(win32more.Windows.Win32.Devices.Properties.DEVPROPTYPE), PropertyBuffer: POINTER(Byte), PropertyBufferSize: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_DevNode_Property_Keys(dnDevInst: UInt32, PropertyKeyArray: POINTER(win32more.Windows.Win32.Foundation.DEVPROPKEY), PropertyKeyCount: POINTER(UInt32), ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_DevNode_Property_Keys_Ex(dnDevInst: UInt32, PropertyKeyArray: POINTER(win32more.Windows.Win32.Foundation.DEVPROPKEY), PropertyKeyCount: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_DevNode_Registry_PropertyA(dnDevInst: UInt32, ulProperty: UInt32, pulRegDataType: POINTER(UInt32), Buffer: VoidPtr, pulLength: POINTER(UInt32), ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_DevNode_Registry_PropertyW(dnDevInst: UInt32, ulProperty: UInt32, pulRegDataType: POINTER(UInt32), Buffer: VoidPtr, pulLength: POINTER(UInt32), ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
CM_Get_DevNode_Registry_Property = UnicodeAlias('CM_Get_DevNode_Registry_PropertyW')
@winfunctype('CFGMGR32.dll')
def CM_Get_DevNode_Registry_Property_ExA(dnDevInst: UInt32, ulProperty: UInt32, pulRegDataType: POINTER(UInt32), Buffer: VoidPtr, pulLength: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_DevNode_Registry_Property_ExW(dnDevInst: UInt32, ulProperty: UInt32, pulRegDataType: POINTER(UInt32), Buffer: VoidPtr, pulLength: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
CM_Get_DevNode_Registry_Property_Ex = UnicodeAlias('CM_Get_DevNode_Registry_Property_ExW')
@winfunctype('CFGMGR32.dll')
def CM_Get_DevNode_Custom_PropertyA(dnDevInst: UInt32, pszCustomPropertyName: win32more.Windows.Win32.Foundation.PSTR, pulRegDataType: POINTER(UInt32), Buffer: VoidPtr, pulLength: POINTER(UInt32), ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_DevNode_Custom_PropertyW(dnDevInst: UInt32, pszCustomPropertyName: win32more.Windows.Win32.Foundation.PWSTR, pulRegDataType: POINTER(UInt32), Buffer: VoidPtr, pulLength: POINTER(UInt32), ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
CM_Get_DevNode_Custom_Property = UnicodeAlias('CM_Get_DevNode_Custom_PropertyW')
@winfunctype('CFGMGR32.dll')
def CM_Get_DevNode_Custom_Property_ExA(dnDevInst: UInt32, pszCustomPropertyName: win32more.Windows.Win32.Foundation.PSTR, pulRegDataType: POINTER(UInt32), Buffer: VoidPtr, pulLength: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_DevNode_Custom_Property_ExW(dnDevInst: UInt32, pszCustomPropertyName: win32more.Windows.Win32.Foundation.PWSTR, pulRegDataType: POINTER(UInt32), Buffer: VoidPtr, pulLength: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
CM_Get_DevNode_Custom_Property_Ex = UnicodeAlias('CM_Get_DevNode_Custom_Property_ExW')
@winfunctype('CFGMGR32.dll')
def CM_Get_DevNode_Status(pulStatus: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_DEVNODE_STATUS_FLAGS), pulProblemNumber: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB), dnDevInst: UInt32, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_DevNode_Status_Ex(pulStatus: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_DEVNODE_STATUS_FLAGS), pulProblemNumber: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB), dnDevInst: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_First_Log_Conf(plcLogConf: POINTER(UIntPtr), dnDevInst: UInt32, ulFlags: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_LOG_CONF) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_First_Log_Conf_Ex(plcLogConf: POINTER(UIntPtr), dnDevInst: UInt32, ulFlags: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_LOG_CONF, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Global_State(pulState: POINTER(UInt32), ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Global_State_Ex(pulState: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Hardware_Profile_InfoA(ulIndex: UInt32, pHWProfileInfo: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HWPROFILEINFO_A), ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Hardware_Profile_Info_ExA(ulIndex: UInt32, pHWProfileInfo: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HWPROFILEINFO_A), ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Hardware_Profile_InfoW(ulIndex: UInt32, pHWProfileInfo: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HWPROFILEINFO_W), ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
CM_Get_Hardware_Profile_Info = UnicodeAlias('CM_Get_Hardware_Profile_InfoW')
@winfunctype('CFGMGR32.dll')
def CM_Get_Hardware_Profile_Info_ExW(ulIndex: UInt32, pHWProfileInfo: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HWPROFILEINFO_W), ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
CM_Get_Hardware_Profile_Info_Ex = UnicodeAlias('CM_Get_Hardware_Profile_Info_ExW')
@winfunctype('CFGMGR32.dll')
def CM_Get_HW_Prof_FlagsA(pDeviceID: win32more.Windows.Win32.Foundation.PSTR, ulHardwareProfile: UInt32, pulValue: POINTER(UInt32), ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_HW_Prof_FlagsW(pDeviceID: win32more.Windows.Win32.Foundation.PWSTR, ulHardwareProfile: UInt32, pulValue: POINTER(UInt32), ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
CM_Get_HW_Prof_Flags = UnicodeAlias('CM_Get_HW_Prof_FlagsW')
@winfunctype('CFGMGR32.dll')
def CM_Get_HW_Prof_Flags_ExA(pDeviceID: win32more.Windows.Win32.Foundation.PSTR, ulHardwareProfile: UInt32, pulValue: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_HW_Prof_Flags_ExW(pDeviceID: win32more.Windows.Win32.Foundation.PWSTR, ulHardwareProfile: UInt32, pulValue: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
CM_Get_HW_Prof_Flags_Ex = UnicodeAlias('CM_Get_HW_Prof_Flags_ExW')
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_Interface_AliasA(pszDeviceInterface: win32more.Windows.Win32.Foundation.PSTR, AliasInterfaceGuid: POINTER(Guid), pszAliasDeviceInterface: win32more.Windows.Win32.Foundation.PSTR, pulLength: POINTER(UInt32), ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_Interface_AliasW(pszDeviceInterface: win32more.Windows.Win32.Foundation.PWSTR, AliasInterfaceGuid: POINTER(Guid), pszAliasDeviceInterface: win32more.Windows.Win32.Foundation.PWSTR, pulLength: POINTER(UInt32), ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
CM_Get_Device_Interface_Alias = UnicodeAlias('CM_Get_Device_Interface_AliasW')
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_Interface_Alias_ExA(pszDeviceInterface: win32more.Windows.Win32.Foundation.PSTR, AliasInterfaceGuid: POINTER(Guid), pszAliasDeviceInterface: win32more.Windows.Win32.Foundation.PSTR, pulLength: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_Interface_Alias_ExW(pszDeviceInterface: win32more.Windows.Win32.Foundation.PWSTR, AliasInterfaceGuid: POINTER(Guid), pszAliasDeviceInterface: win32more.Windows.Win32.Foundation.PWSTR, pulLength: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
CM_Get_Device_Interface_Alias_Ex = UnicodeAlias('CM_Get_Device_Interface_Alias_ExW')
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_Interface_ListA(InterfaceClassGuid: POINTER(Guid), pDeviceID: win32more.Windows.Win32.Foundation.PSTR, Buffer: win32more.Windows.Win32.Foundation.PSTR, BufferLen: UInt32, ulFlags: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_GET_DEVICE_INTERFACE_LIST_FLAGS) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_Interface_ListW(InterfaceClassGuid: POINTER(Guid), pDeviceID: win32more.Windows.Win32.Foundation.PWSTR, Buffer: win32more.Windows.Win32.Foundation.PWSTR, BufferLen: UInt32, ulFlags: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_GET_DEVICE_INTERFACE_LIST_FLAGS) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
CM_Get_Device_Interface_List = UnicodeAlias('CM_Get_Device_Interface_ListW')
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_Interface_List_ExA(InterfaceClassGuid: POINTER(Guid), pDeviceID: win32more.Windows.Win32.Foundation.PSTR, Buffer: win32more.Windows.Win32.Foundation.PSTR, BufferLen: UInt32, ulFlags: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_GET_DEVICE_INTERFACE_LIST_FLAGS, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_Interface_List_ExW(InterfaceClassGuid: POINTER(Guid), pDeviceID: win32more.Windows.Win32.Foundation.PWSTR, Buffer: win32more.Windows.Win32.Foundation.PWSTR, BufferLen: UInt32, ulFlags: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_GET_DEVICE_INTERFACE_LIST_FLAGS, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
CM_Get_Device_Interface_List_Ex = UnicodeAlias('CM_Get_Device_Interface_List_ExW')
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_Interface_List_SizeA(pulLen: POINTER(UInt32), InterfaceClassGuid: POINTER(Guid), pDeviceID: win32more.Windows.Win32.Foundation.PSTR, ulFlags: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_GET_DEVICE_INTERFACE_LIST_FLAGS) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_Interface_List_SizeW(pulLen: POINTER(UInt32), InterfaceClassGuid: POINTER(Guid), pDeviceID: win32more.Windows.Win32.Foundation.PWSTR, ulFlags: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_GET_DEVICE_INTERFACE_LIST_FLAGS) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
CM_Get_Device_Interface_List_Size = UnicodeAlias('CM_Get_Device_Interface_List_SizeW')
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_Interface_List_Size_ExA(pulLen: POINTER(UInt32), InterfaceClassGuid: POINTER(Guid), pDeviceID: win32more.Windows.Win32.Foundation.PSTR, ulFlags: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_GET_DEVICE_INTERFACE_LIST_FLAGS, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_Interface_List_Size_ExW(pulLen: POINTER(UInt32), InterfaceClassGuid: POINTER(Guid), pDeviceID: win32more.Windows.Win32.Foundation.PWSTR, ulFlags: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_GET_DEVICE_INTERFACE_LIST_FLAGS, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
CM_Get_Device_Interface_List_Size_Ex = UnicodeAlias('CM_Get_Device_Interface_List_Size_ExW')
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_Interface_PropertyW(pszDeviceInterface: win32more.Windows.Win32.Foundation.PWSTR, PropertyKey: POINTER(win32more.Windows.Win32.Foundation.DEVPROPKEY), PropertyType: POINTER(win32more.Windows.Win32.Devices.Properties.DEVPROPTYPE), PropertyBuffer: POINTER(Byte), PropertyBufferSize: POINTER(UInt32), ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_Interface_Property_ExW(pszDeviceInterface: win32more.Windows.Win32.Foundation.PWSTR, PropertyKey: POINTER(win32more.Windows.Win32.Foundation.DEVPROPKEY), PropertyType: POINTER(win32more.Windows.Win32.Devices.Properties.DEVPROPTYPE), PropertyBuffer: POINTER(Byte), PropertyBufferSize: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_Interface_Property_KeysW(pszDeviceInterface: win32more.Windows.Win32.Foundation.PWSTR, PropertyKeyArray: POINTER(win32more.Windows.Win32.Foundation.DEVPROPKEY), PropertyKeyCount: POINTER(UInt32), ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_Interface_Property_Keys_ExW(pszDeviceInterface: win32more.Windows.Win32.Foundation.PWSTR, PropertyKeyArray: POINTER(win32more.Windows.Win32.Foundation.DEVPROPKEY), PropertyKeyCount: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Log_Conf_Priority(lcLogConf: UIntPtr, pPriority: POINTER(UInt32), ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Log_Conf_Priority_Ex(lcLogConf: UIntPtr, pPriority: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Next_Log_Conf(plcLogConf: POINTER(UIntPtr), lcLogConf: UIntPtr, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Next_Log_Conf_Ex(plcLogConf: POINTER(UIntPtr), lcLogConf: UIntPtr, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Parent(pdnDevInst: POINTER(UInt32), dnDevInst: UInt32, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Parent_Ex(pdnDevInst: POINTER(UInt32), dnDevInst: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Res_Des_Data(rdResDes: UIntPtr, Buffer: VoidPtr, BufferLen: UInt32, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Res_Des_Data_Ex(rdResDes: UIntPtr, Buffer: VoidPtr, BufferLen: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Res_Des_Data_Size(pulSize: POINTER(UInt32), rdResDes: UIntPtr, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Res_Des_Data_Size_Ex(pulSize: POINTER(UInt32), rdResDes: UIntPtr, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Sibling(pdnDevInst: POINTER(UInt32), dnDevInst: UInt32, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Sibling_Ex(pdnDevInst: POINTER(UInt32), dnDevInst: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Version() -> UInt16: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Version_Ex(hMachine: IntPtr) -> UInt16: ...
@winfunctype('CFGMGR32.dll')
def CM_Is_Version_Available(wVersion: UInt16) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CFGMGR32.dll')
def CM_Is_Version_Available_Ex(wVersion: UInt16, hMachine: IntPtr) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('CFGMGR32.dll')
def CM_Intersect_Range_List(rlhOld1: UIntPtr, rlhOld2: UIntPtr, rlhNew: UIntPtr, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Invert_Range_List(rlhOld: UIntPtr, rlhNew: UIntPtr, ullMaxValue: UInt64, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Locate_DevNodeA(pdnDevInst: POINTER(UInt32), pDeviceID: win32more.Windows.Win32.Foundation.PSTR, ulFlags: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_LOCATE_DEVNODE_FLAGS) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Locate_DevNodeW(pdnDevInst: POINTER(UInt32), pDeviceID: win32more.Windows.Win32.Foundation.PWSTR, ulFlags: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_LOCATE_DEVNODE_FLAGS) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
CM_Locate_DevNode = UnicodeAlias('CM_Locate_DevNodeW')
@winfunctype('CFGMGR32.dll')
def CM_Locate_DevNode_ExA(pdnDevInst: POINTER(UInt32), pDeviceID: win32more.Windows.Win32.Foundation.PSTR, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Locate_DevNode_ExW(pdnDevInst: POINTER(UInt32), pDeviceID: win32more.Windows.Win32.Foundation.PWSTR, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
CM_Locate_DevNode_Ex = UnicodeAlias('CM_Locate_DevNode_ExW')
@winfunctype('CFGMGR32.dll')
def CM_Merge_Range_List(rlhOld1: UIntPtr, rlhOld2: UIntPtr, rlhNew: UIntPtr, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Modify_Res_Des(prdResDes: POINTER(UIntPtr), rdResDes: UIntPtr, ResourceID: UInt32, ResourceData: VoidPtr, ResourceLen: UInt32, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Modify_Res_Des_Ex(prdResDes: POINTER(UIntPtr), rdResDes: UIntPtr, ResourceID: UInt32, ResourceData: VoidPtr, ResourceLen: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Move_DevNode(dnFromDevInst: UInt32, dnToDevInst: UInt32, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Move_DevNode_Ex(dnFromDevInst: UInt32, dnToDevInst: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Next_Range(preElement: POINTER(UIntPtr), pullStart: POINTER(UInt64), pullEnd: POINTER(UInt64), ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Next_Res_Des(prdResDes: POINTER(UIntPtr), rdResDes: UIntPtr, ForResource: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_RESTYPE, pResourceID: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_RESTYPE), ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Next_Res_Des_Ex(prdResDes: POINTER(UIntPtr), rdResDes: UIntPtr, ForResource: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_RESTYPE, pResourceID: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_RESTYPE), ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Open_Class_KeyA(ClassGuid: POINTER(Guid), pszClassName: win32more.Windows.Win32.Foundation.PSTR, samDesired: UInt32, Disposition: UInt32, phkClass: POINTER(win32more.Windows.Win32.System.Registry.HKEY), ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Open_Class_KeyW(ClassGuid: POINTER(Guid), pszClassName: win32more.Windows.Win32.Foundation.PWSTR, samDesired: UInt32, Disposition: UInt32, phkClass: POINTER(win32more.Windows.Win32.System.Registry.HKEY), ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
CM_Open_Class_Key = UnicodeAlias('CM_Open_Class_KeyW')
@winfunctype('CFGMGR32.dll')
def CM_Open_Class_Key_ExA(ClassGuid: POINTER(Guid), pszClassName: win32more.Windows.Win32.Foundation.PSTR, samDesired: UInt32, Disposition: UInt32, phkClass: POINTER(win32more.Windows.Win32.System.Registry.HKEY), ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Open_Class_Key_ExW(ClassGuid: POINTER(Guid), pszClassName: win32more.Windows.Win32.Foundation.PWSTR, samDesired: UInt32, Disposition: UInt32, phkClass: POINTER(win32more.Windows.Win32.System.Registry.HKEY), ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
CM_Open_Class_Key_Ex = UnicodeAlias('CM_Open_Class_Key_ExW')
@winfunctype('CFGMGR32.dll')
def CM_Open_DevNode_Key(dnDevNode: UInt32, samDesired: UInt32, ulHardwareProfile: UInt32, Disposition: UInt32, phkDevice: POINTER(win32more.Windows.Win32.System.Registry.HKEY), ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Open_DevNode_Key_Ex(dnDevNode: UInt32, samDesired: UInt32, ulHardwareProfile: UInt32, Disposition: UInt32, phkDevice: POINTER(win32more.Windows.Win32.System.Registry.HKEY), ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Open_Device_Interface_KeyA(pszDeviceInterface: win32more.Windows.Win32.Foundation.PSTR, samDesired: UInt32, Disposition: UInt32, phkDeviceInterface: POINTER(win32more.Windows.Win32.System.Registry.HKEY), ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Open_Device_Interface_KeyW(pszDeviceInterface: win32more.Windows.Win32.Foundation.PWSTR, samDesired: UInt32, Disposition: UInt32, phkDeviceInterface: POINTER(win32more.Windows.Win32.System.Registry.HKEY), ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
CM_Open_Device_Interface_Key = UnicodeAlias('CM_Open_Device_Interface_KeyW')
@winfunctype('CFGMGR32.dll')
def CM_Open_Device_Interface_Key_ExA(pszDeviceInterface: win32more.Windows.Win32.Foundation.PSTR, samDesired: UInt32, Disposition: UInt32, phkDeviceInterface: POINTER(win32more.Windows.Win32.System.Registry.HKEY), ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Open_Device_Interface_Key_ExW(pszDeviceInterface: win32more.Windows.Win32.Foundation.PWSTR, samDesired: UInt32, Disposition: UInt32, phkDeviceInterface: POINTER(win32more.Windows.Win32.System.Registry.HKEY), ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
CM_Open_Device_Interface_Key_Ex = UnicodeAlias('CM_Open_Device_Interface_Key_ExW')
@winfunctype('CFGMGR32.dll')
def CM_Delete_Device_Interface_KeyA(pszDeviceInterface: win32more.Windows.Win32.Foundation.PSTR, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Delete_Device_Interface_KeyW(pszDeviceInterface: win32more.Windows.Win32.Foundation.PWSTR, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
CM_Delete_Device_Interface_Key = UnicodeAlias('CM_Delete_Device_Interface_KeyW')
@winfunctype('CFGMGR32.dll')
def CM_Delete_Device_Interface_Key_ExA(pszDeviceInterface: win32more.Windows.Win32.Foundation.PSTR, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Delete_Device_Interface_Key_ExW(pszDeviceInterface: win32more.Windows.Win32.Foundation.PWSTR, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
CM_Delete_Device_Interface_Key_Ex = UnicodeAlias('CM_Delete_Device_Interface_Key_ExW')
@winfunctype('CFGMGR32.dll')
def CM_Query_Arbitrator_Free_Data(pData: VoidPtr, DataLen: UInt32, dnDevInst: UInt32, ResourceID: UInt32, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Query_Arbitrator_Free_Data_Ex(pData: VoidPtr, DataLen: UInt32, dnDevInst: UInt32, ResourceID: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Query_Arbitrator_Free_Size(pulSize: POINTER(UInt32), dnDevInst: UInt32, ResourceID: UInt32, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Query_Arbitrator_Free_Size_Ex(pulSize: POINTER(UInt32), dnDevInst: UInt32, ResourceID: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Query_Remove_SubTree(dnAncestor: UInt32, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Query_Remove_SubTree_Ex(dnAncestor: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Query_And_Remove_SubTreeA(dnAncestor: UInt32, pVetoType: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PNP_VETO_TYPE), pszVetoName: win32more.Windows.Win32.Foundation.PSTR, ulNameLength: UInt32, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Query_And_Remove_SubTreeW(dnAncestor: UInt32, pVetoType: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PNP_VETO_TYPE), pszVetoName: win32more.Windows.Win32.Foundation.PWSTR, ulNameLength: UInt32, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
CM_Query_And_Remove_SubTree = UnicodeAlias('CM_Query_And_Remove_SubTreeW')
@winfunctype('CFGMGR32.dll')
def CM_Query_And_Remove_SubTree_ExA(dnAncestor: UInt32, pVetoType: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PNP_VETO_TYPE), pszVetoName: win32more.Windows.Win32.Foundation.PSTR, ulNameLength: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Query_And_Remove_SubTree_ExW(dnAncestor: UInt32, pVetoType: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PNP_VETO_TYPE), pszVetoName: win32more.Windows.Win32.Foundation.PWSTR, ulNameLength: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
CM_Query_And_Remove_SubTree_Ex = UnicodeAlias('CM_Query_And_Remove_SubTree_ExW')
@winfunctype('CFGMGR32.dll')
def CM_Request_Device_EjectA(dnDevInst: UInt32, pVetoType: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PNP_VETO_TYPE), pszVetoName: win32more.Windows.Win32.Foundation.PSTR, ulNameLength: UInt32, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Request_Device_Eject_ExA(dnDevInst: UInt32, pVetoType: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PNP_VETO_TYPE), pszVetoName: win32more.Windows.Win32.Foundation.PSTR, ulNameLength: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Request_Device_EjectW(dnDevInst: UInt32, pVetoType: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PNP_VETO_TYPE), pszVetoName: win32more.Windows.Win32.Foundation.PWSTR, ulNameLength: UInt32, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
CM_Request_Device_Eject = UnicodeAlias('CM_Request_Device_EjectW')
@winfunctype('CFGMGR32.dll')
def CM_Request_Device_Eject_ExW(dnDevInst: UInt32, pVetoType: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PNP_VETO_TYPE), pszVetoName: win32more.Windows.Win32.Foundation.PWSTR, ulNameLength: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
CM_Request_Device_Eject_Ex = UnicodeAlias('CM_Request_Device_Eject_ExW')
@winfunctype('CFGMGR32.dll')
def CM_Reenumerate_DevNode(dnDevInst: UInt32, ulFlags: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_REENUMERATE_FLAGS) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Reenumerate_DevNode_Ex(dnDevInst: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Register_Device_InterfaceA(dnDevInst: UInt32, InterfaceClassGuid: POINTER(Guid), pszReference: win32more.Windows.Win32.Foundation.PSTR, pszDeviceInterface: win32more.Windows.Win32.Foundation.PSTR, pulLength: POINTER(UInt32), ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Register_Device_InterfaceW(dnDevInst: UInt32, InterfaceClassGuid: POINTER(Guid), pszReference: win32more.Windows.Win32.Foundation.PWSTR, pszDeviceInterface: win32more.Windows.Win32.Foundation.PWSTR, pulLength: POINTER(UInt32), ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
CM_Register_Device_Interface = UnicodeAlias('CM_Register_Device_InterfaceW')
@winfunctype('CFGMGR32.dll')
def CM_Register_Device_Interface_ExA(dnDevInst: UInt32, InterfaceClassGuid: POINTER(Guid), pszReference: win32more.Windows.Win32.Foundation.PSTR, pszDeviceInterface: win32more.Windows.Win32.Foundation.PSTR, pulLength: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Register_Device_Interface_ExW(dnDevInst: UInt32, InterfaceClassGuid: POINTER(Guid), pszReference: win32more.Windows.Win32.Foundation.PWSTR, pszDeviceInterface: win32more.Windows.Win32.Foundation.PWSTR, pulLength: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
CM_Register_Device_Interface_Ex = UnicodeAlias('CM_Register_Device_Interface_ExW')
@winfunctype('CFGMGR32.dll')
def CM_Set_DevNode_Problem_Ex(dnDevInst: UInt32, ulProblem: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Set_DevNode_Problem(dnDevInst: UInt32, ulProblem: UInt32, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Unregister_Device_InterfaceA(pszDeviceInterface: win32more.Windows.Win32.Foundation.PSTR, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Unregister_Device_InterfaceW(pszDeviceInterface: win32more.Windows.Win32.Foundation.PWSTR, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
CM_Unregister_Device_Interface = UnicodeAlias('CM_Unregister_Device_InterfaceW')
@winfunctype('CFGMGR32.dll')
def CM_Unregister_Device_Interface_ExA(pszDeviceInterface: win32more.Windows.Win32.Foundation.PSTR, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Unregister_Device_Interface_ExW(pszDeviceInterface: win32more.Windows.Win32.Foundation.PWSTR, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
CM_Unregister_Device_Interface_Ex = UnicodeAlias('CM_Unregister_Device_Interface_ExW')
@winfunctype('CFGMGR32.dll')
def CM_Register_Device_Driver(dnDevInst: UInt32, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Register_Device_Driver_Ex(dnDevInst: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Remove_SubTree(dnAncestor: UInt32, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Remove_SubTree_Ex(dnAncestor: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Set_DevNode_PropertyW(dnDevInst: UInt32, PropertyKey: POINTER(win32more.Windows.Win32.Foundation.DEVPROPKEY), PropertyType: win32more.Windows.Win32.Devices.Properties.DEVPROPTYPE, PropertyBuffer: POINTER(Byte), PropertyBufferSize: UInt32, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Set_DevNode_Property_ExW(dnDevInst: UInt32, PropertyKey: POINTER(win32more.Windows.Win32.Foundation.DEVPROPKEY), PropertyType: win32more.Windows.Win32.Devices.Properties.DEVPROPTYPE, PropertyBuffer: POINTER(Byte), PropertyBufferSize: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Set_DevNode_Registry_PropertyA(dnDevInst: UInt32, ulProperty: UInt32, Buffer: VoidPtr, ulLength: UInt32, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Set_DevNode_Registry_PropertyW(dnDevInst: UInt32, ulProperty: UInt32, Buffer: VoidPtr, ulLength: UInt32, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
CM_Set_DevNode_Registry_Property = UnicodeAlias('CM_Set_DevNode_Registry_PropertyW')
@winfunctype('CFGMGR32.dll')
def CM_Set_DevNode_Registry_Property_ExA(dnDevInst: UInt32, ulProperty: UInt32, Buffer: VoidPtr, ulLength: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Set_DevNode_Registry_Property_ExW(dnDevInst: UInt32, ulProperty: UInt32, Buffer: VoidPtr, ulLength: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
CM_Set_DevNode_Registry_Property_Ex = UnicodeAlias('CM_Set_DevNode_Registry_Property_ExW')
@winfunctype('CFGMGR32.dll')
def CM_Set_Device_Interface_PropertyW(pszDeviceInterface: win32more.Windows.Win32.Foundation.PWSTR, PropertyKey: POINTER(win32more.Windows.Win32.Foundation.DEVPROPKEY), PropertyType: win32more.Windows.Win32.Devices.Properties.DEVPROPTYPE, PropertyBuffer: POINTER(Byte), PropertyBufferSize: UInt32, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Set_Device_Interface_Property_ExW(pszDeviceInterface: win32more.Windows.Win32.Foundation.PWSTR, PropertyKey: POINTER(win32more.Windows.Win32.Foundation.DEVPROPKEY), PropertyType: win32more.Windows.Win32.Devices.Properties.DEVPROPTYPE, PropertyBuffer: POINTER(Byte), PropertyBufferSize: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Is_Dock_Station_Present(pbPresent: POINTER(win32more.Windows.Win32.Foundation.BOOL)) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Is_Dock_Station_Present_Ex(pbPresent: POINTER(win32more.Windows.Win32.Foundation.BOOL), hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Request_Eject_PC() -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Request_Eject_PC_Ex(hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Set_HW_Prof_FlagsA(pDeviceID: win32more.Windows.Win32.Foundation.PSTR, ulConfig: UInt32, ulValue: UInt32, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Set_HW_Prof_FlagsW(pDeviceID: win32more.Windows.Win32.Foundation.PWSTR, ulConfig: UInt32, ulValue: UInt32, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
CM_Set_HW_Prof_Flags = UnicodeAlias('CM_Set_HW_Prof_FlagsW')
@winfunctype('CFGMGR32.dll')
def CM_Set_HW_Prof_Flags_ExA(pDeviceID: win32more.Windows.Win32.Foundation.PSTR, ulConfig: UInt32, ulValue: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Set_HW_Prof_Flags_ExW(pDeviceID: win32more.Windows.Win32.Foundation.PWSTR, ulConfig: UInt32, ulValue: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
CM_Set_HW_Prof_Flags_Ex = UnicodeAlias('CM_Set_HW_Prof_Flags_ExW')
@winfunctype('CFGMGR32.dll')
def CM_Setup_DevNode(dnDevInst: UInt32, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Setup_DevNode_Ex(dnDevInst: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Test_Range_Available(ullStartValue: UInt64, ullEndValue: UInt64, rlh: UIntPtr, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Uninstall_DevNode(dnDevInst: UInt32, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Uninstall_DevNode_Ex(dnDevInst: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Run_Detection(ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Run_Detection_Ex(ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Set_HW_Prof(ulHardwareProfile: UInt32, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Set_HW_Prof_Ex(ulHardwareProfile: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Query_Resource_Conflict_List(pclConflictList: POINTER(UIntPtr), dnDevInst: UInt32, ResourceID: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_RESTYPE, ResourceData: VoidPtr, ResourceLen: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Free_Resource_Conflict_Handle(clConflictList: UIntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Resource_Conflict_Count(clConflictList: UIntPtr, pulCount: POINTER(UInt32)) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Resource_Conflict_DetailsA(clConflictList: UIntPtr, ulIndex: UInt32, pConflictDetails: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFLICT_DETAILS_A)) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Resource_Conflict_DetailsW(clConflictList: UIntPtr, ulIndex: UInt32, pConflictDetails: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFLICT_DETAILS_W)) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
CM_Get_Resource_Conflict_Details = UnicodeAlias('CM_Get_Resource_Conflict_DetailsW')
@winfunctype('CFGMGR32.dll')
def CM_Get_Class_PropertyW(ClassGUID: POINTER(Guid), PropertyKey: POINTER(win32more.Windows.Win32.Foundation.DEVPROPKEY), PropertyType: POINTER(win32more.Windows.Win32.Devices.Properties.DEVPROPTYPE), PropertyBuffer: POINTER(Byte), PropertyBufferSize: POINTER(UInt32), ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Class_Property_ExW(ClassGUID: POINTER(Guid), PropertyKey: POINTER(win32more.Windows.Win32.Foundation.DEVPROPKEY), PropertyType: POINTER(win32more.Windows.Win32.Devices.Properties.DEVPROPTYPE), PropertyBuffer: POINTER(Byte), PropertyBufferSize: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Class_Property_Keys(ClassGUID: POINTER(Guid), PropertyKeyArray: POINTER(win32more.Windows.Win32.Foundation.DEVPROPKEY), PropertyKeyCount: POINTER(UInt32), ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Class_Property_Keys_Ex(ClassGUID: POINTER(Guid), PropertyKeyArray: POINTER(win32more.Windows.Win32.Foundation.DEVPROPKEY), PropertyKeyCount: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Set_Class_PropertyW(ClassGUID: POINTER(Guid), PropertyKey: POINTER(win32more.Windows.Win32.Foundation.DEVPROPKEY), PropertyType: win32more.Windows.Win32.Devices.Properties.DEVPROPTYPE, PropertyBuffer: POINTER(Byte), PropertyBufferSize: UInt32, ulFlags: UInt32) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Set_Class_Property_ExW(ClassGUID: POINTER(Guid), PropertyKey: POINTER(win32more.Windows.Win32.Foundation.DEVPROPKEY), PropertyType: win32more.Windows.Win32.Devices.Properties.DEVPROPTYPE, PropertyBuffer: POINTER(Byte), PropertyBufferSize: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Class_Registry_PropertyA(ClassGuid: POINTER(Guid), ulProperty: UInt32, pulRegDataType: POINTER(UInt32), Buffer: VoidPtr, pulLength: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Class_Registry_PropertyW(ClassGuid: POINTER(Guid), ulProperty: UInt32, pulRegDataType: POINTER(UInt32), Buffer: VoidPtr, pulLength: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
CM_Get_Class_Registry_Property = UnicodeAlias('CM_Get_Class_Registry_PropertyW')
@winfunctype('CFGMGR32.dll')
def CM_Set_Class_Registry_PropertyA(ClassGuid: POINTER(Guid), ulProperty: UInt32, Buffer: VoidPtr, ulLength: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Set_Class_Registry_PropertyW(ClassGuid: POINTER(Guid), ulProperty: UInt32, Buffer: VoidPtr, ulLength: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
CM_Set_Class_Registry_Property = UnicodeAlias('CM_Set_Class_Registry_PropertyW')
@winfunctype('CFGMGR32.dll')
def CMP_WaitNoPendingInstallEvents(dwTimeout: UInt32) -> UInt32: ...
@winfunctype('CFGMGR32.dll')
def CM_Register_Notification(pFilter: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_NOTIFY_FILTER), pContext: VoidPtr, pCallback: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PCM_NOTIFY_CALLBACK, pNotifyContext: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HCMNOTIFICATION)) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Unregister_Notification(NotifyContext: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HCMNOTIFICATION) -> win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_MapCrToWin32Err(CmReturnCode: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET, DefaultErr: UInt32) -> UInt32: ...
@winfunctype('newdev.dll')
def UpdateDriverForPlugAndPlayDevicesA(hwndParent: win32more.Windows.Win32.Foundation.HWND, HardwareId: win32more.Windows.Win32.Foundation.PSTR, FullInfPath: win32more.Windows.Win32.Foundation.PSTR, InstallFlags: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.UPDATEDRIVERFORPLUGANDPLAYDEVICES_FLAGS, bRebootRequired: POINTER(win32more.Windows.Win32.Foundation.BOOL)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('newdev.dll')
def UpdateDriverForPlugAndPlayDevicesW(hwndParent: win32more.Windows.Win32.Foundation.HWND, HardwareId: win32more.Windows.Win32.Foundation.PWSTR, FullInfPath: win32more.Windows.Win32.Foundation.PWSTR, InstallFlags: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.UPDATEDRIVERFORPLUGANDPLAYDEVICES_FLAGS, bRebootRequired: POINTER(win32more.Windows.Win32.Foundation.BOOL)) -> win32more.Windows.Win32.Foundation.BOOL: ...
UpdateDriverForPlugAndPlayDevices = UnicodeAlias('UpdateDriverForPlugAndPlayDevicesW')
@winfunctype('newdev.dll')
def DiInstallDevice(hwndParent: win32more.Windows.Win32.Foundation.HWND, DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA), DriverInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINFO_DATA_V2_W), Flags: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DIINSTALLDEVICE_FLAGS, NeedReboot: POINTER(win32more.Windows.Win32.Foundation.BOOL)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('newdev.dll')
def DiInstallDriverW(hwndParent: win32more.Windows.Win32.Foundation.HWND, InfPath: win32more.Windows.Win32.Foundation.PWSTR, Flags: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DIINSTALLDRIVER_FLAGS, NeedReboot: POINTER(win32more.Windows.Win32.Foundation.BOOL)) -> win32more.Windows.Win32.Foundation.BOOL: ...
DiInstallDriver = UnicodeAlias('DiInstallDriverW')
@winfunctype('newdev.dll')
def DiInstallDriverA(hwndParent: win32more.Windows.Win32.Foundation.HWND, InfPath: win32more.Windows.Win32.Foundation.PSTR, Flags: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DIINSTALLDRIVER_FLAGS, NeedReboot: POINTER(win32more.Windows.Win32.Foundation.BOOL)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('newdev.dll')
def DiUninstallDevice(hwndParent: win32more.Windows.Win32.Foundation.HWND, DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA), Flags: UInt32, NeedReboot: POINTER(win32more.Windows.Win32.Foundation.BOOL)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('newdev.dll')
def DiUninstallDriverW(hwndParent: win32more.Windows.Win32.Foundation.HWND, InfPath: win32more.Windows.Win32.Foundation.PWSTR, Flags: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DIUNINSTALLDRIVER_FLAGS, NeedReboot: POINTER(win32more.Windows.Win32.Foundation.BOOL)) -> win32more.Windows.Win32.Foundation.BOOL: ...
DiUninstallDriver = UnicodeAlias('DiUninstallDriverW')
@winfunctype('newdev.dll')
def DiUninstallDriverA(hwndParent: win32more.Windows.Win32.Foundation.HWND, InfPath: win32more.Windows.Win32.Foundation.PSTR, Flags: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DIUNINSTALLDRIVER_FLAGS, NeedReboot: POINTER(win32more.Windows.Win32.Foundation.BOOL)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('newdev.dll')
def DiShowUpdateDevice(hwndParent: win32more.Windows.Win32.Foundation.HWND, DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA), Flags: UInt32, NeedReboot: POINTER(win32more.Windows.Win32.Foundation.BOOL)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('newdev.dll')
def DiRollbackDriver(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA), hwndParent: win32more.Windows.Win32.Foundation.HWND, Flags: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DIROLLBACKDRIVER_FLAGS, NeedReboot: POINTER(win32more.Windows.Win32.Foundation.BOOL)) -> win32more.Windows.Win32.Foundation.BOOL: ...
@winfunctype('newdev.dll')
def DiShowUpdateDriver(hwndParent: win32more.Windows.Win32.Foundation.HWND, FilePath: win32more.Windows.Win32.Foundation.PWSTR, Flags: UInt32, NeedReboot: POINTER(win32more.Windows.Win32.Foundation.BOOL)) -> win32more.Windows.Win32.Foundation.BOOL: ...
class BUSNUMBER_DES(Structure):
    BUSD_Count: UInt32
    BUSD_Type: UInt32
    BUSD_Flags: UInt32
    BUSD_Alloc_Base: UInt32
    BUSD_Alloc_End: UInt32
    _pack_ = 1
class BUSNUMBER_RANGE(Structure):
    BUSR_Min: UInt32
    BUSR_Max: UInt32
    BUSR_nBusNumbers: UInt32
    BUSR_Flags: UInt32
    _pack_ = 1
class BUSNUMBER_RESOURCE(Structure):
    BusNumber_Header: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.BUSNUMBER_DES
    BusNumber_Data: FlexibleArray[win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.BUSNUMBER_RANGE]
    _pack_ = 1
if ARCH in 'X64,ARM64':
    class CABINET_INFO_A(Structure):
        CabinetPath: win32more.Windows.Win32.Foundation.PSTR
        CabinetFile: win32more.Windows.Win32.Foundation.PSTR
        DiskName: win32more.Windows.Win32.Foundation.PSTR
        SetId: UInt16
        CabinetNumber: UInt16
elif ARCH in 'X86':
    class CABINET_INFO_A(Structure):
        CabinetPath: win32more.Windows.Win32.Foundation.PSTR
        CabinetFile: win32more.Windows.Win32.Foundation.PSTR
        DiskName: win32more.Windows.Win32.Foundation.PSTR
        SetId: UInt16
        CabinetNumber: UInt16
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class CABINET_INFO_W(Structure):
        CabinetPath: win32more.Windows.Win32.Foundation.PWSTR
        CabinetFile: win32more.Windows.Win32.Foundation.PWSTR
        DiskName: win32more.Windows.Win32.Foundation.PWSTR
        SetId: UInt16
        CabinetNumber: UInt16
elif ARCH in 'X86':
    class CABINET_INFO_W(Structure):
        CabinetPath: win32more.Windows.Win32.Foundation.PWSTR
        CabinetFile: win32more.Windows.Win32.Foundation.PWSTR
        DiskName: win32more.Windows.Win32.Foundation.PWSTR
        SetId: UInt16
        CabinetNumber: UInt16
        _pack_ = 1
if ARCH in 'X64,ARM64':
    CABINET_INFO = UnicodeAlias('CABINET_INFO_W')
elif ARCH in 'X86':
    CABINET_INFO = UnicodeAlias('CABINET_INFO_W')
CM_CDFLAGS = UInt32
CM_CDFLAGS_DRIVER: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_CDFLAGS = 1
CM_CDFLAGS_ROOT_OWNED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_CDFLAGS = 2
CM_CDFLAGS_RESERVED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_CDFLAGS = 4
CM_CDMASK = UInt32
CM_CDMASK_DEVINST: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_CDMASK = 1
CM_CDMASK_RESDES: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_CDMASK = 2
CM_CDMASK_FLAGS: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_CDMASK = 4
CM_CDMASK_DESCRIPTION: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_CDMASK = 8
CM_CDMASK_VALID: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_CDMASK = 15
CM_DEVCAP = UInt32
CM_DEVCAP_LOCKSUPPORTED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_DEVCAP = 1
CM_DEVCAP_EJECTSUPPORTED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_DEVCAP = 2
CM_DEVCAP_REMOVABLE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_DEVCAP = 4
CM_DEVCAP_DOCKDEVICE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_DEVCAP = 8
CM_DEVCAP_UNIQUEID: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_DEVCAP = 16
CM_DEVCAP_SILENTINSTALL: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_DEVCAP = 32
CM_DEVCAP_RAWDEVICEOK: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_DEVCAP = 64
CM_DEVCAP_SURPRISEREMOVALOK: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_DEVCAP = 128
CM_DEVCAP_HARDWAREDISABLED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_DEVCAP = 256
CM_DEVCAP_NONDYNAMIC: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_DEVCAP = 512
CM_DEVCAP_SECUREDEVICE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_DEVCAP = 1024
CM_DEVNODE_STATUS_FLAGS = UInt32
DN_CHANGEABLE_FLAGS: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_DEVNODE_STATUS_FLAGS = 1639670464
DN_ROOT_ENUMERATED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_DEVNODE_STATUS_FLAGS = 1
DN_DRIVER_LOADED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_DEVNODE_STATUS_FLAGS = 2
DN_ENUM_LOADED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_DEVNODE_STATUS_FLAGS = 4
DN_STARTED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_DEVNODE_STATUS_FLAGS = 8
DN_MANUAL: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_DEVNODE_STATUS_FLAGS = 16
DN_NEED_TO_ENUM: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_DEVNODE_STATUS_FLAGS = 32
DN_NOT_FIRST_TIME: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_DEVNODE_STATUS_FLAGS = 64
DN_HARDWARE_ENUM: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_DEVNODE_STATUS_FLAGS = 128
DN_LIAR: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_DEVNODE_STATUS_FLAGS = 256
DN_HAS_MARK: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_DEVNODE_STATUS_FLAGS = 512
DN_HAS_PROBLEM: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_DEVNODE_STATUS_FLAGS = 1024
DN_FILTERED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_DEVNODE_STATUS_FLAGS = 2048
DN_MOVED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_DEVNODE_STATUS_FLAGS = 4096
DN_DISABLEABLE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_DEVNODE_STATUS_FLAGS = 8192
DN_REMOVABLE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_DEVNODE_STATUS_FLAGS = 16384
DN_PRIVATE_PROBLEM: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_DEVNODE_STATUS_FLAGS = 32768
DN_MF_PARENT: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_DEVNODE_STATUS_FLAGS = 65536
DN_MF_CHILD: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_DEVNODE_STATUS_FLAGS = 131072
DN_WILL_BE_REMOVED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_DEVNODE_STATUS_FLAGS = 262144
DN_NOT_FIRST_TIMEE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_DEVNODE_STATUS_FLAGS = 524288
DN_STOP_FREE_RES: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_DEVNODE_STATUS_FLAGS = 1048576
DN_REBAL_CANDIDATE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_DEVNODE_STATUS_FLAGS = 2097152
DN_BAD_PARTIAL: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_DEVNODE_STATUS_FLAGS = 4194304
DN_NT_ENUMERATOR: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_DEVNODE_STATUS_FLAGS = 8388608
DN_NT_DRIVER: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_DEVNODE_STATUS_FLAGS = 16777216
DN_NEEDS_LOCKING: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_DEVNODE_STATUS_FLAGS = 33554432
DN_ARM_WAKEUP: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_DEVNODE_STATUS_FLAGS = 67108864
DN_APM_ENUMERATOR: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_DEVNODE_STATUS_FLAGS = 134217728
DN_APM_DRIVER: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_DEVNODE_STATUS_FLAGS = 268435456
DN_SILENT_INSTALL: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_DEVNODE_STATUS_FLAGS = 536870912
DN_NO_SHOW_IN_DM: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_DEVNODE_STATUS_FLAGS = 1073741824
DN_BOOT_LOG_PROB: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_DEVNODE_STATUS_FLAGS = 2147483648
DN_NEED_RESTART: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_DEVNODE_STATUS_FLAGS = 256
DN_DRIVER_BLOCKED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_DEVNODE_STATUS_FLAGS = 64
DN_LEGACY_DRIVER: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_DEVNODE_STATUS_FLAGS = 4096
DN_CHILD_WITH_INVALID_ID: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_DEVNODE_STATUS_FLAGS = 512
DN_DEVICE_DISCONNECTED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_DEVNODE_STATUS_FLAGS = 33554432
DN_QUERY_REMOVE_PENDING: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_DEVNODE_STATUS_FLAGS = 65536
DN_QUERY_REMOVE_ACTIVE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_DEVNODE_STATUS_FLAGS = 131072
CM_ENUMERATE_FLAGS = UInt32
CM_ENUMERATE_CLASSES_INSTALLER: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_ENUMERATE_FLAGS = 0
CM_ENUMERATE_CLASSES_INTERFACE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_ENUMERATE_FLAGS = 1
CM_ENUMERATE_CLASSES_BITS: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_ENUMERATE_FLAGS = 1
CM_GET_DEVICE_INTERFACE_LIST_FLAGS = UInt32
CM_GET_DEVICE_INTERFACE_LIST_PRESENT: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_GET_DEVICE_INTERFACE_LIST_FLAGS = 0
CM_GET_DEVICE_INTERFACE_LIST_ALL_DEVICES: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_GET_DEVICE_INTERFACE_LIST_FLAGS = 1
CM_GET_DEVICE_INTERFACE_LIST_BITS: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_GET_DEVICE_INTERFACE_LIST_FLAGS = 1
CM_INSTALL_STATE = UInt32
CM_INSTALL_STATE_INSTALLED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_INSTALL_STATE = 0
CM_INSTALL_STATE_NEEDS_REINSTALL: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_INSTALL_STATE = 1
CM_INSTALL_STATE_FAILED_INSTALL: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_INSTALL_STATE = 2
CM_INSTALL_STATE_FINISH_INSTALL: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_INSTALL_STATE = 3
CM_LOCATE_DEVNODE_FLAGS = UInt32
CM_LOCATE_DEVNODE_NORMAL: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_LOCATE_DEVNODE_FLAGS = 0
CM_LOCATE_DEVNODE_PHANTOM: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_LOCATE_DEVNODE_FLAGS = 1
CM_LOCATE_DEVNODE_CANCELREMOVE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_LOCATE_DEVNODE_FLAGS = 2
CM_LOCATE_DEVNODE_NOVALIDATION: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_LOCATE_DEVNODE_FLAGS = 4
CM_LOCATE_DEVNODE_BITS: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_LOCATE_DEVNODE_FLAGS = 7
CM_LOG_CONF = UInt32
BASIC_LOG_CONF: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_LOG_CONF = 0
FILTERED_LOG_CONF: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_LOG_CONF = 1
ALLOC_LOG_CONF: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_LOG_CONF = 2
BOOT_LOG_CONF: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_LOG_CONF = 3
FORCED_LOG_CONF: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_LOG_CONF = 4
OVERRIDE_LOG_CONF: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_LOG_CONF = 5
NUM_LOG_CONF: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_LOG_CONF = 6
CM_NOTIFY_ACTION = Int32
CM_NOTIFY_ACTION_DEVICEINTERFACEARRIVAL: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_NOTIFY_ACTION = 0
CM_NOTIFY_ACTION_DEVICEINTERFACEREMOVAL: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_NOTIFY_ACTION = 1
CM_NOTIFY_ACTION_DEVICEQUERYREMOVE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_NOTIFY_ACTION = 2
CM_NOTIFY_ACTION_DEVICEQUERYREMOVEFAILED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_NOTIFY_ACTION = 3
CM_NOTIFY_ACTION_DEVICEREMOVEPENDING: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_NOTIFY_ACTION = 4
CM_NOTIFY_ACTION_DEVICEREMOVECOMPLETE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_NOTIFY_ACTION = 5
CM_NOTIFY_ACTION_DEVICECUSTOMEVENT: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_NOTIFY_ACTION = 6
CM_NOTIFY_ACTION_DEVICEINSTANCEENUMERATED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_NOTIFY_ACTION = 7
CM_NOTIFY_ACTION_DEVICEINSTANCESTARTED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_NOTIFY_ACTION = 8
CM_NOTIFY_ACTION_DEVICEINSTANCEREMOVED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_NOTIFY_ACTION = 9
CM_NOTIFY_ACTION_MAX: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_NOTIFY_ACTION = 10
class CM_NOTIFY_EVENT_DATA(Structure):
    FilterType: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_NOTIFY_FILTER_TYPE
    Reserved: UInt32
    u: _u_e__Union
    class _u_e__Union(Union):
        DeviceInterface: _DeviceInterface_e__Struct
        DeviceHandle: _DeviceHandle_e__Struct
        DeviceInstance: _DeviceInstance_e__Struct
        class _DeviceInterface_e__Struct(Structure):
            ClassGuid: Guid
            SymbolicLink: FlexibleArray[Char]
        class _DeviceHandle_e__Struct(Structure):
            EventGuid: Guid
            NameOffset: Int32
            DataSize: UInt32
            Data: FlexibleArray[Byte]
        class _DeviceInstance_e__Struct(Structure):
            InstanceId: FlexibleArray[Char]
class CM_NOTIFY_FILTER(Structure):
    cbSize: UInt32
    Flags: UInt32
    FilterType: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_NOTIFY_FILTER_TYPE
    Reserved: UInt32
    u: _u_e__Union
    class _u_e__Union(Union):
        DeviceInterface: _DeviceInterface_e__Struct
        DeviceHandle: _DeviceHandle_e__Struct
        DeviceInstance: _DeviceInstance_e__Struct
        class _DeviceInterface_e__Struct(Structure):
            ClassGuid: Guid
        class _DeviceHandle_e__Struct(Structure):
            hTarget: win32more.Windows.Win32.Foundation.HANDLE
        class _DeviceInstance_e__Struct(Structure):
            InstanceId: Char * 200
CM_NOTIFY_FILTER_TYPE = Int32
CM_NOTIFY_FILTER_TYPE_DEVICEINTERFACE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_NOTIFY_FILTER_TYPE = 0
CM_NOTIFY_FILTER_TYPE_DEVICEHANDLE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_NOTIFY_FILTER_TYPE = 1
CM_NOTIFY_FILTER_TYPE_DEVICEINSTANCE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_NOTIFY_FILTER_TYPE = 2
CM_NOTIFY_FILTER_TYPE_MAX: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_NOTIFY_FILTER_TYPE = 3
CM_PROB = UInt32
CM_PROB_NOT_CONFIGURED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 1
CM_PROB_DEVLOADER_FAILED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 2
CM_PROB_OUT_OF_MEMORY: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 3
CM_PROB_ENTRY_IS_WRONG_TYPE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 4
CM_PROB_LACKED_ARBITRATOR: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 5
CM_PROB_BOOT_CONFIG_CONFLICT: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 6
CM_PROB_FAILED_FILTER: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 7
CM_PROB_DEVLOADER_NOT_FOUND: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 8
CM_PROB_INVALID_DATA: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 9
CM_PROB_FAILED_START: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 10
CM_PROB_LIAR: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 11
CM_PROB_NORMAL_CONFLICT: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 12
CM_PROB_NOT_VERIFIED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 13
CM_PROB_NEED_RESTART: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 14
CM_PROB_REENUMERATION: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 15
CM_PROB_PARTIAL_LOG_CONF: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 16
CM_PROB_UNKNOWN_RESOURCE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 17
CM_PROB_REINSTALL: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 18
CM_PROB_REGISTRY: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 19
CM_PROB_VXDLDR: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 20
CM_PROB_WILL_BE_REMOVED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 21
CM_PROB_DISABLED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 22
CM_PROB_DEVLOADER_NOT_READY: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 23
CM_PROB_DEVICE_NOT_THERE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 24
CM_PROB_MOVED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 25
CM_PROB_TOO_EARLY: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 26
CM_PROB_NO_VALID_LOG_CONF: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 27
CM_PROB_FAILED_INSTALL: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 28
CM_PROB_HARDWARE_DISABLED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 29
CM_PROB_CANT_SHARE_IRQ: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 30
CM_PROB_FAILED_ADD: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 31
CM_PROB_DISABLED_SERVICE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 32
CM_PROB_TRANSLATION_FAILED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 33
CM_PROB_NO_SOFTCONFIG: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 34
CM_PROB_BIOS_TABLE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 35
CM_PROB_IRQ_TRANSLATION_FAILED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 36
CM_PROB_FAILED_DRIVER_ENTRY: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 37
CM_PROB_DRIVER_FAILED_PRIOR_UNLOAD: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 38
CM_PROB_DRIVER_FAILED_LOAD: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 39
CM_PROB_DRIVER_SERVICE_KEY_INVALID: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 40
CM_PROB_LEGACY_SERVICE_NO_DEVICES: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 41
CM_PROB_DUPLICATE_DEVICE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 42
CM_PROB_FAILED_POST_START: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 43
CM_PROB_HALTED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 44
CM_PROB_PHANTOM: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 45
CM_PROB_SYSTEM_SHUTDOWN: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 46
CM_PROB_HELD_FOR_EJECT: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 47
CM_PROB_DRIVER_BLOCKED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 48
CM_PROB_REGISTRY_TOO_LARGE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 49
CM_PROB_SETPROPERTIES_FAILED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 50
CM_PROB_WAITING_ON_DEPENDENCY: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 51
CM_PROB_UNSIGNED_DRIVER: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 52
CM_PROB_USED_BY_DEBUGGER: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 53
CM_PROB_DEVICE_RESET: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 54
CM_PROB_CONSOLE_LOCKED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 55
CM_PROB_NEED_CLASS_CONFIG: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 56
CM_PROB_GUEST_ASSIGNMENT_FAILED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_PROB = 57
CM_REENUMERATE_FLAGS = UInt32
CM_REENUMERATE_NORMAL: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_REENUMERATE_FLAGS = 0
CM_REENUMERATE_SYNCHRONOUS: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_REENUMERATE_FLAGS = 1
CM_REENUMERATE_RETRY_INSTALLATION: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_REENUMERATE_FLAGS = 2
CM_REENUMERATE_ASYNCHRONOUS: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_REENUMERATE_FLAGS = 4
CM_REENUMERATE_BITS: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_REENUMERATE_FLAGS = 7
CM_REMOVAL_POLICY = UInt32
CM_REMOVAL_POLICY_EXPECT_NO_REMOVAL: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_REMOVAL_POLICY = 1
CM_REMOVAL_POLICY_EXPECT_ORDERLY_REMOVAL: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_REMOVAL_POLICY = 2
CM_REMOVAL_POLICY_EXPECT_SURPRISE_REMOVAL: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_REMOVAL_POLICY = 3
CM_RESTYPE = UInt32
ResType_All: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_RESTYPE = 0
ResType_None: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_RESTYPE = 0
ResType_Mem: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_RESTYPE = 1
ResType_IO: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_RESTYPE = 2
ResType_DMA: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_RESTYPE = 3
ResType_IRQ: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_RESTYPE = 4
ResType_DoNotUse: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_RESTYPE = 5
ResType_BusNumber: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_RESTYPE = 6
ResType_MemLarge: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_RESTYPE = 7
ResType_MAX: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_RESTYPE = 7
ResType_Ignored_Bit: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_RESTYPE = 32768
ResType_ClassSpecific: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_RESTYPE = 65535
ResType_Reserved: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_RESTYPE = 32768
ResType_DevicePrivate: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_RESTYPE = 32769
ResType_PcCardConfig: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_RESTYPE = 32770
ResType_MfCardConfig: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_RESTYPE = 32771
ResType_Connection: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_RESTYPE = 32772
if ARCH in 'X64,ARM64':
    class COINSTALLER_CONTEXT_DATA(Structure):
        PostProcessing: win32more.Windows.Win32.Foundation.BOOL
        InstallResult: UInt32
        PrivateData: VoidPtr
elif ARCH in 'X86':
    class COINSTALLER_CONTEXT_DATA(Structure):
        PostProcessing: win32more.Windows.Win32.Foundation.BOOL
        InstallResult: UInt32
        PrivateData: VoidPtr
        _pack_ = 1
CONFIGRET = UInt32
CR_SUCCESS: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 0
CR_DEFAULT: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 1
CR_OUT_OF_MEMORY: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 2
CR_INVALID_POINTER: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 3
CR_INVALID_FLAG: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 4
CR_INVALID_DEVNODE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 5
CR_INVALID_DEVINST: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 5
CR_INVALID_RES_DES: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 6
CR_INVALID_LOG_CONF: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 7
CR_INVALID_ARBITRATOR: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 8
CR_INVALID_NODELIST: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 9
CR_DEVNODE_HAS_REQS: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 10
CR_DEVINST_HAS_REQS: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 10
CR_INVALID_RESOURCEID: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 11
CR_DLVXD_NOT_FOUND: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 12
CR_NO_SUCH_DEVNODE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 13
CR_NO_SUCH_DEVINST: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 13
CR_NO_MORE_LOG_CONF: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 14
CR_NO_MORE_RES_DES: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 15
CR_ALREADY_SUCH_DEVNODE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 16
CR_ALREADY_SUCH_DEVINST: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 16
CR_INVALID_RANGE_LIST: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 17
CR_INVALID_RANGE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 18
CR_FAILURE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 19
CR_NO_SUCH_LOGICAL_DEV: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 20
CR_CREATE_BLOCKED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 21
CR_NOT_SYSTEM_VM: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 22
CR_REMOVE_VETOED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 23
CR_APM_VETOED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 24
CR_INVALID_LOAD_TYPE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 25
CR_BUFFER_SMALL: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 26
CR_NO_ARBITRATOR: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 27
CR_NO_REGISTRY_HANDLE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 28
CR_REGISTRY_ERROR: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 29
CR_INVALID_DEVICE_ID: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 30
CR_INVALID_DATA: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 31
CR_INVALID_API: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 32
CR_DEVLOADER_NOT_READY: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 33
CR_NEED_RESTART: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 34
CR_NO_MORE_HW_PROFILES: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 35
CR_DEVICE_NOT_THERE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 36
CR_NO_SUCH_VALUE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 37
CR_WRONG_TYPE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 38
CR_INVALID_PRIORITY: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 39
CR_NOT_DISABLEABLE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 40
CR_FREE_RESOURCES: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 41
CR_QUERY_VETOED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 42
CR_CANT_SHARE_IRQ: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 43
CR_NO_DEPENDENT: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 44
CR_SAME_RESOURCES: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 45
CR_NO_SUCH_REGISTRY_KEY: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 46
CR_INVALID_MACHINENAME: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 47
CR_REMOTE_COMM_FAILURE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 48
CR_MACHINE_UNAVAILABLE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 49
CR_NO_CM_SERVICES: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 50
CR_ACCESS_DENIED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 51
CR_CALL_NOT_IMPLEMENTED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 52
CR_INVALID_PROPERTY: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 53
CR_DEVICE_INTERFACE_ACTIVE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 54
CR_NO_SUCH_DEVICE_INTERFACE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 55
CR_INVALID_REFERENCE_STRING: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 56
CR_INVALID_CONFLICT_LIST: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 57
CR_INVALID_INDEX: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 58
CR_INVALID_STRUCTURE_SIZE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 59
NUM_CR_RESULTS: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET = 60
class CONFLICT_DETAILS_A(Structure):
    CD_ulSize: UInt32
    CD_ulMask: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_CDMASK
    CD_dnDevInst: UInt32
    CD_rdResDes: UIntPtr
    CD_ulFlags: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_CDFLAGS
    CD_szDescription: win32more.Windows.Win32.Foundation.CHAR * 260
class CONFLICT_DETAILS_W(Structure):
    CD_ulSize: UInt32
    CD_ulMask: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_CDMASK
    CD_dnDevInst: UInt32
    CD_rdResDes: UIntPtr
    CD_ulFlags: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_CDFLAGS
    CD_szDescription: Char * 260
CONFLICT_DETAILS = UnicodeAlias('CONFLICT_DETAILS_W')
class CONNECTION_DES(Structure):
    COND_Type: UInt32
    COND_Flags: UInt32
    COND_Class: Byte
    COND_ClassType: Byte
    COND_Reserved1: Byte
    COND_Reserved2: Byte
    COND_Id: Int64
    _pack_ = 1
class CONNECTION_RESOURCE(Structure):
    Connection_Header: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CONNECTION_DES
    _pack_ = 1
class CS_DES(Structure):
    CSD_SignatureLength: UInt32
    CSD_LegacyDataOffset: UInt32
    CSD_LegacyDataSize: UInt32
    CSD_Flags: UInt32
    CSD_ClassGuid: Guid
    CSD_Signature: FlexibleArray[Byte]
    _pack_ = 1
class CS_RESOURCE(Structure):
    CS_Header: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CS_DES
    _pack_ = 1
DD_FLAGS = UInt32
mDD_Width: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DD_FLAGS = 3
fDD_BYTE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DD_FLAGS = 0
fDD_WORD: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DD_FLAGS = 1
fDD_DWORD: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DD_FLAGS = 2
fDD_BYTE_AND_WORD: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DD_FLAGS = 3
mDD_BusMaster: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DD_FLAGS = 4
fDD_NoBusMaster: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DD_FLAGS = 0
fDD_BusMaster: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DD_FLAGS = 4
mDD_Type: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DD_FLAGS = 24
fDD_TypeStandard: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DD_FLAGS = 0
fDD_TypeA: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DD_FLAGS = 8
fDD_TypeB: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DD_FLAGS = 16
fDD_TypeF: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DD_FLAGS = 24
class DEVPRIVATE_DES(Structure):
    PD_Count: UInt32
    PD_Type: UInt32
    PD_Data1: UInt32
    PD_Data2: UInt32
    PD_Data3: UInt32
    PD_Flags: UInt32
    _pack_ = 1
class DEVPRIVATE_RANGE(Structure):
    PR_Data1: UInt32
    PR_Data2: UInt32
    PR_Data3: UInt32
    _pack_ = 1
class DEVPRIVATE_RESOURCE(Structure):
    PRV_Header: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DEVPRIVATE_DES
    PRV_Data: FlexibleArray[win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DEVPRIVATE_RANGE]
    _pack_ = 1
DIINSTALLDEVICE_FLAGS = UInt32
DIIDFLAG_SHOWSEARCHUI: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DIINSTALLDEVICE_FLAGS = 1
DIIDFLAG_NOFINISHINSTALLUI: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DIINSTALLDEVICE_FLAGS = 2
DIIDFLAG_INSTALLNULLDRIVER: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DIINSTALLDEVICE_FLAGS = 4
DIIDFLAG_INSTALLCOPYINFDRIVERS: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DIINSTALLDEVICE_FLAGS = 8
DIIDFLAG_BITS: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DIINSTALLDEVICE_FLAGS = 15
DIINSTALLDRIVER_FLAGS = UInt32
DIIRFLAG_BITS: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DIINSTALLDRIVER_FLAGS = 106
DIIRFLAG_SYSTEM_BITS: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DIINSTALLDRIVER_FLAGS = 127
DIIRFLAG_INF_ALREADY_COPIED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DIINSTALLDRIVER_FLAGS = 1
DIIRFLAG_FORCE_INF: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DIINSTALLDRIVER_FLAGS = 2
DIIRFLAG_HW_USING_THE_INF: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DIINSTALLDRIVER_FLAGS = 4
DIIRFLAG_HOTPATCH: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DIINSTALLDRIVER_FLAGS = 8
DIIRFLAG_NOBACKUP: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DIINSTALLDRIVER_FLAGS = 16
DIIRFLAG_PRE_CONFIGURE_INF: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DIINSTALLDRIVER_FLAGS = 32
DIIRFLAG_INSTALL_AS_SET: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DIINSTALLDRIVER_FLAGS = 64
DIROLLBACKDRIVER_FLAGS = UInt32
ROLLBACK_FLAG_NO_UI: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DIROLLBACKDRIVER_FLAGS = 1
ROLLBACK_BITS: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DIROLLBACKDRIVER_FLAGS = 1
DIUNINSTALLDRIVER_FLAGS = UInt32
DIURFLAG_VALID: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DIUNINSTALLDRIVER_FLAGS = 3
DIURFLAG_NO_REMOVE_INF: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DIUNINSTALLDRIVER_FLAGS = 1
DIURFLAG_RESERVED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DIUNINSTALLDRIVER_FLAGS = 2
DI_FUNCTION = UInt32
DIF_SELECTDEVICE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DI_FUNCTION = 1
DIF_INSTALLDEVICE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DI_FUNCTION = 2
DIF_ASSIGNRESOURCES: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DI_FUNCTION = 3
DIF_PROPERTIES: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DI_FUNCTION = 4
DIF_REMOVE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DI_FUNCTION = 5
DIF_FIRSTTIMESETUP: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DI_FUNCTION = 6
DIF_FOUNDDEVICE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DI_FUNCTION = 7
DIF_SELECTCLASSDRIVERS: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DI_FUNCTION = 8
DIF_VALIDATECLASSDRIVERS: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DI_FUNCTION = 9
DIF_INSTALLCLASSDRIVERS: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DI_FUNCTION = 10
DIF_CALCDISKSPACE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DI_FUNCTION = 11
DIF_DESTROYPRIVATEDATA: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DI_FUNCTION = 12
DIF_VALIDATEDRIVER: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DI_FUNCTION = 13
DIF_DETECT: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DI_FUNCTION = 15
DIF_INSTALLWIZARD: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DI_FUNCTION = 16
DIF_DESTROYWIZARDDATA: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DI_FUNCTION = 17
DIF_PROPERTYCHANGE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DI_FUNCTION = 18
DIF_ENABLECLASS: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DI_FUNCTION = 19
DIF_DETECTVERIFY: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DI_FUNCTION = 20
DIF_INSTALLDEVICEFILES: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DI_FUNCTION = 21
DIF_UNREMOVE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DI_FUNCTION = 22
DIF_SELECTBESTCOMPATDRV: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DI_FUNCTION = 23
DIF_ALLOW_INSTALL: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DI_FUNCTION = 24
DIF_REGISTERDEVICE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DI_FUNCTION = 25
DIF_NEWDEVICEWIZARD_PRESELECT: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DI_FUNCTION = 26
DIF_NEWDEVICEWIZARD_SELECT: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DI_FUNCTION = 27
DIF_NEWDEVICEWIZARD_PREANALYZE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DI_FUNCTION = 28
DIF_NEWDEVICEWIZARD_POSTANALYZE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DI_FUNCTION = 29
DIF_NEWDEVICEWIZARD_FINISHINSTALL: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DI_FUNCTION = 30
DIF_UNUSED1: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DI_FUNCTION = 31
DIF_INSTALLINTERFACES: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DI_FUNCTION = 32
DIF_DETECTCANCEL: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DI_FUNCTION = 33
DIF_REGISTER_COINSTALLERS: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DI_FUNCTION = 34
DIF_ADDPROPERTYPAGE_ADVANCED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DI_FUNCTION = 35
DIF_ADDPROPERTYPAGE_BASIC: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DI_FUNCTION = 36
DIF_RESERVED1: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DI_FUNCTION = 37
DIF_TROUBLESHOOTER: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DI_FUNCTION = 38
DIF_POWERMESSAGEWAKE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DI_FUNCTION = 39
DIF_ADDREMOTEPROPERTYPAGE_ADVANCED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DI_FUNCTION = 40
DIF_UPDATEDRIVER_UI: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DI_FUNCTION = 41
DIF_FINISHINSTALL_ACTION: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DI_FUNCTION = 42
DIF_RESERVED2: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DI_FUNCTION = 48
DIF_MOVEDEVICE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DI_FUNCTION = 14
class DMA_DES(Structure):
    DD_Count: UInt32
    DD_Type: UInt32
    DD_Flags: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DD_FLAGS
    DD_Alloc_Chan: UInt32
    _pack_ = 1
class DMA_RANGE(Structure):
    DR_Min: UInt32
    DR_Max: UInt32
    DR_Flags: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DD_FLAGS
    _pack_ = 1
class DMA_RESOURCE(Structure):
    DMA_Header: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DMA_DES
    DMA_Data: FlexibleArray[win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DMA_RANGE]
    _pack_ = 1
if ARCH in 'X64,ARM64':
    class FILEPATHS_A(Structure):
        Target: win32more.Windows.Win32.Foundation.PSTR
        Source: win32more.Windows.Win32.Foundation.PSTR
        Win32Error: UInt32
        Flags: UInt32
elif ARCH in 'X86':
    class FILEPATHS_A(Structure):
        Target: win32more.Windows.Win32.Foundation.PSTR
        Source: win32more.Windows.Win32.Foundation.PSTR
        Win32Error: UInt32
        Flags: UInt32
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class FILEPATHS_SIGNERINFO_A(Structure):
        Target: win32more.Windows.Win32.Foundation.PSTR
        Source: win32more.Windows.Win32.Foundation.PSTR
        Win32Error: UInt32
        Flags: UInt32
        DigitalSigner: win32more.Windows.Win32.Foundation.PSTR
        Version: win32more.Windows.Win32.Foundation.PSTR
        CatalogFile: win32more.Windows.Win32.Foundation.PSTR
elif ARCH in 'X86':
    class FILEPATHS_SIGNERINFO_A(Structure):
        Target: win32more.Windows.Win32.Foundation.PSTR
        Source: win32more.Windows.Win32.Foundation.PSTR
        Win32Error: UInt32
        Flags: UInt32
        DigitalSigner: win32more.Windows.Win32.Foundation.PSTR
        Version: win32more.Windows.Win32.Foundation.PSTR
        CatalogFile: win32more.Windows.Win32.Foundation.PSTR
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class FILEPATHS_SIGNERINFO_W(Structure):
        Target: win32more.Windows.Win32.Foundation.PWSTR
        Source: win32more.Windows.Win32.Foundation.PWSTR
        Win32Error: UInt32
        Flags: UInt32
        DigitalSigner: win32more.Windows.Win32.Foundation.PWSTR
        Version: win32more.Windows.Win32.Foundation.PWSTR
        CatalogFile: win32more.Windows.Win32.Foundation.PWSTR
elif ARCH in 'X86':
    class FILEPATHS_SIGNERINFO_W(Structure):
        Target: win32more.Windows.Win32.Foundation.PWSTR
        Source: win32more.Windows.Win32.Foundation.PWSTR
        Win32Error: UInt32
        Flags: UInt32
        DigitalSigner: win32more.Windows.Win32.Foundation.PWSTR
        Version: win32more.Windows.Win32.Foundation.PWSTR
        CatalogFile: win32more.Windows.Win32.Foundation.PWSTR
        _pack_ = 1
if ARCH in 'X64,ARM64':
    FILEPATHS_SIGNERINFO = UnicodeAlias('FILEPATHS_SIGNERINFO_W')
elif ARCH in 'X86':
    FILEPATHS_SIGNERINFO = UnicodeAlias('FILEPATHS_SIGNERINFO_W')
if ARCH in 'X64,ARM64':
    class FILEPATHS_W(Structure):
        Target: win32more.Windows.Win32.Foundation.PWSTR
        Source: win32more.Windows.Win32.Foundation.PWSTR
        Win32Error: UInt32
        Flags: UInt32
elif ARCH in 'X86':
    class FILEPATHS_W(Structure):
        Target: win32more.Windows.Win32.Foundation.PWSTR
        Source: win32more.Windows.Win32.Foundation.PWSTR
        Win32Error: UInt32
        Flags: UInt32
        _pack_ = 1
if ARCH in 'X64,ARM64':
    FILEPATHS = UnicodeAlias('FILEPATHS_W')
elif ARCH in 'X86':
    FILEPATHS = UnicodeAlias('FILEPATHS_W')
FILE_COMPRESSION_TYPE = UInt32
FILE_COMPRESSION_NONE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.FILE_COMPRESSION_TYPE = 0
FILE_COMPRESSION_WINLZA: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.FILE_COMPRESSION_TYPE = 1
FILE_COMPRESSION_MSZIP: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.FILE_COMPRESSION_TYPE = 2
FILE_COMPRESSION_NTCAB: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.FILE_COMPRESSION_TYPE = 3
if ARCH in 'X64,ARM64':
    class FILE_IN_CABINET_INFO_A(Structure):
        NameInCabinet: win32more.Windows.Win32.Foundation.PSTR
        FileSize: UInt32
        Win32Error: UInt32
        DosDate: UInt16
        DosTime: UInt16
        DosAttribs: UInt16
        FullTargetName: win32more.Windows.Win32.Foundation.CHAR * 260
elif ARCH in 'X86':
    class FILE_IN_CABINET_INFO_A(Structure):
        NameInCabinet: win32more.Windows.Win32.Foundation.PSTR
        FileSize: UInt32
        Win32Error: UInt32
        DosDate: UInt16
        DosTime: UInt16
        DosAttribs: UInt16
        FullTargetName: win32more.Windows.Win32.Foundation.CHAR * 260
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class FILE_IN_CABINET_INFO_W(Structure):
        NameInCabinet: win32more.Windows.Win32.Foundation.PWSTR
        FileSize: UInt32
        Win32Error: UInt32
        DosDate: UInt16
        DosTime: UInt16
        DosAttribs: UInt16
        FullTargetName: Char * 260
elif ARCH in 'X86':
    class FILE_IN_CABINET_INFO_W(Structure):
        NameInCabinet: win32more.Windows.Win32.Foundation.PWSTR
        FileSize: UInt32
        Win32Error: UInt32
        DosDate: UInt16
        DosTime: UInt16
        DosAttribs: UInt16
        FullTargetName: Char * 260
        _pack_ = 1
if ARCH in 'X64,ARM64':
    FILE_IN_CABINET_INFO = UnicodeAlias('FILE_IN_CABINET_INFO_W')
elif ARCH in 'X86':
    FILE_IN_CABINET_INFO = UnicodeAlias('FILE_IN_CABINET_INFO_W')
HCMNOTIFICATION = VoidPtr
HDEVINFO = IntPtr
class HWPROFILEINFO_A(Structure):
    HWPI_ulHWProfile: UInt32
    HWPI_szFriendlyName: win32more.Windows.Win32.Foundation.CHAR * 80
    HWPI_dwFlags: UInt32
    _pack_ = 1
class HWPROFILEINFO_W(Structure):
    HWPI_ulHWProfile: UInt32
    HWPI_szFriendlyName: Char * 80
    HWPI_dwFlags: UInt32
    _pack_ = 1
HWPROFILEINFO = UnicodeAlias('HWPROFILEINFO_W')
if ARCH in 'X64,ARM64':
    class INFCONTEXT(Structure):
        Inf: VoidPtr
        CurrentInf: VoidPtr
        Section: UInt32
        Line: UInt32
elif ARCH in 'X86':
    class INFCONTEXT(Structure):
        Inf: VoidPtr
        CurrentInf: VoidPtr
        Section: UInt32
        Line: UInt32
        _pack_ = 1
INF_STYLE = UInt32
INF_STYLE_NONE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.INF_STYLE = 0
INF_STYLE_OLDNT: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.INF_STYLE = 1
INF_STYLE_WIN4: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.INF_STYLE = 2
INF_STYLE_CACHE_ENABLE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.INF_STYLE = 16
INF_STYLE_CACHE_DISABLE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.INF_STYLE = 32
INF_STYLE_CACHE_IGNORE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.INF_STYLE = 64
IOD_DESFLAGS = UInt32
fIOD_PortType: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.IOD_DESFLAGS = 1
fIOD_Memory: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.IOD_DESFLAGS = 0
fIOD_IO: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.IOD_DESFLAGS = 1
fIOD_DECODE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.IOD_DESFLAGS = 252
fIOD_10_BIT_DECODE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.IOD_DESFLAGS = 4
fIOD_12_BIT_DECODE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.IOD_DESFLAGS = 8
fIOD_16_BIT_DECODE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.IOD_DESFLAGS = 16
fIOD_POSITIVE_DECODE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.IOD_DESFLAGS = 32
fIOD_PASSIVE_DECODE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.IOD_DESFLAGS = 64
fIOD_WINDOW_DECODE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.IOD_DESFLAGS = 128
fIOD_PORT_BAR: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.IOD_DESFLAGS = 256
class IO_DES(Structure):
    IOD_Count: UInt32
    IOD_Type: UInt32
    IOD_Alloc_Base: UInt64
    IOD_Alloc_End: UInt64
    IOD_DesFlags: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.IOD_DESFLAGS
    _pack_ = 1
class IO_RANGE(Structure):
    IOR_Align: UInt64
    IOR_nPorts: UInt32
    IOR_Min: UInt64
    IOR_Max: UInt64
    IOR_RangeFlags: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.IOD_DESFLAGS
    IOR_Alias: UInt64
    _pack_ = 1
class IO_RESOURCE(Structure):
    IO_Header: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.IO_DES
    IO_Data: FlexibleArray[win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.IO_RANGE]
IRQD_FLAGS = UInt32
mIRQD_Share: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.IRQD_FLAGS = 1
fIRQD_Exclusive: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.IRQD_FLAGS = 0
fIRQD_Share: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.IRQD_FLAGS = 1
fIRQD_Share_Bit: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.IRQD_FLAGS = 0
fIRQD_Level_Bit: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.IRQD_FLAGS = 1
mIRQD_Edge_Level: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.IRQD_FLAGS = 2
fIRQD_Level: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.IRQD_FLAGS = 0
fIRQD_Edge: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.IRQD_FLAGS = 2
class IRQ_DES_32(Structure):
    IRQD_Count: UInt32
    IRQD_Type: UInt32
    IRQD_Flags: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.IRQD_FLAGS
    IRQD_Alloc_Num: UInt32
    IRQD_Affinity: UInt32
    _pack_ = 1
class IRQ_DES_64(Structure):
    IRQD_Count: UInt32
    IRQD_Type: UInt32
    IRQD_Flags: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.IRQD_FLAGS
    IRQD_Alloc_Num: UInt32
    IRQD_Affinity: UInt64
    _pack_ = 1
class IRQ_RANGE(Structure):
    IRQR_Min: UInt32
    IRQR_Max: UInt32
    IRQR_Flags: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.IRQD_FLAGS
    _pack_ = 1
class IRQ_RESOURCE_32(Structure):
    IRQ_Header: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.IRQ_DES_32
    IRQ_Data: FlexibleArray[win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.IRQ_RANGE]
    _pack_ = 1
class IRQ_RESOURCE_64(Structure):
    IRQ_Header: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.IRQ_DES_64
    IRQ_Data: FlexibleArray[win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.IRQ_RANGE]
    _pack_ = 1
MD_FLAGS = UInt32
mMD_MemoryType: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.MD_FLAGS = 1
fMD_MemoryType: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.MD_FLAGS = 1
fMD_ROM: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.MD_FLAGS = 0
fMD_RAM: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.MD_FLAGS = 1
mMD_32_24: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.MD_FLAGS = 2
fMD_32_24: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.MD_FLAGS = 2
fMD_24: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.MD_FLAGS = 0
fMD_32: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.MD_FLAGS = 2
mMD_Prefetchable: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.MD_FLAGS = 4
fMD_Prefetchable: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.MD_FLAGS = 4
fMD_Pref: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.MD_FLAGS = 4
fMD_PrefetchDisallowed: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.MD_FLAGS = 0
fMD_PrefetchAllowed: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.MD_FLAGS = 4
mMD_Readable: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.MD_FLAGS = 8
fMD_Readable: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.MD_FLAGS = 8
fMD_ReadAllowed: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.MD_FLAGS = 0
fMD_ReadDisallowed: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.MD_FLAGS = 8
mMD_CombinedWrite: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.MD_FLAGS = 16
fMD_CombinedWrite: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.MD_FLAGS = 16
fMD_CombinedWriteDisallowed: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.MD_FLAGS = 0
fMD_CombinedWriteAllowed: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.MD_FLAGS = 16
mMD_Cacheable: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.MD_FLAGS = 32
fMD_NonCacheable: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.MD_FLAGS = 0
fMD_Cacheable: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.MD_FLAGS = 32
fMD_WINDOW_DECODE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.MD_FLAGS = 64
fMD_MEMORY_BAR: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.MD_FLAGS = 128
class MEM_DES(Structure):
    MD_Count: UInt32
    MD_Type: UInt32
    MD_Alloc_Base: UInt64
    MD_Alloc_End: UInt64
    MD_Flags: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.MD_FLAGS
    MD_Reserved: UInt32
    _pack_ = 1
class MEM_LARGE_DES(Structure):
    MLD_Count: UInt32
    MLD_Type: UInt32
    MLD_Alloc_Base: UInt64
    MLD_Alloc_End: UInt64
    MLD_Flags: UInt32
    MLD_Reserved: UInt32
    _pack_ = 1
class MEM_LARGE_RANGE(Structure):
    MLR_Align: UInt64
    MLR_nBytes: UInt64
    MLR_Min: UInt64
    MLR_Max: UInt64
    MLR_Flags: UInt32
    MLR_Reserved: UInt32
    _pack_ = 1
class MEM_LARGE_RESOURCE(Structure):
    MEM_LARGE_Header: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.MEM_LARGE_DES
    MEM_LARGE_Data: FlexibleArray[win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.MEM_LARGE_RANGE]
    _pack_ = 1
class MEM_RANGE(Structure):
    MR_Align: UInt64
    MR_nBytes: UInt32
    MR_Min: UInt64
    MR_Max: UInt64
    MR_Flags: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.MD_FLAGS
    MR_Reserved: UInt32
    _pack_ = 1
class MEM_RESOURCE(Structure):
    MEM_Header: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.MEM_DES
    MEM_Data: FlexibleArray[win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.MEM_RANGE]
    _pack_ = 1
class MFCARD_DES(Structure):
    PMF_Count: UInt32
    PMF_Type: UInt32
    PMF_Flags: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PMF_FLAGS
    PMF_ConfigOptions: Byte
    PMF_IoResourceIndex: Byte
    PMF_Reserved: Byte * 2
    PMF_ConfigRegisterBase: UInt32
    _pack_ = 1
class MFCARD_RESOURCE(Structure):
    MfCard_Header: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.MFCARD_DES
    _pack_ = 1
OEM_SOURCE_MEDIA_TYPE = UInt32
SPOST_NONE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.OEM_SOURCE_MEDIA_TYPE = 0
SPOST_PATH: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.OEM_SOURCE_MEDIA_TYPE = 1
SPOST_URL: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.OEM_SOURCE_MEDIA_TYPE = 2
class PCCARD_DES(Structure):
    PCD_Count: UInt32
    PCD_Type: UInt32
    PCD_Flags: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PCD_FLAGS
    PCD_ConfigIndex: Byte
    PCD_Reserved: Byte * 3
    PCD_MemoryCardBase1: UInt32
    PCD_MemoryCardBase2: UInt32
    PCD_MemoryCardBase: UInt32 * 2
    PCD_MemoryFlags: UInt16 * 2
    PCD_IoFlags: Byte * 2
    _pack_ = 1
class PCCARD_RESOURCE(Structure):
    PcCard_Header: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PCCARD_DES
    _pack_ = 1
PCD_FLAGS = UInt32
mPCD_IO_8_16: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PCD_FLAGS = 1
fPCD_IO_8: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PCD_FLAGS = 0
fPCD_IO_16: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PCD_FLAGS = 1
mPCD_MEM_8_16: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PCD_FLAGS = 2
fPCD_MEM_8: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PCD_FLAGS = 0
fPCD_MEM_16: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PCD_FLAGS = 2
mPCD_MEM_A_C: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PCD_FLAGS = 12
fPCD_MEM1_A: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PCD_FLAGS = 4
fPCD_MEM2_A: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PCD_FLAGS = 8
fPCD_IO_ZW_8: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PCD_FLAGS = 16
fPCD_IO_SRC_16: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PCD_FLAGS = 32
fPCD_IO_WS_16: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PCD_FLAGS = 64
mPCD_MEM_WS: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PCD_FLAGS = 768
fPCD_MEM_WS_ONE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PCD_FLAGS = 256
fPCD_MEM_WS_TWO: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PCD_FLAGS = 512
fPCD_MEM_WS_THREE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PCD_FLAGS = 768
fPCD_MEM_A: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PCD_FLAGS = 4
fPCD_ATTRIBUTES_PER_WINDOW: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PCD_FLAGS = 32768
fPCD_IO1_16: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PCD_FLAGS = 65536
fPCD_IO1_ZW_8: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PCD_FLAGS = 131072
fPCD_IO1_SRC_16: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PCD_FLAGS = 262144
fPCD_IO1_WS_16: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PCD_FLAGS = 524288
fPCD_IO2_16: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PCD_FLAGS = 1048576
fPCD_IO2_ZW_8: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PCD_FLAGS = 2097152
fPCD_IO2_SRC_16: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PCD_FLAGS = 4194304
fPCD_IO2_WS_16: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PCD_FLAGS = 8388608
mPCD_MEM1_WS: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PCD_FLAGS = 50331648
fPCD_MEM1_WS_ONE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PCD_FLAGS = 16777216
fPCD_MEM1_WS_TWO: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PCD_FLAGS = 33554432
fPCD_MEM1_WS_THREE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PCD_FLAGS = 50331648
fPCD_MEM1_16: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PCD_FLAGS = 67108864
mPCD_MEM2_WS: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PCD_FLAGS = 805306368
fPCD_MEM2_WS_ONE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PCD_FLAGS = 268435456
fPCD_MEM2_WS_TWO: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PCD_FLAGS = 536870912
fPCD_MEM2_WS_THREE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PCD_FLAGS = 805306368
fPCD_MEM2_16: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PCD_FLAGS = 1073741824
@winfunctype_pointer
def PCM_NOTIFY_CALLBACK(hNotify: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HCMNOTIFICATION, Context: VoidPtr, Action: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_NOTIFY_ACTION, EventData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.CM_NOTIFY_EVENT_DATA), EventDataSize: UInt32) -> UInt32: ...
@winfunctype_pointer
def PDETECT_PROGRESS_NOTIFY(ProgressNotifyParam: VoidPtr, DetectComplete: UInt32) -> win32more.Windows.Win32.Foundation.BOOL: ...
PMF_FLAGS = UInt32
fPMF_AUDIO_ENABLE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PMF_FLAGS = 8
PNP_VETO_TYPE = Int32
PNP_VetoTypeUnknown: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PNP_VETO_TYPE = 0
PNP_VetoLegacyDevice: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PNP_VETO_TYPE = 1
PNP_VetoPendingClose: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PNP_VETO_TYPE = 2
PNP_VetoWindowsApp: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PNP_VETO_TYPE = 3
PNP_VetoWindowsService: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PNP_VETO_TYPE = 4
PNP_VetoOutstandingOpen: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PNP_VETO_TYPE = 5
PNP_VetoDevice: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PNP_VETO_TYPE = 6
PNP_VetoDriver: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PNP_VETO_TYPE = 7
PNP_VetoIllegalDeviceRequest: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PNP_VETO_TYPE = 8
PNP_VetoInsufficientPower: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PNP_VETO_TYPE = 9
PNP_VetoNonDisableable: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PNP_VETO_TYPE = 10
PNP_VetoLegacyDriver: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PNP_VETO_TYPE = 11
PNP_VetoInsufficientRights: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PNP_VETO_TYPE = 12
PNP_VetoAlreadyRemoved: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PNP_VETO_TYPE = 13
@winfunctype_pointer
def PSP_DETSIG_CMPPROC(DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, NewDeviceData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA), ExistingDeviceData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA), CompareContext: VoidPtr) -> UInt32: ...
@winfunctype_pointer
def PSP_FILE_CALLBACK_A(Context: VoidPtr, Notification: UInt32, Param1: UIntPtr, Param2: UIntPtr) -> UInt32: ...
@winfunctype_pointer
def PSP_FILE_CALLBACK_W(Context: VoidPtr, Notification: UInt32, Param1: UIntPtr, Param2: UIntPtr) -> UInt32: ...
PSP_FILE_CALLBACK = UnicodeAlias('PSP_FILE_CALLBACK_W')
SETUPSCANFILEQUEUE_FLAGS = UInt32
SPQ_SCAN_FILE_PRESENCE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUPSCANFILEQUEUE_FLAGS = 1
SPQ_SCAN_FILE_VALIDITY: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUPSCANFILEQUEUE_FLAGS = 2
SPQ_SCAN_USE_CALLBACK: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUPSCANFILEQUEUE_FLAGS = 4
SPQ_SCAN_USE_CALLBACKEX: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUPSCANFILEQUEUE_FLAGS = 8
SPQ_SCAN_INFORM_USER: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUPSCANFILEQUEUE_FLAGS = 16
SPQ_SCAN_PRUNE_COPY_QUEUE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUPSCANFILEQUEUE_FLAGS = 32
SPQ_SCAN_USE_CALLBACK_SIGNERINFO: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUPSCANFILEQUEUE_FLAGS = 64
SPQ_SCAN_PRUNE_DELREN: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUPSCANFILEQUEUE_FLAGS = 128
SPQ_SCAN_FILE_PRESENCE_WITHOUT_SOURCE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUPSCANFILEQUEUE_FLAGS = 256
SPQ_SCAN_FILE_COMPARISON: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUPSCANFILEQUEUE_FLAGS = 512
SPQ_SCAN_ACTIVATE_DRP: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUPSCANFILEQUEUE_FLAGS = 1024
SPQ_SCAN_USE_OEM_CATALOGS: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUPSCANFILEQUEUE_FLAGS = 2048
SETUP_DI_DEVICE_CONFIGURATION_FLAGS = UInt32
CONFIGFLAG_DISABLED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_CONFIGURATION_FLAGS = 1
CONFIGFLAG_REMOVED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_CONFIGURATION_FLAGS = 2
CONFIGFLAG_MANUAL_INSTALL: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_CONFIGURATION_FLAGS = 4
CONFIGFLAG_IGNORE_BOOT_LC: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_CONFIGURATION_FLAGS = 8
CONFIGFLAG_NET_BOOT: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_CONFIGURATION_FLAGS = 16
CONFIGFLAG_REINSTALL: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_CONFIGURATION_FLAGS = 32
CONFIGFLAG_FAILEDINSTALL: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_CONFIGURATION_FLAGS = 64
CONFIGFLAG_CANTSTOPACHILD: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_CONFIGURATION_FLAGS = 128
CONFIGFLAG_OKREMOVEROM: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_CONFIGURATION_FLAGS = 256
CONFIGFLAG_NOREMOVEEXIT: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_CONFIGURATION_FLAGS = 512
CONFIGFLAG_FINISH_INSTALL: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_CONFIGURATION_FLAGS = 1024
CONFIGFLAG_NEEDS_FORCED_CONFIG: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_CONFIGURATION_FLAGS = 2048
CONFIGFLAG_NETBOOT_CARD: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_CONFIGURATION_FLAGS = 4096
CONFIGFLAG_PARTIAL_LOG_CONF: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_CONFIGURATION_FLAGS = 8192
CONFIGFLAG_SUPPRESS_SURPRISE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_CONFIGURATION_FLAGS = 16384
CONFIGFLAG_VERIFY_HARDWARE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_CONFIGURATION_FLAGS = 32768
CONFIGFLAG_FINISHINSTALL_UI: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_CONFIGURATION_FLAGS = 65536
CONFIGFLAG_FINISHINSTALL_ACTION: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_CONFIGURATION_FLAGS = 131072
CONFIGFLAG_BOOT_DEVICE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_CONFIGURATION_FLAGS = 262144
CONFIGFLAG_NEEDS_CLASS_CONFIG: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_CONFIGURATION_FLAGS = 524288
SETUP_DI_DEVICE_CREATION_FLAGS = UInt32
DICD_GENERATE_ID: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_CREATION_FLAGS = 1
DICD_INHERIT_CLASSDRVS: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_CREATION_FLAGS = 2
SETUP_DI_DEVICE_INSTALL_FLAGS = UInt32
DI_SHOWOEM: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS = 1
DI_SHOWCOMPAT: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS = 2
DI_SHOWCLASS: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS = 4
DI_SHOWALL: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS = 7
DI_NOVCP: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS = 8
DI_DIDCOMPAT: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS = 16
DI_DIDCLASS: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS = 32
DI_AUTOASSIGNRES: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS = 64
DI_NEEDRESTART: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS = 128
DI_NEEDREBOOT: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS = 256
DI_NOBROWSE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS = 512
DI_MULTMFGS: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS = 1024
DI_DISABLED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS = 2048
DI_GENERALPAGE_ADDED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS = 4096
DI_RESOURCEPAGE_ADDED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS = 8192
DI_PROPERTIES_CHANGE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS = 16384
DI_INF_IS_SORTED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS = 32768
DI_ENUMSINGLEINF: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS = 65536
DI_DONOTCALLCONFIGMG: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS = 131072
DI_INSTALLDISABLED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS = 262144
DI_COMPAT_FROM_CLASS: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS = 524288
DI_CLASSINSTALLPARAMS: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS = 1048576
DI_NODI_DEFAULTACTION: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS = 2097152
DI_QUIETINSTALL: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS = 8388608
DI_NOFILECOPY: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS = 16777216
DI_FORCECOPY: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS = 33554432
DI_DRIVERPAGE_ADDED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS = 67108864
DI_USECI_SELECTSTRINGS: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS = 134217728
DI_OVERRIDE_INFFLAGS: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS = 268435456
DI_PROPS_NOCHANGEUSAGE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS = 536870912
DI_NOSELECTICONS: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS = 1073741824
DI_NOWRITE_IDS: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS = 2147483648
DI_UNREMOVEDEVICE_CONFIGSPECIFIC: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS = 2
SETUP_DI_DEVICE_INSTALL_FLAGS_EX = UInt32
DI_FLAGSEX_RESERVED2: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS_EX = 1
DI_FLAGSEX_RESERVED3: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS_EX = 2
DI_FLAGSEX_CI_FAILED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS_EX = 4
DI_FLAGSEX_FINISHINSTALL_ACTION: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS_EX = 8
DI_FLAGSEX_DIDINFOLIST: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS_EX = 16
DI_FLAGSEX_DIDCOMPATINFO: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS_EX = 32
DI_FLAGSEX_FILTERCLASSES: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS_EX = 64
DI_FLAGSEX_SETFAILEDINSTALL: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS_EX = 128
DI_FLAGSEX_DEVICECHANGE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS_EX = 256
DI_FLAGSEX_ALWAYSWRITEIDS: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS_EX = 512
DI_FLAGSEX_PROPCHANGE_PENDING: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS_EX = 1024
DI_FLAGSEX_ALLOWEXCLUDEDDRVS: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS_EX = 2048
DI_FLAGSEX_NOUIONQUERYREMOVE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS_EX = 4096
DI_FLAGSEX_USECLASSFORCOMPAT: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS_EX = 8192
DI_FLAGSEX_RESERVED4: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS_EX = 16384
DI_FLAGSEX_NO_DRVREG_MODIFY: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS_EX = 32768
DI_FLAGSEX_IN_SYSTEM_SETUP: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS_EX = 65536
DI_FLAGSEX_INET_DRIVER: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS_EX = 131072
DI_FLAGSEX_APPENDDRIVERLIST: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS_EX = 262144
DI_FLAGSEX_PREINSTALLBACKUP: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS_EX = 524288
DI_FLAGSEX_BACKUPONREPLACE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS_EX = 1048576
DI_FLAGSEX_DRIVERLIST_FROM_URL: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS_EX = 2097152
DI_FLAGSEX_RESERVED1: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS_EX = 4194304
DI_FLAGSEX_EXCLUDE_OLD_INET_DRIVERS: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS_EX = 8388608
DI_FLAGSEX_POWERPAGE_ADDED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS_EX = 16777216
DI_FLAGSEX_FILTERSIMILARDRIVERS: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS_EX = 33554432
DI_FLAGSEX_INSTALLEDDRIVER: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS_EX = 67108864
DI_FLAGSEX_NO_CLASSLIST_NODE_MERGE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS_EX = 134217728
DI_FLAGSEX_ALTPLATFORM_DRVSEARCH: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS_EX = 268435456
DI_FLAGSEX_RESTART_DEVICE_ONLY: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS_EX = 536870912
DI_FLAGSEX_RECURSIVESEARCH: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS_EX = 1073741824
DI_FLAGSEX_SEARCH_PUBLISHED_INFS: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS_EX = 2147483648
SETUP_DI_DRIVER_INSTALL_FLAGS = UInt32
DNF_DUPDESC: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DRIVER_INSTALL_FLAGS = 1
DNF_OLDDRIVER: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DRIVER_INSTALL_FLAGS = 2
DNF_EXCLUDEFROMLIST: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DRIVER_INSTALL_FLAGS = 4
DNF_NODRIVER: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DRIVER_INSTALL_FLAGS = 8
DNF_LEGACYINF: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DRIVER_INSTALL_FLAGS = 16
DNF_CLASS_DRIVER: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DRIVER_INSTALL_FLAGS = 32
DNF_COMPATIBLE_DRIVER: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DRIVER_INSTALL_FLAGS = 64
DNF_INET_DRIVER: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DRIVER_INSTALL_FLAGS = 128
DNF_UNUSED1: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DRIVER_INSTALL_FLAGS = 256
DNF_UNUSED2: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DRIVER_INSTALL_FLAGS = 512
DNF_OLD_INET_DRIVER: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DRIVER_INSTALL_FLAGS = 1024
DNF_BAD_DRIVER: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DRIVER_INSTALL_FLAGS = 2048
DNF_DUPPROVIDER: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DRIVER_INSTALL_FLAGS = 4096
DNF_INF_IS_SIGNED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DRIVER_INSTALL_FLAGS = 8192
DNF_OEM_F6_INF: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DRIVER_INSTALL_FLAGS = 16384
DNF_DUPDRIVERVER: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DRIVER_INSTALL_FLAGS = 32768
DNF_BASIC_DRIVER: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DRIVER_INSTALL_FLAGS = 65536
DNF_AUTHENTICODE_SIGNED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DRIVER_INSTALL_FLAGS = 131072
DNF_INSTALLEDDRIVER: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DRIVER_INSTALL_FLAGS = 262144
DNF_ALWAYSEXCLUDEFROMLIST: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DRIVER_INSTALL_FLAGS = 524288
DNF_INBOX_DRIVER: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DRIVER_INSTALL_FLAGS = 1048576
DNF_REQUESTADDITIONALSOFTWARE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DRIVER_INSTALL_FLAGS = 2097152
DNF_UNUSED_22: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DRIVER_INSTALL_FLAGS = 4194304
DNF_UNUSED_23: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DRIVER_INSTALL_FLAGS = 8388608
DNF_UNUSED_24: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DRIVER_INSTALL_FLAGS = 16777216
DNF_UNUSED_25: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DRIVER_INSTALL_FLAGS = 33554432
DNF_UNUSED_26: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DRIVER_INSTALL_FLAGS = 67108864
DNF_UNUSED_27: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DRIVER_INSTALL_FLAGS = 134217728
DNF_UNUSED_28: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DRIVER_INSTALL_FLAGS = 268435456
DNF_UNUSED_29: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DRIVER_INSTALL_FLAGS = 536870912
DNF_UNUSED_30: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DRIVER_INSTALL_FLAGS = 1073741824
DNF_UNUSED_31: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DRIVER_INSTALL_FLAGS = 2147483648
SETUP_DI_DRIVER_TYPE = UInt32
SPDIT_CLASSDRIVER: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DRIVER_TYPE = 1
SPDIT_COMPATDRIVER: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DRIVER_TYPE = 2
SETUP_DI_GET_CLASS_DEVS_FLAGS = UInt32
DIGCF_DEFAULT: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_GET_CLASS_DEVS_FLAGS = 1
DIGCF_PRESENT: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_GET_CLASS_DEVS_FLAGS = 2
DIGCF_ALLCLASSES: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_GET_CLASS_DEVS_FLAGS = 4
DIGCF_PROFILE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_GET_CLASS_DEVS_FLAGS = 8
DIGCF_DEVICEINTERFACE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_GET_CLASS_DEVS_FLAGS = 16
DIGCF_INTERFACEDEVICE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_GET_CLASS_DEVS_FLAGS = 16
SETUP_DI_PROPERTY_CHANGE_SCOPE = UInt32
DICS_FLAG_GLOBAL: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_PROPERTY_CHANGE_SCOPE = 1
DICS_FLAG_CONFIGSPECIFIC: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_PROPERTY_CHANGE_SCOPE = 2
DICS_FLAG_CONFIGGENERAL: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_PROPERTY_CHANGE_SCOPE = 4
SETUP_DI_REGISTRY_PROPERTY = UInt32
SPDRP_DEVICEDESC: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_REGISTRY_PROPERTY = 0
SPDRP_HARDWAREID: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_REGISTRY_PROPERTY = 1
SPDRP_COMPATIBLEIDS: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_REGISTRY_PROPERTY = 2
SPDRP_UNUSED0: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_REGISTRY_PROPERTY = 3
SPDRP_SERVICE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_REGISTRY_PROPERTY = 4
SPDRP_UNUSED1: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_REGISTRY_PROPERTY = 5
SPDRP_UNUSED2: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_REGISTRY_PROPERTY = 6
SPDRP_CLASS: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_REGISTRY_PROPERTY = 7
SPDRP_CLASSGUID: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_REGISTRY_PROPERTY = 8
SPDRP_DRIVER: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_REGISTRY_PROPERTY = 9
SPDRP_CONFIGFLAGS: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_REGISTRY_PROPERTY = 10
SPDRP_MFG: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_REGISTRY_PROPERTY = 11
SPDRP_FRIENDLYNAME: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_REGISTRY_PROPERTY = 12
SPDRP_LOCATION_INFORMATION: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_REGISTRY_PROPERTY = 13
SPDRP_PHYSICAL_DEVICE_OBJECT_NAME: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_REGISTRY_PROPERTY = 14
SPDRP_CAPABILITIES: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_REGISTRY_PROPERTY = 15
SPDRP_UI_NUMBER: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_REGISTRY_PROPERTY = 16
SPDRP_UPPERFILTERS: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_REGISTRY_PROPERTY = 17
SPDRP_LOWERFILTERS: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_REGISTRY_PROPERTY = 18
SPDRP_BUSTYPEGUID: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_REGISTRY_PROPERTY = 19
SPDRP_LEGACYBUSTYPE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_REGISTRY_PROPERTY = 20
SPDRP_BUSNUMBER: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_REGISTRY_PROPERTY = 21
SPDRP_ENUMERATOR_NAME: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_REGISTRY_PROPERTY = 22
SPDRP_SECURITY: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_REGISTRY_PROPERTY = 23
SPDRP_SECURITY_SDS: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_REGISTRY_PROPERTY = 24
SPDRP_DEVTYPE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_REGISTRY_PROPERTY = 25
SPDRP_EXCLUSIVE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_REGISTRY_PROPERTY = 26
SPDRP_CHARACTERISTICS: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_REGISTRY_PROPERTY = 27
SPDRP_ADDRESS: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_REGISTRY_PROPERTY = 28
SPDRP_UI_NUMBER_DESC_FORMAT: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_REGISTRY_PROPERTY = 29
SPDRP_DEVICE_POWER_DATA: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_REGISTRY_PROPERTY = 30
SPDRP_REMOVAL_POLICY: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_REGISTRY_PROPERTY = 31
SPDRP_REMOVAL_POLICY_HW_DEFAULT: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_REGISTRY_PROPERTY = 32
SPDRP_REMOVAL_POLICY_OVERRIDE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_REGISTRY_PROPERTY = 33
SPDRP_INSTALL_STATE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_REGISTRY_PROPERTY = 34
SPDRP_LOCATION_PATHS: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_REGISTRY_PROPERTY = 35
SPDRP_BASE_CONTAINERID: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_REGISTRY_PROPERTY = 36
SPDRP_MAXIMUM_PROPERTY: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_REGISTRY_PROPERTY = 37
SETUP_DI_REMOVE_DEVICE_SCOPE = UInt32
DI_REMOVEDEVICE_GLOBAL: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_REMOVE_DEVICE_SCOPE = 1
DI_REMOVEDEVICE_CONFIGSPECIFIC: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_REMOVE_DEVICE_SCOPE = 2
SETUP_DI_STATE_CHANGE = UInt32
DICS_ENABLE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_STATE_CHANGE = 1
DICS_DISABLE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_STATE_CHANGE = 2
DICS_PROPCHANGE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_STATE_CHANGE = 3
DICS_START: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_STATE_CHANGE = 4
DICS_STOP: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_STATE_CHANGE = 5
SETUP_FILE_OPERATION = UInt32
FILEOP_DELETE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_FILE_OPERATION = 2
FILEOP_COPY: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_FILE_OPERATION = 0
if ARCH in 'X64,ARM64':
    class SOURCE_MEDIA_A(Structure):
        Reserved: win32more.Windows.Win32.Foundation.PSTR
        Tagfile: win32more.Windows.Win32.Foundation.PSTR
        Description: win32more.Windows.Win32.Foundation.PSTR
        SourcePath: win32more.Windows.Win32.Foundation.PSTR
        SourceFile: win32more.Windows.Win32.Foundation.PSTR
        Flags: UInt32
elif ARCH in 'X86':
    class SOURCE_MEDIA_A(Structure):
        Reserved: win32more.Windows.Win32.Foundation.PSTR
        Tagfile: win32more.Windows.Win32.Foundation.PSTR
        Description: win32more.Windows.Win32.Foundation.PSTR
        SourcePath: win32more.Windows.Win32.Foundation.PSTR
        SourceFile: win32more.Windows.Win32.Foundation.PSTR
        Flags: UInt32
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SOURCE_MEDIA_W(Structure):
        Reserved: win32more.Windows.Win32.Foundation.PWSTR
        Tagfile: win32more.Windows.Win32.Foundation.PWSTR
        Description: win32more.Windows.Win32.Foundation.PWSTR
        SourcePath: win32more.Windows.Win32.Foundation.PWSTR
        SourceFile: win32more.Windows.Win32.Foundation.PWSTR
        Flags: UInt32
elif ARCH in 'X86':
    class SOURCE_MEDIA_W(Structure):
        Reserved: win32more.Windows.Win32.Foundation.PWSTR
        Tagfile: win32more.Windows.Win32.Foundation.PWSTR
        Description: win32more.Windows.Win32.Foundation.PWSTR
        SourcePath: win32more.Windows.Win32.Foundation.PWSTR
        SourceFile: win32more.Windows.Win32.Foundation.PWSTR
        Flags: UInt32
        _pack_ = 1
if ARCH in 'X64,ARM64':
    SOURCE_MEDIA = UnicodeAlias('SOURCE_MEDIA_W')
elif ARCH in 'X86':
    SOURCE_MEDIA = UnicodeAlias('SOURCE_MEDIA_W')
SPSVCINST_FLAGS = UInt32
SPSVCINST_TAGTOFRONT: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SPSVCINST_FLAGS = 1
SPSVCINST_ASSOCSERVICE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SPSVCINST_FLAGS = 2
SPSVCINST_DELETEEVENTLOGENTRY: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SPSVCINST_FLAGS = 4
SPSVCINST_NOCLOBBER_DISPLAYNAME: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SPSVCINST_FLAGS = 8
SPSVCINST_NOCLOBBER_STARTTYPE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SPSVCINST_FLAGS = 16
SPSVCINST_NOCLOBBER_ERRORCONTROL: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SPSVCINST_FLAGS = 32
SPSVCINST_NOCLOBBER_LOADORDERGROUP: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SPSVCINST_FLAGS = 64
SPSVCINST_NOCLOBBER_DEPENDENCIES: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SPSVCINST_FLAGS = 128
SPSVCINST_NOCLOBBER_DESCRIPTION: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SPSVCINST_FLAGS = 256
SPSVCINST_STOPSERVICE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SPSVCINST_FLAGS = 512
SPSVCINST_CLOBBER_SECURITY: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SPSVCINST_FLAGS = 1024
SPSVCINST_STARTSERVICE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SPSVCINST_FLAGS = 2048
SPSVCINST_NOCLOBBER_REQUIREDPRIVILEGES: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SPSVCINST_FLAGS = 4096
SPSVCINST_NOCLOBBER_TRIGGERS: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SPSVCINST_FLAGS = 8192
SPSVCINST_NOCLOBBER_SERVICESIDTYPE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SPSVCINST_FLAGS = 16384
SPSVCINST_NOCLOBBER_DELAYEDAUTOSTART: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SPSVCINST_FLAGS = 32768
SPSVCINST_UNIQUE_NAME: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SPSVCINST_FLAGS = 65536
SPSVCINST_NOCLOBBER_FAILUREACTIONS: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SPSVCINST_FLAGS = 131072
SPSVCINST_NOCLOBBER_BOOTFLAGS: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SPSVCINST_FLAGS = 262144
if ARCH in 'X64,ARM64':
    class SP_ALTPLATFORM_INFO_V1(Structure):
        cbSize: UInt32
        Platform: win32more.Windows.Win32.System.Diagnostics.Debug.VER_PLATFORM
        MajorVersion: UInt32
        MinorVersion: UInt32
        ProcessorArchitecture: UInt16
        Reserved: UInt16
elif ARCH in 'X86':
    class SP_ALTPLATFORM_INFO_V1(Structure):
        cbSize: UInt32
        Platform: win32more.Windows.Win32.System.Diagnostics.Debug.VER_PLATFORM
        MajorVersion: UInt32
        MinorVersion: UInt32
        ProcessorArchitecture: UInt16
        Reserved: UInt16
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_ALTPLATFORM_INFO_V2(Structure):
        cbSize: UInt32
        Platform: win32more.Windows.Win32.System.Diagnostics.Debug.VER_PLATFORM
        MajorVersion: UInt32
        MinorVersion: UInt32
        ProcessorArchitecture: win32more.Windows.Win32.System.SystemInformation.PROCESSOR_ARCHITECTURE
        Anonymous: _Anonymous_e__Union
        FirstValidatedMajorVersion: UInt32
        FirstValidatedMinorVersion: UInt32
        _anonymous_ = ('Anonymous',)
        class _Anonymous_e__Union(Union):
            Reserved: UInt16
            Flags: UInt16
elif ARCH in 'X86':
    class SP_ALTPLATFORM_INFO_V2(Structure):
        cbSize: UInt32
        Platform: win32more.Windows.Win32.System.Diagnostics.Debug.VER_PLATFORM
        MajorVersion: UInt32
        MinorVersion: UInt32
        ProcessorArchitecture: win32more.Windows.Win32.System.SystemInformation.PROCESSOR_ARCHITECTURE
        Anonymous: _Anonymous_e__Union
        FirstValidatedMajorVersion: UInt32
        FirstValidatedMinorVersion: UInt32
        _anonymous_ = ('Anonymous',)
        _pack_ = 1
        class _Anonymous_e__Union(Union):
            Reserved: UInt16
            Flags: UInt16
            _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_ALTPLATFORM_INFO_V3(Structure):
        cbSize: UInt32
        Platform: UInt32
        MajorVersion: UInt32
        MinorVersion: UInt32
        ProcessorArchitecture: UInt16
        Anonymous: _Anonymous_e__Union
        FirstValidatedMajorVersion: UInt32
        FirstValidatedMinorVersion: UInt32
        ProductType: Byte
        SuiteMask: UInt16
        BuildNumber: UInt32
        _anonymous_ = ('Anonymous',)
        class _Anonymous_e__Union(Union):
            Reserved: UInt16
            Flags: UInt16
elif ARCH in 'X86':
    class SP_ALTPLATFORM_INFO_V3(Structure):
        cbSize: UInt32
        Platform: UInt32
        MajorVersion: UInt32
        MinorVersion: UInt32
        ProcessorArchitecture: UInt16
        Anonymous: _Anonymous_e__Union
        FirstValidatedMajorVersion: UInt32
        FirstValidatedMinorVersion: UInt32
        ProductType: Byte
        SuiteMask: UInt16
        BuildNumber: UInt32
        _anonymous_ = ('Anonymous',)
        _pack_ = 1
        class _Anonymous_e__Union(Union):
            Reserved: UInt16
            Flags: UInt16
            _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_BACKUP_QUEUE_PARAMS_V1_A(Structure):
        cbSize: UInt32
        FullInfPath: win32more.Windows.Win32.Foundation.CHAR * 260
        FilenameOffset: Int32
elif ARCH in 'X86':
    class SP_BACKUP_QUEUE_PARAMS_V1_A(Structure):
        cbSize: UInt32
        FullInfPath: win32more.Windows.Win32.Foundation.CHAR * 260
        FilenameOffset: Int32
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_BACKUP_QUEUE_PARAMS_V1_W(Structure):
        cbSize: UInt32
        FullInfPath: Char * 260
        FilenameOffset: Int32
elif ARCH in 'X86':
    class SP_BACKUP_QUEUE_PARAMS_V1_W(Structure):
        cbSize: UInt32
        FullInfPath: Char * 260
        FilenameOffset: Int32
        _pack_ = 1
if ARCH in 'X64,ARM64':
    SP_BACKUP_QUEUE_PARAMS_V1 = UnicodeAlias('SP_BACKUP_QUEUE_PARAMS_V1_W')
elif ARCH in 'X86':
    SP_BACKUP_QUEUE_PARAMS_V1 = UnicodeAlias('SP_BACKUP_QUEUE_PARAMS_V1_W')
if ARCH in 'X64,ARM64':
    class SP_BACKUP_QUEUE_PARAMS_V2_A(Structure):
        cbSize: UInt32
        FullInfPath: win32more.Windows.Win32.Foundation.CHAR * 260
        FilenameOffset: Int32
        ReinstallInstance: win32more.Windows.Win32.Foundation.CHAR * 260
elif ARCH in 'X86':
    class SP_BACKUP_QUEUE_PARAMS_V2_A(Structure):
        cbSize: UInt32
        FullInfPath: win32more.Windows.Win32.Foundation.CHAR * 260
        FilenameOffset: Int32
        ReinstallInstance: win32more.Windows.Win32.Foundation.CHAR * 260
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_BACKUP_QUEUE_PARAMS_V2_W(Structure):
        cbSize: UInt32
        FullInfPath: Char * 260
        FilenameOffset: Int32
        ReinstallInstance: Char * 260
elif ARCH in 'X86':
    class SP_BACKUP_QUEUE_PARAMS_V2_W(Structure):
        cbSize: UInt32
        FullInfPath: Char * 260
        FilenameOffset: Int32
        ReinstallInstance: Char * 260
        _pack_ = 1
if ARCH in 'X64,ARM64':
    SP_BACKUP_QUEUE_PARAMS_V2 = UnicodeAlias('SP_BACKUP_QUEUE_PARAMS_V2_W')
elif ARCH in 'X86':
    SP_BACKUP_QUEUE_PARAMS_V2 = UnicodeAlias('SP_BACKUP_QUEUE_PARAMS_V2_W')
if ARCH in 'X64,ARM64':
    class SP_CLASSIMAGELIST_DATA(Structure):
        cbSize: UInt32
        ImageList: win32more.Windows.Win32.UI.Controls.HIMAGELIST
        Reserved: UIntPtr
elif ARCH in 'X86':
    class SP_CLASSIMAGELIST_DATA(Structure):
        cbSize: UInt32
        ImageList: win32more.Windows.Win32.UI.Controls.HIMAGELIST
        Reserved: UIntPtr
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_CLASSINSTALL_HEADER(Structure):
        cbSize: UInt32
        InstallFunction: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DI_FUNCTION
elif ARCH in 'X86':
    class SP_CLASSINSTALL_HEADER(Structure):
        cbSize: UInt32
        InstallFunction: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.DI_FUNCTION
        _pack_ = 1
SP_COPY_STYLE = UInt32
SP_COPY_DELETESOURCE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_COPY_STYLE = 1
SP_COPY_REPLACEONLY: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_COPY_STYLE = 2
SP_COPY_NEWER: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_COPY_STYLE = 4
SP_COPY_NEWER_OR_SAME: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_COPY_STYLE = 4
SP_COPY_NOOVERWRITE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_COPY_STYLE = 8
SP_COPY_NODECOMP: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_COPY_STYLE = 16
SP_COPY_LANGUAGEAWARE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_COPY_STYLE = 32
SP_COPY_SOURCE_ABSOLUTE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_COPY_STYLE = 64
SP_COPY_SOURCEPATH_ABSOLUTE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_COPY_STYLE = 128
SP_COPY_IN_USE_NEEDS_REBOOT: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_COPY_STYLE = 256
SP_COPY_FORCE_IN_USE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_COPY_STYLE = 512
SP_COPY_NOSKIP: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_COPY_STYLE = 1024
SP_COPY_FORCE_NOOVERWRITE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_COPY_STYLE = 4096
SP_COPY_FORCE_NEWER: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_COPY_STYLE = 8192
SP_COPY_WARNIFSKIP: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_COPY_STYLE = 16384
SP_COPY_NOBROWSE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_COPY_STYLE = 32768
SP_COPY_NEWER_ONLY: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_COPY_STYLE = 65536
SP_COPY_RESERVED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_COPY_STYLE = 131072
SP_COPY_OEMINF_CATALOG_ONLY: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_COPY_STYLE = 262144
SP_COPY_REPLACE_BOOT_FILE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_COPY_STYLE = 524288
SP_COPY_NOPRUNE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_COPY_STYLE = 1048576
SP_COPY_OEM_F6_INF: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_COPY_STYLE = 2097152
SP_COPY_ALREADYDECOMP: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_COPY_STYLE = 4194304
SP_COPY_WINDOWS_SIGNED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_COPY_STYLE = 16777216
SP_COPY_PNPLOCKED: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_COPY_STYLE = 33554432
SP_COPY_IN_USE_TRY_RENAME: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_COPY_STYLE = 67108864
SP_COPY_INBOX_INF: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_COPY_STYLE = 134217728
SP_COPY_HARDLINK: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_COPY_STYLE = 268435456
if ARCH in 'X64,ARM64':
    class SP_DETECTDEVICE_PARAMS(Structure):
        ClassInstallHeader: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        DetectProgressNotify: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PDETECT_PROGRESS_NOTIFY
        ProgressNotifyParam: VoidPtr
elif ARCH in 'X86':
    class SP_DETECTDEVICE_PARAMS(Structure):
        ClassInstallHeader: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        DetectProgressNotify: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PDETECT_PROGRESS_NOTIFY
        ProgressNotifyParam: VoidPtr
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_DEVICE_INTERFACE_DATA(Structure):
        cbSize: UInt32
        InterfaceClassGuid: Guid
        Flags: UInt32
        Reserved: UIntPtr
elif ARCH in 'X86':
    class SP_DEVICE_INTERFACE_DATA(Structure):
        cbSize: UInt32
        InterfaceClassGuid: Guid
        Flags: UInt32
        Reserved: UIntPtr
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_DEVICE_INTERFACE_DETAIL_DATA_A(Structure):
        cbSize: UInt32
        DevicePath: FlexibleArray[win32more.Windows.Win32.Foundation.CHAR]
elif ARCH in 'X86':
    class SP_DEVICE_INTERFACE_DETAIL_DATA_A(Structure):
        cbSize: UInt32
        DevicePath: FlexibleArray[win32more.Windows.Win32.Foundation.CHAR]
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_DEVICE_INTERFACE_DETAIL_DATA_W(Structure):
        cbSize: UInt32
        DevicePath: FlexibleArray[Char]
elif ARCH in 'X86':
    class SP_DEVICE_INTERFACE_DETAIL_DATA_W(Structure):
        cbSize: UInt32
        DevicePath: FlexibleArray[Char]
        _pack_ = 1
if ARCH in 'X64,ARM64':
    SP_DEVICE_INTERFACE_DETAIL_DATA = UnicodeAlias('SP_DEVICE_INTERFACE_DETAIL_DATA_W')
elif ARCH in 'X86':
    SP_DEVICE_INTERFACE_DETAIL_DATA = UnicodeAlias('SP_DEVICE_INTERFACE_DETAIL_DATA_W')
if ARCH in 'X64,ARM64':
    class SP_DEVINFO_DATA(Structure):
        cbSize: UInt32
        ClassGuid: Guid
        DevInst: UInt32
        Reserved: UIntPtr
elif ARCH in 'X86':
    class SP_DEVINFO_DATA(Structure):
        cbSize: UInt32
        ClassGuid: Guid
        DevInst: UInt32
        Reserved: UIntPtr
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_DEVINFO_LIST_DETAIL_DATA_A(Structure):
        cbSize: UInt32
        ClassGuid: Guid
        RemoteMachineHandle: win32more.Windows.Win32.Foundation.HANDLE
        RemoteMachineName: win32more.Windows.Win32.Foundation.CHAR * 263
elif ARCH in 'X86':
    class SP_DEVINFO_LIST_DETAIL_DATA_A(Structure):
        cbSize: UInt32
        ClassGuid: Guid
        RemoteMachineHandle: win32more.Windows.Win32.Foundation.HANDLE
        RemoteMachineName: win32more.Windows.Win32.Foundation.CHAR * 263
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_DEVINFO_LIST_DETAIL_DATA_W(Structure):
        cbSize: UInt32
        ClassGuid: Guid
        RemoteMachineHandle: win32more.Windows.Win32.Foundation.HANDLE
        RemoteMachineName: Char * 263
elif ARCH in 'X86':
    class SP_DEVINFO_LIST_DETAIL_DATA_W(Structure):
        cbSize: UInt32
        ClassGuid: Guid
        RemoteMachineHandle: win32more.Windows.Win32.Foundation.HANDLE
        RemoteMachineName: Char * 263
        _pack_ = 1
if ARCH in 'X64,ARM64':
    SP_DEVINFO_LIST_DETAIL_DATA = UnicodeAlias('SP_DEVINFO_LIST_DETAIL_DATA_W')
elif ARCH in 'X86':
    SP_DEVINFO_LIST_DETAIL_DATA = UnicodeAlias('SP_DEVINFO_LIST_DETAIL_DATA_W')
if ARCH in 'X64,ARM64':
    class SP_DEVINSTALL_PARAMS_A(Structure):
        cbSize: UInt32
        Flags: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS
        FlagsEx: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS_EX
        hwndParent: win32more.Windows.Win32.Foundation.HWND
        InstallMsgHandler: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PSP_FILE_CALLBACK_A
        InstallMsgHandlerContext: VoidPtr
        FileQueue: VoidPtr
        ClassInstallReserved: UIntPtr
        Reserved: UInt32
        DriverPath: win32more.Windows.Win32.Foundation.CHAR * 260
elif ARCH in 'X86':
    class SP_DEVINSTALL_PARAMS_A(Structure):
        cbSize: UInt32
        Flags: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS
        FlagsEx: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS_EX
        hwndParent: win32more.Windows.Win32.Foundation.HWND
        InstallMsgHandler: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PSP_FILE_CALLBACK_A
        InstallMsgHandlerContext: VoidPtr
        FileQueue: VoidPtr
        ClassInstallReserved: UIntPtr
        Reserved: UInt32
        DriverPath: win32more.Windows.Win32.Foundation.CHAR * 260
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_DEVINSTALL_PARAMS_W(Structure):
        cbSize: UInt32
        Flags: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS
        FlagsEx: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS_EX
        hwndParent: win32more.Windows.Win32.Foundation.HWND
        InstallMsgHandler: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PSP_FILE_CALLBACK_W
        InstallMsgHandlerContext: VoidPtr
        FileQueue: VoidPtr
        ClassInstallReserved: UIntPtr
        Reserved: UInt32
        DriverPath: Char * 260
elif ARCH in 'X86':
    class SP_DEVINSTALL_PARAMS_W(Structure):
        cbSize: UInt32
        Flags: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS
        FlagsEx: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DEVICE_INSTALL_FLAGS_EX
        hwndParent: win32more.Windows.Win32.Foundation.HWND
        InstallMsgHandler: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.PSP_FILE_CALLBACK_W
        InstallMsgHandlerContext: VoidPtr
        FileQueue: VoidPtr
        ClassInstallReserved: UIntPtr
        Reserved: UInt32
        DriverPath: Char * 260
        _pack_ = 1
if ARCH in 'X64,ARM64':
    SP_DEVINSTALL_PARAMS = UnicodeAlias('SP_DEVINSTALL_PARAMS_W')
elif ARCH in 'X86':
    SP_DEVINSTALL_PARAMS = UnicodeAlias('SP_DEVINSTALL_PARAMS_W')
if ARCH in 'X64,ARM64':
    class SP_DRVINFO_DATA_V1_A(Structure):
        cbSize: UInt32
        DriverType: UInt32
        Reserved: UIntPtr
        Description: win32more.Windows.Win32.Foundation.CHAR * 256
        MfgName: win32more.Windows.Win32.Foundation.CHAR * 256
        ProviderName: win32more.Windows.Win32.Foundation.CHAR * 256
elif ARCH in 'X86':
    class SP_DRVINFO_DATA_V1_A(Structure):
        cbSize: UInt32
        DriverType: UInt32
        Reserved: UIntPtr
        Description: win32more.Windows.Win32.Foundation.CHAR * 256
        MfgName: win32more.Windows.Win32.Foundation.CHAR * 256
        ProviderName: win32more.Windows.Win32.Foundation.CHAR * 256
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_DRVINFO_DATA_V1_W(Structure):
        cbSize: UInt32
        DriverType: UInt32
        Reserved: UIntPtr
        Description: Char * 256
        MfgName: Char * 256
        ProviderName: Char * 256
elif ARCH in 'X86':
    class SP_DRVINFO_DATA_V1_W(Structure):
        cbSize: UInt32
        DriverType: UInt32
        Reserved: UIntPtr
        Description: Char * 256
        MfgName: Char * 256
        ProviderName: Char * 256
        _pack_ = 1
if ARCH in 'X64,ARM64':
    SP_DRVINFO_DATA_V1 = UnicodeAlias('SP_DRVINFO_DATA_V1_W')
elif ARCH in 'X86':
    SP_DRVINFO_DATA_V1 = UnicodeAlias('SP_DRVINFO_DATA_V1_W')
if ARCH in 'X64,ARM64':
    class SP_DRVINFO_DATA_V2_A(Structure):
        cbSize: UInt32
        DriverType: UInt32
        Reserved: UIntPtr
        Description: win32more.Windows.Win32.Foundation.CHAR * 256
        MfgName: win32more.Windows.Win32.Foundation.CHAR * 256
        ProviderName: win32more.Windows.Win32.Foundation.CHAR * 256
        DriverDate: win32more.Windows.Win32.Foundation.FILETIME
        DriverVersion: UInt64
elif ARCH in 'X86':
    class SP_DRVINFO_DATA_V2_A(Structure):
        cbSize: UInt32
        DriverType: UInt32
        Reserved: UIntPtr
        Description: win32more.Windows.Win32.Foundation.CHAR * 256
        MfgName: win32more.Windows.Win32.Foundation.CHAR * 256
        ProviderName: win32more.Windows.Win32.Foundation.CHAR * 256
        DriverDate: win32more.Windows.Win32.Foundation.FILETIME
        DriverVersion: UInt64
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_DRVINFO_DATA_V2_W(Structure):
        cbSize: UInt32
        DriverType: UInt32
        Reserved: UIntPtr
        Description: Char * 256
        MfgName: Char * 256
        ProviderName: Char * 256
        DriverDate: win32more.Windows.Win32.Foundation.FILETIME
        DriverVersion: UInt64
elif ARCH in 'X86':
    class SP_DRVINFO_DATA_V2_W(Structure):
        cbSize: UInt32
        DriverType: UInt32
        Reserved: UIntPtr
        Description: Char * 256
        MfgName: Char * 256
        ProviderName: Char * 256
        DriverDate: win32more.Windows.Win32.Foundation.FILETIME
        DriverVersion: UInt64
        _pack_ = 1
if ARCH in 'X64,ARM64':
    SP_DRVINFO_DATA_V2 = UnicodeAlias('SP_DRVINFO_DATA_V2_W')
elif ARCH in 'X86':
    SP_DRVINFO_DATA_V2 = UnicodeAlias('SP_DRVINFO_DATA_V2_W')
if ARCH in 'X64,ARM64':
    class SP_DRVINFO_DETAIL_DATA_A(Structure):
        cbSize: UInt32
        InfDate: win32more.Windows.Win32.Foundation.FILETIME
        CompatIDsOffset: UInt32
        CompatIDsLength: UInt32
        Reserved: UIntPtr
        SectionName: win32more.Windows.Win32.Foundation.CHAR * 256
        InfFileName: win32more.Windows.Win32.Foundation.CHAR * 260
        DrvDescription: win32more.Windows.Win32.Foundation.CHAR * 256
        HardwareID: FlexibleArray[win32more.Windows.Win32.Foundation.CHAR]
elif ARCH in 'X86':
    class SP_DRVINFO_DETAIL_DATA_A(Structure):
        cbSize: UInt32
        InfDate: win32more.Windows.Win32.Foundation.FILETIME
        CompatIDsOffset: UInt32
        CompatIDsLength: UInt32
        Reserved: UIntPtr
        SectionName: win32more.Windows.Win32.Foundation.CHAR * 256
        InfFileName: win32more.Windows.Win32.Foundation.CHAR * 260
        DrvDescription: win32more.Windows.Win32.Foundation.CHAR * 256
        HardwareID: FlexibleArray[win32more.Windows.Win32.Foundation.CHAR]
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_DRVINFO_DETAIL_DATA_W(Structure):
        cbSize: UInt32
        InfDate: win32more.Windows.Win32.Foundation.FILETIME
        CompatIDsOffset: UInt32
        CompatIDsLength: UInt32
        Reserved: UIntPtr
        SectionName: Char * 256
        InfFileName: Char * 260
        DrvDescription: Char * 256
        HardwareID: FlexibleArray[Char]
elif ARCH in 'X86':
    class SP_DRVINFO_DETAIL_DATA_W(Structure):
        cbSize: UInt32
        InfDate: win32more.Windows.Win32.Foundation.FILETIME
        CompatIDsOffset: UInt32
        CompatIDsLength: UInt32
        Reserved: UIntPtr
        SectionName: Char * 256
        InfFileName: Char * 260
        DrvDescription: Char * 256
        HardwareID: FlexibleArray[Char]
        _pack_ = 1
if ARCH in 'X64,ARM64':
    SP_DRVINFO_DETAIL_DATA = UnicodeAlias('SP_DRVINFO_DETAIL_DATA_W')
elif ARCH in 'X86':
    SP_DRVINFO_DETAIL_DATA = UnicodeAlias('SP_DRVINFO_DETAIL_DATA_W')
if ARCH in 'X64,ARM64':
    class SP_DRVINSTALL_PARAMS(Structure):
        cbSize: UInt32
        Rank: UInt32
        Flags: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DRIVER_INSTALL_FLAGS
        PrivateData: UIntPtr
        Reserved: UInt32
elif ARCH in 'X86':
    class SP_DRVINSTALL_PARAMS(Structure):
        cbSize: UInt32
        Rank: UInt32
        Flags: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_DRIVER_INSTALL_FLAGS
        PrivateData: UIntPtr
        Reserved: UInt32
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_ENABLECLASS_PARAMS(Structure):
        ClassInstallHeader: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        ClassGuid: Guid
        EnableMessage: UInt32
elif ARCH in 'X86':
    class SP_ENABLECLASS_PARAMS(Structure):
        ClassInstallHeader: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        ClassGuid: Guid
        EnableMessage: UInt32
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_FILE_COPY_PARAMS_A(Structure):
        cbSize: UInt32
        QueueHandle: VoidPtr
        SourceRootPath: win32more.Windows.Win32.Foundation.PSTR
        SourcePath: win32more.Windows.Win32.Foundation.PSTR
        SourceFilename: win32more.Windows.Win32.Foundation.PSTR
        SourceDescription: win32more.Windows.Win32.Foundation.PSTR
        SourceTagfile: win32more.Windows.Win32.Foundation.PSTR
        TargetDirectory: win32more.Windows.Win32.Foundation.PSTR
        TargetFilename: win32more.Windows.Win32.Foundation.PSTR
        CopyStyle: UInt32
        LayoutInf: VoidPtr
        SecurityDescriptor: win32more.Windows.Win32.Foundation.PSTR
elif ARCH in 'X86':
    class SP_FILE_COPY_PARAMS_A(Structure):
        cbSize: UInt32
        QueueHandle: VoidPtr
        SourceRootPath: win32more.Windows.Win32.Foundation.PSTR
        SourcePath: win32more.Windows.Win32.Foundation.PSTR
        SourceFilename: win32more.Windows.Win32.Foundation.PSTR
        SourceDescription: win32more.Windows.Win32.Foundation.PSTR
        SourceTagfile: win32more.Windows.Win32.Foundation.PSTR
        TargetDirectory: win32more.Windows.Win32.Foundation.PSTR
        TargetFilename: win32more.Windows.Win32.Foundation.PSTR
        CopyStyle: UInt32
        LayoutInf: VoidPtr
        SecurityDescriptor: win32more.Windows.Win32.Foundation.PSTR
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_FILE_COPY_PARAMS_W(Structure):
        cbSize: UInt32
        QueueHandle: VoidPtr
        SourceRootPath: win32more.Windows.Win32.Foundation.PWSTR
        SourcePath: win32more.Windows.Win32.Foundation.PWSTR
        SourceFilename: win32more.Windows.Win32.Foundation.PWSTR
        SourceDescription: win32more.Windows.Win32.Foundation.PWSTR
        SourceTagfile: win32more.Windows.Win32.Foundation.PWSTR
        TargetDirectory: win32more.Windows.Win32.Foundation.PWSTR
        TargetFilename: win32more.Windows.Win32.Foundation.PWSTR
        CopyStyle: UInt32
        LayoutInf: VoidPtr
        SecurityDescriptor: win32more.Windows.Win32.Foundation.PWSTR
elif ARCH in 'X86':
    class SP_FILE_COPY_PARAMS_W(Structure):
        cbSize: UInt32
        QueueHandle: VoidPtr
        SourceRootPath: win32more.Windows.Win32.Foundation.PWSTR
        SourcePath: win32more.Windows.Win32.Foundation.PWSTR
        SourceFilename: win32more.Windows.Win32.Foundation.PWSTR
        SourceDescription: win32more.Windows.Win32.Foundation.PWSTR
        SourceTagfile: win32more.Windows.Win32.Foundation.PWSTR
        TargetDirectory: win32more.Windows.Win32.Foundation.PWSTR
        TargetFilename: win32more.Windows.Win32.Foundation.PWSTR
        CopyStyle: UInt32
        LayoutInf: VoidPtr
        SecurityDescriptor: win32more.Windows.Win32.Foundation.PWSTR
        _pack_ = 1
if ARCH in 'X64,ARM64':
    SP_FILE_COPY_PARAMS = UnicodeAlias('SP_FILE_COPY_PARAMS_W')
elif ARCH in 'X86':
    SP_FILE_COPY_PARAMS = UnicodeAlias('SP_FILE_COPY_PARAMS_W')
if ARCH in 'X64,ARM64':
    class SP_INF_INFORMATION(Structure):
        InfStyle: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.INF_STYLE
        InfCount: UInt32
        VersionData: FlexibleArray[Byte]
elif ARCH in 'X86':
    class SP_INF_INFORMATION(Structure):
        InfStyle: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.INF_STYLE
        InfCount: UInt32
        VersionData: FlexibleArray[Byte]
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_INF_SIGNER_INFO_V1_A(Structure):
        cbSize: UInt32
        CatalogFile: win32more.Windows.Win32.Foundation.CHAR * 260
        DigitalSigner: win32more.Windows.Win32.Foundation.CHAR * 260
        DigitalSignerVersion: win32more.Windows.Win32.Foundation.CHAR * 260
elif ARCH in 'X86':
    class SP_INF_SIGNER_INFO_V1_A(Structure):
        cbSize: UInt32
        CatalogFile: win32more.Windows.Win32.Foundation.CHAR * 260
        DigitalSigner: win32more.Windows.Win32.Foundation.CHAR * 260
        DigitalSignerVersion: win32more.Windows.Win32.Foundation.CHAR * 260
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_INF_SIGNER_INFO_V1_W(Structure):
        cbSize: UInt32
        CatalogFile: Char * 260
        DigitalSigner: Char * 260
        DigitalSignerVersion: Char * 260
elif ARCH in 'X86':
    class SP_INF_SIGNER_INFO_V1_W(Structure):
        cbSize: UInt32
        CatalogFile: Char * 260
        DigitalSigner: Char * 260
        DigitalSignerVersion: Char * 260
        _pack_ = 1
if ARCH in 'X64,ARM64':
    SP_INF_SIGNER_INFO_V1 = UnicodeAlias('SP_INF_SIGNER_INFO_V1_W')
elif ARCH in 'X86':
    SP_INF_SIGNER_INFO_V1 = UnicodeAlias('SP_INF_SIGNER_INFO_V1_W')
if ARCH in 'X64,ARM64':
    class SP_INF_SIGNER_INFO_V2_A(Structure):
        cbSize: UInt32
        CatalogFile: win32more.Windows.Win32.Foundation.CHAR * 260
        DigitalSigner: win32more.Windows.Win32.Foundation.CHAR * 260
        DigitalSignerVersion: win32more.Windows.Win32.Foundation.CHAR * 260
        SignerScore: UInt32
elif ARCH in 'X86':
    class SP_INF_SIGNER_INFO_V2_A(Structure):
        cbSize: UInt32
        CatalogFile: win32more.Windows.Win32.Foundation.CHAR * 260
        DigitalSigner: win32more.Windows.Win32.Foundation.CHAR * 260
        DigitalSignerVersion: win32more.Windows.Win32.Foundation.CHAR * 260
        SignerScore: UInt32
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_INF_SIGNER_INFO_V2_W(Structure):
        cbSize: UInt32
        CatalogFile: Char * 260
        DigitalSigner: Char * 260
        DigitalSignerVersion: Char * 260
        SignerScore: UInt32
elif ARCH in 'X86':
    class SP_INF_SIGNER_INFO_V2_W(Structure):
        cbSize: UInt32
        CatalogFile: Char * 260
        DigitalSigner: Char * 260
        DigitalSignerVersion: Char * 260
        SignerScore: UInt32
        _pack_ = 1
if ARCH in 'X64,ARM64':
    SP_INF_SIGNER_INFO_V2 = UnicodeAlias('SP_INF_SIGNER_INFO_V2_W')
elif ARCH in 'X86':
    SP_INF_SIGNER_INFO_V2 = UnicodeAlias('SP_INF_SIGNER_INFO_V2_W')
if ARCH in 'X64,ARM64':
    class SP_INSTALLWIZARD_DATA(Structure):
        ClassInstallHeader: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        Flags: UInt32
        DynamicPages: win32more.Windows.Win32.UI.Controls.HPROPSHEETPAGE * 20
        NumDynamicPages: UInt32
        DynamicPageFlags: UInt32
        PrivateFlags: UInt32
        PrivateData: win32more.Windows.Win32.Foundation.LPARAM
        hwndWizardDlg: win32more.Windows.Win32.Foundation.HWND
elif ARCH in 'X86':
    class SP_INSTALLWIZARD_DATA(Structure):
        ClassInstallHeader: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        Flags: UInt32
        DynamicPages: win32more.Windows.Win32.UI.Controls.HPROPSHEETPAGE * 20
        NumDynamicPages: UInt32
        DynamicPageFlags: UInt32
        PrivateFlags: UInt32
        PrivateData: win32more.Windows.Win32.Foundation.LPARAM
        hwndWizardDlg: win32more.Windows.Win32.Foundation.HWND
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_NEWDEVICEWIZARD_DATA(Structure):
        ClassInstallHeader: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        Flags: UInt32
        DynamicPages: win32more.Windows.Win32.UI.Controls.HPROPSHEETPAGE * 20
        NumDynamicPages: UInt32
        hwndWizardDlg: win32more.Windows.Win32.Foundation.HWND
elif ARCH in 'X86':
    class SP_NEWDEVICEWIZARD_DATA(Structure):
        ClassInstallHeader: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        Flags: UInt32
        DynamicPages: win32more.Windows.Win32.UI.Controls.HPROPSHEETPAGE * 20
        NumDynamicPages: UInt32
        hwndWizardDlg: win32more.Windows.Win32.Foundation.HWND
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_ORIGINAL_FILE_INFO_A(Structure):
        cbSize: UInt32
        OriginalInfName: win32more.Windows.Win32.Foundation.CHAR * 260
        OriginalCatalogName: win32more.Windows.Win32.Foundation.CHAR * 260
elif ARCH in 'X86':
    class SP_ORIGINAL_FILE_INFO_A(Structure):
        cbSize: UInt32
        OriginalInfName: win32more.Windows.Win32.Foundation.CHAR * 260
        OriginalCatalogName: win32more.Windows.Win32.Foundation.CHAR * 260
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_ORIGINAL_FILE_INFO_W(Structure):
        cbSize: UInt32
        OriginalInfName: Char * 260
        OriginalCatalogName: Char * 260
elif ARCH in 'X86':
    class SP_ORIGINAL_FILE_INFO_W(Structure):
        cbSize: UInt32
        OriginalInfName: Char * 260
        OriginalCatalogName: Char * 260
        _pack_ = 1
if ARCH in 'X64,ARM64':
    SP_ORIGINAL_FILE_INFO = UnicodeAlias('SP_ORIGINAL_FILE_INFO_W')
elif ARCH in 'X86':
    SP_ORIGINAL_FILE_INFO = UnicodeAlias('SP_ORIGINAL_FILE_INFO_W')
class SP_POWERMESSAGEWAKE_PARAMS_A(Structure):
    ClassInstallHeader: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
    PowerMessageWake: win32more.Windows.Win32.Foundation.CHAR * 512
if ARCH in 'X64,ARM64':
    class SP_POWERMESSAGEWAKE_PARAMS_W(Structure):
        ClassInstallHeader: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        PowerMessageWake: Char * 512
elif ARCH in 'X86':
    class SP_POWERMESSAGEWAKE_PARAMS_W(Structure):
        ClassInstallHeader: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        PowerMessageWake: Char * 512
        _pack_ = 1
if ARCH in 'X64,ARM64':
    SP_POWERMESSAGEWAKE_PARAMS = UnicodeAlias('SP_POWERMESSAGEWAKE_PARAMS_W')
elif ARCH in 'X86':
    SP_POWERMESSAGEWAKE_PARAMS = UnicodeAlias('SP_POWERMESSAGEWAKE_PARAMS_W')
if ARCH in 'X64,ARM64':
    class SP_PROPCHANGE_PARAMS(Structure):
        ClassInstallHeader: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        StateChange: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_STATE_CHANGE
        Scope: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_PROPERTY_CHANGE_SCOPE
        HwProfile: UInt32
elif ARCH in 'X86':
    class SP_PROPCHANGE_PARAMS(Structure):
        ClassInstallHeader: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        StateChange: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_STATE_CHANGE
        Scope: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_PROPERTY_CHANGE_SCOPE
        HwProfile: UInt32
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_PROPSHEETPAGE_REQUEST(Structure):
        cbSize: UInt32
        PageRequested: UInt32
        DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO
        DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA)
elif ARCH in 'X86':
    class SP_PROPSHEETPAGE_REQUEST(Structure):
        cbSize: UInt32
        PageRequested: UInt32
        DeviceInfoSet: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO
        DeviceInfoData: POINTER(win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA)
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_REGISTER_CONTROL_STATUSA(Structure):
        cbSize: UInt32
        FileName: win32more.Windows.Win32.Foundation.PSTR
        Win32Error: UInt32
        FailureCode: UInt32
elif ARCH in 'X86':
    class SP_REGISTER_CONTROL_STATUSA(Structure):
        cbSize: UInt32
        FileName: win32more.Windows.Win32.Foundation.PSTR
        Win32Error: UInt32
        FailureCode: UInt32
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_REGISTER_CONTROL_STATUSW(Structure):
        cbSize: UInt32
        FileName: win32more.Windows.Win32.Foundation.PWSTR
        Win32Error: UInt32
        FailureCode: UInt32
elif ARCH in 'X86':
    class SP_REGISTER_CONTROL_STATUSW(Structure):
        cbSize: UInt32
        FileName: win32more.Windows.Win32.Foundation.PWSTR
        Win32Error: UInt32
        FailureCode: UInt32
        _pack_ = 1
if ARCH in 'X64,ARM64':
    SP_REGISTER_CONTROL_STATUS = UnicodeAlias('SP_REGISTER_CONTROL_STATUSW')
elif ARCH in 'X86':
    SP_REGISTER_CONTROL_STATUS = UnicodeAlias('SP_REGISTER_CONTROL_STATUSW')
if ARCH in 'X64,ARM64':
    class SP_REMOVEDEVICE_PARAMS(Structure):
        ClassInstallHeader: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        Scope: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_REMOVE_DEVICE_SCOPE
        HwProfile: UInt32
elif ARCH in 'X86':
    class SP_REMOVEDEVICE_PARAMS(Structure):
        ClassInstallHeader: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        Scope: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_REMOVE_DEVICE_SCOPE
        HwProfile: UInt32
        _pack_ = 1
class SP_SELECTDEVICE_PARAMS_A(Structure):
    ClassInstallHeader: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
    Title: win32more.Windows.Win32.Foundation.CHAR * 60
    Instructions: win32more.Windows.Win32.Foundation.CHAR * 256
    ListLabel: win32more.Windows.Win32.Foundation.CHAR * 30
    SubTitle: win32more.Windows.Win32.Foundation.CHAR * 256
    Reserved: Byte * 2
if ARCH in 'X64,ARM64':
    class SP_SELECTDEVICE_PARAMS_W(Structure):
        ClassInstallHeader: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        Title: Char * 60
        Instructions: Char * 256
        ListLabel: Char * 30
        SubTitle: Char * 256
elif ARCH in 'X86':
    class SP_SELECTDEVICE_PARAMS_W(Structure):
        ClassInstallHeader: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        Title: Char * 60
        Instructions: Char * 256
        ListLabel: Char * 30
        SubTitle: Char * 256
        _pack_ = 1
if ARCH in 'X64,ARM64':
    SP_SELECTDEVICE_PARAMS = UnicodeAlias('SP_SELECTDEVICE_PARAMS_W')
elif ARCH in 'X86':
    SP_SELECTDEVICE_PARAMS = UnicodeAlias('SP_SELECTDEVICE_PARAMS_W')
class SP_TROUBLESHOOTER_PARAMS_A(Structure):
    ClassInstallHeader: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
    ChmFile: win32more.Windows.Win32.Foundation.CHAR * 260
    HtmlTroubleShooter: win32more.Windows.Win32.Foundation.CHAR * 260
if ARCH in 'X64,ARM64':
    class SP_TROUBLESHOOTER_PARAMS_W(Structure):
        ClassInstallHeader: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        ChmFile: Char * 260
        HtmlTroubleShooter: Char * 260
elif ARCH in 'X86':
    class SP_TROUBLESHOOTER_PARAMS_W(Structure):
        ClassInstallHeader: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        ChmFile: Char * 260
        HtmlTroubleShooter: Char * 260
        _pack_ = 1
if ARCH in 'X64,ARM64':
    SP_TROUBLESHOOTER_PARAMS = UnicodeAlias('SP_TROUBLESHOOTER_PARAMS_W')
elif ARCH in 'X86':
    SP_TROUBLESHOOTER_PARAMS = UnicodeAlias('SP_TROUBLESHOOTER_PARAMS_W')
if ARCH in 'X64,ARM64':
    class SP_UNREMOVEDEVICE_PARAMS(Structure):
        ClassInstallHeader: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        Scope: UInt32
        HwProfile: UInt32
elif ARCH in 'X86':
    class SP_UNREMOVEDEVICE_PARAMS(Structure):
        ClassInstallHeader: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        Scope: UInt32
        HwProfile: UInt32
        _pack_ = 1
SetupFileLogInfo = Int32
SetupFileLogSourceFilename: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SetupFileLogInfo = 0
SetupFileLogChecksum: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SetupFileLogInfo = 1
SetupFileLogDiskTagfile: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SetupFileLogInfo = 2
SetupFileLogDiskDescription: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SetupFileLogInfo = 3
SetupFileLogOtherInfo: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SetupFileLogInfo = 4
SetupFileLogMax: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.SetupFileLogInfo = 5
UPDATEDRIVERFORPLUGANDPLAYDEVICES_FLAGS = UInt32
INSTALLFLAG_FORCE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.UPDATEDRIVERFORPLUGANDPLAYDEVICES_FLAGS = 1
INSTALLFLAG_READONLY: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.UPDATEDRIVERFORPLUGANDPLAYDEVICES_FLAGS = 2
INSTALLFLAG_NONINTERACTIVE: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.UPDATEDRIVERFORPLUGANDPLAYDEVICES_FLAGS = 4
INSTALLFLAG_BITS: win32more.Windows.Win32.Devices.DeviceAndDriverInstallation.UPDATEDRIVERFORPLUGANDPLAYDEVICES_FLAGS = 7


make_ready(__name__)
