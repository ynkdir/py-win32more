from __future__ import annotations
from win32more.winrt.prelude import *
import win32more.Microsoft.Graphics.DirectX
import win32more.Microsoft.UI.Composition
import win32more.Microsoft.UI.Dispatching
import win32more.Windows.Foundation
import win32more.Windows.Foundation.Collections
import win32more.Windows.Foundation.Numerics
import win32more.Windows.Graphics
import win32more.Windows.Graphics.Effects
import win32more.Windows.UI
import win32more.Windows.UI.Composition
class AmbientLight(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionLight
    default_interface: win32more.Microsoft.UI.Composition.IAmbientLight
    _classid_ = 'Microsoft.UI.Composition.AmbientLight'
    @winrt_mixinmethod
    def put_Color(self: win32more.Microsoft.UI.Composition.IAmbientLight, value: win32more.Windows.UI.Color) -> Void: ...
    @winrt_mixinmethod
    def get_Intensity(self: win32more.Microsoft.UI.Composition.IAmbientLight2) -> Single: ...
    @winrt_mixinmethod
    def get_Color(self: win32more.Microsoft.UI.Composition.IAmbientLight) -> win32more.Windows.UI.Color: ...
    @winrt_mixinmethod
    def put_Intensity(self: win32more.Microsoft.UI.Composition.IAmbientLight2, value: Single) -> Void: ...
    Color = property(get_Color, put_Color)
    Intensity = property(get_Intensity, put_Intensity)
class _AnimationController_Meta_(ComPtr.__class__):
    pass
class AnimationController(ComPtr, metaclass=_AnimationController_Meta_):
    extends: win32more.Microsoft.UI.Composition.CompositionObject
    default_interface: win32more.Microsoft.UI.Composition.IAnimationController
    _classid_ = 'Microsoft.UI.Composition.AnimationController'
    @winrt_mixinmethod
    def get_ProgressBehavior(self: win32more.Microsoft.UI.Composition.IAnimationController) -> win32more.Microsoft.UI.Composition.AnimationControllerProgressBehavior: ...
    @winrt_mixinmethod
    def Resume(self: win32more.Microsoft.UI.Composition.IAnimationController) -> Void: ...
    @winrt_mixinmethod
    def put_PlaybackRate(self: win32more.Microsoft.UI.Composition.IAnimationController, value: Single) -> Void: ...
    @winrt_mixinmethod
    def get_PlaybackRate(self: win32more.Microsoft.UI.Composition.IAnimationController) -> Single: ...
    @winrt_mixinmethod
    def get_Progress(self: win32more.Microsoft.UI.Composition.IAnimationController) -> Single: ...
    @winrt_mixinmethod
    def put_Progress(self: win32more.Microsoft.UI.Composition.IAnimationController, value: Single) -> Void: ...
    @winrt_mixinmethod
    def put_ProgressBehavior(self: win32more.Microsoft.UI.Composition.IAnimationController, value: win32more.Microsoft.UI.Composition.AnimationControllerProgressBehavior) -> Void: ...
    @winrt_mixinmethod
    def Pause(self: win32more.Microsoft.UI.Composition.IAnimationController) -> Void: ...
    @winrt_classmethod
    def get_MaxPlaybackRate(cls: win32more.Microsoft.UI.Composition.IAnimationControllerStatics) -> Single: ...
    @winrt_classmethod
    def get_MinPlaybackRate(cls: win32more.Microsoft.UI.Composition.IAnimationControllerStatics) -> Single: ...
    PlaybackRate = property(get_PlaybackRate, put_PlaybackRate)
    Progress = property(get_Progress, put_Progress)
    ProgressBehavior = property(get_ProgressBehavior, put_ProgressBehavior)
    _AnimationController_Meta_.MaxPlaybackRate = property(get_MaxPlaybackRate, None)
    _AnimationController_Meta_.MinPlaybackRate = property(get_MinPlaybackRate, None)
class AnimationControllerProgressBehavior(Enum, Int32):
    Default = 0
    IncludesDelayTime = 1
class AnimationDelayBehavior(Enum, Int32):
    SetInitialValueAfterDelay = 0
    SetInitialValueBeforeDelay = 1
class AnimationDirection(Enum, Int32):
    Normal = 0
    Reverse = 1
    Alternate = 2
    AlternateReverse = 3
class AnimationIterationBehavior(Enum, Int32):
    Count = 0
    Forever = 1
class AnimationPropertyAccessMode(Enum, Int32):
    None_ = 0
    ReadOnly = 1
    WriteOnly = 2
    ReadWrite = 3
class AnimationPropertyInfo(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionObject
    default_interface: win32more.Microsoft.UI.Composition.IAnimationPropertyInfo
    _classid_ = 'Microsoft.UI.Composition.AnimationPropertyInfo'
    @winrt_mixinmethod
    def get_AccessMode(self: win32more.Microsoft.UI.Composition.IAnimationPropertyInfo) -> win32more.Microsoft.UI.Composition.AnimationPropertyAccessMode: ...
    @winrt_mixinmethod
    def GetResolvedCompositionObjectProperty(self: win32more.Microsoft.UI.Composition.IAnimationPropertyInfo2) -> WinRT_String: ...
    @winrt_mixinmethod
    def GetResolvedCompositionObject(self: win32more.Microsoft.UI.Composition.IAnimationPropertyInfo2) -> win32more.Microsoft.UI.Composition.CompositionObject: ...
    @winrt_mixinmethod
    def put_AccessMode(self: win32more.Microsoft.UI.Composition.IAnimationPropertyInfo, value: win32more.Microsoft.UI.Composition.AnimationPropertyAccessMode) -> Void: ...
    AccessMode = property(get_AccessMode, put_AccessMode)
class AnimationStopBehavior(Enum, Int32):
    LeaveCurrentValue = 0
    SetToInitialValue = 1
    SetToFinalValue = 2
class BackEasingFunction(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionEasingFunction
    default_interface: win32more.Microsoft.UI.Composition.IBackEasingFunction
    _classid_ = 'Microsoft.UI.Composition.BackEasingFunction'
    @winrt_mixinmethod
    def get_Amplitude(self: win32more.Microsoft.UI.Composition.IBackEasingFunction) -> Single: ...
    @winrt_mixinmethod
    def get_Mode(self: win32more.Microsoft.UI.Composition.IBackEasingFunction) -> win32more.Microsoft.UI.Composition.CompositionEasingFunctionMode: ...
    Amplitude = property(get_Amplitude, None)
    Mode = property(get_Mode, None)
class BooleanKeyFrameAnimation(ComPtr):
    extends: win32more.Microsoft.UI.Composition.KeyFrameAnimation
    default_interface: win32more.Microsoft.UI.Composition.IBooleanKeyFrameAnimation
    _classid_ = 'Microsoft.UI.Composition.BooleanKeyFrameAnimation'
    @winrt_mixinmethod
    def InsertKeyFrame(self: win32more.Microsoft.UI.Composition.IBooleanKeyFrameAnimation, normalizedProgressKey: Single, value: Boolean) -> Void: ...
class BounceEasingFunction(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionEasingFunction
    default_interface: win32more.Microsoft.UI.Composition.IBounceEasingFunction
    _classid_ = 'Microsoft.UI.Composition.BounceEasingFunction'
    @winrt_mixinmethod
    def get_Bounciness(self: win32more.Microsoft.UI.Composition.IBounceEasingFunction) -> Single: ...
    @winrt_mixinmethod
    def get_Mode(self: win32more.Microsoft.UI.Composition.IBounceEasingFunction) -> win32more.Microsoft.UI.Composition.CompositionEasingFunctionMode: ...
    @winrt_mixinmethod
    def get_Bounces(self: win32more.Microsoft.UI.Composition.IBounceEasingFunction) -> Int32: ...
    Bounces = property(get_Bounces, None)
    Bounciness = property(get_Bounciness, None)
    Mode = property(get_Mode, None)
class BounceScalarNaturalMotionAnimation(ComPtr):
    extends: win32more.Microsoft.UI.Composition.ScalarNaturalMotionAnimation
    default_interface: win32more.Microsoft.UI.Composition.IBounceScalarNaturalMotionAnimation
    _classid_ = 'Microsoft.UI.Composition.BounceScalarNaturalMotionAnimation'
    @winrt_mixinmethod
    def get_Acceleration(self: win32more.Microsoft.UI.Composition.IBounceScalarNaturalMotionAnimation) -> Single: ...
    @winrt_mixinmethod
    def get_Restitution(self: win32more.Microsoft.UI.Composition.IBounceScalarNaturalMotionAnimation) -> Single: ...
    @winrt_mixinmethod
    def put_Acceleration(self: win32more.Microsoft.UI.Composition.IBounceScalarNaturalMotionAnimation, value: Single) -> Void: ...
    @winrt_mixinmethod
    def put_Restitution(self: win32more.Microsoft.UI.Composition.IBounceScalarNaturalMotionAnimation, value: Single) -> Void: ...
    Acceleration = property(get_Acceleration, put_Acceleration)
    Restitution = property(get_Restitution, put_Restitution)
class BounceVector2NaturalMotionAnimation(ComPtr):
    extends: win32more.Microsoft.UI.Composition.Vector2NaturalMotionAnimation
    default_interface: win32more.Microsoft.UI.Composition.IBounceVector2NaturalMotionAnimation
    _classid_ = 'Microsoft.UI.Composition.BounceVector2NaturalMotionAnimation'
    @winrt_mixinmethod
    def get_Acceleration(self: win32more.Microsoft.UI.Composition.IBounceVector2NaturalMotionAnimation) -> Single: ...
    @winrt_mixinmethod
    def get_Restitution(self: win32more.Microsoft.UI.Composition.IBounceVector2NaturalMotionAnimation) -> Single: ...
    @winrt_mixinmethod
    def put_Acceleration(self: win32more.Microsoft.UI.Composition.IBounceVector2NaturalMotionAnimation, value: Single) -> Void: ...
    @winrt_mixinmethod
    def put_Restitution(self: win32more.Microsoft.UI.Composition.IBounceVector2NaturalMotionAnimation, value: Single) -> Void: ...
    Acceleration = property(get_Acceleration, put_Acceleration)
    Restitution = property(get_Restitution, put_Restitution)
class BounceVector3NaturalMotionAnimation(ComPtr):
    extends: win32more.Microsoft.UI.Composition.Vector3NaturalMotionAnimation
    default_interface: win32more.Microsoft.UI.Composition.IBounceVector3NaturalMotionAnimation
    _classid_ = 'Microsoft.UI.Composition.BounceVector3NaturalMotionAnimation'
    @winrt_mixinmethod
    def put_Acceleration(self: win32more.Microsoft.UI.Composition.IBounceVector3NaturalMotionAnimation, value: Single) -> Void: ...
    @winrt_mixinmethod
    def get_Acceleration(self: win32more.Microsoft.UI.Composition.IBounceVector3NaturalMotionAnimation) -> Single: ...
    @winrt_mixinmethod
    def get_Restitution(self: win32more.Microsoft.UI.Composition.IBounceVector3NaturalMotionAnimation) -> Single: ...
    @winrt_mixinmethod
    def put_Restitution(self: win32more.Microsoft.UI.Composition.IBounceVector3NaturalMotionAnimation, value: Single) -> Void: ...
    Acceleration = property(get_Acceleration, put_Acceleration)
    Restitution = property(get_Restitution, put_Restitution)
class CircleEasingFunction(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionEasingFunction
    default_interface: win32more.Microsoft.UI.Composition.ICircleEasingFunction
    _classid_ = 'Microsoft.UI.Composition.CircleEasingFunction'
    @winrt_mixinmethod
    def get_Mode(self: win32more.Microsoft.UI.Composition.ICircleEasingFunction) -> win32more.Microsoft.UI.Composition.CompositionEasingFunctionMode: ...
    Mode = property(get_Mode, None)
class ColorKeyFrameAnimation(ComPtr):
    extends: win32more.Microsoft.UI.Composition.KeyFrameAnimation
    default_interface: win32more.Microsoft.UI.Composition.IColorKeyFrameAnimation
    _classid_ = 'Microsoft.UI.Composition.ColorKeyFrameAnimation'
    @winrt_mixinmethod
    def InsertKeyFrameWithEasingFunction(self: win32more.Microsoft.UI.Composition.IColorKeyFrameAnimation, normalizedProgressKey: Single, value: win32more.Windows.UI.Color, easingFunction: win32more.Microsoft.UI.Composition.CompositionEasingFunction) -> Void: ...
    @winrt_mixinmethod
    def get_InterpolationColorSpace(self: win32more.Microsoft.UI.Composition.IColorKeyFrameAnimation) -> win32more.Microsoft.UI.Composition.CompositionColorSpace: ...
    @winrt_mixinmethod
    def InsertKeyFrame(self: win32more.Microsoft.UI.Composition.IColorKeyFrameAnimation, normalizedProgressKey: Single, value: win32more.Windows.UI.Color) -> Void: ...
    @winrt_mixinmethod
    def put_InterpolationColorSpace(self: win32more.Microsoft.UI.Composition.IColorKeyFrameAnimation, value: win32more.Microsoft.UI.Composition.CompositionColorSpace) -> Void: ...
    InterpolationColorSpace = property(get_InterpolationColorSpace, put_InterpolationColorSpace)
class CompositionAnimation(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionObject
    default_interface: win32more.Microsoft.UI.Composition.ICompositionAnimation
    _classid_ = 'Microsoft.UI.Composition.CompositionAnimation'
    @winrt_mixinmethod
    def SetVector4Parameter(self: win32more.Microsoft.UI.Composition.ICompositionAnimation, key: WinRT_String, value: win32more.Windows.Foundation.Numerics.Vector4) -> Void: ...
    @winrt_mixinmethod
    def get_Target(self: win32more.Microsoft.UI.Composition.ICompositionAnimation2) -> WinRT_String: ...
    @winrt_mixinmethod
    def put_Target(self: win32more.Microsoft.UI.Composition.ICompositionAnimation2, value: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def get_InitialValueExpressions(self: win32more.Microsoft.UI.Composition.ICompositionAnimation3) -> win32more.Microsoft.UI.Composition.InitialValueExpressionCollection: ...
    @winrt_mixinmethod
    def SetExpressionReferenceParameter(self: win32more.Microsoft.UI.Composition.ICompositionAnimation4, parameterName: WinRT_String, source: win32more.Microsoft.UI.Composition.IAnimationObject) -> Void: ...
    @winrt_mixinmethod
    def SetScalarParameter(self: win32more.Microsoft.UI.Composition.ICompositionAnimation, key: WinRT_String, value: Single) -> Void: ...
    @winrt_mixinmethod
    def SetReferenceParameter(self: win32more.Microsoft.UI.Composition.ICompositionAnimation, key: WinRT_String, compositionObject: win32more.Microsoft.UI.Composition.CompositionObject) -> Void: ...
    @winrt_mixinmethod
    def ClearParameter(self: win32more.Microsoft.UI.Composition.ICompositionAnimation, key: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def SetColorParameter(self: win32more.Microsoft.UI.Composition.ICompositionAnimation, key: WinRT_String, value: win32more.Windows.UI.Color) -> Void: ...
    @winrt_mixinmethod
    def SetBooleanParameter(self: win32more.Microsoft.UI.Composition.ICompositionAnimation2, key: WinRT_String, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def SetMatrix3x2Parameter(self: win32more.Microsoft.UI.Composition.ICompositionAnimation, key: WinRT_String, value: win32more.Windows.Foundation.Numerics.Matrix3x2) -> Void: ...
    @winrt_mixinmethod
    def SetMatrix4x4Parameter(self: win32more.Microsoft.UI.Composition.ICompositionAnimation, key: WinRT_String, value: win32more.Windows.Foundation.Numerics.Matrix4x4) -> Void: ...
    @winrt_mixinmethod
    def SetQuaternionParameter(self: win32more.Microsoft.UI.Composition.ICompositionAnimation, key: WinRT_String, value: win32more.Windows.Foundation.Numerics.Quaternion) -> Void: ...
    @winrt_mixinmethod
    def SetVector2Parameter(self: win32more.Microsoft.UI.Composition.ICompositionAnimation, key: WinRT_String, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_mixinmethod
    def SetVector3Parameter(self: win32more.Microsoft.UI.Composition.ICompositionAnimation, key: WinRT_String, value: win32more.Windows.Foundation.Numerics.Vector3) -> Void: ...
    @winrt_mixinmethod
    def ClearAllParameters(self: win32more.Microsoft.UI.Composition.ICompositionAnimation) -> Void: ...
    InitialValueExpressions = property(get_InitialValueExpressions, None)
    Target = property(get_Target, put_Target)
class CompositionAnimationGroup(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionObject
    implements: Tuple[IterableProtocol[win32more.Microsoft.UI.Composition.CompositionAnimation]]
    default_interface: win32more.Microsoft.UI.Composition.ICompositionAnimationGroup
    _classid_ = 'Microsoft.UI.Composition.CompositionAnimationGroup'
    @winrt_mixinmethod
    def Remove(self: win32more.Microsoft.UI.Composition.ICompositionAnimationGroup, value: win32more.Microsoft.UI.Composition.CompositionAnimation) -> Void: ...
    @winrt_mixinmethod
    def Add(self: win32more.Microsoft.UI.Composition.ICompositionAnimationGroup, value: win32more.Microsoft.UI.Composition.CompositionAnimation) -> Void: ...
    @winrt_mixinmethod
    def get_Count(self: win32more.Microsoft.UI.Composition.ICompositionAnimationGroup) -> Int32: ...
    @winrt_mixinmethod
    def RemoveAll(self: win32more.Microsoft.UI.Composition.ICompositionAnimationGroup) -> Void: ...
    @winrt_mixinmethod
    def First(self: win32more.Windows.Foundation.Collections.IIterable[win32more.Microsoft.UI.Composition.CompositionAnimation]) -> win32more.Windows.Foundation.Collections.IIterator[win32more.Microsoft.UI.Composition.CompositionAnimation]: ...
    Count = property(get_Count, None)
class _CompositionApiInformation_Meta_(ComPtr.__class__):
    pass
class CompositionApiInformation(ComPtr, metaclass=_CompositionApiInformation_Meta_):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.CompositionApiInformation'
    @winrt_classmethod
    def get_ApiVersion(cls: win32more.Microsoft.UI.Composition.ICompositionApiInformationStatics) -> UInt64: ...
    _CompositionApiInformation_Meta_.ApiVersion = property(get_ApiVersion, None)
class CompositionBackdropBrush(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionBrush
    default_interface: win32more.Microsoft.UI.Composition.ICompositionBackdropBrush
    _classid_ = 'Microsoft.UI.Composition.CompositionBackdropBrush'
class CompositionBackfaceVisibility(Enum, Int32):
    Inherit = 0
    Visible = 1
    Hidden = 2
class CompositionBatchCompletedEventArgs(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionObject
    default_interface: win32more.Microsoft.UI.Composition.ICompositionBatchCompletedEventArgs
    _classid_ = 'Microsoft.UI.Composition.CompositionBatchCompletedEventArgs'
class CompositionBatchTypes(Enum, UInt32):
    None_ = 0
    Animation = 1
    Effect = 2
    InfiniteAnimation = 4
    AllAnimations = 5
class CompositionBitmapInterpolationMode(Enum, Int32):
    NearestNeighbor = 0
    Linear = 1
    MagLinearMinLinearMipLinear = 2
    MagLinearMinLinearMipNearest = 3
    MagLinearMinNearestMipLinear = 4
    MagLinearMinNearestMipNearest = 5
    MagNearestMinLinearMipLinear = 6
    MagNearestMinLinearMipNearest = 7
    MagNearestMinNearestMipLinear = 8
    MagNearestMinNearestMipNearest = 9
class CompositionBorderMode(Enum, Int32):
    Inherit = 0
    Soft = 1
    Hard = 2
class CompositionBrush(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionObject
    default_interface: win32more.Microsoft.UI.Composition.ICompositionBrush
    _classid_ = 'Microsoft.UI.Composition.CompositionBrush'
class CompositionCapabilities(ComPtr):
    extends: IInspectable
    default_interface: win32more.Microsoft.UI.Composition.ICompositionCapabilities
    _classid_ = 'Microsoft.UI.Composition.CompositionCapabilities'
    def __init__(self, *args, **kwargs):
        if kwargs:
            super().__init__(**kwargs)
        elif len(args) == 0:
            super().__init__(move=win32more.Microsoft.UI.Composition.CompositionCapabilities.CreateInstance(*args))
        else:
            raise ValueError('no matched constructor')
    @winrt_activatemethod
    def CreateInstance(cls) -> win32more.Microsoft.UI.Composition.CompositionCapabilities: ...
    @winrt_mixinmethod
    def AreEffectsSupported(self: win32more.Microsoft.UI.Composition.ICompositionCapabilities) -> Boolean: ...
    @winrt_mixinmethod
    def AreEffectsFast(self: win32more.Microsoft.UI.Composition.ICompositionCapabilities) -> Boolean: ...
    @winrt_mixinmethod
    def add_Changed(self: win32more.Microsoft.UI.Composition.ICompositionCapabilities, handler: win32more.Windows.Foundation.TypedEventHandler[win32more.Microsoft.UI.Composition.CompositionCapabilities, IInspectable]) -> win32more.Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_Changed(self: win32more.Microsoft.UI.Composition.ICompositionCapabilities, token: win32more.Windows.Foundation.EventRegistrationToken) -> Void: ...
    Changed = event()
class CompositionClip(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionObject
    default_interface: win32more.Microsoft.UI.Composition.ICompositionClip
    _classid_ = 'Microsoft.UI.Composition.CompositionClip'
    @winrt_mixinmethod
    def put_AnchorPoint(self: win32more.Microsoft.UI.Composition.ICompositionClip2, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_mixinmethod
    def get_TransformMatrix(self: win32more.Microsoft.UI.Composition.ICompositionClip2) -> win32more.Windows.Foundation.Numerics.Matrix3x2: ...
    @winrt_mixinmethod
    def get_RotationAngle(self: win32more.Microsoft.UI.Composition.ICompositionClip2) -> Single: ...
    @winrt_mixinmethod
    def get_Scale(self: win32more.Microsoft.UI.Composition.ICompositionClip2) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_mixinmethod
    def get_CenterPoint(self: win32more.Microsoft.UI.Composition.ICompositionClip2) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_mixinmethod
    def put_CenterPoint(self: win32more.Microsoft.UI.Composition.ICompositionClip2, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_mixinmethod
    def get_Offset(self: win32more.Microsoft.UI.Composition.ICompositionClip2) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_mixinmethod
    def put_Offset(self: win32more.Microsoft.UI.Composition.ICompositionClip2, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_mixinmethod
    def put_RotationAngleInDegrees(self: win32more.Microsoft.UI.Composition.ICompositionClip2, value: Single) -> Void: ...
    @winrt_mixinmethod
    def put_RotationAngle(self: win32more.Microsoft.UI.Composition.ICompositionClip2, value: Single) -> Void: ...
    @winrt_mixinmethod
    def get_RotationAngleInDegrees(self: win32more.Microsoft.UI.Composition.ICompositionClip2) -> Single: ...
    @winrt_mixinmethod
    def put_Scale(self: win32more.Microsoft.UI.Composition.ICompositionClip2, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_mixinmethod
    def put_TransformMatrix(self: win32more.Microsoft.UI.Composition.ICompositionClip2, value: win32more.Windows.Foundation.Numerics.Matrix3x2) -> Void: ...
    @winrt_mixinmethod
    def get_AnchorPoint(self: win32more.Microsoft.UI.Composition.ICompositionClip2) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    AnchorPoint = property(get_AnchorPoint, put_AnchorPoint)
    CenterPoint = property(get_CenterPoint, put_CenterPoint)
    Offset = property(get_Offset, put_Offset)
    RotationAngle = property(get_RotationAngle, put_RotationAngle)
    RotationAngleInDegrees = property(get_RotationAngleInDegrees, put_RotationAngleInDegrees)
    Scale = property(get_Scale, put_Scale)
    TransformMatrix = property(get_TransformMatrix, put_TransformMatrix)
class CompositionColorBrush(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionBrush
    default_interface: win32more.Microsoft.UI.Composition.ICompositionColorBrush
    _classid_ = 'Microsoft.UI.Composition.CompositionColorBrush'
    @winrt_mixinmethod
    def put_Color(self: win32more.Microsoft.UI.Composition.ICompositionColorBrush, value: win32more.Windows.UI.Color) -> Void: ...
    @winrt_mixinmethod
    def get_Color(self: win32more.Microsoft.UI.Composition.ICompositionColorBrush) -> win32more.Windows.UI.Color: ...
    Color = property(get_Color, put_Color)
class CompositionColorGradientStop(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionObject
    default_interface: win32more.Microsoft.UI.Composition.ICompositionColorGradientStop
    _classid_ = 'Microsoft.UI.Composition.CompositionColorGradientStop'
    @winrt_mixinmethod
    def put_Color(self: win32more.Microsoft.UI.Composition.ICompositionColorGradientStop, value: win32more.Windows.UI.Color) -> Void: ...
    @winrt_mixinmethod
    def put_Offset(self: win32more.Microsoft.UI.Composition.ICompositionColorGradientStop, value: Single) -> Void: ...
    @winrt_mixinmethod
    def get_Color(self: win32more.Microsoft.UI.Composition.ICompositionColorGradientStop) -> win32more.Windows.UI.Color: ...
    @winrt_mixinmethod
    def get_Offset(self: win32more.Microsoft.UI.Composition.ICompositionColorGradientStop) -> Single: ...
    Color = property(get_Color, put_Color)
    Offset = property(get_Offset, put_Offset)
class CompositionColorGradientStopCollection(ComPtr):
    extends: IInspectable
    implements: Tuple[SequenceProtocol[win32more.Microsoft.UI.Composition.CompositionColorGradientStop]]
    default_interface: win32more.Microsoft.UI.Composition.ICompositionColorGradientStopCollection
    _classid_ = 'Microsoft.UI.Composition.CompositionColorGradientStopCollection'
    @winrt_mixinmethod
    def IndexOf(self: win32more.Windows.Foundation.Collections.IVector[win32more.Microsoft.UI.Composition.CompositionColorGradientStop], value: win32more.Microsoft.UI.Composition.CompositionColorGradientStop, index: POINTER(UInt32)) -> Boolean: ...
    @winrt_mixinmethod
    def InsertAt(self: win32more.Windows.Foundation.Collections.IVector[win32more.Microsoft.UI.Composition.CompositionColorGradientStop], index: UInt32, value: win32more.Microsoft.UI.Composition.CompositionColorGradientStop) -> Void: ...
    @winrt_mixinmethod
    def GetAt(self: win32more.Windows.Foundation.Collections.IVector[win32more.Microsoft.UI.Composition.CompositionColorGradientStop], index: UInt32) -> win32more.Microsoft.UI.Composition.CompositionColorGradientStop: ...
    @winrt_mixinmethod
    def First(self: win32more.Windows.Foundation.Collections.IIterable[win32more.Microsoft.UI.Composition.CompositionColorGradientStop]) -> win32more.Windows.Foundation.Collections.IIterator[win32more.Microsoft.UI.Composition.CompositionColorGradientStop]: ...
    @winrt_mixinmethod
    def get_Size(self: win32more.Windows.Foundation.Collections.IVector[win32more.Microsoft.UI.Composition.CompositionColorGradientStop]) -> UInt32: ...
    @winrt_mixinmethod
    def GetView(self: win32more.Windows.Foundation.Collections.IVector[win32more.Microsoft.UI.Composition.CompositionColorGradientStop]) -> win32more.Windows.Foundation.Collections.IVectorView[win32more.Microsoft.UI.Composition.CompositionColorGradientStop]: ...
    @winrt_mixinmethod
    def RemoveAtEnd(self: win32more.Windows.Foundation.Collections.IVector[win32more.Microsoft.UI.Composition.CompositionColorGradientStop]) -> Void: ...
    @winrt_mixinmethod
    def ReplaceAll(self: win32more.Windows.Foundation.Collections.IVector[win32more.Microsoft.UI.Composition.CompositionColorGradientStop], items: PassArray[win32more.Microsoft.UI.Composition.CompositionColorGradientStop]) -> Void: ...
    @winrt_mixinmethod
    def RemoveAt(self: win32more.Windows.Foundation.Collections.IVector[win32more.Microsoft.UI.Composition.CompositionColorGradientStop], index: UInt32) -> Void: ...
    @winrt_mixinmethod
    def Append(self: win32more.Windows.Foundation.Collections.IVector[win32more.Microsoft.UI.Composition.CompositionColorGradientStop], value: win32more.Microsoft.UI.Composition.CompositionColorGradientStop) -> Void: ...
    @winrt_mixinmethod
    def SetAt(self: win32more.Windows.Foundation.Collections.IVector[win32more.Microsoft.UI.Composition.CompositionColorGradientStop], index: UInt32, value: win32more.Microsoft.UI.Composition.CompositionColorGradientStop) -> Void: ...
    @winrt_mixinmethod
    def Clear(self: win32more.Windows.Foundation.Collections.IVector[win32more.Microsoft.UI.Composition.CompositionColorGradientStop]) -> Void: ...
    @winrt_mixinmethod
    def GetMany(self: win32more.Windows.Foundation.Collections.IVector[win32more.Microsoft.UI.Composition.CompositionColorGradientStop], startIndex: UInt32, items: FillArray[win32more.Microsoft.UI.Composition.CompositionColorGradientStop]) -> UInt32: ...
    Size = property(get_Size, None)
class CompositionColorSpace(Enum, Int32):
    Auto = 0
    Hsl = 1
    Rgb = 2
    HslLinear = 3
    RgbLinear = 4
class CompositionCommitBatch(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionObject
    default_interface: win32more.Microsoft.UI.Composition.ICompositionCommitBatch
    _classid_ = 'Microsoft.UI.Composition.CompositionCommitBatch'
    @winrt_mixinmethod
    def get_IsActive(self: win32more.Microsoft.UI.Composition.ICompositionCommitBatch) -> Boolean: ...
    @winrt_mixinmethod
    def add_Completed(self: win32more.Microsoft.UI.Composition.ICompositionCommitBatch, handler: win32more.Windows.Foundation.TypedEventHandler[IInspectable, win32more.Microsoft.UI.Composition.CompositionBatchCompletedEventArgs]) -> win32more.Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_Completed(self: win32more.Microsoft.UI.Composition.ICompositionCommitBatch, token: win32more.Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def get_IsEnded(self: win32more.Microsoft.UI.Composition.ICompositionCommitBatch) -> Boolean: ...
    IsActive = property(get_IsActive, None)
    IsEnded = property(get_IsEnded, None)
    Completed = event()
class CompositionCompositeMode(Enum, Int32):
    Inherit = 0
    SourceOver = 1
    DestinationInvert = 2
    MinBlend = 3
class CompositionContainerShape(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionShape
    default_interface: win32more.Microsoft.UI.Composition.ICompositionContainerShape
    _classid_ = 'Microsoft.UI.Composition.CompositionContainerShape'
    @winrt_mixinmethod
    def get_Shapes(self: win32more.Microsoft.UI.Composition.ICompositionContainerShape) -> win32more.Microsoft.UI.Composition.CompositionShapeCollection: ...
    Shapes = property(get_Shapes, None)
class CompositionDrawingSurface(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionObject
    default_interface: win32more.Microsoft.UI.Composition.ICompositionDrawingSurface
    _classid_ = 'Microsoft.UI.Composition.CompositionDrawingSurface'
    @winrt_mixinmethod
    def get_Size(self: win32more.Microsoft.UI.Composition.ICompositionDrawingSurface) -> win32more.Windows.Foundation.Size: ...
    @winrt_mixinmethod
    def Resize(self: win32more.Microsoft.UI.Composition.ICompositionDrawingSurface2, sizePixels: win32more.Windows.Graphics.SizeInt32) -> Void: ...
    @winrt_mixinmethod
    def Scroll(self: win32more.Microsoft.UI.Composition.ICompositionDrawingSurface2, offset: win32more.Windows.Graphics.PointInt32) -> Void: ...
    @winrt_mixinmethod
    def ScrollRect(self: win32more.Microsoft.UI.Composition.ICompositionDrawingSurface2, offset: win32more.Windows.Graphics.PointInt32, scrollRect: win32more.Windows.Graphics.RectInt32) -> Void: ...
    @winrt_mixinmethod
    def get_AlphaMode(self: win32more.Microsoft.UI.Composition.ICompositionDrawingSurface) -> win32more.Microsoft.Graphics.DirectX.DirectXAlphaMode: ...
    @winrt_mixinmethod
    def get_SizeInt32(self: win32more.Microsoft.UI.Composition.ICompositionDrawingSurface2) -> win32more.Windows.Graphics.SizeInt32: ...
    @winrt_mixinmethod
    def get_PixelFormat(self: win32more.Microsoft.UI.Composition.ICompositionDrawingSurface) -> win32more.Microsoft.Graphics.DirectX.DirectXPixelFormat: ...
    @winrt_mixinmethod
    def ScrollRectWithClip(self: win32more.Microsoft.UI.Composition.ICompositionDrawingSurface2, offset: win32more.Windows.Graphics.PointInt32, clipRect: win32more.Windows.Graphics.RectInt32, scrollRect: win32more.Windows.Graphics.RectInt32) -> Void: ...
    @winrt_mixinmethod
    def ScrollWithClip(self: win32more.Microsoft.UI.Composition.ICompositionDrawingSurface2, offset: win32more.Windows.Graphics.PointInt32, clipRect: win32more.Windows.Graphics.RectInt32) -> Void: ...
    AlphaMode = property(get_AlphaMode, None)
    PixelFormat = property(get_PixelFormat, None)
    Size = property(get_Size, None)
    SizeInt32 = property(get_SizeInt32, None)
class CompositionDropShadowSourcePolicy(Enum, Int32):
    Default = 0
    InheritFromVisualContent = 1
class CompositionEasingFunction(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionObject
    default_interface: win32more.Microsoft.UI.Composition.ICompositionEasingFunction
    _classid_ = 'Microsoft.UI.Composition.CompositionEasingFunction'
    @winrt_classmethod
    def CreateCubicBezierEasingFunction(cls: win32more.Microsoft.UI.Composition.ICompositionEasingFunctionStatics, owner: win32more.Microsoft.UI.Composition.Compositor, controlPoint1: win32more.Windows.Foundation.Numerics.Vector2, controlPoint2: win32more.Windows.Foundation.Numerics.Vector2) -> win32more.Microsoft.UI.Composition.CubicBezierEasingFunction: ...
    @winrt_classmethod
    def CreateLinearEasingFunction(cls: win32more.Microsoft.UI.Composition.ICompositionEasingFunctionStatics, owner: win32more.Microsoft.UI.Composition.Compositor) -> win32more.Microsoft.UI.Composition.LinearEasingFunction: ...
    @winrt_classmethod
    def CreateStepEasingFunction(cls: win32more.Microsoft.UI.Composition.ICompositionEasingFunctionStatics, owner: win32more.Microsoft.UI.Composition.Compositor) -> win32more.Microsoft.UI.Composition.StepEasingFunction: ...
    @winrt_classmethod
    def CreateStepEasingFunctionWithStepCount(cls: win32more.Microsoft.UI.Composition.ICompositionEasingFunctionStatics, owner: win32more.Microsoft.UI.Composition.Compositor, stepCount: Int32) -> win32more.Microsoft.UI.Composition.StepEasingFunction: ...
    @winrt_classmethod
    def CreateBackEasingFunction(cls: win32more.Microsoft.UI.Composition.ICompositionEasingFunctionStatics, owner: win32more.Microsoft.UI.Composition.Compositor, mode: win32more.Microsoft.UI.Composition.CompositionEasingFunctionMode, amplitude: Single) -> win32more.Microsoft.UI.Composition.BackEasingFunction: ...
    @winrt_classmethod
    def CreateBounceEasingFunction(cls: win32more.Microsoft.UI.Composition.ICompositionEasingFunctionStatics, owner: win32more.Microsoft.UI.Composition.Compositor, mode: win32more.Microsoft.UI.Composition.CompositionEasingFunctionMode, bounces: Int32, bounciness: Single) -> win32more.Microsoft.UI.Composition.BounceEasingFunction: ...
    @winrt_classmethod
    def CreateCircleEasingFunction(cls: win32more.Microsoft.UI.Composition.ICompositionEasingFunctionStatics, owner: win32more.Microsoft.UI.Composition.Compositor, mode: win32more.Microsoft.UI.Composition.CompositionEasingFunctionMode) -> win32more.Microsoft.UI.Composition.CircleEasingFunction: ...
    @winrt_classmethod
    def CreateElasticEasingFunction(cls: win32more.Microsoft.UI.Composition.ICompositionEasingFunctionStatics, owner: win32more.Microsoft.UI.Composition.Compositor, mode: win32more.Microsoft.UI.Composition.CompositionEasingFunctionMode, oscillations: Int32, springiness: Single) -> win32more.Microsoft.UI.Composition.ElasticEasingFunction: ...
    @winrt_classmethod
    def CreateExponentialEasingFunction(cls: win32more.Microsoft.UI.Composition.ICompositionEasingFunctionStatics, owner: win32more.Microsoft.UI.Composition.Compositor, mode: win32more.Microsoft.UI.Composition.CompositionEasingFunctionMode, exponent: Single) -> win32more.Microsoft.UI.Composition.ExponentialEasingFunction: ...
    @winrt_classmethod
    def CreatePowerEasingFunction(cls: win32more.Microsoft.UI.Composition.ICompositionEasingFunctionStatics, owner: win32more.Microsoft.UI.Composition.Compositor, mode: win32more.Microsoft.UI.Composition.CompositionEasingFunctionMode, power: Single) -> win32more.Microsoft.UI.Composition.PowerEasingFunction: ...
    @winrt_classmethod
    def CreateSineEasingFunction(cls: win32more.Microsoft.UI.Composition.ICompositionEasingFunctionStatics, owner: win32more.Microsoft.UI.Composition.Compositor, mode: win32more.Microsoft.UI.Composition.CompositionEasingFunctionMode) -> win32more.Microsoft.UI.Composition.SineEasingFunction: ...
class CompositionEasingFunctionMode(Enum, Int32):
    In = 0
    Out = 1
    InOut = 2
class CompositionEffectBrush(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionBrush
    default_interface: win32more.Microsoft.UI.Composition.ICompositionEffectBrush
    _classid_ = 'Microsoft.UI.Composition.CompositionEffectBrush'
    @winrt_mixinmethod
    def SetSourceParameter(self: win32more.Microsoft.UI.Composition.ICompositionEffectBrush, name: WinRT_String, source: win32more.Microsoft.UI.Composition.CompositionBrush) -> Void: ...
    @winrt_mixinmethod
    def GetSourceParameter(self: win32more.Microsoft.UI.Composition.ICompositionEffectBrush, name: WinRT_String) -> win32more.Microsoft.UI.Composition.CompositionBrush: ...
class CompositionEffectFactory(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionObject
    default_interface: win32more.Microsoft.UI.Composition.ICompositionEffectFactory
    _classid_ = 'Microsoft.UI.Composition.CompositionEffectFactory'
    @winrt_mixinmethod
    def CreateBrush(self: win32more.Microsoft.UI.Composition.ICompositionEffectFactory) -> win32more.Microsoft.UI.Composition.CompositionEffectBrush: ...
    @winrt_mixinmethod
    def get_LoadStatus(self: win32more.Microsoft.UI.Composition.ICompositionEffectFactory) -> win32more.Microsoft.UI.Composition.CompositionEffectFactoryLoadStatus: ...
    @winrt_mixinmethod
    def get_ExtendedError(self: win32more.Microsoft.UI.Composition.ICompositionEffectFactory) -> win32more.Windows.Foundation.HResult: ...
    ExtendedError = property(get_ExtendedError, None)
    LoadStatus = property(get_LoadStatus, None)
class CompositionEffectFactoryLoadStatus(Enum, Int32):
    Success = 0
    EffectTooComplex = 1
    Pending = 2
    Other = -1
class CompositionEffectSourceParameter(ComPtr):
    extends: IInspectable
    default_interface: win32more.Microsoft.UI.Composition.ICompositionEffectSourceParameter
    _classid_ = 'Microsoft.UI.Composition.CompositionEffectSourceParameter'
    def __init__(self, *args, **kwargs):
        if kwargs:
            super().__init__(**kwargs)
        elif len(args) == 1:
            super().__init__(move=win32more.Microsoft.UI.Composition.CompositionEffectSourceParameter.Create(*args))
        else:
            raise ValueError('no matched constructor')
    @winrt_factorymethod
    def Create(cls: win32more.Microsoft.UI.Composition.ICompositionEffectSourceParameterFactory, name: WinRT_String) -> win32more.Microsoft.UI.Composition.CompositionEffectSourceParameter: ...
    @winrt_mixinmethod
    def get_Name(self: win32more.Microsoft.UI.Composition.ICompositionEffectSourceParameter) -> WinRT_String: ...
    Name = property(get_Name, None)
class CompositionEllipseGeometry(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionGeometry
    default_interface: win32more.Microsoft.UI.Composition.ICompositionEllipseGeometry
    _classid_ = 'Microsoft.UI.Composition.CompositionEllipseGeometry'
    @winrt_mixinmethod
    def put_Radius(self: win32more.Microsoft.UI.Composition.ICompositionEllipseGeometry, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_mixinmethod
    def get_Center(self: win32more.Microsoft.UI.Composition.ICompositionEllipseGeometry) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_mixinmethod
    def get_Radius(self: win32more.Microsoft.UI.Composition.ICompositionEllipseGeometry) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_mixinmethod
    def put_Center(self: win32more.Microsoft.UI.Composition.ICompositionEllipseGeometry, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    Center = property(get_Center, put_Center)
    Radius = property(get_Radius, put_Radius)
class CompositionGeometricClip(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionClip
    default_interface: win32more.Microsoft.UI.Composition.ICompositionGeometricClip
    _classid_ = 'Microsoft.UI.Composition.CompositionGeometricClip'
    @winrt_mixinmethod
    def put_Geometry(self: win32more.Microsoft.UI.Composition.ICompositionGeometricClip, value: win32more.Microsoft.UI.Composition.CompositionGeometry) -> Void: ...
    @winrt_mixinmethod
    def get_ViewBox(self: win32more.Microsoft.UI.Composition.ICompositionGeometricClip) -> win32more.Microsoft.UI.Composition.CompositionViewBox: ...
    @winrt_mixinmethod
    def put_ViewBox(self: win32more.Microsoft.UI.Composition.ICompositionGeometricClip, value: win32more.Microsoft.UI.Composition.CompositionViewBox) -> Void: ...
    @winrt_mixinmethod
    def get_Geometry(self: win32more.Microsoft.UI.Composition.ICompositionGeometricClip) -> win32more.Microsoft.UI.Composition.CompositionGeometry: ...
    Geometry = property(get_Geometry, put_Geometry)
    ViewBox = property(get_ViewBox, put_ViewBox)
class CompositionGeometry(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionObject
    default_interface: win32more.Microsoft.UI.Composition.ICompositionGeometry
    _classid_ = 'Microsoft.UI.Composition.CompositionGeometry'
    @winrt_mixinmethod
    def get_TrimOffset(self: win32more.Microsoft.UI.Composition.ICompositionGeometry) -> Single: ...
    @winrt_mixinmethod
    def put_TrimEnd(self: win32more.Microsoft.UI.Composition.ICompositionGeometry, value: Single) -> Void: ...
    @winrt_mixinmethod
    def put_TrimStart(self: win32more.Microsoft.UI.Composition.ICompositionGeometry, value: Single) -> Void: ...
    @winrt_mixinmethod
    def put_TrimOffset(self: win32more.Microsoft.UI.Composition.ICompositionGeometry, value: Single) -> Void: ...
    @winrt_mixinmethod
    def get_TrimEnd(self: win32more.Microsoft.UI.Composition.ICompositionGeometry) -> Single: ...
    @winrt_mixinmethod
    def get_TrimStart(self: win32more.Microsoft.UI.Composition.ICompositionGeometry) -> Single: ...
    TrimEnd = property(get_TrimEnd, put_TrimEnd)
    TrimOffset = property(get_TrimOffset, put_TrimOffset)
    TrimStart = property(get_TrimStart, put_TrimStart)
class CompositionGetValueStatus(Enum, Int32):
    Succeeded = 0
    TypeMismatch = 1
    NotFound = 2
class CompositionGradientBrush(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionBrush
    default_interface: win32more.Microsoft.UI.Composition.ICompositionGradientBrush
    _classid_ = 'Microsoft.UI.Composition.CompositionGradientBrush'
    @winrt_mixinmethod
    def get_RotationAngleInDegrees(self: win32more.Microsoft.UI.Composition.ICompositionGradientBrush) -> Single: ...
    @winrt_mixinmethod
    def get_RotationAngle(self: win32more.Microsoft.UI.Composition.ICompositionGradientBrush) -> Single: ...
    @winrt_mixinmethod
    def get_TransformMatrix(self: win32more.Microsoft.UI.Composition.ICompositionGradientBrush) -> win32more.Windows.Foundation.Numerics.Matrix3x2: ...
    @winrt_mixinmethod
    def put_RotationAngleInDegrees(self: win32more.Microsoft.UI.Composition.ICompositionGradientBrush, value: Single) -> Void: ...
    @winrt_mixinmethod
    def get_Scale(self: win32more.Microsoft.UI.Composition.ICompositionGradientBrush) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_mixinmethod
    def put_Scale(self: win32more.Microsoft.UI.Composition.ICompositionGradientBrush, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_mixinmethod
    def get_AnchorPoint(self: win32more.Microsoft.UI.Composition.ICompositionGradientBrush) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_mixinmethod
    def put_TransformMatrix(self: win32more.Microsoft.UI.Composition.ICompositionGradientBrush, value: win32more.Windows.Foundation.Numerics.Matrix3x2) -> Void: ...
    @winrt_mixinmethod
    def get_MappingMode(self: win32more.Microsoft.UI.Composition.ICompositionGradientBrush2) -> win32more.Microsoft.UI.Composition.CompositionMappingMode: ...
    @winrt_mixinmethod
    def put_MappingMode(self: win32more.Microsoft.UI.Composition.ICompositionGradientBrush2, value: win32more.Microsoft.UI.Composition.CompositionMappingMode) -> Void: ...
    @winrt_mixinmethod
    def put_RotationAngle(self: win32more.Microsoft.UI.Composition.ICompositionGradientBrush, value: Single) -> Void: ...
    @winrt_mixinmethod
    def put_AnchorPoint(self: win32more.Microsoft.UI.Composition.ICompositionGradientBrush, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_mixinmethod
    def get_CenterPoint(self: win32more.Microsoft.UI.Composition.ICompositionGradientBrush) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_mixinmethod
    def put_CenterPoint(self: win32more.Microsoft.UI.Composition.ICompositionGradientBrush, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_mixinmethod
    def get_ColorStops(self: win32more.Microsoft.UI.Composition.ICompositionGradientBrush) -> win32more.Microsoft.UI.Composition.CompositionColorGradientStopCollection: ...
    @winrt_mixinmethod
    def get_ExtendMode(self: win32more.Microsoft.UI.Composition.ICompositionGradientBrush) -> win32more.Microsoft.UI.Composition.CompositionGradientExtendMode: ...
    @winrt_mixinmethod
    def put_ExtendMode(self: win32more.Microsoft.UI.Composition.ICompositionGradientBrush, value: win32more.Microsoft.UI.Composition.CompositionGradientExtendMode) -> Void: ...
    @winrt_mixinmethod
    def get_InterpolationSpace(self: win32more.Microsoft.UI.Composition.ICompositionGradientBrush) -> win32more.Microsoft.UI.Composition.CompositionColorSpace: ...
    @winrt_mixinmethod
    def put_InterpolationSpace(self: win32more.Microsoft.UI.Composition.ICompositionGradientBrush, value: win32more.Microsoft.UI.Composition.CompositionColorSpace) -> Void: ...
    @winrt_mixinmethod
    def get_Offset(self: win32more.Microsoft.UI.Composition.ICompositionGradientBrush) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_mixinmethod
    def put_Offset(self: win32more.Microsoft.UI.Composition.ICompositionGradientBrush, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    AnchorPoint = property(get_AnchorPoint, put_AnchorPoint)
    CenterPoint = property(get_CenterPoint, put_CenterPoint)
    ColorStops = property(get_ColorStops, None)
    ExtendMode = property(get_ExtendMode, put_ExtendMode)
    InterpolationSpace = property(get_InterpolationSpace, put_InterpolationSpace)
    MappingMode = property(get_MappingMode, put_MappingMode)
    Offset = property(get_Offset, put_Offset)
    RotationAngle = property(get_RotationAngle, put_RotationAngle)
    RotationAngleInDegrees = property(get_RotationAngleInDegrees, put_RotationAngleInDegrees)
    Scale = property(get_Scale, put_Scale)
    TransformMatrix = property(get_TransformMatrix, put_TransformMatrix)
class CompositionGradientExtendMode(Enum, Int32):
    Clamp = 0
    Wrap = 1
    Mirror = 2
class CompositionGraphicsDevice(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionObject
    default_interface: win32more.Microsoft.UI.Composition.ICompositionGraphicsDevice
    _classid_ = 'Microsoft.UI.Composition.CompositionGraphicsDevice'
    @winrt_mixinmethod
    def Trim(self: win32more.Microsoft.UI.Composition.ICompositionGraphicsDevice3) -> Void: ...
    @winrt_mixinmethod
    def add_RenderingDeviceReplaced(self: win32more.Microsoft.UI.Composition.ICompositionGraphicsDevice, handler: win32more.Windows.Foundation.TypedEventHandler[win32more.Microsoft.UI.Composition.CompositionGraphicsDevice, win32more.Microsoft.UI.Composition.RenderingDeviceReplacedEventArgs]) -> win32more.Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def CreateVirtualDrawingSurface(self: win32more.Microsoft.UI.Composition.ICompositionGraphicsDevice2, sizePixels: win32more.Windows.Graphics.SizeInt32, pixelFormat: win32more.Microsoft.Graphics.DirectX.DirectXPixelFormat, alphaMode: win32more.Microsoft.Graphics.DirectX.DirectXAlphaMode) -> win32more.Microsoft.UI.Composition.CompositionVirtualDrawingSurface: ...
    @winrt_mixinmethod
    def CreateMipmapSurface(self: win32more.Microsoft.UI.Composition.ICompositionGraphicsDevice3, sizePixels: win32more.Windows.Graphics.SizeInt32, pixelFormat: win32more.Microsoft.Graphics.DirectX.DirectXPixelFormat, alphaMode: win32more.Microsoft.Graphics.DirectX.DirectXAlphaMode) -> win32more.Microsoft.UI.Composition.CompositionMipmapSurface: ...
    @winrt_mixinmethod
    def CaptureAsync(self: win32more.Microsoft.UI.Composition.ICompositionGraphicsDevice4, captureVisual: win32more.Microsoft.UI.Composition.Visual, size: win32more.Windows.Graphics.SizeInt32, pixelFormat: win32more.Microsoft.Graphics.DirectX.DirectXPixelFormat, alphaMode: win32more.Microsoft.Graphics.DirectX.DirectXAlphaMode, sdrBoost: Single) -> win32more.Windows.Foundation.IAsyncOperation[win32more.Microsoft.UI.Composition.ICompositionSurface]: ...
    @winrt_mixinmethod
    def CreateDrawingSurface(self: win32more.Microsoft.UI.Composition.ICompositionGraphicsDevice, sizePixels: win32more.Windows.Foundation.Size, pixelFormat: win32more.Microsoft.Graphics.DirectX.DirectXPixelFormat, alphaMode: win32more.Microsoft.Graphics.DirectX.DirectXAlphaMode) -> win32more.Microsoft.UI.Composition.CompositionDrawingSurface: ...
    @winrt_mixinmethod
    def remove_RenderingDeviceReplaced(self: win32more.Microsoft.UI.Composition.ICompositionGraphicsDevice, token: win32more.Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def CreateDrawingSurface2(self: win32more.Microsoft.UI.Composition.ICompositionGraphicsDevice2, sizePixels: win32more.Windows.Graphics.SizeInt32, pixelFormat: win32more.Microsoft.Graphics.DirectX.DirectXPixelFormat, alphaMode: win32more.Microsoft.Graphics.DirectX.DirectXAlphaMode) -> win32more.Microsoft.UI.Composition.CompositionDrawingSurface: ...
    RenderingDeviceReplaced = event()
class CompositionLight(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionObject
    default_interface: win32more.Microsoft.UI.Composition.ICompositionLight
    _classid_ = 'Microsoft.UI.Composition.CompositionLight'
    @winrt_mixinmethod
    def put_IsEnabled(self: win32more.Microsoft.UI.Composition.ICompositionLight3, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def get_IsEnabled(self: win32more.Microsoft.UI.Composition.ICompositionLight3) -> Boolean: ...
    @winrt_mixinmethod
    def get_Targets(self: win32more.Microsoft.UI.Composition.ICompositionLight) -> win32more.Microsoft.UI.Composition.VisualUnorderedCollection: ...
    @winrt_mixinmethod
    def get_ExclusionsFromTargets(self: win32more.Microsoft.UI.Composition.ICompositionLight2) -> win32more.Microsoft.UI.Composition.VisualUnorderedCollection: ...
    ExclusionsFromTargets = property(get_ExclusionsFromTargets, None)
    IsEnabled = property(get_IsEnabled, put_IsEnabled)
    Targets = property(get_Targets, None)
class CompositionLineGeometry(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionGeometry
    default_interface: win32more.Microsoft.UI.Composition.ICompositionLineGeometry
    _classid_ = 'Microsoft.UI.Composition.CompositionLineGeometry'
    @winrt_mixinmethod
    def put_Start(self: win32more.Microsoft.UI.Composition.ICompositionLineGeometry, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_mixinmethod
    def get_Start(self: win32more.Microsoft.UI.Composition.ICompositionLineGeometry) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_mixinmethod
    def put_End(self: win32more.Microsoft.UI.Composition.ICompositionLineGeometry, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_mixinmethod
    def get_End(self: win32more.Microsoft.UI.Composition.ICompositionLineGeometry) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    End = property(get_End, put_End)
    Start = property(get_Start, put_Start)
class CompositionLinearGradientBrush(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionGradientBrush
    default_interface: win32more.Microsoft.UI.Composition.ICompositionLinearGradientBrush
    _classid_ = 'Microsoft.UI.Composition.CompositionLinearGradientBrush'
    @winrt_mixinmethod
    def get_StartPoint(self: win32more.Microsoft.UI.Composition.ICompositionLinearGradientBrush) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_mixinmethod
    def get_EndPoint(self: win32more.Microsoft.UI.Composition.ICompositionLinearGradientBrush) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_mixinmethod
    def put_EndPoint(self: win32more.Microsoft.UI.Composition.ICompositionLinearGradientBrush, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_mixinmethod
    def put_StartPoint(self: win32more.Microsoft.UI.Composition.ICompositionLinearGradientBrush, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    EndPoint = property(get_EndPoint, put_EndPoint)
    StartPoint = property(get_StartPoint, put_StartPoint)
class CompositionMappingMode(Enum, Int32):
    Absolute = 0
    Relative = 1
class CompositionMaskBrush(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionBrush
    default_interface: win32more.Microsoft.UI.Composition.ICompositionMaskBrush
    _classid_ = 'Microsoft.UI.Composition.CompositionMaskBrush'
    @winrt_mixinmethod
    def get_Source(self: win32more.Microsoft.UI.Composition.ICompositionMaskBrush) -> win32more.Microsoft.UI.Composition.CompositionBrush: ...
    @winrt_mixinmethod
    def put_Source(self: win32more.Microsoft.UI.Composition.ICompositionMaskBrush, value: win32more.Microsoft.UI.Composition.CompositionBrush) -> Void: ...
    @winrt_mixinmethod
    def put_Mask(self: win32more.Microsoft.UI.Composition.ICompositionMaskBrush, value: win32more.Microsoft.UI.Composition.CompositionBrush) -> Void: ...
    @winrt_mixinmethod
    def get_Mask(self: win32more.Microsoft.UI.Composition.ICompositionMaskBrush) -> win32more.Microsoft.UI.Composition.CompositionBrush: ...
    Mask = property(get_Mask, put_Mask)
    Source = property(get_Source, put_Source)
class CompositionMipmapSurface(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionObject
    default_interface: win32more.Microsoft.UI.Composition.ICompositionMipmapSurface
    _classid_ = 'Microsoft.UI.Composition.CompositionMipmapSurface'
    @winrt_mixinmethod
    def get_LevelCount(self: win32more.Microsoft.UI.Composition.ICompositionMipmapSurface) -> UInt32: ...
    @winrt_mixinmethod
    def get_PixelFormat(self: win32more.Microsoft.UI.Composition.ICompositionMipmapSurface) -> win32more.Microsoft.Graphics.DirectX.DirectXPixelFormat: ...
    @winrt_mixinmethod
    def get_SizeInt32(self: win32more.Microsoft.UI.Composition.ICompositionMipmapSurface) -> win32more.Windows.Graphics.SizeInt32: ...
    @winrt_mixinmethod
    def GetDrawingSurfaceForLevel(self: win32more.Microsoft.UI.Composition.ICompositionMipmapSurface, level: UInt32) -> win32more.Microsoft.UI.Composition.CompositionDrawingSurface: ...
    @winrt_mixinmethod
    def get_AlphaMode(self: win32more.Microsoft.UI.Composition.ICompositionMipmapSurface) -> win32more.Microsoft.Graphics.DirectX.DirectXAlphaMode: ...
    AlphaMode = property(get_AlphaMode, None)
    LevelCount = property(get_LevelCount, None)
    PixelFormat = property(get_PixelFormat, None)
    SizeInt32 = property(get_SizeInt32, None)
class CompositionNineGridBrush(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionBrush
    default_interface: win32more.Microsoft.UI.Composition.ICompositionNineGridBrush
    _classid_ = 'Microsoft.UI.Composition.CompositionNineGridBrush'
    @winrt_mixinmethod
    def SetInsetsWithValues(self: win32more.Microsoft.UI.Composition.ICompositionNineGridBrush, left: Single, top: Single, right: Single, bottom: Single) -> Void: ...
    @winrt_mixinmethod
    def get_IsCenterHollow(self: win32more.Microsoft.UI.Composition.ICompositionNineGridBrush) -> Boolean: ...
    @winrt_mixinmethod
    def put_Source(self: win32more.Microsoft.UI.Composition.ICompositionNineGridBrush, value: win32more.Microsoft.UI.Composition.CompositionBrush) -> Void: ...
    @winrt_mixinmethod
    def put_TopInset(self: win32more.Microsoft.UI.Composition.ICompositionNineGridBrush, value: Single) -> Void: ...
    @winrt_mixinmethod
    def get_TopInsetScale(self: win32more.Microsoft.UI.Composition.ICompositionNineGridBrush) -> Single: ...
    @winrt_mixinmethod
    def put_TopInsetScale(self: win32more.Microsoft.UI.Composition.ICompositionNineGridBrush, value: Single) -> Void: ...
    @winrt_mixinmethod
    def SetInsets(self: win32more.Microsoft.UI.Composition.ICompositionNineGridBrush, inset: Single) -> Void: ...
    @winrt_mixinmethod
    def get_LeftInsetScale(self: win32more.Microsoft.UI.Composition.ICompositionNineGridBrush) -> Single: ...
    @winrt_mixinmethod
    def SetInsetScales(self: win32more.Microsoft.UI.Composition.ICompositionNineGridBrush, scale: Single) -> Void: ...
    @winrt_mixinmethod
    def SetInsetScalesWithValues(self: win32more.Microsoft.UI.Composition.ICompositionNineGridBrush, left: Single, top: Single, right: Single, bottom: Single) -> Void: ...
    @winrt_mixinmethod
    def put_BottomInset(self: win32more.Microsoft.UI.Composition.ICompositionNineGridBrush, value: Single) -> Void: ...
    @winrt_mixinmethod
    def get_BottomInsetScale(self: win32more.Microsoft.UI.Composition.ICompositionNineGridBrush) -> Single: ...
    @winrt_mixinmethod
    def put_BottomInsetScale(self: win32more.Microsoft.UI.Composition.ICompositionNineGridBrush, value: Single) -> Void: ...
    @winrt_mixinmethod
    def get_TopInset(self: win32more.Microsoft.UI.Composition.ICompositionNineGridBrush) -> Single: ...
    @winrt_mixinmethod
    def put_IsCenterHollow(self: win32more.Microsoft.UI.Composition.ICompositionNineGridBrush, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def get_LeftInset(self: win32more.Microsoft.UI.Composition.ICompositionNineGridBrush) -> Single: ...
    @winrt_mixinmethod
    def put_LeftInset(self: win32more.Microsoft.UI.Composition.ICompositionNineGridBrush, value: Single) -> Void: ...
    @winrt_mixinmethod
    def get_BottomInset(self: win32more.Microsoft.UI.Composition.ICompositionNineGridBrush) -> Single: ...
    @winrt_mixinmethod
    def put_LeftInsetScale(self: win32more.Microsoft.UI.Composition.ICompositionNineGridBrush, value: Single) -> Void: ...
    @winrt_mixinmethod
    def get_RightInset(self: win32more.Microsoft.UI.Composition.ICompositionNineGridBrush) -> Single: ...
    @winrt_mixinmethod
    def put_RightInset(self: win32more.Microsoft.UI.Composition.ICompositionNineGridBrush, value: Single) -> Void: ...
    @winrt_mixinmethod
    def get_RightInsetScale(self: win32more.Microsoft.UI.Composition.ICompositionNineGridBrush) -> Single: ...
    @winrt_mixinmethod
    def put_RightInsetScale(self: win32more.Microsoft.UI.Composition.ICompositionNineGridBrush, value: Single) -> Void: ...
    @winrt_mixinmethod
    def get_Source(self: win32more.Microsoft.UI.Composition.ICompositionNineGridBrush) -> win32more.Microsoft.UI.Composition.CompositionBrush: ...
    BottomInset = property(get_BottomInset, put_BottomInset)
    BottomInsetScale = property(get_BottomInsetScale, put_BottomInsetScale)
    IsCenterHollow = property(get_IsCenterHollow, put_IsCenterHollow)
    LeftInset = property(get_LeftInset, put_LeftInset)
    LeftInsetScale = property(get_LeftInsetScale, put_LeftInsetScale)
    RightInset = property(get_RightInset, put_RightInset)
    RightInsetScale = property(get_RightInsetScale, put_RightInsetScale)
    Source = property(get_Source, put_Source)
    TopInset = property(get_TopInset, put_TopInset)
    TopInsetScale = property(get_TopInsetScale, put_TopInsetScale)
class CompositionObject(ComPtr):
    extends: IInspectable
    implements: Tuple[ContextManagerProtocol]
    default_interface: win32more.Microsoft.UI.Composition.ICompositionObject
    _classid_ = 'Microsoft.UI.Composition.CompositionObject'
    @winrt_mixinmethod
    def Close(self: win32more.Windows.Foundation.IClosable) -> Void: ...
    @winrt_mixinmethod
    def put_Comment(self: win32more.Microsoft.UI.Composition.ICompositionObject2, value: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def PopulatePropertyInfo(self: win32more.Microsoft.UI.Composition.IAnimationObject, propertyName: WinRT_String, propertyInfo: win32more.Microsoft.UI.Composition.AnimationPropertyInfo) -> Void: ...
    @winrt_mixinmethod
    def get_Properties(self: win32more.Microsoft.UI.Composition.ICompositionObject) -> win32more.Microsoft.UI.Composition.CompositionPropertySet: ...
    @winrt_mixinmethod
    def StartAnimation(self: win32more.Microsoft.UI.Composition.ICompositionObject, propertyName: WinRT_String, animation: win32more.Microsoft.UI.Composition.CompositionAnimation) -> Void: ...
    @winrt_mixinmethod
    def StopAnimation(self: win32more.Microsoft.UI.Composition.ICompositionObject, propertyName: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def get_Comment(self: win32more.Microsoft.UI.Composition.ICompositionObject2) -> WinRT_String: ...
    @winrt_mixinmethod
    def get_Compositor(self: win32more.Microsoft.UI.Composition.ICompositionObject) -> win32more.Microsoft.UI.Composition.Compositor: ...
    @winrt_mixinmethod
    def get_ImplicitAnimations(self: win32more.Microsoft.UI.Composition.ICompositionObject2) -> win32more.Microsoft.UI.Composition.ImplicitAnimationCollection: ...
    @winrt_mixinmethod
    def put_ImplicitAnimations(self: win32more.Microsoft.UI.Composition.ICompositionObject2, value: win32more.Microsoft.UI.Composition.ImplicitAnimationCollection) -> Void: ...
    @winrt_mixinmethod
    def StartAnimationGroup(self: win32more.Microsoft.UI.Composition.ICompositionObject2, value: win32more.Microsoft.UI.Composition.ICompositionAnimationBase) -> Void: ...
    @winrt_mixinmethod
    def StopAnimationGroup(self: win32more.Microsoft.UI.Composition.ICompositionObject2, value: win32more.Microsoft.UI.Composition.ICompositionAnimationBase) -> Void: ...
    @winrt_mixinmethod
    def get_DispatcherQueue(self: win32more.Microsoft.UI.Composition.ICompositionObject3) -> win32more.Microsoft.UI.Dispatching.DispatcherQueue: ...
    @winrt_mixinmethod
    def TryGetAnimationController(self: win32more.Microsoft.UI.Composition.ICompositionObject4, propertyName: WinRT_String) -> win32more.Microsoft.UI.Composition.AnimationController: ...
    @winrt_mixinmethod
    def StartAnimationWithController(self: win32more.Microsoft.UI.Composition.ICompositionObject5, propertyName: WinRT_String, animation: win32more.Microsoft.UI.Composition.CompositionAnimation, animationController: win32more.Microsoft.UI.Composition.AnimationController) -> Void: ...
    @winrt_classmethod
    def StartAnimationWithIAnimationObject(cls: win32more.Microsoft.UI.Composition.ICompositionObjectStatics, target: win32more.Microsoft.UI.Composition.IAnimationObject, propertyName: WinRT_String, animation: win32more.Microsoft.UI.Composition.CompositionAnimation) -> Void: ...
    @winrt_classmethod
    def StartAnimationGroupWithIAnimationObject(cls: win32more.Microsoft.UI.Composition.ICompositionObjectStatics, target: win32more.Microsoft.UI.Composition.IAnimationObject, animation: win32more.Microsoft.UI.Composition.ICompositionAnimationBase) -> Void: ...
    Comment = property(get_Comment, put_Comment)
    Compositor = property(get_Compositor, None)
    DispatcherQueue = property(get_DispatcherQueue, None)
    ImplicitAnimations = property(get_ImplicitAnimations, put_ImplicitAnimations)
    Properties = property(get_Properties, None)
class CompositionPath(ComPtr):
    extends: IInspectable
    default_interface: win32more.Microsoft.UI.Composition.ICompositionPath
    _classid_ = 'Microsoft.UI.Composition.CompositionPath'
    def __init__(self, *args, **kwargs):
        if kwargs:
            super().__init__(**kwargs)
        elif len(args) == 1:
            super().__init__(move=win32more.Microsoft.UI.Composition.CompositionPath.Create(*args))
        else:
            raise ValueError('no matched constructor')
    @winrt_factorymethod
    def Create(cls: win32more.Microsoft.UI.Composition.ICompositionPathFactory, source: win32more.Windows.Graphics.IGeometrySource2D) -> win32more.Microsoft.UI.Composition.CompositionPath: ...
class CompositionPathGeometry(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionGeometry
    default_interface: win32more.Microsoft.UI.Composition.ICompositionPathGeometry
    _classid_ = 'Microsoft.UI.Composition.CompositionPathGeometry'
    @winrt_mixinmethod
    def put_Path(self: win32more.Microsoft.UI.Composition.ICompositionPathGeometry, value: win32more.Microsoft.UI.Composition.CompositionPath) -> Void: ...
    @winrt_mixinmethod
    def get_Path(self: win32more.Microsoft.UI.Composition.ICompositionPathGeometry) -> win32more.Microsoft.UI.Composition.CompositionPath: ...
    Path = property(get_Path, put_Path)
class CompositionProjectedShadow(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionObject
    default_interface: win32more.Microsoft.UI.Composition.ICompositionProjectedShadow
    _classid_ = 'Microsoft.UI.Composition.CompositionProjectedShadow'
    @winrt_mixinmethod
    def get_MaxBlurRadius(self: win32more.Microsoft.UI.Composition.ICompositionProjectedShadow) -> Single: ...
    @winrt_mixinmethod
    def get_Receivers(self: win32more.Microsoft.UI.Composition.ICompositionProjectedShadow) -> win32more.Microsoft.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection: ...
    @winrt_mixinmethod
    def put_BlurRadiusMultiplier(self: win32more.Microsoft.UI.Composition.ICompositionProjectedShadow, value: Single) -> Void: ...
    @winrt_mixinmethod
    def get_Casters(self: win32more.Microsoft.UI.Composition.ICompositionProjectedShadow) -> win32more.Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection: ...
    @winrt_mixinmethod
    def get_LightSource(self: win32more.Microsoft.UI.Composition.ICompositionProjectedShadow) -> win32more.Microsoft.UI.Composition.CompositionLight: ...
    @winrt_mixinmethod
    def put_LightSource(self: win32more.Microsoft.UI.Composition.ICompositionProjectedShadow, value: win32more.Microsoft.UI.Composition.CompositionLight) -> Void: ...
    @winrt_mixinmethod
    def get_BlurRadiusMultiplier(self: win32more.Microsoft.UI.Composition.ICompositionProjectedShadow) -> Single: ...
    @winrt_mixinmethod
    def put_MaxBlurRadius(self: win32more.Microsoft.UI.Composition.ICompositionProjectedShadow, value: Single) -> Void: ...
    @winrt_mixinmethod
    def get_MinBlurRadius(self: win32more.Microsoft.UI.Composition.ICompositionProjectedShadow) -> Single: ...
    @winrt_mixinmethod
    def put_MinBlurRadius(self: win32more.Microsoft.UI.Composition.ICompositionProjectedShadow, value: Single) -> Void: ...
    BlurRadiusMultiplier = property(get_BlurRadiusMultiplier, put_BlurRadiusMultiplier)
    Casters = property(get_Casters, None)
    LightSource = property(get_LightSource, put_LightSource)
    MaxBlurRadius = property(get_MaxBlurRadius, put_MaxBlurRadius)
    MinBlurRadius = property(get_MinBlurRadius, put_MinBlurRadius)
    Receivers = property(get_Receivers, None)
class CompositionProjectedShadowCaster(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionObject
    default_interface: win32more.Microsoft.UI.Composition.ICompositionProjectedShadowCaster
    _classid_ = 'Microsoft.UI.Composition.CompositionProjectedShadowCaster'
    @winrt_mixinmethod
    def put_CastingVisual(self: win32more.Microsoft.UI.Composition.ICompositionProjectedShadowCaster, value: win32more.Microsoft.UI.Composition.Visual) -> Void: ...
    @winrt_mixinmethod
    def get_Brush(self: win32more.Microsoft.UI.Composition.ICompositionProjectedShadowCaster) -> win32more.Microsoft.UI.Composition.CompositionBrush: ...
    @winrt_mixinmethod
    def put_Brush(self: win32more.Microsoft.UI.Composition.ICompositionProjectedShadowCaster, value: win32more.Microsoft.UI.Composition.CompositionBrush) -> Void: ...
    @winrt_mixinmethod
    def get_CastingVisual(self: win32more.Microsoft.UI.Composition.ICompositionProjectedShadowCaster) -> win32more.Microsoft.UI.Composition.Visual: ...
    Brush = property(get_Brush, put_Brush)
    CastingVisual = property(get_CastingVisual, put_CastingVisual)
class _CompositionProjectedShadowCasterCollection_Meta_(ComPtr.__class__):
    pass
class CompositionProjectedShadowCasterCollection(ComPtr, metaclass=_CompositionProjectedShadowCasterCollection_Meta_):
    extends: win32more.Microsoft.UI.Composition.CompositionObject
    implements: Tuple[IterableProtocol[win32more.Microsoft.UI.Composition.CompositionProjectedShadowCaster]]
    default_interface: win32more.Microsoft.UI.Composition.ICompositionProjectedShadowCasterCollection
    _classid_ = 'Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection'
    @winrt_mixinmethod
    def InsertBelow(self: win32more.Microsoft.UI.Composition.ICompositionProjectedShadowCasterCollection, newCaster: win32more.Microsoft.UI.Composition.CompositionProjectedShadowCaster, reference: win32more.Microsoft.UI.Composition.CompositionProjectedShadowCaster) -> Void: ...
    @winrt_mixinmethod
    def InsertAbove(self: win32more.Microsoft.UI.Composition.ICompositionProjectedShadowCasterCollection, newCaster: win32more.Microsoft.UI.Composition.CompositionProjectedShadowCaster, reference: win32more.Microsoft.UI.Composition.CompositionProjectedShadowCaster) -> Void: ...
    @winrt_mixinmethod
    def get_Count(self: win32more.Microsoft.UI.Composition.ICompositionProjectedShadowCasterCollection) -> Int32: ...
    @winrt_mixinmethod
    def InsertAtBottom(self: win32more.Microsoft.UI.Composition.ICompositionProjectedShadowCasterCollection, newCaster: win32more.Microsoft.UI.Composition.CompositionProjectedShadowCaster) -> Void: ...
    @winrt_mixinmethod
    def InsertAtTop(self: win32more.Microsoft.UI.Composition.ICompositionProjectedShadowCasterCollection, newCaster: win32more.Microsoft.UI.Composition.CompositionProjectedShadowCaster) -> Void: ...
    @winrt_mixinmethod
    def Remove(self: win32more.Microsoft.UI.Composition.ICompositionProjectedShadowCasterCollection, caster: win32more.Microsoft.UI.Composition.CompositionProjectedShadowCaster) -> Void: ...
    @winrt_mixinmethod
    def RemoveAll(self: win32more.Microsoft.UI.Composition.ICompositionProjectedShadowCasterCollection) -> Void: ...
    @winrt_mixinmethod
    def First(self: win32more.Windows.Foundation.Collections.IIterable[win32more.Microsoft.UI.Composition.CompositionProjectedShadowCaster]) -> win32more.Windows.Foundation.Collections.IIterator[win32more.Microsoft.UI.Composition.CompositionProjectedShadowCaster]: ...
    @winrt_classmethod
    def get_MaxRespectedCasters(cls: win32more.Microsoft.UI.Composition.ICompositionProjectedShadowCasterCollectionStatics) -> Int32: ...
    Count = property(get_Count, None)
    _CompositionProjectedShadowCasterCollection_Meta_.MaxRespectedCasters = property(get_MaxRespectedCasters, None)
class CompositionProjectedShadowReceiver(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionObject
    default_interface: win32more.Microsoft.UI.Composition.ICompositionProjectedShadowReceiver
    _classid_ = 'Microsoft.UI.Composition.CompositionProjectedShadowReceiver'
    @winrt_mixinmethod
    def put_ReceivingVisual(self: win32more.Microsoft.UI.Composition.ICompositionProjectedShadowReceiver, value: win32more.Microsoft.UI.Composition.Visual) -> Void: ...
    @winrt_mixinmethod
    def get_ReceivingVisual(self: win32more.Microsoft.UI.Composition.ICompositionProjectedShadowReceiver) -> win32more.Microsoft.UI.Composition.Visual: ...
    ReceivingVisual = property(get_ReceivingVisual, put_ReceivingVisual)
class CompositionProjectedShadowReceiverUnorderedCollection(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionObject
    implements: Tuple[IterableProtocol[win32more.Microsoft.UI.Composition.CompositionProjectedShadowReceiver]]
    default_interface: win32more.Microsoft.UI.Composition.ICompositionProjectedShadowReceiverUnorderedCollection
    _classid_ = 'Microsoft.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection'
    @winrt_mixinmethod
    def First(self: win32more.Windows.Foundation.Collections.IIterable[win32more.Microsoft.UI.Composition.CompositionProjectedShadowReceiver]) -> win32more.Windows.Foundation.Collections.IIterator[win32more.Microsoft.UI.Composition.CompositionProjectedShadowReceiver]: ...
    @winrt_mixinmethod
    def Add(self: win32more.Microsoft.UI.Composition.ICompositionProjectedShadowReceiverUnorderedCollection, value: win32more.Microsoft.UI.Composition.CompositionProjectedShadowReceiver) -> Void: ...
    @winrt_mixinmethod
    def get_Count(self: win32more.Microsoft.UI.Composition.ICompositionProjectedShadowReceiverUnorderedCollection) -> Int32: ...
    @winrt_mixinmethod
    def Remove(self: win32more.Microsoft.UI.Composition.ICompositionProjectedShadowReceiverUnorderedCollection, value: win32more.Microsoft.UI.Composition.CompositionProjectedShadowReceiver) -> Void: ...
    @winrt_mixinmethod
    def RemoveAll(self: win32more.Microsoft.UI.Composition.ICompositionProjectedShadowReceiverUnorderedCollection) -> Void: ...
    Count = property(get_Count, None)
class CompositionPropertySet(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionObject
    default_interface: win32more.Microsoft.UI.Composition.ICompositionPropertySet
    _classid_ = 'Microsoft.UI.Composition.CompositionPropertySet'
    @winrt_mixinmethod
    def TryGetBoolean(self: win32more.Microsoft.UI.Composition.ICompositionPropertySet2, propertyName: WinRT_String, value: POINTER(Boolean)) -> win32more.Microsoft.UI.Composition.CompositionGetValueStatus: ...
    @winrt_mixinmethod
    def TryGetScalar(self: win32more.Microsoft.UI.Composition.ICompositionPropertySet, propertyName: WinRT_String, value: POINTER(Single)) -> win32more.Microsoft.UI.Composition.CompositionGetValueStatus: ...
    @winrt_mixinmethod
    def TryGetVector3(self: win32more.Microsoft.UI.Composition.ICompositionPropertySet, propertyName: WinRT_String, value: POINTER(win32more.Windows.Foundation.Numerics.Vector3)) -> win32more.Microsoft.UI.Composition.CompositionGetValueStatus: ...
    @winrt_mixinmethod
    def TryGetColor(self: win32more.Microsoft.UI.Composition.ICompositionPropertySet, propertyName: WinRT_String, value: POINTER(win32more.Windows.UI.Color)) -> win32more.Microsoft.UI.Composition.CompositionGetValueStatus: ...
    @winrt_mixinmethod
    def TryGetVector2(self: win32more.Microsoft.UI.Composition.ICompositionPropertySet, propertyName: WinRT_String, value: POINTER(win32more.Windows.Foundation.Numerics.Vector2)) -> win32more.Microsoft.UI.Composition.CompositionGetValueStatus: ...
    @winrt_mixinmethod
    def TryGetVector4(self: win32more.Microsoft.UI.Composition.ICompositionPropertySet, propertyName: WinRT_String, value: POINTER(win32more.Windows.Foundation.Numerics.Vector4)) -> win32more.Microsoft.UI.Composition.CompositionGetValueStatus: ...
    @winrt_mixinmethod
    def InsertBoolean(self: win32more.Microsoft.UI.Composition.ICompositionPropertySet2, propertyName: WinRT_String, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def InsertVector2(self: win32more.Microsoft.UI.Composition.ICompositionPropertySet, propertyName: WinRT_String, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_mixinmethod
    def TryGetMatrix3x2(self: win32more.Microsoft.UI.Composition.ICompositionPropertySet, propertyName: WinRT_String, value: POINTER(win32more.Windows.Foundation.Numerics.Matrix3x2)) -> win32more.Microsoft.UI.Composition.CompositionGetValueStatus: ...
    @winrt_mixinmethod
    def TryGetMatrix4x4(self: win32more.Microsoft.UI.Composition.ICompositionPropertySet, propertyName: WinRT_String, value: POINTER(win32more.Windows.Foundation.Numerics.Matrix4x4)) -> win32more.Microsoft.UI.Composition.CompositionGetValueStatus: ...
    @winrt_mixinmethod
    def TryGetQuaternion(self: win32more.Microsoft.UI.Composition.ICompositionPropertySet, propertyName: WinRT_String, value: POINTER(win32more.Windows.Foundation.Numerics.Quaternion)) -> win32more.Microsoft.UI.Composition.CompositionGetValueStatus: ...
    @winrt_mixinmethod
    def InsertMatrix3x2(self: win32more.Microsoft.UI.Composition.ICompositionPropertySet, propertyName: WinRT_String, value: win32more.Windows.Foundation.Numerics.Matrix3x2) -> Void: ...
    @winrt_mixinmethod
    def InsertMatrix4x4(self: win32more.Microsoft.UI.Composition.ICompositionPropertySet, propertyName: WinRT_String, value: win32more.Windows.Foundation.Numerics.Matrix4x4) -> Void: ...
    @winrt_mixinmethod
    def InsertQuaternion(self: win32more.Microsoft.UI.Composition.ICompositionPropertySet, propertyName: WinRT_String, value: win32more.Windows.Foundation.Numerics.Quaternion) -> Void: ...
    @winrt_mixinmethod
    def InsertScalar(self: win32more.Microsoft.UI.Composition.ICompositionPropertySet, propertyName: WinRT_String, value: Single) -> Void: ...
    @winrt_mixinmethod
    def InsertColor(self: win32more.Microsoft.UI.Composition.ICompositionPropertySet, propertyName: WinRT_String, value: win32more.Windows.UI.Color) -> Void: ...
    @winrt_mixinmethod
    def InsertVector3(self: win32more.Microsoft.UI.Composition.ICompositionPropertySet, propertyName: WinRT_String, value: win32more.Windows.Foundation.Numerics.Vector3) -> Void: ...
    @winrt_mixinmethod
    def InsertVector4(self: win32more.Microsoft.UI.Composition.ICompositionPropertySet, propertyName: WinRT_String, value: win32more.Windows.Foundation.Numerics.Vector4) -> Void: ...
class CompositionRadialGradientBrush(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionGradientBrush
    default_interface: win32more.Microsoft.UI.Composition.ICompositionRadialGradientBrush
    _classid_ = 'Microsoft.UI.Composition.CompositionRadialGradientBrush'
    @winrt_mixinmethod
    def put_GradientOriginOffset(self: win32more.Microsoft.UI.Composition.ICompositionRadialGradientBrush, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_mixinmethod
    def put_EllipseCenter(self: win32more.Microsoft.UI.Composition.ICompositionRadialGradientBrush, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_mixinmethod
    def get_EllipseRadius(self: win32more.Microsoft.UI.Composition.ICompositionRadialGradientBrush) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_mixinmethod
    def get_EllipseCenter(self: win32more.Microsoft.UI.Composition.ICompositionRadialGradientBrush) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_mixinmethod
    def get_GradientOriginOffset(self: win32more.Microsoft.UI.Composition.ICompositionRadialGradientBrush) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_mixinmethod
    def put_EllipseRadius(self: win32more.Microsoft.UI.Composition.ICompositionRadialGradientBrush, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    EllipseCenter = property(get_EllipseCenter, put_EllipseCenter)
    EllipseRadius = property(get_EllipseRadius, put_EllipseRadius)
    GradientOriginOffset = property(get_GradientOriginOffset, put_GradientOriginOffset)
class CompositionRectangleGeometry(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionGeometry
    default_interface: win32more.Microsoft.UI.Composition.ICompositionRectangleGeometry
    _classid_ = 'Microsoft.UI.Composition.CompositionRectangleGeometry'
    @winrt_mixinmethod
    def put_Offset(self: win32more.Microsoft.UI.Composition.ICompositionRectangleGeometry, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_mixinmethod
    def get_Size(self: win32more.Microsoft.UI.Composition.ICompositionRectangleGeometry) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_mixinmethod
    def put_Size(self: win32more.Microsoft.UI.Composition.ICompositionRectangleGeometry, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_mixinmethod
    def get_Offset(self: win32more.Microsoft.UI.Composition.ICompositionRectangleGeometry) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    Offset = property(get_Offset, put_Offset)
    Size = property(get_Size, put_Size)
class CompositionRoundedRectangleGeometry(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionGeometry
    default_interface: win32more.Microsoft.UI.Composition.ICompositionRoundedRectangleGeometry
    _classid_ = 'Microsoft.UI.Composition.CompositionRoundedRectangleGeometry'
    @winrt_mixinmethod
    def put_Offset(self: win32more.Microsoft.UI.Composition.ICompositionRoundedRectangleGeometry, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_mixinmethod
    def get_Size(self: win32more.Microsoft.UI.Composition.ICompositionRoundedRectangleGeometry) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_mixinmethod
    def put_Size(self: win32more.Microsoft.UI.Composition.ICompositionRoundedRectangleGeometry, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_mixinmethod
    def put_CornerRadius(self: win32more.Microsoft.UI.Composition.ICompositionRoundedRectangleGeometry, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_mixinmethod
    def get_CornerRadius(self: win32more.Microsoft.UI.Composition.ICompositionRoundedRectangleGeometry) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_mixinmethod
    def get_Offset(self: win32more.Microsoft.UI.Composition.ICompositionRoundedRectangleGeometry) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    CornerRadius = property(get_CornerRadius, put_CornerRadius)
    Offset = property(get_Offset, put_Offset)
    Size = property(get_Size, put_Size)
class CompositionScopedBatch(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionObject
    default_interface: win32more.Microsoft.UI.Composition.ICompositionScopedBatch
    _classid_ = 'Microsoft.UI.Composition.CompositionScopedBatch'
    @winrt_mixinmethod
    def remove_Completed(self: win32more.Microsoft.UI.Composition.ICompositionScopedBatch, token: win32more.Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def add_Completed(self: win32more.Microsoft.UI.Composition.ICompositionScopedBatch, handler: win32more.Windows.Foundation.TypedEventHandler[IInspectable, win32more.Microsoft.UI.Composition.CompositionBatchCompletedEventArgs]) -> win32more.Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def Resume(self: win32more.Microsoft.UI.Composition.ICompositionScopedBatch) -> Void: ...
    @winrt_mixinmethod
    def get_IsEnded(self: win32more.Microsoft.UI.Composition.ICompositionScopedBatch) -> Boolean: ...
    @winrt_mixinmethod
    def End(self: win32more.Microsoft.UI.Composition.ICompositionScopedBatch) -> Void: ...
    @winrt_mixinmethod
    def get_IsActive(self: win32more.Microsoft.UI.Composition.ICompositionScopedBatch) -> Boolean: ...
    @winrt_mixinmethod
    def Suspend(self: win32more.Microsoft.UI.Composition.ICompositionScopedBatch) -> Void: ...
    IsActive = property(get_IsActive, None)
    IsEnded = property(get_IsEnded, None)
    Completed = event()
class CompositionShadow(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionObject
    default_interface: win32more.Microsoft.UI.Composition.ICompositionShadow
    _classid_ = 'Microsoft.UI.Composition.CompositionShadow'
class CompositionShape(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionObject
    default_interface: win32more.Microsoft.UI.Composition.ICompositionShape
    _classid_ = 'Microsoft.UI.Composition.CompositionShape'
    @winrt_mixinmethod
    def get_CenterPoint(self: win32more.Microsoft.UI.Composition.ICompositionShape) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_mixinmethod
    def put_Offset(self: win32more.Microsoft.UI.Composition.ICompositionShape, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_mixinmethod
    def get_RotationAngle(self: win32more.Microsoft.UI.Composition.ICompositionShape) -> Single: ...
    @winrt_mixinmethod
    def put_RotationAngle(self: win32more.Microsoft.UI.Composition.ICompositionShape, value: Single) -> Void: ...
    @winrt_mixinmethod
    def get_RotationAngleInDegrees(self: win32more.Microsoft.UI.Composition.ICompositionShape) -> Single: ...
    @winrt_mixinmethod
    def put_RotationAngleInDegrees(self: win32more.Microsoft.UI.Composition.ICompositionShape, value: Single) -> Void: ...
    @winrt_mixinmethod
    def get_Scale(self: win32more.Microsoft.UI.Composition.ICompositionShape) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_mixinmethod
    def put_Scale(self: win32more.Microsoft.UI.Composition.ICompositionShape, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_mixinmethod
    def get_TransformMatrix(self: win32more.Microsoft.UI.Composition.ICompositionShape) -> win32more.Windows.Foundation.Numerics.Matrix3x2: ...
    @winrt_mixinmethod
    def put_TransformMatrix(self: win32more.Microsoft.UI.Composition.ICompositionShape, value: win32more.Windows.Foundation.Numerics.Matrix3x2) -> Void: ...
    @winrt_mixinmethod
    def put_CenterPoint(self: win32more.Microsoft.UI.Composition.ICompositionShape, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_mixinmethod
    def get_Offset(self: win32more.Microsoft.UI.Composition.ICompositionShape) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    CenterPoint = property(get_CenterPoint, put_CenterPoint)
    Offset = property(get_Offset, put_Offset)
    RotationAngle = property(get_RotationAngle, put_RotationAngle)
    RotationAngleInDegrees = property(get_RotationAngleInDegrees, put_RotationAngleInDegrees)
    Scale = property(get_Scale, put_Scale)
    TransformMatrix = property(get_TransformMatrix, put_TransformMatrix)
class CompositionShapeCollection(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionObject
    implements: Tuple[SequenceProtocol[win32more.Microsoft.UI.Composition.CompositionShape]]
    default_interface: win32more.Windows.Foundation.Collections.IVector[win32more.Microsoft.UI.Composition.CompositionShape]
    _classid_ = 'Microsoft.UI.Composition.CompositionShapeCollection'
    @winrt_mixinmethod
    def IndexOf(self: win32more.Windows.Foundation.Collections.IVector[win32more.Microsoft.UI.Composition.CompositionShape], value: win32more.Microsoft.UI.Composition.CompositionShape, index: POINTER(UInt32)) -> Boolean: ...
    @winrt_mixinmethod
    def GetAt(self: win32more.Windows.Foundation.Collections.IVector[win32more.Microsoft.UI.Composition.CompositionShape], index: UInt32) -> win32more.Microsoft.UI.Composition.CompositionShape: ...
    @winrt_mixinmethod
    def RemoveAtEnd(self: win32more.Windows.Foundation.Collections.IVector[win32more.Microsoft.UI.Composition.CompositionShape]) -> Void: ...
    @winrt_mixinmethod
    def Clear(self: win32more.Windows.Foundation.Collections.IVector[win32more.Microsoft.UI.Composition.CompositionShape]) -> Void: ...
    @winrt_mixinmethod
    def GetMany(self: win32more.Windows.Foundation.Collections.IVector[win32more.Microsoft.UI.Composition.CompositionShape], startIndex: UInt32, items: FillArray[win32more.Microsoft.UI.Composition.CompositionShape]) -> UInt32: ...
    @winrt_mixinmethod
    def ReplaceAll(self: win32more.Windows.Foundation.Collections.IVector[win32more.Microsoft.UI.Composition.CompositionShape], items: PassArray[win32more.Microsoft.UI.Composition.CompositionShape]) -> Void: ...
    @winrt_mixinmethod
    def First(self: win32more.Windows.Foundation.Collections.IIterable[win32more.Microsoft.UI.Composition.CompositionShape]) -> win32more.Windows.Foundation.Collections.IIterator[win32more.Microsoft.UI.Composition.CompositionShape]: ...
    @winrt_mixinmethod
    def Append(self: win32more.Windows.Foundation.Collections.IVector[win32more.Microsoft.UI.Composition.CompositionShape], value: win32more.Microsoft.UI.Composition.CompositionShape) -> Void: ...
    @winrt_mixinmethod
    def RemoveAt(self: win32more.Windows.Foundation.Collections.IVector[win32more.Microsoft.UI.Composition.CompositionShape], index: UInt32) -> Void: ...
    @winrt_mixinmethod
    def get_Size(self: win32more.Windows.Foundation.Collections.IVector[win32more.Microsoft.UI.Composition.CompositionShape]) -> UInt32: ...
    @winrt_mixinmethod
    def SetAt(self: win32more.Windows.Foundation.Collections.IVector[win32more.Microsoft.UI.Composition.CompositionShape], index: UInt32, value: win32more.Microsoft.UI.Composition.CompositionShape) -> Void: ...
    @winrt_mixinmethod
    def GetView(self: win32more.Windows.Foundation.Collections.IVector[win32more.Microsoft.UI.Composition.CompositionShape]) -> win32more.Windows.Foundation.Collections.IVectorView[win32more.Microsoft.UI.Composition.CompositionShape]: ...
    @winrt_mixinmethod
    def InsertAt(self: win32more.Windows.Foundation.Collections.IVector[win32more.Microsoft.UI.Composition.CompositionShape], index: UInt32, value: win32more.Microsoft.UI.Composition.CompositionShape) -> Void: ...
    Size = property(get_Size, None)
class CompositionSpriteShape(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionShape
    default_interface: win32more.Microsoft.UI.Composition.ICompositionSpriteShape
    _classid_ = 'Microsoft.UI.Composition.CompositionSpriteShape'
    @winrt_mixinmethod
    def get_StrokeDashOffset(self: win32more.Microsoft.UI.Composition.ICompositionSpriteShape) -> Single: ...
    @winrt_mixinmethod
    def put_StrokeBrush(self: win32more.Microsoft.UI.Composition.ICompositionSpriteShape, value: win32more.Microsoft.UI.Composition.CompositionBrush) -> Void: ...
    @winrt_mixinmethod
    def get_StrokeDashArray(self: win32more.Microsoft.UI.Composition.ICompositionSpriteShape) -> win32more.Microsoft.UI.Composition.CompositionStrokeDashArray: ...
    @winrt_mixinmethod
    def get_StrokeDashCap(self: win32more.Microsoft.UI.Composition.ICompositionSpriteShape) -> win32more.Microsoft.UI.Composition.CompositionStrokeCap: ...
    @winrt_mixinmethod
    def get_FillBrush(self: win32more.Microsoft.UI.Composition.ICompositionSpriteShape) -> win32more.Microsoft.UI.Composition.CompositionBrush: ...
    @winrt_mixinmethod
    def put_StrokeDashCap(self: win32more.Microsoft.UI.Composition.ICompositionSpriteShape, value: win32more.Microsoft.UI.Composition.CompositionStrokeCap) -> Void: ...
    @winrt_mixinmethod
    def put_StrokeDashOffset(self: win32more.Microsoft.UI.Composition.ICompositionSpriteShape, value: Single) -> Void: ...
    @winrt_mixinmethod
    def get_StrokeEndCap(self: win32more.Microsoft.UI.Composition.ICompositionSpriteShape) -> win32more.Microsoft.UI.Composition.CompositionStrokeCap: ...
    @winrt_mixinmethod
    def put_StrokeEndCap(self: win32more.Microsoft.UI.Composition.ICompositionSpriteShape, value: win32more.Microsoft.UI.Composition.CompositionStrokeCap) -> Void: ...
    @winrt_mixinmethod
    def get_StrokeLineJoin(self: win32more.Microsoft.UI.Composition.ICompositionSpriteShape) -> win32more.Microsoft.UI.Composition.CompositionStrokeLineJoin: ...
    @winrt_mixinmethod
    def put_StrokeLineJoin(self: win32more.Microsoft.UI.Composition.ICompositionSpriteShape, value: win32more.Microsoft.UI.Composition.CompositionStrokeLineJoin) -> Void: ...
    @winrt_mixinmethod
    def get_StrokeMiterLimit(self: win32more.Microsoft.UI.Composition.ICompositionSpriteShape) -> Single: ...
    @winrt_mixinmethod
    def put_StrokeMiterLimit(self: win32more.Microsoft.UI.Composition.ICompositionSpriteShape, value: Single) -> Void: ...
    @winrt_mixinmethod
    def get_StrokeStartCap(self: win32more.Microsoft.UI.Composition.ICompositionSpriteShape) -> win32more.Microsoft.UI.Composition.CompositionStrokeCap: ...
    @winrt_mixinmethod
    def put_StrokeStartCap(self: win32more.Microsoft.UI.Composition.ICompositionSpriteShape, value: win32more.Microsoft.UI.Composition.CompositionStrokeCap) -> Void: ...
    @winrt_mixinmethod
    def get_StrokeThickness(self: win32more.Microsoft.UI.Composition.ICompositionSpriteShape) -> Single: ...
    @winrt_mixinmethod
    def put_StrokeThickness(self: win32more.Microsoft.UI.Composition.ICompositionSpriteShape, value: Single) -> Void: ...
    @winrt_mixinmethod
    def put_FillBrush(self: win32more.Microsoft.UI.Composition.ICompositionSpriteShape, value: win32more.Microsoft.UI.Composition.CompositionBrush) -> Void: ...
    @winrt_mixinmethod
    def get_Geometry(self: win32more.Microsoft.UI.Composition.ICompositionSpriteShape) -> win32more.Microsoft.UI.Composition.CompositionGeometry: ...
    @winrt_mixinmethod
    def put_Geometry(self: win32more.Microsoft.UI.Composition.ICompositionSpriteShape, value: win32more.Microsoft.UI.Composition.CompositionGeometry) -> Void: ...
    @winrt_mixinmethod
    def get_IsStrokeNonScaling(self: win32more.Microsoft.UI.Composition.ICompositionSpriteShape) -> Boolean: ...
    @winrt_mixinmethod
    def put_IsStrokeNonScaling(self: win32more.Microsoft.UI.Composition.ICompositionSpriteShape, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def get_StrokeBrush(self: win32more.Microsoft.UI.Composition.ICompositionSpriteShape) -> win32more.Microsoft.UI.Composition.CompositionBrush: ...
    FillBrush = property(get_FillBrush, put_FillBrush)
    Geometry = property(get_Geometry, put_Geometry)
    IsStrokeNonScaling = property(get_IsStrokeNonScaling, put_IsStrokeNonScaling)
    StrokeBrush = property(get_StrokeBrush, put_StrokeBrush)
    StrokeDashArray = property(get_StrokeDashArray, None)
    StrokeDashCap = property(get_StrokeDashCap, put_StrokeDashCap)
    StrokeDashOffset = property(get_StrokeDashOffset, put_StrokeDashOffset)
    StrokeEndCap = property(get_StrokeEndCap, put_StrokeEndCap)
    StrokeLineJoin = property(get_StrokeLineJoin, put_StrokeLineJoin)
    StrokeMiterLimit = property(get_StrokeMiterLimit, put_StrokeMiterLimit)
    StrokeStartCap = property(get_StrokeStartCap, put_StrokeStartCap)
    StrokeThickness = property(get_StrokeThickness, put_StrokeThickness)
class CompositionStretch(Enum, Int32):
    None_ = 0
    Fill = 1
    Uniform = 2
    UniformToFill = 3
class CompositionStrokeCap(Enum, Int32):
    Flat = 0
    Square = 1
    Round = 2
    Triangle = 3
class CompositionStrokeDashArray(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionObject
    implements: Tuple[SequenceProtocol[Single]]
    default_interface: win32more.Windows.Foundation.Collections.IVector[Single]
    _classid_ = 'Microsoft.UI.Composition.CompositionStrokeDashArray'
    @winrt_mixinmethod
    def Clear(self: win32more.Windows.Foundation.Collections.IVector[Single]) -> Void: ...
    @winrt_mixinmethod
    def RemoveAt(self: win32more.Windows.Foundation.Collections.IVector[Single], index: UInt32) -> Void: ...
    @winrt_mixinmethod
    def Append(self: win32more.Windows.Foundation.Collections.IVector[Single], value: Single) -> Void: ...
    @winrt_mixinmethod
    def RemoveAtEnd(self: win32more.Windows.Foundation.Collections.IVector[Single]) -> Void: ...
    @winrt_mixinmethod
    def GetAt(self: win32more.Windows.Foundation.Collections.IVector[Single], index: UInt32) -> Single: ...
    @winrt_mixinmethod
    def GetMany(self: win32more.Windows.Foundation.Collections.IVector[Single], startIndex: UInt32, items: FillArray[Single]) -> UInt32: ...
    @winrt_mixinmethod
    def ReplaceAll(self: win32more.Windows.Foundation.Collections.IVector[Single], items: PassArray[Single]) -> Void: ...
    @winrt_mixinmethod
    def First(self: win32more.Windows.Foundation.Collections.IIterable[Single]) -> win32more.Windows.Foundation.Collections.IIterator[Single]: ...
    @winrt_mixinmethod
    def get_Size(self: win32more.Windows.Foundation.Collections.IVector[Single]) -> UInt32: ...
    @winrt_mixinmethod
    def GetView(self: win32more.Windows.Foundation.Collections.IVector[Single]) -> win32more.Windows.Foundation.Collections.IVectorView[Single]: ...
    @winrt_mixinmethod
    def IndexOf(self: win32more.Windows.Foundation.Collections.IVector[Single], value: Single, index: POINTER(UInt32)) -> Boolean: ...
    @winrt_mixinmethod
    def SetAt(self: win32more.Windows.Foundation.Collections.IVector[Single], index: UInt32, value: Single) -> Void: ...
    @winrt_mixinmethod
    def InsertAt(self: win32more.Windows.Foundation.Collections.IVector[Single], index: UInt32, value: Single) -> Void: ...
    Size = property(get_Size, None)
class CompositionStrokeLineJoin(Enum, Int32):
    Miter = 0
    Bevel = 1
    Round = 2
    MiterOrBevel = 3
class CompositionSurfaceBrush(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionBrush
    default_interface: win32more.Microsoft.UI.Composition.ICompositionSurfaceBrush
    _classid_ = 'Microsoft.UI.Composition.CompositionSurfaceBrush'
    @winrt_mixinmethod
    def put_RotationAngle(self: win32more.Microsoft.UI.Composition.ICompositionSurfaceBrush2, value: Single) -> Void: ...
    @winrt_mixinmethod
    def get_Scale(self: win32more.Microsoft.UI.Composition.ICompositionSurfaceBrush2) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_mixinmethod
    def put_BitmapInterpolationMode(self: win32more.Microsoft.UI.Composition.ICompositionSurfaceBrush, value: win32more.Microsoft.UI.Composition.CompositionBitmapInterpolationMode) -> Void: ...
    @winrt_mixinmethod
    def get_HorizontalAlignmentRatio(self: win32more.Microsoft.UI.Composition.ICompositionSurfaceBrush) -> Single: ...
    @winrt_mixinmethod
    def put_HorizontalAlignmentRatio(self: win32more.Microsoft.UI.Composition.ICompositionSurfaceBrush, value: Single) -> Void: ...
    @winrt_mixinmethod
    def get_Stretch(self: win32more.Microsoft.UI.Composition.ICompositionSurfaceBrush) -> win32more.Microsoft.UI.Composition.CompositionStretch: ...
    @winrt_mixinmethod
    def get_BitmapInterpolationMode(self: win32more.Microsoft.UI.Composition.ICompositionSurfaceBrush) -> win32more.Microsoft.UI.Composition.CompositionBitmapInterpolationMode: ...
    @winrt_mixinmethod
    def get_Surface(self: win32more.Microsoft.UI.Composition.ICompositionSurfaceBrush) -> win32more.Microsoft.UI.Composition.ICompositionSurface: ...
    @winrt_mixinmethod
    def put_Surface(self: win32more.Microsoft.UI.Composition.ICompositionSurfaceBrush, value: win32more.Microsoft.UI.Composition.ICompositionSurface) -> Void: ...
    @winrt_mixinmethod
    def get_VerticalAlignmentRatio(self: win32more.Microsoft.UI.Composition.ICompositionSurfaceBrush) -> Single: ...
    @winrt_mixinmethod
    def put_VerticalAlignmentRatio(self: win32more.Microsoft.UI.Composition.ICompositionSurfaceBrush, value: Single) -> Void: ...
    @winrt_mixinmethod
    def get_AnchorPoint(self: win32more.Microsoft.UI.Composition.ICompositionSurfaceBrush2) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_mixinmethod
    def put_AnchorPoint(self: win32more.Microsoft.UI.Composition.ICompositionSurfaceBrush2, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_mixinmethod
    def get_CenterPoint(self: win32more.Microsoft.UI.Composition.ICompositionSurfaceBrush2) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_mixinmethod
    def put_CenterPoint(self: win32more.Microsoft.UI.Composition.ICompositionSurfaceBrush2, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_mixinmethod
    def get_Offset(self: win32more.Microsoft.UI.Composition.ICompositionSurfaceBrush2) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_mixinmethod
    def put_Offset(self: win32more.Microsoft.UI.Composition.ICompositionSurfaceBrush2, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_mixinmethod
    def get_RotationAngle(self: win32more.Microsoft.UI.Composition.ICompositionSurfaceBrush2) -> Single: ...
    @winrt_mixinmethod
    def put_Stretch(self: win32more.Microsoft.UI.Composition.ICompositionSurfaceBrush, value: win32more.Microsoft.UI.Composition.CompositionStretch) -> Void: ...
    @winrt_mixinmethod
    def get_RotationAngleInDegrees(self: win32more.Microsoft.UI.Composition.ICompositionSurfaceBrush2) -> Single: ...
    @winrt_mixinmethod
    def put_RotationAngleInDegrees(self: win32more.Microsoft.UI.Composition.ICompositionSurfaceBrush2, value: Single) -> Void: ...
    @winrt_mixinmethod
    def put_Scale(self: win32more.Microsoft.UI.Composition.ICompositionSurfaceBrush2, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_mixinmethod
    def get_TransformMatrix(self: win32more.Microsoft.UI.Composition.ICompositionSurfaceBrush2) -> win32more.Windows.Foundation.Numerics.Matrix3x2: ...
    @winrt_mixinmethod
    def put_TransformMatrix(self: win32more.Microsoft.UI.Composition.ICompositionSurfaceBrush2, value: win32more.Windows.Foundation.Numerics.Matrix3x2) -> Void: ...
    @winrt_mixinmethod
    def get_SnapToPixels(self: win32more.Microsoft.UI.Composition.ICompositionSurfaceBrush3) -> Boolean: ...
    @winrt_mixinmethod
    def put_SnapToPixels(self: win32more.Microsoft.UI.Composition.ICompositionSurfaceBrush3, value: Boolean) -> Void: ...
    AnchorPoint = property(get_AnchorPoint, put_AnchorPoint)
    BitmapInterpolationMode = property(get_BitmapInterpolationMode, put_BitmapInterpolationMode)
    CenterPoint = property(get_CenterPoint, put_CenterPoint)
    HorizontalAlignmentRatio = property(get_HorizontalAlignmentRatio, put_HorizontalAlignmentRatio)
    Offset = property(get_Offset, put_Offset)
    RotationAngle = property(get_RotationAngle, put_RotationAngle)
    RotationAngleInDegrees = property(get_RotationAngleInDegrees, put_RotationAngleInDegrees)
    Scale = property(get_Scale, put_Scale)
    SnapToPixels = property(get_SnapToPixels, put_SnapToPixels)
    Stretch = property(get_Stretch, put_Stretch)
    Surface = property(get_Surface, put_Surface)
    TransformMatrix = property(get_TransformMatrix, put_TransformMatrix)
    VerticalAlignmentRatio = property(get_VerticalAlignmentRatio, put_VerticalAlignmentRatio)
class CompositionTransform(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionObject
    default_interface: win32more.Microsoft.UI.Composition.ICompositionTransform
    _classid_ = 'Microsoft.UI.Composition.CompositionTransform'
class CompositionViewBox(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionObject
    default_interface: win32more.Microsoft.UI.Composition.ICompositionViewBox
    _classid_ = 'Microsoft.UI.Composition.CompositionViewBox'
    @winrt_mixinmethod
    def get_VerticalAlignmentRatio(self: win32more.Microsoft.UI.Composition.ICompositionViewBox) -> Single: ...
    @winrt_mixinmethod
    def put_Stretch(self: win32more.Microsoft.UI.Composition.ICompositionViewBox, value: win32more.Microsoft.UI.Composition.CompositionStretch) -> Void: ...
    @winrt_mixinmethod
    def put_HorizontalAlignmentRatio(self: win32more.Microsoft.UI.Composition.ICompositionViewBox, value: Single) -> Void: ...
    @winrt_mixinmethod
    def get_Offset(self: win32more.Microsoft.UI.Composition.ICompositionViewBox) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_mixinmethod
    def put_Offset(self: win32more.Microsoft.UI.Composition.ICompositionViewBox, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_mixinmethod
    def get_Size(self: win32more.Microsoft.UI.Composition.ICompositionViewBox) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_mixinmethod
    def put_Size(self: win32more.Microsoft.UI.Composition.ICompositionViewBox, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_mixinmethod
    def get_Stretch(self: win32more.Microsoft.UI.Composition.ICompositionViewBox) -> win32more.Microsoft.UI.Composition.CompositionStretch: ...
    @winrt_mixinmethod
    def get_HorizontalAlignmentRatio(self: win32more.Microsoft.UI.Composition.ICompositionViewBox) -> Single: ...
    @winrt_mixinmethod
    def put_VerticalAlignmentRatio(self: win32more.Microsoft.UI.Composition.ICompositionViewBox, value: Single) -> Void: ...
    HorizontalAlignmentRatio = property(get_HorizontalAlignmentRatio, put_HorizontalAlignmentRatio)
    Offset = property(get_Offset, put_Offset)
    Size = property(get_Size, put_Size)
    Stretch = property(get_Stretch, put_Stretch)
    VerticalAlignmentRatio = property(get_VerticalAlignmentRatio, put_VerticalAlignmentRatio)
class CompositionVirtualDrawingSurface(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionDrawingSurface
    default_interface: win32more.Microsoft.UI.Composition.ICompositionVirtualDrawingSurface
    _classid_ = 'Microsoft.UI.Composition.CompositionVirtualDrawingSurface'
    @winrt_mixinmethod
    def Trim(self: win32more.Microsoft.UI.Composition.ICompositionVirtualDrawingSurface, rects: PassArray[win32more.Windows.Graphics.RectInt32]) -> Void: ...
class CompositionVisualSurface(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionObject
    default_interface: win32more.Microsoft.UI.Composition.ICompositionVisualSurface
    _classid_ = 'Microsoft.UI.Composition.CompositionVisualSurface'
    @winrt_mixinmethod
    def put_SourceSize(self: win32more.Microsoft.UI.Composition.ICompositionVisualSurface, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_mixinmethod
    def get_SourceVisual(self: win32more.Microsoft.UI.Composition.ICompositionVisualSurface) -> win32more.Microsoft.UI.Composition.Visual: ...
    @winrt_mixinmethod
    def put_SourceVisual(self: win32more.Microsoft.UI.Composition.ICompositionVisualSurface, value: win32more.Microsoft.UI.Composition.Visual) -> Void: ...
    @winrt_mixinmethod
    def get_SourceOffset(self: win32more.Microsoft.UI.Composition.ICompositionVisualSurface) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_mixinmethod
    def put_SourceOffset(self: win32more.Microsoft.UI.Composition.ICompositionVisualSurface, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_mixinmethod
    def get_SourceSize(self: win32more.Microsoft.UI.Composition.ICompositionVisualSurface) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    SourceOffset = property(get_SourceOffset, put_SourceOffset)
    SourceSize = property(get_SourceSize, put_SourceSize)
    SourceVisual = property(get_SourceVisual, put_SourceVisual)
class _Compositor_Meta_(ComPtr.__class__):
    pass
class Compositor(ComPtr, metaclass=_Compositor_Meta_):
    extends: IInspectable
    implements: Tuple[ContextManagerProtocol]
    default_interface: win32more.Microsoft.UI.Composition.ICompositor
    _classid_ = 'Microsoft.UI.Composition.Compositor'
    def __init__(self, *args, **kwargs):
        if kwargs:
            super().__init__(**kwargs)
        elif len(args) == 0:
            super().__init__(move=win32more.Microsoft.UI.Composition.Compositor.CreateInstance(*args))
        else:
            raise ValueError('no matched constructor')
    @winrt_activatemethod
    def CreateInstance(cls) -> win32more.Microsoft.UI.Composition.Compositor: ...
    @winrt_mixinmethod
    def CreateGeometricClip(self: win32more.Microsoft.UI.Composition.ICompositor6) -> win32more.Microsoft.UI.Composition.CompositionGeometricClip: ...
    @winrt_mixinmethod
    def CreateColorKeyFrameAnimation(self: win32more.Microsoft.UI.Composition.ICompositor) -> win32more.Microsoft.UI.Composition.ColorKeyFrameAnimation: ...
    @winrt_mixinmethod
    def put_Comment(self: win32more.Microsoft.UI.Composition.ICompositor5, value: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def get_GlobalPlaybackRate(self: win32more.Microsoft.UI.Composition.ICompositor5) -> Single: ...
    @winrt_mixinmethod
    def put_GlobalPlaybackRate(self: win32more.Microsoft.UI.Composition.ICompositor5, value: Single) -> Void: ...
    @winrt_mixinmethod
    def CreateBounceScalarAnimation(self: win32more.Microsoft.UI.Composition.ICompositor5) -> win32more.Microsoft.UI.Composition.BounceScalarNaturalMotionAnimation: ...
    @winrt_mixinmethod
    def CreateBounceVector2Animation(self: win32more.Microsoft.UI.Composition.ICompositor5) -> win32more.Microsoft.UI.Composition.BounceVector2NaturalMotionAnimation: ...
    @winrt_mixinmethod
    def CreateBounceVector3Animation(self: win32more.Microsoft.UI.Composition.ICompositor5) -> win32more.Microsoft.UI.Composition.BounceVector3NaturalMotionAnimation: ...
    @winrt_mixinmethod
    def CreateContainerShape(self: win32more.Microsoft.UI.Composition.ICompositor5) -> win32more.Microsoft.UI.Composition.CompositionContainerShape: ...
    @winrt_mixinmethod
    def CreateEllipseGeometry(self: win32more.Microsoft.UI.Composition.ICompositor5) -> win32more.Microsoft.UI.Composition.CompositionEllipseGeometry: ...
    @winrt_mixinmethod
    def CreateLineGeometry(self: win32more.Microsoft.UI.Composition.ICompositor5) -> win32more.Microsoft.UI.Composition.CompositionLineGeometry: ...
    @winrt_mixinmethod
    def CreatePathGeometry(self: win32more.Microsoft.UI.Composition.ICompositor5) -> win32more.Microsoft.UI.Composition.CompositionPathGeometry: ...
    @winrt_mixinmethod
    def CreatePathGeometryWithPath(self: win32more.Microsoft.UI.Composition.ICompositor5, path: win32more.Microsoft.UI.Composition.CompositionPath) -> win32more.Microsoft.UI.Composition.CompositionPathGeometry: ...
    @winrt_mixinmethod
    def CreatePathKeyFrameAnimation(self: win32more.Microsoft.UI.Composition.ICompositor5) -> win32more.Microsoft.UI.Composition.PathKeyFrameAnimation: ...
    @winrt_mixinmethod
    def CreateRectangleGeometry(self: win32more.Microsoft.UI.Composition.ICompositor5) -> win32more.Microsoft.UI.Composition.CompositionRectangleGeometry: ...
    @winrt_mixinmethod
    def CreateRoundedRectangleGeometry(self: win32more.Microsoft.UI.Composition.ICompositor5) -> win32more.Microsoft.UI.Composition.CompositionRoundedRectangleGeometry: ...
    @winrt_mixinmethod
    def CreateShapeVisual(self: win32more.Microsoft.UI.Composition.ICompositor5) -> win32more.Microsoft.UI.Composition.ShapeVisual: ...
    @winrt_mixinmethod
    def CreateSpriteShape(self: win32more.Microsoft.UI.Composition.ICompositor5) -> win32more.Microsoft.UI.Composition.CompositionSpriteShape: ...
    @winrt_mixinmethod
    def CreateSpriteShapeWithGeometry(self: win32more.Microsoft.UI.Composition.ICompositor5, geometry: win32more.Microsoft.UI.Composition.CompositionGeometry) -> win32more.Microsoft.UI.Composition.CompositionSpriteShape: ...
    @winrt_mixinmethod
    def CreateViewBox(self: win32more.Microsoft.UI.Composition.ICompositor5) -> win32more.Microsoft.UI.Composition.CompositionViewBox: ...
    @winrt_mixinmethod
    def RequestCommitAsync(self: win32more.Microsoft.UI.Composition.ICompositor5) -> win32more.Windows.Foundation.IAsyncAction: ...
    @winrt_mixinmethod
    def CreateLinearEasingFunction(self: win32more.Microsoft.UI.Composition.ICompositor) -> win32more.Microsoft.UI.Composition.LinearEasingFunction: ...
    @winrt_mixinmethod
    def CreateSpringVector3Animation(self: win32more.Microsoft.UI.Composition.ICompositor4) -> win32more.Microsoft.UI.Composition.SpringVector3NaturalMotionAnimation: ...
    @winrt_mixinmethod
    def CreateRedirectVisual(self: win32more.Microsoft.UI.Composition.ICompositor6) -> win32more.Microsoft.UI.Composition.RedirectVisual: ...
    @winrt_mixinmethod
    def CreateRedirectVisualWithSourceVisual(self: win32more.Microsoft.UI.Composition.ICompositor6, source: win32more.Microsoft.UI.Composition.Visual) -> win32more.Microsoft.UI.Composition.RedirectVisual: ...
    @winrt_mixinmethod
    def CreateBooleanKeyFrameAnimation(self: win32more.Microsoft.UI.Composition.ICompositor6) -> win32more.Microsoft.UI.Composition.BooleanKeyFrameAnimation: ...
    @winrt_mixinmethod
    def get_DispatcherQueue(self: win32more.Microsoft.UI.Composition.ICompositor7) -> win32more.Microsoft.UI.Dispatching.DispatcherQueue: ...
    @winrt_mixinmethod
    def CreateAnimationPropertyInfo(self: win32more.Microsoft.UI.Composition.ICompositor7) -> win32more.Microsoft.UI.Composition.AnimationPropertyInfo: ...
    @winrt_mixinmethod
    def CreateRectangleClip(self: win32more.Microsoft.UI.Composition.ICompositor7) -> win32more.Microsoft.UI.Composition.RectangleClip: ...
    @winrt_mixinmethod
    def CreateRectangleClipWithSides(self: win32more.Microsoft.UI.Composition.ICompositor7, left: Single, top: Single, right: Single, bottom: Single) -> win32more.Microsoft.UI.Composition.RectangleClip: ...
    @winrt_mixinmethod
    def CreateRectangleClipWithSidesAndRadius(self: win32more.Microsoft.UI.Composition.ICompositor7, left: Single, top: Single, right: Single, bottom: Single, topLeftRadius: win32more.Windows.Foundation.Numerics.Vector2, topRightRadius: win32more.Windows.Foundation.Numerics.Vector2, bottomRightRadius: win32more.Windows.Foundation.Numerics.Vector2, bottomLeftRadius: win32more.Windows.Foundation.Numerics.Vector2) -> win32more.Microsoft.UI.Composition.RectangleClip: ...
    @winrt_mixinmethod
    def CreateProjectedShadowCaster(self: win32more.Microsoft.UI.Composition.ICompositorWithProjectedShadow) -> win32more.Microsoft.UI.Composition.CompositionProjectedShadowCaster: ...
    @winrt_mixinmethod
    def CreateProjectedShadow(self: win32more.Microsoft.UI.Composition.ICompositorWithProjectedShadow) -> win32more.Microsoft.UI.Composition.CompositionProjectedShadow: ...
    @winrt_mixinmethod
    def CreateProjectedShadowReceiver(self: win32more.Microsoft.UI.Composition.ICompositorWithProjectedShadow) -> win32more.Microsoft.UI.Composition.CompositionProjectedShadowReceiver: ...
    @winrt_mixinmethod
    def CreateRadialGradientBrush(self: win32more.Microsoft.UI.Composition.ICompositorWithRadialGradient) -> win32more.Microsoft.UI.Composition.CompositionRadialGradientBrush: ...
    @winrt_mixinmethod
    def CreateVisualSurface(self: win32more.Microsoft.UI.Composition.ICompositorWithVisualSurface) -> win32more.Microsoft.UI.Composition.CompositionVisualSurface: ...
    @winrt_mixinmethod
    def CreateAnimationController(self: win32more.Microsoft.UI.Composition.ICompositor8) -> win32more.Microsoft.UI.Composition.AnimationController: ...
    @winrt_mixinmethod
    def Close(self: win32more.Windows.Foundation.IClosable) -> Void: ...
    @winrt_mixinmethod
    def get_Comment(self: win32more.Microsoft.UI.Composition.ICompositor5) -> WinRT_String: ...
    @winrt_mixinmethod
    def CreateColorBrush(self: win32more.Microsoft.UI.Composition.ICompositor) -> win32more.Microsoft.UI.Composition.CompositionColorBrush: ...
    @winrt_mixinmethod
    def CreateColorBrushWithColor(self: win32more.Microsoft.UI.Composition.ICompositor, color: win32more.Windows.UI.Color) -> win32more.Microsoft.UI.Composition.CompositionColorBrush: ...
    @winrt_mixinmethod
    def CreateContainerVisual(self: win32more.Microsoft.UI.Composition.ICompositor) -> win32more.Microsoft.UI.Composition.ContainerVisual: ...
    @winrt_mixinmethod
    def CreateCubicBezierEasingFunction(self: win32more.Microsoft.UI.Composition.ICompositor, controlPoint1: win32more.Windows.Foundation.Numerics.Vector2, controlPoint2: win32more.Windows.Foundation.Numerics.Vector2) -> win32more.Microsoft.UI.Composition.CubicBezierEasingFunction: ...
    @winrt_mixinmethod
    def CreateEffectFactory(self: win32more.Microsoft.UI.Composition.ICompositor, graphicsEffect: win32more.Windows.Graphics.Effects.IGraphicsEffect) -> win32more.Microsoft.UI.Composition.CompositionEffectFactory: ...
    @winrt_mixinmethod
    def CreateEffectFactoryWithProperties(self: win32more.Microsoft.UI.Composition.ICompositor, graphicsEffect: win32more.Windows.Graphics.Effects.IGraphicsEffect, animatableProperties: win32more.Windows.Foundation.Collections.IIterable[WinRT_String]) -> win32more.Microsoft.UI.Composition.CompositionEffectFactory: ...
    @winrt_mixinmethod
    def CreateExpressionAnimation(self: win32more.Microsoft.UI.Composition.ICompositor) -> win32more.Microsoft.UI.Composition.ExpressionAnimation: ...
    @winrt_mixinmethod
    def CreateExpressionAnimationWithExpression(self: win32more.Microsoft.UI.Composition.ICompositor, expression: WinRT_String) -> win32more.Microsoft.UI.Composition.ExpressionAnimation: ...
    @winrt_mixinmethod
    def CreateInsetClip(self: win32more.Microsoft.UI.Composition.ICompositor) -> win32more.Microsoft.UI.Composition.InsetClip: ...
    @winrt_mixinmethod
    def CreateInsetClipWithInsets(self: win32more.Microsoft.UI.Composition.ICompositor, leftInset: Single, topInset: Single, rightInset: Single, bottomInset: Single) -> win32more.Microsoft.UI.Composition.InsetClip: ...
    @winrt_mixinmethod
    def CreateGeometricClipWithGeometry(self: win32more.Microsoft.UI.Composition.ICompositor6, geometry: win32more.Microsoft.UI.Composition.CompositionGeometry) -> win32more.Microsoft.UI.Composition.CompositionGeometricClip: ...
    @winrt_mixinmethod
    def CreatePropertySet(self: win32more.Microsoft.UI.Composition.ICompositor) -> win32more.Microsoft.UI.Composition.CompositionPropertySet: ...
    @winrt_mixinmethod
    def CreateQuaternionKeyFrameAnimation(self: win32more.Microsoft.UI.Composition.ICompositor) -> win32more.Microsoft.UI.Composition.QuaternionKeyFrameAnimation: ...
    @winrt_mixinmethod
    def CreateScalarKeyFrameAnimation(self: win32more.Microsoft.UI.Composition.ICompositor) -> win32more.Microsoft.UI.Composition.ScalarKeyFrameAnimation: ...
    @winrt_mixinmethod
    def CreateScopedBatch(self: win32more.Microsoft.UI.Composition.ICompositor, batchType: win32more.Microsoft.UI.Composition.CompositionBatchTypes) -> win32more.Microsoft.UI.Composition.CompositionScopedBatch: ...
    @winrt_mixinmethod
    def CreateSpriteVisual(self: win32more.Microsoft.UI.Composition.ICompositor) -> win32more.Microsoft.UI.Composition.SpriteVisual: ...
    @winrt_mixinmethod
    def CreateSurfaceBrush(self: win32more.Microsoft.UI.Composition.ICompositor) -> win32more.Microsoft.UI.Composition.CompositionSurfaceBrush: ...
    @winrt_mixinmethod
    def CreateSurfaceBrushWithSurface(self: win32more.Microsoft.UI.Composition.ICompositor, surface: win32more.Microsoft.UI.Composition.ICompositionSurface) -> win32more.Microsoft.UI.Composition.CompositionSurfaceBrush: ...
    @winrt_mixinmethod
    def CreateVector2KeyFrameAnimation(self: win32more.Microsoft.UI.Composition.ICompositor) -> win32more.Microsoft.UI.Composition.Vector2KeyFrameAnimation: ...
    @winrt_mixinmethod
    def CreateVector3KeyFrameAnimation(self: win32more.Microsoft.UI.Composition.ICompositor) -> win32more.Microsoft.UI.Composition.Vector3KeyFrameAnimation: ...
    @winrt_mixinmethod
    def CreateVector4KeyFrameAnimation(self: win32more.Microsoft.UI.Composition.ICompositor) -> win32more.Microsoft.UI.Composition.Vector4KeyFrameAnimation: ...
    @winrt_mixinmethod
    def GetCommitBatch(self: win32more.Microsoft.UI.Composition.ICompositor, batchType: win32more.Microsoft.UI.Composition.CompositionBatchTypes) -> win32more.Microsoft.UI.Composition.CompositionCommitBatch: ...
    @winrt_mixinmethod
    def CreateAmbientLight(self: win32more.Microsoft.UI.Composition.ICompositor2) -> win32more.Microsoft.UI.Composition.AmbientLight: ...
    @winrt_mixinmethod
    def CreateAnimationGroup(self: win32more.Microsoft.UI.Composition.ICompositor2) -> win32more.Microsoft.UI.Composition.CompositionAnimationGroup: ...
    @winrt_mixinmethod
    def CreateBackdropBrush(self: win32more.Microsoft.UI.Composition.ICompositor2) -> win32more.Microsoft.UI.Composition.CompositionBackdropBrush: ...
    @winrt_mixinmethod
    def CreateDistantLight(self: win32more.Microsoft.UI.Composition.ICompositor2) -> win32more.Microsoft.UI.Composition.DistantLight: ...
    @winrt_mixinmethod
    def CreateDropShadow(self: win32more.Microsoft.UI.Composition.ICompositor2) -> win32more.Microsoft.UI.Composition.DropShadow: ...
    @winrt_mixinmethod
    def CreateImplicitAnimationCollection(self: win32more.Microsoft.UI.Composition.ICompositor2) -> win32more.Microsoft.UI.Composition.ImplicitAnimationCollection: ...
    @winrt_mixinmethod
    def CreateLayerVisual(self: win32more.Microsoft.UI.Composition.ICompositor2) -> win32more.Microsoft.UI.Composition.LayerVisual: ...
    @winrt_mixinmethod
    def CreateMaskBrush(self: win32more.Microsoft.UI.Composition.ICompositor2) -> win32more.Microsoft.UI.Composition.CompositionMaskBrush: ...
    @winrt_mixinmethod
    def CreateNineGridBrush(self: win32more.Microsoft.UI.Composition.ICompositor2) -> win32more.Microsoft.UI.Composition.CompositionNineGridBrush: ...
    @winrt_mixinmethod
    def CreatePointLight(self: win32more.Microsoft.UI.Composition.ICompositor2) -> win32more.Microsoft.UI.Composition.PointLight: ...
    @winrt_mixinmethod
    def CreateSpotLight(self: win32more.Microsoft.UI.Composition.ICompositor2) -> win32more.Microsoft.UI.Composition.SpotLight: ...
    @winrt_mixinmethod
    def CreateStepEasingFunction(self: win32more.Microsoft.UI.Composition.ICompositor2) -> win32more.Microsoft.UI.Composition.StepEasingFunction: ...
    @winrt_mixinmethod
    def CreateStepEasingFunctionWithStepCount(self: win32more.Microsoft.UI.Composition.ICompositor2, stepCount: Int32) -> win32more.Microsoft.UI.Composition.StepEasingFunction: ...
    @winrt_mixinmethod
    def CreateColorGradientStop(self: win32more.Microsoft.UI.Composition.ICompositor4) -> win32more.Microsoft.UI.Composition.CompositionColorGradientStop: ...
    @winrt_mixinmethod
    def CreateColorGradientStopWithOffsetAndColor(self: win32more.Microsoft.UI.Composition.ICompositor4, offset: Single, color: win32more.Windows.UI.Color) -> win32more.Microsoft.UI.Composition.CompositionColorGradientStop: ...
    @winrt_mixinmethod
    def CreateLinearGradientBrush(self: win32more.Microsoft.UI.Composition.ICompositor4) -> win32more.Microsoft.UI.Composition.CompositionLinearGradientBrush: ...
    @winrt_mixinmethod
    def CreateSpringScalarAnimation(self: win32more.Microsoft.UI.Composition.ICompositor4) -> win32more.Microsoft.UI.Composition.SpringScalarNaturalMotionAnimation: ...
    @winrt_mixinmethod
    def CreateSpringVector2Animation(self: win32more.Microsoft.UI.Composition.ICompositor4) -> win32more.Microsoft.UI.Composition.SpringVector2NaturalMotionAnimation: ...
    @winrt_classmethod
    def get_MaxGlobalPlaybackRate(cls: win32more.Microsoft.UI.Composition.ICompositorStatics) -> Single: ...
    @winrt_classmethod
    def get_MinGlobalPlaybackRate(cls: win32more.Microsoft.UI.Composition.ICompositorStatics) -> Single: ...
    Comment = property(get_Comment, put_Comment)
    DispatcherQueue = property(get_DispatcherQueue, None)
    GlobalPlaybackRate = property(get_GlobalPlaybackRate, put_GlobalPlaybackRate)
    _Compositor_Meta_.MaxGlobalPlaybackRate = property(get_MaxGlobalPlaybackRate, None)
    _Compositor_Meta_.MinGlobalPlaybackRate = property(get_MinGlobalPlaybackRate, None)
class ContainerVisual(ComPtr):
    extends: win32more.Microsoft.UI.Composition.Visual
    default_interface: win32more.Microsoft.UI.Composition.IContainerVisual
    _classid_ = 'Microsoft.UI.Composition.ContainerVisual'
    @winrt_mixinmethod
    def get_Children(self: win32more.Microsoft.UI.Composition.IContainerVisual) -> win32more.Microsoft.UI.Composition.VisualCollection: ...
    Children = property(get_Children, None)
class CubicBezierEasingFunction(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionEasingFunction
    default_interface: win32more.Microsoft.UI.Composition.ICubicBezierEasingFunction
    _classid_ = 'Microsoft.UI.Composition.CubicBezierEasingFunction'
    @winrt_mixinmethod
    def get_ControlPoint1(self: win32more.Microsoft.UI.Composition.ICubicBezierEasingFunction) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_mixinmethod
    def get_ControlPoint2(self: win32more.Microsoft.UI.Composition.ICubicBezierEasingFunction) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    ControlPoint1 = property(get_ControlPoint1, None)
    ControlPoint2 = property(get_ControlPoint2, None)
class DistantLight(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionLight
    default_interface: win32more.Microsoft.UI.Composition.IDistantLight
    _classid_ = 'Microsoft.UI.Composition.DistantLight'
    @winrt_mixinmethod
    def get_Intensity(self: win32more.Microsoft.UI.Composition.IDistantLight2) -> Single: ...
    @winrt_mixinmethod
    def put_Intensity(self: win32more.Microsoft.UI.Composition.IDistantLight2, value: Single) -> Void: ...
    @winrt_mixinmethod
    def put_Color(self: win32more.Microsoft.UI.Composition.IDistantLight, value: win32more.Windows.UI.Color) -> Void: ...
    @winrt_mixinmethod
    def get_CoordinateSpace(self: win32more.Microsoft.UI.Composition.IDistantLight) -> win32more.Microsoft.UI.Composition.Visual: ...
    @winrt_mixinmethod
    def put_CoordinateSpace(self: win32more.Microsoft.UI.Composition.IDistantLight, value: win32more.Microsoft.UI.Composition.Visual) -> Void: ...
    @winrt_mixinmethod
    def get_Direction(self: win32more.Microsoft.UI.Composition.IDistantLight) -> win32more.Windows.Foundation.Numerics.Vector3: ...
    @winrt_mixinmethod
    def put_Direction(self: win32more.Microsoft.UI.Composition.IDistantLight, value: win32more.Windows.Foundation.Numerics.Vector3) -> Void: ...
    @winrt_mixinmethod
    def get_Color(self: win32more.Microsoft.UI.Composition.IDistantLight) -> win32more.Windows.UI.Color: ...
    Color = property(get_Color, put_Color)
    CoordinateSpace = property(get_CoordinateSpace, put_CoordinateSpace)
    Direction = property(get_Direction, put_Direction)
    Intensity = property(get_Intensity, put_Intensity)
class DropShadow(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionShadow
    default_interface: win32more.Microsoft.UI.Composition.IDropShadow
    _classid_ = 'Microsoft.UI.Composition.DropShadow'
    @winrt_mixinmethod
    def put_BlurRadius(self: win32more.Microsoft.UI.Composition.IDropShadow, value: Single) -> Void: ...
    @winrt_mixinmethod
    def get_Offset(self: win32more.Microsoft.UI.Composition.IDropShadow) -> win32more.Windows.Foundation.Numerics.Vector3: ...
    @winrt_mixinmethod
    def put_SourcePolicy(self: win32more.Microsoft.UI.Composition.IDropShadow2, value: win32more.Microsoft.UI.Composition.CompositionDropShadowSourcePolicy) -> Void: ...
    @winrt_mixinmethod
    def get_Color(self: win32more.Microsoft.UI.Composition.IDropShadow) -> win32more.Windows.UI.Color: ...
    @winrt_mixinmethod
    def put_Color(self: win32more.Microsoft.UI.Composition.IDropShadow, value: win32more.Windows.UI.Color) -> Void: ...
    @winrt_mixinmethod
    def get_Mask(self: win32more.Microsoft.UI.Composition.IDropShadow) -> win32more.Microsoft.UI.Composition.CompositionBrush: ...
    @winrt_mixinmethod
    def put_Mask(self: win32more.Microsoft.UI.Composition.IDropShadow, value: win32more.Microsoft.UI.Composition.CompositionBrush) -> Void: ...
    @winrt_mixinmethod
    def get_BlurRadius(self: win32more.Microsoft.UI.Composition.IDropShadow) -> Single: ...
    @winrt_mixinmethod
    def put_Offset(self: win32more.Microsoft.UI.Composition.IDropShadow, value: win32more.Windows.Foundation.Numerics.Vector3) -> Void: ...
    @winrt_mixinmethod
    def get_Opacity(self: win32more.Microsoft.UI.Composition.IDropShadow) -> Single: ...
    @winrt_mixinmethod
    def put_Opacity(self: win32more.Microsoft.UI.Composition.IDropShadow, value: Single) -> Void: ...
    @winrt_mixinmethod
    def get_SourcePolicy(self: win32more.Microsoft.UI.Composition.IDropShadow2) -> win32more.Microsoft.UI.Composition.CompositionDropShadowSourcePolicy: ...
    BlurRadius = property(get_BlurRadius, put_BlurRadius)
    Color = property(get_Color, put_Color)
    Mask = property(get_Mask, put_Mask)
    Offset = property(get_Offset, put_Offset)
    Opacity = property(get_Opacity, put_Opacity)
    SourcePolicy = property(get_SourcePolicy, put_SourcePolicy)
class ElasticEasingFunction(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionEasingFunction
    default_interface: win32more.Microsoft.UI.Composition.IElasticEasingFunction
    _classid_ = 'Microsoft.UI.Composition.ElasticEasingFunction'
    @winrt_mixinmethod
    def get_Oscillations(self: win32more.Microsoft.UI.Composition.IElasticEasingFunction) -> Int32: ...
    @winrt_mixinmethod
    def get_Springiness(self: win32more.Microsoft.UI.Composition.IElasticEasingFunction) -> Single: ...
    @winrt_mixinmethod
    def get_Mode(self: win32more.Microsoft.UI.Composition.IElasticEasingFunction) -> win32more.Microsoft.UI.Composition.CompositionEasingFunctionMode: ...
    Mode = property(get_Mode, None)
    Oscillations = property(get_Oscillations, None)
    Springiness = property(get_Springiness, None)
class ExponentialEasingFunction(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionEasingFunction
    default_interface: win32more.Microsoft.UI.Composition.IExponentialEasingFunction
    _classid_ = 'Microsoft.UI.Composition.ExponentialEasingFunction'
    @winrt_mixinmethod
    def get_Mode(self: win32more.Microsoft.UI.Composition.IExponentialEasingFunction) -> win32more.Microsoft.UI.Composition.CompositionEasingFunctionMode: ...
    @winrt_mixinmethod
    def get_Exponent(self: win32more.Microsoft.UI.Composition.IExponentialEasingFunction) -> Single: ...
    Exponent = property(get_Exponent, None)
    Mode = property(get_Mode, None)
class ExpressionAnimation(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionAnimation
    default_interface: win32more.Microsoft.UI.Composition.IExpressionAnimation
    _classid_ = 'Microsoft.UI.Composition.ExpressionAnimation'
    @winrt_mixinmethod
    def put_Expression(self: win32more.Microsoft.UI.Composition.IExpressionAnimation, value: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def get_Expression(self: win32more.Microsoft.UI.Composition.IExpressionAnimation) -> WinRT_String: ...
    Expression = property(get_Expression, put_Expression)
class IAmbientLight(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IAmbientLight'
    _iid_ = Guid('{4540525e-b70d-5a14-bbfa-63bef42313c7}')
    @winrt_commethod(6)
    def get_Color(self) -> win32more.Windows.UI.Color: ...
    @winrt_commethod(7)
    def put_Color(self, value: win32more.Windows.UI.Color) -> Void: ...
    Color = property(get_Color, put_Color)
class IAmbientLight2(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IAmbientLight2'
    _iid_ = Guid('{3356f963-040c-54d4-9dfc-b61c51aaadd1}')
    @winrt_commethod(6)
    def get_Intensity(self) -> Single: ...
    @winrt_commethod(7)
    def put_Intensity(self, value: Single) -> Void: ...
    Intensity = property(get_Intensity, put_Intensity)
class IAnimationController(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IAnimationController'
    _iid_ = Guid('{bd0f88a8-a415-5322-8c3d-1a6d9192754f}')
    @winrt_commethod(6)
    def get_PlaybackRate(self) -> Single: ...
    @winrt_commethod(7)
    def put_PlaybackRate(self, value: Single) -> Void: ...
    @winrt_commethod(8)
    def get_Progress(self) -> Single: ...
    @winrt_commethod(9)
    def put_Progress(self, value: Single) -> Void: ...
    @winrt_commethod(10)
    def get_ProgressBehavior(self) -> win32more.Microsoft.UI.Composition.AnimationControllerProgressBehavior: ...
    @winrt_commethod(11)
    def put_ProgressBehavior(self, value: win32more.Microsoft.UI.Composition.AnimationControllerProgressBehavior) -> Void: ...
    @winrt_commethod(12)
    def Pause(self) -> Void: ...
    @winrt_commethod(13)
    def Resume(self) -> Void: ...
    PlaybackRate = property(get_PlaybackRate, put_PlaybackRate)
    Progress = property(get_Progress, put_Progress)
    ProgressBehavior = property(get_ProgressBehavior, put_ProgressBehavior)
class IAnimationControllerStatics(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IAnimationControllerStatics'
    _iid_ = Guid('{b63b0fb6-286b-57af-b096-16066d43dc00}')
    @winrt_commethod(6)
    def get_MaxPlaybackRate(self) -> Single: ...
    @winrt_commethod(7)
    def get_MinPlaybackRate(self) -> Single: ...
    MaxPlaybackRate = property(get_MaxPlaybackRate, None)
    MinPlaybackRate = property(get_MinPlaybackRate, None)
class IAnimationObject(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IAnimationObject'
    _iid_ = Guid('{8f56119d-b96d-58d0-9916-d1c5e390f890}')
    @winrt_commethod(6)
    def PopulatePropertyInfo(self, propertyName: WinRT_String, propertyInfo: win32more.Microsoft.UI.Composition.AnimationPropertyInfo) -> Void: ...
class IAnimationPropertyInfo(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IAnimationPropertyInfo'
    _iid_ = Guid('{3d721a2b-9ccd-57bd-b6c2-ce9e04ae3606}')
    @winrt_commethod(6)
    def get_AccessMode(self) -> win32more.Microsoft.UI.Composition.AnimationPropertyAccessMode: ...
    @winrt_commethod(7)
    def put_AccessMode(self, value: win32more.Microsoft.UI.Composition.AnimationPropertyAccessMode) -> Void: ...
    AccessMode = property(get_AccessMode, put_AccessMode)
class IAnimationPropertyInfo2(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IAnimationPropertyInfo2'
    _iid_ = Guid('{ed14fb09-de28-540d-9311-80cfdcc97338}')
    @winrt_commethod(6)
    def GetResolvedCompositionObject(self) -> win32more.Microsoft.UI.Composition.CompositionObject: ...
    @winrt_commethod(7)
    def GetResolvedCompositionObjectProperty(self) -> WinRT_String: ...
class IBackEasingFunction(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IBackEasingFunction'
    _iid_ = Guid('{27c75bab-317a-5362-bf25-fffbb98a51b9}')
    @winrt_commethod(6)
    def get_Mode(self) -> win32more.Microsoft.UI.Composition.CompositionEasingFunctionMode: ...
    @winrt_commethod(7)
    def get_Amplitude(self) -> Single: ...
    Amplitude = property(get_Amplitude, None)
    Mode = property(get_Mode, None)
class IBooleanKeyFrameAnimation(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IBooleanKeyFrameAnimation'
    _iid_ = Guid('{7fe485e9-e874-5ff3-8ddc-826c3818bfc3}')
    @winrt_commethod(6)
    def InsertKeyFrame(self, normalizedProgressKey: Single, value: Boolean) -> Void: ...
class IBounceEasingFunction(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IBounceEasingFunction'
    _iid_ = Guid('{fa11f3c0-697b-562f-af46-c6af666b6ec4}')
    @winrt_commethod(6)
    def get_Mode(self) -> win32more.Microsoft.UI.Composition.CompositionEasingFunctionMode: ...
    @winrt_commethod(7)
    def get_Bounces(self) -> Int32: ...
    @winrt_commethod(8)
    def get_Bounciness(self) -> Single: ...
    Bounces = property(get_Bounces, None)
    Bounciness = property(get_Bounciness, None)
    Mode = property(get_Mode, None)
class IBounceScalarNaturalMotionAnimation(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IBounceScalarNaturalMotionAnimation'
    _iid_ = Guid('{1c0c4b76-c4d6-5dd9-8dd6-dbe35c7b7e55}')
    @winrt_commethod(6)
    def get_Acceleration(self) -> Single: ...
    @winrt_commethod(7)
    def put_Acceleration(self, value: Single) -> Void: ...
    @winrt_commethod(8)
    def get_Restitution(self) -> Single: ...
    @winrt_commethod(9)
    def put_Restitution(self, value: Single) -> Void: ...
    Acceleration = property(get_Acceleration, put_Acceleration)
    Restitution = property(get_Restitution, put_Restitution)
class IBounceVector2NaturalMotionAnimation(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IBounceVector2NaturalMotionAnimation'
    _iid_ = Guid('{ec528d1f-22e2-573e-ab87-757071e50012}')
    @winrt_commethod(6)
    def get_Acceleration(self) -> Single: ...
    @winrt_commethod(7)
    def put_Acceleration(self, value: Single) -> Void: ...
    @winrt_commethod(8)
    def get_Restitution(self) -> Single: ...
    @winrt_commethod(9)
    def put_Restitution(self, value: Single) -> Void: ...
    Acceleration = property(get_Acceleration, put_Acceleration)
    Restitution = property(get_Restitution, put_Restitution)
class IBounceVector3NaturalMotionAnimation(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IBounceVector3NaturalMotionAnimation'
    _iid_ = Guid('{e3e2ee98-1211-586d-8a6d-fea5efc3957f}')
    @winrt_commethod(6)
    def get_Acceleration(self) -> Single: ...
    @winrt_commethod(7)
    def put_Acceleration(self, value: Single) -> Void: ...
    @winrt_commethod(8)
    def get_Restitution(self) -> Single: ...
    @winrt_commethod(9)
    def put_Restitution(self, value: Single) -> Void: ...
    Acceleration = property(get_Acceleration, put_Acceleration)
    Restitution = property(get_Restitution, put_Restitution)
class ICircleEasingFunction(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICircleEasingFunction'
    _iid_ = Guid('{414b172c-bf27-5ead-93e0-35915322db2c}')
    @winrt_commethod(6)
    def get_Mode(self) -> win32more.Microsoft.UI.Composition.CompositionEasingFunctionMode: ...
    Mode = property(get_Mode, None)
class IColorKeyFrameAnimation(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IColorKeyFrameAnimation'
    _iid_ = Guid('{f0237928-353c-5867-be93-71547e989f44}')
    @winrt_commethod(6)
    def get_InterpolationColorSpace(self) -> win32more.Microsoft.UI.Composition.CompositionColorSpace: ...
    @winrt_commethod(7)
    def put_InterpolationColorSpace(self, value: win32more.Microsoft.UI.Composition.CompositionColorSpace) -> Void: ...
    @winrt_commethod(8)
    def InsertKeyFrame(self, normalizedProgressKey: Single, value: win32more.Windows.UI.Color) -> Void: ...
    @winrt_commethod(9)
    def InsertKeyFrameWithEasingFunction(self, normalizedProgressKey: Single, value: win32more.Windows.UI.Color, easingFunction: win32more.Microsoft.UI.Composition.CompositionEasingFunction) -> Void: ...
    InterpolationColorSpace = property(get_InterpolationColorSpace, put_InterpolationColorSpace)
class ICompositionAnimation(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionAnimation'
    _iid_ = Guid('{a829ccc8-6fde-5b90-ad37-efd307e1b631}')
    @winrt_commethod(6)
    def ClearAllParameters(self) -> Void: ...
    @winrt_commethod(7)
    def ClearParameter(self, key: WinRT_String) -> Void: ...
    @winrt_commethod(8)
    def SetColorParameter(self, key: WinRT_String, value: win32more.Windows.UI.Color) -> Void: ...
    @winrt_commethod(9)
    def SetMatrix3x2Parameter(self, key: WinRT_String, value: win32more.Windows.Foundation.Numerics.Matrix3x2) -> Void: ...
    @winrt_commethod(10)
    def SetMatrix4x4Parameter(self, key: WinRT_String, value: win32more.Windows.Foundation.Numerics.Matrix4x4) -> Void: ...
    @winrt_commethod(11)
    def SetQuaternionParameter(self, key: WinRT_String, value: win32more.Windows.Foundation.Numerics.Quaternion) -> Void: ...
    @winrt_commethod(12)
    def SetReferenceParameter(self, key: WinRT_String, compositionObject: win32more.Microsoft.UI.Composition.CompositionObject) -> Void: ...
    @winrt_commethod(13)
    def SetScalarParameter(self, key: WinRT_String, value: Single) -> Void: ...
    @winrt_commethod(14)
    def SetVector2Parameter(self, key: WinRT_String, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_commethod(15)
    def SetVector3Parameter(self, key: WinRT_String, value: win32more.Windows.Foundation.Numerics.Vector3) -> Void: ...
    @winrt_commethod(16)
    def SetVector4Parameter(self, key: WinRT_String, value: win32more.Windows.Foundation.Numerics.Vector4) -> Void: ...
class ICompositionAnimation2(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionAnimation2'
    _iid_ = Guid('{0926eb58-8965-5c74-bdac-852ebb5e8542}')
    @winrt_commethod(6)
    def SetBooleanParameter(self, key: WinRT_String, value: Boolean) -> Void: ...
    @winrt_commethod(7)
    def get_Target(self) -> WinRT_String: ...
    @winrt_commethod(8)
    def put_Target(self, value: WinRT_String) -> Void: ...
    Target = property(get_Target, put_Target)
class ICompositionAnimation3(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionAnimation3'
    _iid_ = Guid('{60063f53-4167-5914-a2f1-9efcc2f86c76}')
    @winrt_commethod(6)
    def get_InitialValueExpressions(self) -> win32more.Microsoft.UI.Composition.InitialValueExpressionCollection: ...
    InitialValueExpressions = property(get_InitialValueExpressions, None)
class ICompositionAnimation4(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionAnimation4'
    _iid_ = Guid('{c4101447-dfe4-597f-b5bc-96443f5d18a1}')
    @winrt_commethod(6)
    def SetExpressionReferenceParameter(self, parameterName: WinRT_String, source: win32more.Microsoft.UI.Composition.IAnimationObject) -> Void: ...
class ICompositionAnimationBase(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionAnimationBase'
    _iid_ = Guid('{a77c0e5a-f059-4e85-bcef-c068694cec78}')
class ICompositionAnimationFactory(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionAnimationFactory'
    _iid_ = Guid('{2ed278ca-4cca-5f7f-8d47-f930552a7769}')
class ICompositionAnimationGroup(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionAnimationGroup'
    _iid_ = Guid('{a51cdcac-b972-5ae7-81d0-9d91c71ecb7a}')
    @winrt_commethod(6)
    def get_Count(self) -> Int32: ...
    @winrt_commethod(7)
    def Add(self, value: win32more.Microsoft.UI.Composition.CompositionAnimation) -> Void: ...
    @winrt_commethod(8)
    def Remove(self, value: win32more.Microsoft.UI.Composition.CompositionAnimation) -> Void: ...
    @winrt_commethod(9)
    def RemoveAll(self) -> Void: ...
    Count = property(get_Count, None)
class ICompositionApiInformationStatics(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionApiInformationStatics'
    _iid_ = Guid('{85260ed3-365b-5e70-b79a-f9f1d10fa4b5}')
    @winrt_commethod(6)
    def get_ApiVersion(self) -> UInt64: ...
    ApiVersion = property(get_ApiVersion, None)
class ICompositionBackdropBrush(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionBackdropBrush'
    _iid_ = Guid('{6c866bb3-172a-570c-82ac-bf9848d99a59}')
class ICompositionBatchCompletedEventArgs(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionBatchCompletedEventArgs'
    _iid_ = Guid('{ac400334-4358-5fb0-bfc3-117fe581998f}')
class ICompositionBrush(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionBrush'
    _iid_ = Guid('{483924e7-99a5-5377-968b-dec6d40bbccd}')
class ICompositionBrushFactory(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionBrushFactory'
    _iid_ = Guid('{abf2b354-7130-53d9-8324-365d7e02ede7}')
class ICompositionCapabilities(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionCapabilities'
    _iid_ = Guid('{7689bf12-75c0-52ea-81cb-463ed1c16c45}')
    @winrt_commethod(6)
    def AreEffectsSupported(self) -> Boolean: ...
    @winrt_commethod(7)
    def AreEffectsFast(self) -> Boolean: ...
    @winrt_commethod(8)
    def add_Changed(self, handler: win32more.Windows.Foundation.TypedEventHandler[win32more.Microsoft.UI.Composition.CompositionCapabilities, IInspectable]) -> win32more.Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(9)
    def remove_Changed(self, token: win32more.Windows.Foundation.EventRegistrationToken) -> Void: ...
    Changed = event()
class ICompositionClip(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionClip'
    _iid_ = Guid('{b66b55cb-b5a5-5bee-8972-ae78233cb34c}')
class ICompositionClip2(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionClip2'
    _iid_ = Guid('{cdf6bf80-afd7-57dc-8148-6ccbbb5d78bb}')
    @winrt_commethod(6)
    def get_AnchorPoint(self) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_commethod(7)
    def put_AnchorPoint(self, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_commethod(8)
    def get_CenterPoint(self) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_commethod(9)
    def put_CenterPoint(self, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_commethod(10)
    def get_Offset(self) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_commethod(11)
    def put_Offset(self, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_commethod(12)
    def get_RotationAngle(self) -> Single: ...
    @winrt_commethod(13)
    def put_RotationAngle(self, value: Single) -> Void: ...
    @winrt_commethod(14)
    def get_RotationAngleInDegrees(self) -> Single: ...
    @winrt_commethod(15)
    def put_RotationAngleInDegrees(self, value: Single) -> Void: ...
    @winrt_commethod(16)
    def get_Scale(self) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_commethod(17)
    def put_Scale(self, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_commethod(18)
    def get_TransformMatrix(self) -> win32more.Windows.Foundation.Numerics.Matrix3x2: ...
    @winrt_commethod(19)
    def put_TransformMatrix(self, value: win32more.Windows.Foundation.Numerics.Matrix3x2) -> Void: ...
    AnchorPoint = property(get_AnchorPoint, put_AnchorPoint)
    CenterPoint = property(get_CenterPoint, put_CenterPoint)
    Offset = property(get_Offset, put_Offset)
    RotationAngle = property(get_RotationAngle, put_RotationAngle)
    RotationAngleInDegrees = property(get_RotationAngleInDegrees, put_RotationAngleInDegrees)
    Scale = property(get_Scale, put_Scale)
    TransformMatrix = property(get_TransformMatrix, put_TransformMatrix)
class ICompositionClipFactory(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionClipFactory'
    _iid_ = Guid('{611dec65-d302-52bc-92ab-a295bd141ae4}')
class ICompositionColorBrush(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionColorBrush'
    _iid_ = Guid('{3f8ffb69-3e71-55a7-8e79-f27a214c56ae}')
    @winrt_commethod(6)
    def get_Color(self) -> win32more.Windows.UI.Color: ...
    @winrt_commethod(7)
    def put_Color(self, value: win32more.Windows.UI.Color) -> Void: ...
    Color = property(get_Color, put_Color)
class ICompositionColorGradientStop(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionColorGradientStop'
    _iid_ = Guid('{868030d8-c5c0-5dd8-a765-e32cd3497aa9}')
    @winrt_commethod(6)
    def get_Color(self) -> win32more.Windows.UI.Color: ...
    @winrt_commethod(7)
    def put_Color(self, value: win32more.Windows.UI.Color) -> Void: ...
    @winrt_commethod(8)
    def get_Offset(self) -> Single: ...
    @winrt_commethod(9)
    def put_Offset(self, value: Single) -> Void: ...
    Color = property(get_Color, put_Color)
    Offset = property(get_Offset, put_Offset)
class ICompositionColorGradientStopCollection(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionColorGradientStopCollection'
    _iid_ = Guid('{4794cb29-ce9d-5837-9fc9-847df3e197de}')
class ICompositionCommitBatch(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionCommitBatch'
    _iid_ = Guid('{c4550fa8-a7f2-5259-bf74-33b2f5240a28}')
    @winrt_commethod(6)
    def get_IsActive(self) -> Boolean: ...
    @winrt_commethod(7)
    def get_IsEnded(self) -> Boolean: ...
    @winrt_commethod(8)
    def add_Completed(self, handler: win32more.Windows.Foundation.TypedEventHandler[IInspectable, win32more.Microsoft.UI.Composition.CompositionBatchCompletedEventArgs]) -> win32more.Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(9)
    def remove_Completed(self, token: win32more.Windows.Foundation.EventRegistrationToken) -> Void: ...
    IsActive = property(get_IsActive, None)
    IsEnded = property(get_IsEnded, None)
    Completed = event()
class ICompositionContainerShape(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionContainerShape'
    _iid_ = Guid('{064aabd5-2dab-52d3-824b-c72456540f29}')
    @winrt_commethod(6)
    def get_Shapes(self) -> win32more.Microsoft.UI.Composition.CompositionShapeCollection: ...
    Shapes = property(get_Shapes, None)
class ICompositionDrawingSurface(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionDrawingSurface'
    _iid_ = Guid('{216cab97-a2ee-5a29-ad6b-0bc2df4a1504}')
    @winrt_commethod(6)
    def get_AlphaMode(self) -> win32more.Microsoft.Graphics.DirectX.DirectXAlphaMode: ...
    @winrt_commethod(7)
    def get_PixelFormat(self) -> win32more.Microsoft.Graphics.DirectX.DirectXPixelFormat: ...
    @winrt_commethod(8)
    def get_Size(self) -> win32more.Windows.Foundation.Size: ...
    AlphaMode = property(get_AlphaMode, None)
    PixelFormat = property(get_PixelFormat, None)
    Size = property(get_Size, None)
class ICompositionDrawingSurface2(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionDrawingSurface2'
    _iid_ = Guid('{6be6f652-bec8-5adf-a6af-5acfc00a968e}')
    @winrt_commethod(6)
    def get_SizeInt32(self) -> win32more.Windows.Graphics.SizeInt32: ...
    @winrt_commethod(7)
    def Resize(self, sizePixels: win32more.Windows.Graphics.SizeInt32) -> Void: ...
    @winrt_commethod(8)
    def Scroll(self, offset: win32more.Windows.Graphics.PointInt32) -> Void: ...
    @winrt_commethod(9)
    def ScrollRect(self, offset: win32more.Windows.Graphics.PointInt32, scrollRect: win32more.Windows.Graphics.RectInt32) -> Void: ...
    @winrt_commethod(10)
    def ScrollWithClip(self, offset: win32more.Windows.Graphics.PointInt32, clipRect: win32more.Windows.Graphics.RectInt32) -> Void: ...
    @winrt_commethod(11)
    def ScrollRectWithClip(self, offset: win32more.Windows.Graphics.PointInt32, clipRect: win32more.Windows.Graphics.RectInt32, scrollRect: win32more.Windows.Graphics.RectInt32) -> Void: ...
    SizeInt32 = property(get_SizeInt32, None)
class ICompositionDrawingSurfaceFactory(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionDrawingSurfaceFactory'
    _iid_ = Guid('{4791e19a-c83b-58b0-ac86-dfc58494f5f9}')
class ICompositionEasingFunction(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionEasingFunction'
    _iid_ = Guid('{8e1ecd0d-57d8-5bc9-9bcd-e43d0dd733c4}')
class ICompositionEasingFunctionFactory(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionEasingFunctionFactory'
    _iid_ = Guid('{7d7d32c3-574b-5620-9902-db426851802f}')
class ICompositionEasingFunctionStatics(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionEasingFunctionStatics'
    _iid_ = Guid('{9d4b87ff-6dca-5ce2-b69c-e52705b0fef4}')
    @winrt_commethod(6)
    def CreateCubicBezierEasingFunction(self, owner: win32more.Microsoft.UI.Composition.Compositor, controlPoint1: win32more.Windows.Foundation.Numerics.Vector2, controlPoint2: win32more.Windows.Foundation.Numerics.Vector2) -> win32more.Microsoft.UI.Composition.CubicBezierEasingFunction: ...
    @winrt_commethod(7)
    def CreateLinearEasingFunction(self, owner: win32more.Microsoft.UI.Composition.Compositor) -> win32more.Microsoft.UI.Composition.LinearEasingFunction: ...
    @winrt_commethod(8)
    def CreateStepEasingFunction(self, owner: win32more.Microsoft.UI.Composition.Compositor) -> win32more.Microsoft.UI.Composition.StepEasingFunction: ...
    @winrt_commethod(9)
    def CreateStepEasingFunctionWithStepCount(self, owner: win32more.Microsoft.UI.Composition.Compositor, stepCount: Int32) -> win32more.Microsoft.UI.Composition.StepEasingFunction: ...
    @winrt_commethod(10)
    def CreateBackEasingFunction(self, owner: win32more.Microsoft.UI.Composition.Compositor, mode: win32more.Microsoft.UI.Composition.CompositionEasingFunctionMode, amplitude: Single) -> win32more.Microsoft.UI.Composition.BackEasingFunction: ...
    @winrt_commethod(11)
    def CreateBounceEasingFunction(self, owner: win32more.Microsoft.UI.Composition.Compositor, mode: win32more.Microsoft.UI.Composition.CompositionEasingFunctionMode, bounces: Int32, bounciness: Single) -> win32more.Microsoft.UI.Composition.BounceEasingFunction: ...
    @winrt_commethod(12)
    def CreateCircleEasingFunction(self, owner: win32more.Microsoft.UI.Composition.Compositor, mode: win32more.Microsoft.UI.Composition.CompositionEasingFunctionMode) -> win32more.Microsoft.UI.Composition.CircleEasingFunction: ...
    @winrt_commethod(13)
    def CreateElasticEasingFunction(self, owner: win32more.Microsoft.UI.Composition.Compositor, mode: win32more.Microsoft.UI.Composition.CompositionEasingFunctionMode, oscillations: Int32, springiness: Single) -> win32more.Microsoft.UI.Composition.ElasticEasingFunction: ...
    @winrt_commethod(14)
    def CreateExponentialEasingFunction(self, owner: win32more.Microsoft.UI.Composition.Compositor, mode: win32more.Microsoft.UI.Composition.CompositionEasingFunctionMode, exponent: Single) -> win32more.Microsoft.UI.Composition.ExponentialEasingFunction: ...
    @winrt_commethod(15)
    def CreatePowerEasingFunction(self, owner: win32more.Microsoft.UI.Composition.Compositor, mode: win32more.Microsoft.UI.Composition.CompositionEasingFunctionMode, power: Single) -> win32more.Microsoft.UI.Composition.PowerEasingFunction: ...
    @winrt_commethod(16)
    def CreateSineEasingFunction(self, owner: win32more.Microsoft.UI.Composition.Compositor, mode: win32more.Microsoft.UI.Composition.CompositionEasingFunctionMode) -> win32more.Microsoft.UI.Composition.SineEasingFunction: ...
class ICompositionEffectBrush(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionEffectBrush'
    _iid_ = Guid('{62e0bbab-1f45-5a44-9ddf-f0c38a02ed85}')
    @winrt_commethod(6)
    def GetSourceParameter(self, name: WinRT_String) -> win32more.Microsoft.UI.Composition.CompositionBrush: ...
    @winrt_commethod(7)
    def SetSourceParameter(self, name: WinRT_String, source: win32more.Microsoft.UI.Composition.CompositionBrush) -> Void: ...
class ICompositionEffectFactory(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionEffectFactory'
    _iid_ = Guid('{c50f407a-0231-5ed2-b7a7-ca66d3e14b3b}')
    @winrt_commethod(6)
    def CreateBrush(self) -> win32more.Microsoft.UI.Composition.CompositionEffectBrush: ...
    @winrt_commethod(7)
    def get_ExtendedError(self) -> win32more.Windows.Foundation.HResult: ...
    @winrt_commethod(8)
    def get_LoadStatus(self) -> win32more.Microsoft.UI.Composition.CompositionEffectFactoryLoadStatus: ...
    ExtendedError = property(get_ExtendedError, None)
    LoadStatus = property(get_LoadStatus, None)
class ICompositionEffectSourceParameter(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionEffectSourceParameter'
    _iid_ = Guid('{bece3367-5704-59f7-be8c-d6293af9c95f}')
    @winrt_commethod(6)
    def get_Name(self) -> WinRT_String: ...
    Name = property(get_Name, None)
class ICompositionEffectSourceParameterFactory(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionEffectSourceParameterFactory'
    _iid_ = Guid('{26185954-4489-5d0e-ae4d-7bc4bbbc6161}')
    @winrt_commethod(6)
    def Create(self, name: WinRT_String) -> win32more.Microsoft.UI.Composition.CompositionEffectSourceParameter: ...
class ICompositionEllipseGeometry(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionEllipseGeometry'
    _iid_ = Guid('{f2a21042-7a57-58c1-8b47-8bc8b21d3aa0}')
    @winrt_commethod(6)
    def get_Center(self) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_commethod(7)
    def put_Center(self, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_commethod(8)
    def get_Radius(self) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_commethod(9)
    def put_Radius(self, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    Center = property(get_Center, put_Center)
    Radius = property(get_Radius, put_Radius)
class ICompositionGeometricClip(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionGeometricClip'
    _iid_ = Guid('{e3c0a8c5-5297-5d69-8b91-f5330bb1cb27}')
    @winrt_commethod(6)
    def get_Geometry(self) -> win32more.Microsoft.UI.Composition.CompositionGeometry: ...
    @winrt_commethod(7)
    def put_Geometry(self, value: win32more.Microsoft.UI.Composition.CompositionGeometry) -> Void: ...
    @winrt_commethod(8)
    def get_ViewBox(self) -> win32more.Microsoft.UI.Composition.CompositionViewBox: ...
    @winrt_commethod(9)
    def put_ViewBox(self, value: win32more.Microsoft.UI.Composition.CompositionViewBox) -> Void: ...
    Geometry = property(get_Geometry, put_Geometry)
    ViewBox = property(get_ViewBox, put_ViewBox)
class ICompositionGeometry(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionGeometry'
    _iid_ = Guid('{4e40bdb2-450b-5a81-9e9b-149417980cc4}')
    @winrt_commethod(6)
    def get_TrimEnd(self) -> Single: ...
    @winrt_commethod(7)
    def put_TrimEnd(self, value: Single) -> Void: ...
    @winrt_commethod(8)
    def get_TrimOffset(self) -> Single: ...
    @winrt_commethod(9)
    def put_TrimOffset(self, value: Single) -> Void: ...
    @winrt_commethod(10)
    def get_TrimStart(self) -> Single: ...
    @winrt_commethod(11)
    def put_TrimStart(self, value: Single) -> Void: ...
    TrimEnd = property(get_TrimEnd, put_TrimEnd)
    TrimOffset = property(get_TrimOffset, put_TrimOffset)
    TrimStart = property(get_TrimStart, put_TrimStart)
class ICompositionGeometryFactory(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionGeometryFactory'
    _iid_ = Guid('{b2fb802b-c691-5554-8312-9c6d358d6b9e}')
class ICompositionGradientBrush(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionGradientBrush'
    _iid_ = Guid('{9165d1fb-c738-5f44-addc-309ee071d588}')
    @winrt_commethod(6)
    def get_AnchorPoint(self) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_commethod(7)
    def put_AnchorPoint(self, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_commethod(8)
    def get_CenterPoint(self) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_commethod(9)
    def put_CenterPoint(self, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_commethod(10)
    def get_ColorStops(self) -> win32more.Microsoft.UI.Composition.CompositionColorGradientStopCollection: ...
    @winrt_commethod(11)
    def get_ExtendMode(self) -> win32more.Microsoft.UI.Composition.CompositionGradientExtendMode: ...
    @winrt_commethod(12)
    def put_ExtendMode(self, value: win32more.Microsoft.UI.Composition.CompositionGradientExtendMode) -> Void: ...
    @winrt_commethod(13)
    def get_InterpolationSpace(self) -> win32more.Microsoft.UI.Composition.CompositionColorSpace: ...
    @winrt_commethod(14)
    def put_InterpolationSpace(self, value: win32more.Microsoft.UI.Composition.CompositionColorSpace) -> Void: ...
    @winrt_commethod(15)
    def get_Offset(self) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_commethod(16)
    def put_Offset(self, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_commethod(17)
    def get_RotationAngle(self) -> Single: ...
    @winrt_commethod(18)
    def put_RotationAngle(self, value: Single) -> Void: ...
    @winrt_commethod(19)
    def get_RotationAngleInDegrees(self) -> Single: ...
    @winrt_commethod(20)
    def put_RotationAngleInDegrees(self, value: Single) -> Void: ...
    @winrt_commethod(21)
    def get_Scale(self) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_commethod(22)
    def put_Scale(self, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_commethod(23)
    def get_TransformMatrix(self) -> win32more.Windows.Foundation.Numerics.Matrix3x2: ...
    @winrt_commethod(24)
    def put_TransformMatrix(self, value: win32more.Windows.Foundation.Numerics.Matrix3x2) -> Void: ...
    AnchorPoint = property(get_AnchorPoint, put_AnchorPoint)
    CenterPoint = property(get_CenterPoint, put_CenterPoint)
    ColorStops = property(get_ColorStops, None)
    ExtendMode = property(get_ExtendMode, put_ExtendMode)
    InterpolationSpace = property(get_InterpolationSpace, put_InterpolationSpace)
    Offset = property(get_Offset, put_Offset)
    RotationAngle = property(get_RotationAngle, put_RotationAngle)
    RotationAngleInDegrees = property(get_RotationAngleInDegrees, put_RotationAngleInDegrees)
    Scale = property(get_Scale, put_Scale)
    TransformMatrix = property(get_TransformMatrix, put_TransformMatrix)
class ICompositionGradientBrush2(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionGradientBrush2'
    _iid_ = Guid('{03e9edf3-ee3d-58fc-8c0b-95e4b6060a94}')
    @winrt_commethod(6)
    def get_MappingMode(self) -> win32more.Microsoft.UI.Composition.CompositionMappingMode: ...
    @winrt_commethod(7)
    def put_MappingMode(self, value: win32more.Microsoft.UI.Composition.CompositionMappingMode) -> Void: ...
    MappingMode = property(get_MappingMode, put_MappingMode)
class ICompositionGradientBrushFactory(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionGradientBrushFactory'
    _iid_ = Guid('{b043b155-4b40-590d-a0d9-f8c1a7e0c88f}')
class ICompositionGraphicsDevice(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionGraphicsDevice'
    _iid_ = Guid('{3d47e3f5-f76c-5f1f-88c0-54a5f2a090d6}')
    @winrt_commethod(6)
    def CreateDrawingSurface(self, sizePixels: win32more.Windows.Foundation.Size, pixelFormat: win32more.Microsoft.Graphics.DirectX.DirectXPixelFormat, alphaMode: win32more.Microsoft.Graphics.DirectX.DirectXAlphaMode) -> win32more.Microsoft.UI.Composition.CompositionDrawingSurface: ...
    @winrt_commethod(7)
    def add_RenderingDeviceReplaced(self, handler: win32more.Windows.Foundation.TypedEventHandler[win32more.Microsoft.UI.Composition.CompositionGraphicsDevice, win32more.Microsoft.UI.Composition.RenderingDeviceReplacedEventArgs]) -> win32more.Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(8)
    def remove_RenderingDeviceReplaced(self, token: win32more.Windows.Foundation.EventRegistrationToken) -> Void: ...
    RenderingDeviceReplaced = event()
class ICompositionGraphicsDevice2(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionGraphicsDevice2'
    _iid_ = Guid('{ffd56707-1c7a-5da0-aa1a-49cb935b5dca}')
    @winrt_commethod(6)
    def CreateDrawingSurface2(self, sizePixels: win32more.Windows.Graphics.SizeInt32, pixelFormat: win32more.Microsoft.Graphics.DirectX.DirectXPixelFormat, alphaMode: win32more.Microsoft.Graphics.DirectX.DirectXAlphaMode) -> win32more.Microsoft.UI.Composition.CompositionDrawingSurface: ...
    @winrt_commethod(7)
    def CreateVirtualDrawingSurface(self, sizePixels: win32more.Windows.Graphics.SizeInt32, pixelFormat: win32more.Microsoft.Graphics.DirectX.DirectXPixelFormat, alphaMode: win32more.Microsoft.Graphics.DirectX.DirectXAlphaMode) -> win32more.Microsoft.UI.Composition.CompositionVirtualDrawingSurface: ...
class ICompositionGraphicsDevice3(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionGraphicsDevice3'
    _iid_ = Guid('{fbbef487-d5a4-5db2-bf3e-9f488e659d11}')
    @winrt_commethod(6)
    def CreateMipmapSurface(self, sizePixels: win32more.Windows.Graphics.SizeInt32, pixelFormat: win32more.Microsoft.Graphics.DirectX.DirectXPixelFormat, alphaMode: win32more.Microsoft.Graphics.DirectX.DirectXAlphaMode) -> win32more.Microsoft.UI.Composition.CompositionMipmapSurface: ...
    @winrt_commethod(7)
    def Trim(self) -> Void: ...
class ICompositionGraphicsDevice4(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionGraphicsDevice4'
    _iid_ = Guid('{2b295c04-7b2e-5b0e-9762-2992313b700c}')
    @winrt_commethod(6)
    def CaptureAsync(self, captureVisual: win32more.Microsoft.UI.Composition.Visual, size: win32more.Windows.Graphics.SizeInt32, pixelFormat: win32more.Microsoft.Graphics.DirectX.DirectXPixelFormat, alphaMode: win32more.Microsoft.Graphics.DirectX.DirectXAlphaMode, sdrBoost: Single) -> win32more.Windows.Foundation.IAsyncOperation[win32more.Microsoft.UI.Composition.ICompositionSurface]: ...
class ICompositionLight(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionLight'
    _iid_ = Guid('{6d633e77-a6b8-5a2d-8235-e0c380c3b47b}')
    @winrt_commethod(6)
    def get_Targets(self) -> win32more.Microsoft.UI.Composition.VisualUnorderedCollection: ...
    Targets = property(get_Targets, None)
class ICompositionLight2(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionLight2'
    _iid_ = Guid('{0bb940a4-05ef-5920-bae1-918b36d44380}')
    @winrt_commethod(6)
    def get_ExclusionsFromTargets(self) -> win32more.Microsoft.UI.Composition.VisualUnorderedCollection: ...
    ExclusionsFromTargets = property(get_ExclusionsFromTargets, None)
class ICompositionLight3(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionLight3'
    _iid_ = Guid('{95ce4859-dd55-5c38-a3eb-13d053cebb1e}')
    @winrt_commethod(6)
    def get_IsEnabled(self) -> Boolean: ...
    @winrt_commethod(7)
    def put_IsEnabled(self, value: Boolean) -> Void: ...
    IsEnabled = property(get_IsEnabled, put_IsEnabled)
class ICompositionLightFactory(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionLightFactory'
    _iid_ = Guid('{cb29caed-9245-51a6-ba56-addbaefa54cc}')
class ICompositionLineGeometry(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionLineGeometry'
    _iid_ = Guid('{489f9382-c186-5936-8946-c4f927e844aa}')
    @winrt_commethod(6)
    def get_Start(self) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_commethod(7)
    def put_Start(self, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_commethod(8)
    def get_End(self) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_commethod(9)
    def put_End(self, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    End = property(get_End, put_End)
    Start = property(get_Start, put_Start)
class ICompositionLinearGradientBrush(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionLinearGradientBrush'
    _iid_ = Guid('{f726fb52-270c-58b1-a902-89576772dedc}')
    @winrt_commethod(6)
    def get_EndPoint(self) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_commethod(7)
    def put_EndPoint(self, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_commethod(8)
    def get_StartPoint(self) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_commethod(9)
    def put_StartPoint(self, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    EndPoint = property(get_EndPoint, put_EndPoint)
    StartPoint = property(get_StartPoint, put_StartPoint)
class ICompositionMaskBrush(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionMaskBrush'
    _iid_ = Guid('{c9502786-65aa-5be5-a679-c3b5dbfb0dc6}')
    @winrt_commethod(6)
    def get_Mask(self) -> win32more.Microsoft.UI.Composition.CompositionBrush: ...
    @winrt_commethod(7)
    def put_Mask(self, value: win32more.Microsoft.UI.Composition.CompositionBrush) -> Void: ...
    @winrt_commethod(8)
    def get_Source(self) -> win32more.Microsoft.UI.Composition.CompositionBrush: ...
    @winrt_commethod(9)
    def put_Source(self, value: win32more.Microsoft.UI.Composition.CompositionBrush) -> Void: ...
    Mask = property(get_Mask, put_Mask)
    Source = property(get_Source, put_Source)
class ICompositionMipmapSurface(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionMipmapSurface'
    _iid_ = Guid('{681f1e47-6e43-5b55-be3a-e5c858a2d5fa}')
    @winrt_commethod(6)
    def get_LevelCount(self) -> UInt32: ...
    @winrt_commethod(7)
    def get_AlphaMode(self) -> win32more.Microsoft.Graphics.DirectX.DirectXAlphaMode: ...
    @winrt_commethod(8)
    def get_PixelFormat(self) -> win32more.Microsoft.Graphics.DirectX.DirectXPixelFormat: ...
    @winrt_commethod(9)
    def get_SizeInt32(self) -> win32more.Windows.Graphics.SizeInt32: ...
    @winrt_commethod(10)
    def GetDrawingSurfaceForLevel(self, level: UInt32) -> win32more.Microsoft.UI.Composition.CompositionDrawingSurface: ...
    AlphaMode = property(get_AlphaMode, None)
    LevelCount = property(get_LevelCount, None)
    PixelFormat = property(get_PixelFormat, None)
    SizeInt32 = property(get_SizeInt32, None)
class ICompositionNineGridBrush(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionNineGridBrush'
    _iid_ = Guid('{c77a3d21-c7ee-517a-98f4-ad9a7202bc86}')
    @winrt_commethod(6)
    def get_BottomInset(self) -> Single: ...
    @winrt_commethod(7)
    def put_BottomInset(self, value: Single) -> Void: ...
    @winrt_commethod(8)
    def get_BottomInsetScale(self) -> Single: ...
    @winrt_commethod(9)
    def put_BottomInsetScale(self, value: Single) -> Void: ...
    @winrt_commethod(10)
    def get_IsCenterHollow(self) -> Boolean: ...
    @winrt_commethod(11)
    def put_IsCenterHollow(self, value: Boolean) -> Void: ...
    @winrt_commethod(12)
    def get_LeftInset(self) -> Single: ...
    @winrt_commethod(13)
    def put_LeftInset(self, value: Single) -> Void: ...
    @winrt_commethod(14)
    def get_LeftInsetScale(self) -> Single: ...
    @winrt_commethod(15)
    def put_LeftInsetScale(self, value: Single) -> Void: ...
    @winrt_commethod(16)
    def get_RightInset(self) -> Single: ...
    @winrt_commethod(17)
    def put_RightInset(self, value: Single) -> Void: ...
    @winrt_commethod(18)
    def get_RightInsetScale(self) -> Single: ...
    @winrt_commethod(19)
    def put_RightInsetScale(self, value: Single) -> Void: ...
    @winrt_commethod(20)
    def get_Source(self) -> win32more.Microsoft.UI.Composition.CompositionBrush: ...
    @winrt_commethod(21)
    def put_Source(self, value: win32more.Microsoft.UI.Composition.CompositionBrush) -> Void: ...
    @winrt_commethod(22)
    def get_TopInset(self) -> Single: ...
    @winrt_commethod(23)
    def put_TopInset(self, value: Single) -> Void: ...
    @winrt_commethod(24)
    def get_TopInsetScale(self) -> Single: ...
    @winrt_commethod(25)
    def put_TopInsetScale(self, value: Single) -> Void: ...
    @winrt_commethod(26)
    def SetInsets(self, inset: Single) -> Void: ...
    @winrt_commethod(27)
    def SetInsetsWithValues(self, left: Single, top: Single, right: Single, bottom: Single) -> Void: ...
    @winrt_commethod(28)
    def SetInsetScales(self, scale: Single) -> Void: ...
    @winrt_commethod(29)
    def SetInsetScalesWithValues(self, left: Single, top: Single, right: Single, bottom: Single) -> Void: ...
    BottomInset = property(get_BottomInset, put_BottomInset)
    BottomInsetScale = property(get_BottomInsetScale, put_BottomInsetScale)
    IsCenterHollow = property(get_IsCenterHollow, put_IsCenterHollow)
    LeftInset = property(get_LeftInset, put_LeftInset)
    LeftInsetScale = property(get_LeftInsetScale, put_LeftInsetScale)
    RightInset = property(get_RightInset, put_RightInset)
    RightInsetScale = property(get_RightInsetScale, put_RightInsetScale)
    Source = property(get_Source, put_Source)
    TopInset = property(get_TopInset, put_TopInset)
    TopInsetScale = property(get_TopInsetScale, put_TopInsetScale)
class ICompositionObject(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionObject'
    _iid_ = Guid('{0e583d49-fb5e-5481-a426-d3c41e059a5a}')
    @winrt_commethod(6)
    def get_Compositor(self) -> win32more.Microsoft.UI.Composition.Compositor: ...
    @winrt_commethod(7)
    def get_Properties(self) -> win32more.Microsoft.UI.Composition.CompositionPropertySet: ...
    @winrt_commethod(8)
    def StartAnimation(self, propertyName: WinRT_String, animation: win32more.Microsoft.UI.Composition.CompositionAnimation) -> Void: ...
    @winrt_commethod(9)
    def StopAnimation(self, propertyName: WinRT_String) -> Void: ...
    Compositor = property(get_Compositor, None)
    Properties = property(get_Properties, None)
class ICompositionObject2(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionObject2'
    _iid_ = Guid('{bcbbfebf-799c-51ce-9c82-b6e49e7e62e1}')
    @winrt_commethod(6)
    def get_Comment(self) -> WinRT_String: ...
    @winrt_commethod(7)
    def put_Comment(self, value: WinRT_String) -> Void: ...
    @winrt_commethod(8)
    def get_ImplicitAnimations(self) -> win32more.Microsoft.UI.Composition.ImplicitAnimationCollection: ...
    @winrt_commethod(9)
    def put_ImplicitAnimations(self, value: win32more.Microsoft.UI.Composition.ImplicitAnimationCollection) -> Void: ...
    @winrt_commethod(10)
    def StartAnimationGroup(self, value: win32more.Microsoft.UI.Composition.ICompositionAnimationBase) -> Void: ...
    @winrt_commethod(11)
    def StopAnimationGroup(self, value: win32more.Microsoft.UI.Composition.ICompositionAnimationBase) -> Void: ...
    Comment = property(get_Comment, put_Comment)
    ImplicitAnimations = property(get_ImplicitAnimations, put_ImplicitAnimations)
class ICompositionObject3(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionObject3'
    _iid_ = Guid('{d43c5cf1-47df-52b8-b409-d5831503905e}')
    @winrt_commethod(6)
    def get_DispatcherQueue(self) -> win32more.Microsoft.UI.Dispatching.DispatcherQueue: ...
    DispatcherQueue = property(get_DispatcherQueue, None)
class ICompositionObject4(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionObject4'
    _iid_ = Guid('{029ad57c-5497-51f3-8b40-e4e235992c6f}')
    @winrt_commethod(6)
    def TryGetAnimationController(self, propertyName: WinRT_String) -> win32more.Microsoft.UI.Composition.AnimationController: ...
class ICompositionObject5(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionObject5'
    _iid_ = Guid('{85fd26d1-bb99-5392-9dce-a05cb81458a5}')
    @winrt_commethod(6)
    def StartAnimationWithController(self, propertyName: WinRT_String, animation: win32more.Microsoft.UI.Composition.CompositionAnimation, animationController: win32more.Microsoft.UI.Composition.AnimationController) -> Void: ...
class ICompositionObjectFactory(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionObjectFactory'
    _iid_ = Guid('{6133c5f9-cd3b-56b2-876f-eb849db14911}')
class ICompositionObjectStatics(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionObjectStatics'
    _iid_ = Guid('{a091356c-38ae-514c-9b58-ad5c8c7936ad}')
    @winrt_commethod(6)
    def StartAnimationWithIAnimationObject(self, target: win32more.Microsoft.UI.Composition.IAnimationObject, propertyName: WinRT_String, animation: win32more.Microsoft.UI.Composition.CompositionAnimation) -> Void: ...
    @winrt_commethod(7)
    def StartAnimationGroupWithIAnimationObject(self, target: win32more.Microsoft.UI.Composition.IAnimationObject, animation: win32more.Microsoft.UI.Composition.ICompositionAnimationBase) -> Void: ...
class ICompositionPath(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionPath'
    _iid_ = Guid('{17c518c0-d7a2-54be-ac7f-c408562a6a20}')
class ICompositionPathFactory(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionPathFactory'
    _iid_ = Guid('{87143312-d280-51d2-b75b-5d76ea86c285}')
    @winrt_commethod(6)
    def Create(self, source: win32more.Windows.Graphics.IGeometrySource2D) -> win32more.Microsoft.UI.Composition.CompositionPath: ...
class ICompositionPathGeometry(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionPathGeometry'
    _iid_ = Guid('{0f6e6b82-060b-571e-b849-ab8e0d723962}')
    @winrt_commethod(6)
    def get_Path(self) -> win32more.Microsoft.UI.Composition.CompositionPath: ...
    @winrt_commethod(7)
    def put_Path(self, value: win32more.Microsoft.UI.Composition.CompositionPath) -> Void: ...
    Path = property(get_Path, put_Path)
class ICompositionProjectedShadow(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionProjectedShadow'
    _iid_ = Guid('{d400ab10-8b92-5abb-9e23-807974fc6961}')
    @winrt_commethod(6)
    def get_BlurRadiusMultiplier(self) -> Single: ...
    @winrt_commethod(7)
    def put_BlurRadiusMultiplier(self, value: Single) -> Void: ...
    @winrt_commethod(8)
    def get_Casters(self) -> win32more.Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection: ...
    @winrt_commethod(9)
    def get_LightSource(self) -> win32more.Microsoft.UI.Composition.CompositionLight: ...
    @winrt_commethod(10)
    def put_LightSource(self, value: win32more.Microsoft.UI.Composition.CompositionLight) -> Void: ...
    @winrt_commethod(11)
    def get_MaxBlurRadius(self) -> Single: ...
    @winrt_commethod(12)
    def put_MaxBlurRadius(self, value: Single) -> Void: ...
    @winrt_commethod(13)
    def get_MinBlurRadius(self) -> Single: ...
    @winrt_commethod(14)
    def put_MinBlurRadius(self, value: Single) -> Void: ...
    @winrt_commethod(15)
    def get_Receivers(self) -> win32more.Microsoft.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection: ...
    BlurRadiusMultiplier = property(get_BlurRadiusMultiplier, put_BlurRadiusMultiplier)
    Casters = property(get_Casters, None)
    LightSource = property(get_LightSource, put_LightSource)
    MaxBlurRadius = property(get_MaxBlurRadius, put_MaxBlurRadius)
    MinBlurRadius = property(get_MinBlurRadius, put_MinBlurRadius)
    Receivers = property(get_Receivers, None)
class ICompositionProjectedShadowCaster(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionProjectedShadowCaster'
    _iid_ = Guid('{15a9f2d0-6bae-521b-90c7-c7500f2bf562}')
    @winrt_commethod(6)
    def get_Brush(self) -> win32more.Microsoft.UI.Composition.CompositionBrush: ...
    @winrt_commethod(7)
    def put_Brush(self, value: win32more.Microsoft.UI.Composition.CompositionBrush) -> Void: ...
    @winrt_commethod(8)
    def get_CastingVisual(self) -> win32more.Microsoft.UI.Composition.Visual: ...
    @winrt_commethod(9)
    def put_CastingVisual(self, value: win32more.Microsoft.UI.Composition.Visual) -> Void: ...
    Brush = property(get_Brush, put_Brush)
    CastingVisual = property(get_CastingVisual, put_CastingVisual)
class ICompositionProjectedShadowCasterCollection(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionProjectedShadowCasterCollection'
    _iid_ = Guid('{b120bfdc-533c-57a9-ae16-d43ba52472c4}')
    @winrt_commethod(6)
    def get_Count(self) -> Int32: ...
    @winrt_commethod(7)
    def InsertAbove(self, newCaster: win32more.Microsoft.UI.Composition.CompositionProjectedShadowCaster, reference: win32more.Microsoft.UI.Composition.CompositionProjectedShadowCaster) -> Void: ...
    @winrt_commethod(8)
    def InsertAtBottom(self, newCaster: win32more.Microsoft.UI.Composition.CompositionProjectedShadowCaster) -> Void: ...
    @winrt_commethod(9)
    def InsertAtTop(self, newCaster: win32more.Microsoft.UI.Composition.CompositionProjectedShadowCaster) -> Void: ...
    @winrt_commethod(10)
    def InsertBelow(self, newCaster: win32more.Microsoft.UI.Composition.CompositionProjectedShadowCaster, reference: win32more.Microsoft.UI.Composition.CompositionProjectedShadowCaster) -> Void: ...
    @winrt_commethod(11)
    def Remove(self, caster: win32more.Microsoft.UI.Composition.CompositionProjectedShadowCaster) -> Void: ...
    @winrt_commethod(12)
    def RemoveAll(self) -> Void: ...
    Count = property(get_Count, None)
class ICompositionProjectedShadowCasterCollectionStatics(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionProjectedShadowCasterCollectionStatics'
    _iid_ = Guid('{43a98014-b88b-5b2a-b1e2-5e776ab77538}')
    @winrt_commethod(6)
    def get_MaxRespectedCasters(self) -> Int32: ...
    MaxRespectedCasters = property(get_MaxRespectedCasters, None)
class ICompositionProjectedShadowReceiver(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionProjectedShadowReceiver'
    _iid_ = Guid('{29fe12b0-f1a0-50e1-af28-2e943bc819d6}')
    @winrt_commethod(6)
    def get_ReceivingVisual(self) -> win32more.Microsoft.UI.Composition.Visual: ...
    @winrt_commethod(7)
    def put_ReceivingVisual(self, value: win32more.Microsoft.UI.Composition.Visual) -> Void: ...
    ReceivingVisual = property(get_ReceivingVisual, put_ReceivingVisual)
class ICompositionProjectedShadowReceiverUnorderedCollection(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionProjectedShadowReceiverUnorderedCollection'
    _iid_ = Guid('{2d35f751-a1fa-5fff-b156-6d8fcd8362ed}')
    @winrt_commethod(6)
    def Add(self, value: win32more.Microsoft.UI.Composition.CompositionProjectedShadowReceiver) -> Void: ...
    @winrt_commethod(7)
    def get_Count(self) -> Int32: ...
    @winrt_commethod(8)
    def Remove(self, value: win32more.Microsoft.UI.Composition.CompositionProjectedShadowReceiver) -> Void: ...
    @winrt_commethod(9)
    def RemoveAll(self) -> Void: ...
    Count = property(get_Count, None)
class ICompositionPropertySet(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionPropertySet'
    _iid_ = Guid('{97f7a17b-97be-5545-9f1c-0b9d44577f57}')
    @winrt_commethod(6)
    def InsertColor(self, propertyName: WinRT_String, value: win32more.Windows.UI.Color) -> Void: ...
    @winrt_commethod(7)
    def InsertMatrix3x2(self, propertyName: WinRT_String, value: win32more.Windows.Foundation.Numerics.Matrix3x2) -> Void: ...
    @winrt_commethod(8)
    def InsertMatrix4x4(self, propertyName: WinRT_String, value: win32more.Windows.Foundation.Numerics.Matrix4x4) -> Void: ...
    @winrt_commethod(9)
    def InsertQuaternion(self, propertyName: WinRT_String, value: win32more.Windows.Foundation.Numerics.Quaternion) -> Void: ...
    @winrt_commethod(10)
    def InsertScalar(self, propertyName: WinRT_String, value: Single) -> Void: ...
    @winrt_commethod(11)
    def InsertVector2(self, propertyName: WinRT_String, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_commethod(12)
    def InsertVector3(self, propertyName: WinRT_String, value: win32more.Windows.Foundation.Numerics.Vector3) -> Void: ...
    @winrt_commethod(13)
    def InsertVector4(self, propertyName: WinRT_String, value: win32more.Windows.Foundation.Numerics.Vector4) -> Void: ...
    @winrt_commethod(14)
    def TryGetColor(self, propertyName: WinRT_String, value: POINTER(win32more.Windows.UI.Color)) -> win32more.Microsoft.UI.Composition.CompositionGetValueStatus: ...
    @winrt_commethod(15)
    def TryGetMatrix3x2(self, propertyName: WinRT_String, value: POINTER(win32more.Windows.Foundation.Numerics.Matrix3x2)) -> win32more.Microsoft.UI.Composition.CompositionGetValueStatus: ...
    @winrt_commethod(16)
    def TryGetMatrix4x4(self, propertyName: WinRT_String, value: POINTER(win32more.Windows.Foundation.Numerics.Matrix4x4)) -> win32more.Microsoft.UI.Composition.CompositionGetValueStatus: ...
    @winrt_commethod(17)
    def TryGetQuaternion(self, propertyName: WinRT_String, value: POINTER(win32more.Windows.Foundation.Numerics.Quaternion)) -> win32more.Microsoft.UI.Composition.CompositionGetValueStatus: ...
    @winrt_commethod(18)
    def TryGetScalar(self, propertyName: WinRT_String, value: POINTER(Single)) -> win32more.Microsoft.UI.Composition.CompositionGetValueStatus: ...
    @winrt_commethod(19)
    def TryGetVector2(self, propertyName: WinRT_String, value: POINTER(win32more.Windows.Foundation.Numerics.Vector2)) -> win32more.Microsoft.UI.Composition.CompositionGetValueStatus: ...
    @winrt_commethod(20)
    def TryGetVector3(self, propertyName: WinRT_String, value: POINTER(win32more.Windows.Foundation.Numerics.Vector3)) -> win32more.Microsoft.UI.Composition.CompositionGetValueStatus: ...
    @winrt_commethod(21)
    def TryGetVector4(self, propertyName: WinRT_String, value: POINTER(win32more.Windows.Foundation.Numerics.Vector4)) -> win32more.Microsoft.UI.Composition.CompositionGetValueStatus: ...
class ICompositionPropertySet2(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionPropertySet2'
    _iid_ = Guid('{3db6d621-3497-55e4-95bf-8ae5e7c34c33}')
    @winrt_commethod(6)
    def InsertBoolean(self, propertyName: WinRT_String, value: Boolean) -> Void: ...
    @winrt_commethod(7)
    def TryGetBoolean(self, propertyName: WinRT_String, value: POINTER(Boolean)) -> win32more.Microsoft.UI.Composition.CompositionGetValueStatus: ...
class ICompositionRadialGradientBrush(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionRadialGradientBrush'
    _iid_ = Guid('{17662f3f-d351-5435-b3b4-ec26cefeccc5}')
    @winrt_commethod(6)
    def get_EllipseCenter(self) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_commethod(7)
    def put_EllipseCenter(self, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_commethod(8)
    def get_EllipseRadius(self) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_commethod(9)
    def put_EllipseRadius(self, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_commethod(10)
    def get_GradientOriginOffset(self) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_commethod(11)
    def put_GradientOriginOffset(self, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    EllipseCenter = property(get_EllipseCenter, put_EllipseCenter)
    EllipseRadius = property(get_EllipseRadius, put_EllipseRadius)
    GradientOriginOffset = property(get_GradientOriginOffset, put_GradientOriginOffset)
class ICompositionRectangleGeometry(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionRectangleGeometry'
    _iid_ = Guid('{bd551fcf-2c7f-5125-ac44-50a4f1d8fa76}')
    @winrt_commethod(6)
    def get_Offset(self) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_commethod(7)
    def put_Offset(self, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_commethod(8)
    def get_Size(self) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_commethod(9)
    def put_Size(self, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    Offset = property(get_Offset, put_Offset)
    Size = property(get_Size, put_Size)
class ICompositionRoundedRectangleGeometry(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionRoundedRectangleGeometry'
    _iid_ = Guid('{02eafc87-8d1f-5445-a416-d81baee8a750}')
    @winrt_commethod(6)
    def get_CornerRadius(self) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_commethod(7)
    def put_CornerRadius(self, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_commethod(8)
    def get_Offset(self) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_commethod(9)
    def put_Offset(self, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_commethod(10)
    def get_Size(self) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_commethod(11)
    def put_Size(self, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    CornerRadius = property(get_CornerRadius, put_CornerRadius)
    Offset = property(get_Offset, put_Offset)
    Size = property(get_Size, put_Size)
class ICompositionScopedBatch(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionScopedBatch'
    _iid_ = Guid('{d31ca572-99ce-5969-b042-6c2d330a3859}')
    @winrt_commethod(6)
    def get_IsActive(self) -> Boolean: ...
    @winrt_commethod(7)
    def get_IsEnded(self) -> Boolean: ...
    @winrt_commethod(8)
    def End(self) -> Void: ...
    @winrt_commethod(9)
    def Resume(self) -> Void: ...
    @winrt_commethod(10)
    def Suspend(self) -> Void: ...
    @winrt_commethod(11)
    def add_Completed(self, handler: win32more.Windows.Foundation.TypedEventHandler[IInspectable, win32more.Microsoft.UI.Composition.CompositionBatchCompletedEventArgs]) -> win32more.Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(12)
    def remove_Completed(self, token: win32more.Windows.Foundation.EventRegistrationToken) -> Void: ...
    IsActive = property(get_IsActive, None)
    IsEnded = property(get_IsEnded, None)
    Completed = event()
class ICompositionShadow(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionShadow'
    _iid_ = Guid('{176b8bb5-4dae-59b2-b9a0-2499b243267c}')
class ICompositionShadowFactory(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionShadowFactory'
    _iid_ = Guid('{ff27546d-9750-54ae-ab8c-126cbe9158c3}')
class ICompositionShape(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionShape'
    _iid_ = Guid('{ed75d4d8-437f-5640-9720-faae35ce5895}')
    @winrt_commethod(6)
    def get_CenterPoint(self) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_commethod(7)
    def put_CenterPoint(self, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_commethod(8)
    def get_Offset(self) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_commethod(9)
    def put_Offset(self, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_commethod(10)
    def get_RotationAngle(self) -> Single: ...
    @winrt_commethod(11)
    def put_RotationAngle(self, value: Single) -> Void: ...
    @winrt_commethod(12)
    def get_RotationAngleInDegrees(self) -> Single: ...
    @winrt_commethod(13)
    def put_RotationAngleInDegrees(self, value: Single) -> Void: ...
    @winrt_commethod(14)
    def get_Scale(self) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_commethod(15)
    def put_Scale(self, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_commethod(16)
    def get_TransformMatrix(self) -> win32more.Windows.Foundation.Numerics.Matrix3x2: ...
    @winrt_commethod(17)
    def put_TransformMatrix(self, value: win32more.Windows.Foundation.Numerics.Matrix3x2) -> Void: ...
    CenterPoint = property(get_CenterPoint, put_CenterPoint)
    Offset = property(get_Offset, put_Offset)
    RotationAngle = property(get_RotationAngle, put_RotationAngle)
    RotationAngleInDegrees = property(get_RotationAngleInDegrees, put_RotationAngleInDegrees)
    Scale = property(get_Scale, put_Scale)
    TransformMatrix = property(get_TransformMatrix, put_TransformMatrix)
class ICompositionShapeFactory(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionShapeFactory'
    _iid_ = Guid('{7aa2b987-9cdd-5b6e-8ac1-e989d78b4811}')
class ICompositionSpriteShape(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionSpriteShape'
    _iid_ = Guid('{982138f2-5781-509a-ba5d-112bcb0b98ef}')
    @winrt_commethod(6)
    def get_FillBrush(self) -> win32more.Microsoft.UI.Composition.CompositionBrush: ...
    @winrt_commethod(7)
    def put_FillBrush(self, value: win32more.Microsoft.UI.Composition.CompositionBrush) -> Void: ...
    @winrt_commethod(8)
    def get_Geometry(self) -> win32more.Microsoft.UI.Composition.CompositionGeometry: ...
    @winrt_commethod(9)
    def put_Geometry(self, value: win32more.Microsoft.UI.Composition.CompositionGeometry) -> Void: ...
    @winrt_commethod(10)
    def get_IsStrokeNonScaling(self) -> Boolean: ...
    @winrt_commethod(11)
    def put_IsStrokeNonScaling(self, value: Boolean) -> Void: ...
    @winrt_commethod(12)
    def get_StrokeBrush(self) -> win32more.Microsoft.UI.Composition.CompositionBrush: ...
    @winrt_commethod(13)
    def put_StrokeBrush(self, value: win32more.Microsoft.UI.Composition.CompositionBrush) -> Void: ...
    @winrt_commethod(14)
    def get_StrokeDashArray(self) -> win32more.Microsoft.UI.Composition.CompositionStrokeDashArray: ...
    @winrt_commethod(15)
    def get_StrokeDashCap(self) -> win32more.Microsoft.UI.Composition.CompositionStrokeCap: ...
    @winrt_commethod(16)
    def put_StrokeDashCap(self, value: win32more.Microsoft.UI.Composition.CompositionStrokeCap) -> Void: ...
    @winrt_commethod(17)
    def get_StrokeDashOffset(self) -> Single: ...
    @winrt_commethod(18)
    def put_StrokeDashOffset(self, value: Single) -> Void: ...
    @winrt_commethod(19)
    def get_StrokeEndCap(self) -> win32more.Microsoft.UI.Composition.CompositionStrokeCap: ...
    @winrt_commethod(20)
    def put_StrokeEndCap(self, value: win32more.Microsoft.UI.Composition.CompositionStrokeCap) -> Void: ...
    @winrt_commethod(21)
    def get_StrokeLineJoin(self) -> win32more.Microsoft.UI.Composition.CompositionStrokeLineJoin: ...
    @winrt_commethod(22)
    def put_StrokeLineJoin(self, value: win32more.Microsoft.UI.Composition.CompositionStrokeLineJoin) -> Void: ...
    @winrt_commethod(23)
    def get_StrokeMiterLimit(self) -> Single: ...
    @winrt_commethod(24)
    def put_StrokeMiterLimit(self, value: Single) -> Void: ...
    @winrt_commethod(25)
    def get_StrokeStartCap(self) -> win32more.Microsoft.UI.Composition.CompositionStrokeCap: ...
    @winrt_commethod(26)
    def put_StrokeStartCap(self, value: win32more.Microsoft.UI.Composition.CompositionStrokeCap) -> Void: ...
    @winrt_commethod(27)
    def get_StrokeThickness(self) -> Single: ...
    @winrt_commethod(28)
    def put_StrokeThickness(self, value: Single) -> Void: ...
    FillBrush = property(get_FillBrush, put_FillBrush)
    Geometry = property(get_Geometry, put_Geometry)
    IsStrokeNonScaling = property(get_IsStrokeNonScaling, put_IsStrokeNonScaling)
    StrokeBrush = property(get_StrokeBrush, put_StrokeBrush)
    StrokeDashArray = property(get_StrokeDashArray, None)
    StrokeDashCap = property(get_StrokeDashCap, put_StrokeDashCap)
    StrokeDashOffset = property(get_StrokeDashOffset, put_StrokeDashOffset)
    StrokeEndCap = property(get_StrokeEndCap, put_StrokeEndCap)
    StrokeLineJoin = property(get_StrokeLineJoin, put_StrokeLineJoin)
    StrokeMiterLimit = property(get_StrokeMiterLimit, put_StrokeMiterLimit)
    StrokeStartCap = property(get_StrokeStartCap, put_StrokeStartCap)
    StrokeThickness = property(get_StrokeThickness, put_StrokeThickness)
class ICompositionSupportsSystemBackdrop(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop'
    _iid_ = Guid('{397dafe4-b6c2-5bb9-951d-f5707de8b7bc}')
    @winrt_commethod(6)
    def get_SystemBackdrop(self) -> win32more.Windows.UI.Composition.CompositionBrush: ...
    @winrt_commethod(7)
    def put_SystemBackdrop(self, value: win32more.Windows.UI.Composition.CompositionBrush) -> Void: ...
    SystemBackdrop = property(get_SystemBackdrop, put_SystemBackdrop)
class ICompositionSurface(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionSurface'
    _iid_ = Guid('{9ec612c3-a5d2-4f97-9df3-6b49ce736215}')
class ICompositionSurfaceBrush(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionSurfaceBrush'
    _iid_ = Guid('{616bb5a5-0a33-512d-b4b1-3d3734f04aca}')
    @winrt_commethod(6)
    def get_BitmapInterpolationMode(self) -> win32more.Microsoft.UI.Composition.CompositionBitmapInterpolationMode: ...
    @winrt_commethod(7)
    def put_BitmapInterpolationMode(self, value: win32more.Microsoft.UI.Composition.CompositionBitmapInterpolationMode) -> Void: ...
    @winrt_commethod(8)
    def get_HorizontalAlignmentRatio(self) -> Single: ...
    @winrt_commethod(9)
    def put_HorizontalAlignmentRatio(self, value: Single) -> Void: ...
    @winrt_commethod(10)
    def get_Stretch(self) -> win32more.Microsoft.UI.Composition.CompositionStretch: ...
    @winrt_commethod(11)
    def put_Stretch(self, value: win32more.Microsoft.UI.Composition.CompositionStretch) -> Void: ...
    @winrt_commethod(12)
    def get_Surface(self) -> win32more.Microsoft.UI.Composition.ICompositionSurface: ...
    @winrt_commethod(13)
    def put_Surface(self, value: win32more.Microsoft.UI.Composition.ICompositionSurface) -> Void: ...
    @winrt_commethod(14)
    def get_VerticalAlignmentRatio(self) -> Single: ...
    @winrt_commethod(15)
    def put_VerticalAlignmentRatio(self, value: Single) -> Void: ...
    BitmapInterpolationMode = property(get_BitmapInterpolationMode, put_BitmapInterpolationMode)
    HorizontalAlignmentRatio = property(get_HorizontalAlignmentRatio, put_HorizontalAlignmentRatio)
    Stretch = property(get_Stretch, put_Stretch)
    Surface = property(get_Surface, put_Surface)
    VerticalAlignmentRatio = property(get_VerticalAlignmentRatio, put_VerticalAlignmentRatio)
class ICompositionSurfaceBrush2(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionSurfaceBrush2'
    _iid_ = Guid('{9904b7e3-084b-58b5-9ae1-3a2040dd7a22}')
    @winrt_commethod(6)
    def get_AnchorPoint(self) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_commethod(7)
    def put_AnchorPoint(self, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_commethod(8)
    def get_CenterPoint(self) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_commethod(9)
    def put_CenterPoint(self, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_commethod(10)
    def get_Offset(self) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_commethod(11)
    def put_Offset(self, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_commethod(12)
    def get_RotationAngle(self) -> Single: ...
    @winrt_commethod(13)
    def put_RotationAngle(self, value: Single) -> Void: ...
    @winrt_commethod(14)
    def get_RotationAngleInDegrees(self) -> Single: ...
    @winrt_commethod(15)
    def put_RotationAngleInDegrees(self, value: Single) -> Void: ...
    @winrt_commethod(16)
    def get_Scale(self) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_commethod(17)
    def put_Scale(self, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_commethod(18)
    def get_TransformMatrix(self) -> win32more.Windows.Foundation.Numerics.Matrix3x2: ...
    @winrt_commethod(19)
    def put_TransformMatrix(self, value: win32more.Windows.Foundation.Numerics.Matrix3x2) -> Void: ...
    AnchorPoint = property(get_AnchorPoint, put_AnchorPoint)
    CenterPoint = property(get_CenterPoint, put_CenterPoint)
    Offset = property(get_Offset, put_Offset)
    RotationAngle = property(get_RotationAngle, put_RotationAngle)
    RotationAngleInDegrees = property(get_RotationAngleInDegrees, put_RotationAngleInDegrees)
    Scale = property(get_Scale, put_Scale)
    TransformMatrix = property(get_TransformMatrix, put_TransformMatrix)
class ICompositionSurfaceBrush3(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionSurfaceBrush3'
    _iid_ = Guid('{8aa74c78-680c-5791-ab07-92db0f37e352}')
    @winrt_commethod(6)
    def get_SnapToPixels(self) -> Boolean: ...
    @winrt_commethod(7)
    def put_SnapToPixels(self, value: Boolean) -> Void: ...
    SnapToPixels = property(get_SnapToPixels, put_SnapToPixels)
class ICompositionSurfaceFacade(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionSurfaceFacade'
    _iid_ = Guid('{88ac5df6-377f-5cf7-a02e-ed5074d30452}')
    @winrt_commethod(6)
    def GetRealSurface(self) -> win32more.Microsoft.UI.Composition.ICompositionSurface: ...
class ICompositionTransform(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionTransform'
    _iid_ = Guid('{670e1826-1932-51d0-bbb3-063b4ca94b56}')
class ICompositionTransformFactory(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionTransformFactory'
    _iid_ = Guid('{78cc7bf2-cdc0-59d2-9c04-8d208de7ef5e}')
class ICompositionViewBox(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionViewBox'
    _iid_ = Guid('{667e4071-addd-5ded-b6c0-09e03a14be7e}')
    @winrt_commethod(6)
    def get_HorizontalAlignmentRatio(self) -> Single: ...
    @winrt_commethod(7)
    def put_HorizontalAlignmentRatio(self, value: Single) -> Void: ...
    @winrt_commethod(8)
    def get_Offset(self) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_commethod(9)
    def put_Offset(self, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_commethod(10)
    def get_Size(self) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_commethod(11)
    def put_Size(self, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_commethod(12)
    def get_Stretch(self) -> win32more.Microsoft.UI.Composition.CompositionStretch: ...
    @winrt_commethod(13)
    def put_Stretch(self, value: win32more.Microsoft.UI.Composition.CompositionStretch) -> Void: ...
    @winrt_commethod(14)
    def get_VerticalAlignmentRatio(self) -> Single: ...
    @winrt_commethod(15)
    def put_VerticalAlignmentRatio(self, value: Single) -> Void: ...
    HorizontalAlignmentRatio = property(get_HorizontalAlignmentRatio, put_HorizontalAlignmentRatio)
    Offset = property(get_Offset, put_Offset)
    Size = property(get_Size, put_Size)
    Stretch = property(get_Stretch, put_Stretch)
    VerticalAlignmentRatio = property(get_VerticalAlignmentRatio, put_VerticalAlignmentRatio)
class ICompositionVirtualDrawingSurface(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionVirtualDrawingSurface'
    _iid_ = Guid('{d741b99d-e248-5ba7-b728-8beea53fe28e}')
    @winrt_commethod(6)
    def Trim(self, rects: PassArray[win32more.Windows.Graphics.RectInt32]) -> Void: ...
class ICompositionVirtualDrawingSurfaceFactory(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionVirtualDrawingSurfaceFactory'
    _iid_ = Guid('{85895891-3f06-52e2-b5ea-d1fb595f6574}')
class ICompositionVisualSurface(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositionVisualSurface'
    _iid_ = Guid('{49e3624b-4d2e-53e7-9e02-f64831681134}')
    @winrt_commethod(6)
    def get_SourceVisual(self) -> win32more.Microsoft.UI.Composition.Visual: ...
    @winrt_commethod(7)
    def put_SourceVisual(self, value: win32more.Microsoft.UI.Composition.Visual) -> Void: ...
    @winrt_commethod(8)
    def get_SourceOffset(self) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_commethod(9)
    def put_SourceOffset(self, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_commethod(10)
    def get_SourceSize(self) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_commethod(11)
    def put_SourceSize(self, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    SourceOffset = property(get_SourceOffset, put_SourceOffset)
    SourceSize = property(get_SourceSize, put_SourceSize)
    SourceVisual = property(get_SourceVisual, put_SourceVisual)
class ICompositor(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositor'
    _iid_ = Guid('{95213c13-c4cb-57de-b267-d21ab901ae38}')
    @winrt_commethod(6)
    def CreateColorKeyFrameAnimation(self) -> win32more.Microsoft.UI.Composition.ColorKeyFrameAnimation: ...
    @winrt_commethod(7)
    def CreateColorBrush(self) -> win32more.Microsoft.UI.Composition.CompositionColorBrush: ...
    @winrt_commethod(8)
    def CreateColorBrushWithColor(self, color: win32more.Windows.UI.Color) -> win32more.Microsoft.UI.Composition.CompositionColorBrush: ...
    @winrt_commethod(9)
    def CreateContainerVisual(self) -> win32more.Microsoft.UI.Composition.ContainerVisual: ...
    @winrt_commethod(10)
    def CreateCubicBezierEasingFunction(self, controlPoint1: win32more.Windows.Foundation.Numerics.Vector2, controlPoint2: win32more.Windows.Foundation.Numerics.Vector2) -> win32more.Microsoft.UI.Composition.CubicBezierEasingFunction: ...
    @winrt_commethod(11)
    def CreateEffectFactory(self, graphicsEffect: win32more.Windows.Graphics.Effects.IGraphicsEffect) -> win32more.Microsoft.UI.Composition.CompositionEffectFactory: ...
    @winrt_commethod(12)
    def CreateEffectFactoryWithProperties(self, graphicsEffect: win32more.Windows.Graphics.Effects.IGraphicsEffect, animatableProperties: win32more.Windows.Foundation.Collections.IIterable[WinRT_String]) -> win32more.Microsoft.UI.Composition.CompositionEffectFactory: ...
    @winrt_commethod(13)
    def CreateExpressionAnimation(self) -> win32more.Microsoft.UI.Composition.ExpressionAnimation: ...
    @winrt_commethod(14)
    def CreateExpressionAnimationWithExpression(self, expression: WinRT_String) -> win32more.Microsoft.UI.Composition.ExpressionAnimation: ...
    @winrt_commethod(15)
    def CreateInsetClip(self) -> win32more.Microsoft.UI.Composition.InsetClip: ...
    @winrt_commethod(16)
    def CreateInsetClipWithInsets(self, leftInset: Single, topInset: Single, rightInset: Single, bottomInset: Single) -> win32more.Microsoft.UI.Composition.InsetClip: ...
    @winrt_commethod(17)
    def CreateLinearEasingFunction(self) -> win32more.Microsoft.UI.Composition.LinearEasingFunction: ...
    @winrt_commethod(18)
    def CreatePropertySet(self) -> win32more.Microsoft.UI.Composition.CompositionPropertySet: ...
    @winrt_commethod(19)
    def CreateQuaternionKeyFrameAnimation(self) -> win32more.Microsoft.UI.Composition.QuaternionKeyFrameAnimation: ...
    @winrt_commethod(20)
    def CreateScalarKeyFrameAnimation(self) -> win32more.Microsoft.UI.Composition.ScalarKeyFrameAnimation: ...
    @winrt_commethod(21)
    def CreateScopedBatch(self, batchType: win32more.Microsoft.UI.Composition.CompositionBatchTypes) -> win32more.Microsoft.UI.Composition.CompositionScopedBatch: ...
    @winrt_commethod(22)
    def CreateSpriteVisual(self) -> win32more.Microsoft.UI.Composition.SpriteVisual: ...
    @winrt_commethod(23)
    def CreateSurfaceBrush(self) -> win32more.Microsoft.UI.Composition.CompositionSurfaceBrush: ...
    @winrt_commethod(24)
    def CreateSurfaceBrushWithSurface(self, surface: win32more.Microsoft.UI.Composition.ICompositionSurface) -> win32more.Microsoft.UI.Composition.CompositionSurfaceBrush: ...
    @winrt_commethod(25)
    def CreateVector2KeyFrameAnimation(self) -> win32more.Microsoft.UI.Composition.Vector2KeyFrameAnimation: ...
    @winrt_commethod(26)
    def CreateVector3KeyFrameAnimation(self) -> win32more.Microsoft.UI.Composition.Vector3KeyFrameAnimation: ...
    @winrt_commethod(27)
    def CreateVector4KeyFrameAnimation(self) -> win32more.Microsoft.UI.Composition.Vector4KeyFrameAnimation: ...
    @winrt_commethod(28)
    def GetCommitBatch(self, batchType: win32more.Microsoft.UI.Composition.CompositionBatchTypes) -> win32more.Microsoft.UI.Composition.CompositionCommitBatch: ...
class ICompositor2(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositor2'
    _iid_ = Guid('{a9ffedad-3982-576d-a38a-c888ff605819}')
    @winrt_commethod(6)
    def CreateAmbientLight(self) -> win32more.Microsoft.UI.Composition.AmbientLight: ...
    @winrt_commethod(7)
    def CreateAnimationGroup(self) -> win32more.Microsoft.UI.Composition.CompositionAnimationGroup: ...
    @winrt_commethod(8)
    def CreateBackdropBrush(self) -> win32more.Microsoft.UI.Composition.CompositionBackdropBrush: ...
    @winrt_commethod(9)
    def CreateDistantLight(self) -> win32more.Microsoft.UI.Composition.DistantLight: ...
    @winrt_commethod(10)
    def CreateDropShadow(self) -> win32more.Microsoft.UI.Composition.DropShadow: ...
    @winrt_commethod(11)
    def CreateImplicitAnimationCollection(self) -> win32more.Microsoft.UI.Composition.ImplicitAnimationCollection: ...
    @winrt_commethod(12)
    def CreateLayerVisual(self) -> win32more.Microsoft.UI.Composition.LayerVisual: ...
    @winrt_commethod(13)
    def CreateMaskBrush(self) -> win32more.Microsoft.UI.Composition.CompositionMaskBrush: ...
    @winrt_commethod(14)
    def CreateNineGridBrush(self) -> win32more.Microsoft.UI.Composition.CompositionNineGridBrush: ...
    @winrt_commethod(15)
    def CreatePointLight(self) -> win32more.Microsoft.UI.Composition.PointLight: ...
    @winrt_commethod(16)
    def CreateSpotLight(self) -> win32more.Microsoft.UI.Composition.SpotLight: ...
    @winrt_commethod(17)
    def CreateStepEasingFunction(self) -> win32more.Microsoft.UI.Composition.StepEasingFunction: ...
    @winrt_commethod(18)
    def CreateStepEasingFunctionWithStepCount(self, stepCount: Int32) -> win32more.Microsoft.UI.Composition.StepEasingFunction: ...
class ICompositor4(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositor4'
    _iid_ = Guid('{ee444bca-735c-5cf2-b79d-a6dd46c16160}')
    @winrt_commethod(6)
    def CreateColorGradientStop(self) -> win32more.Microsoft.UI.Composition.CompositionColorGradientStop: ...
    @winrt_commethod(7)
    def CreateColorGradientStopWithOffsetAndColor(self, offset: Single, color: win32more.Windows.UI.Color) -> win32more.Microsoft.UI.Composition.CompositionColorGradientStop: ...
    @winrt_commethod(8)
    def CreateLinearGradientBrush(self) -> win32more.Microsoft.UI.Composition.CompositionLinearGradientBrush: ...
    @winrt_commethod(9)
    def CreateSpringScalarAnimation(self) -> win32more.Microsoft.UI.Composition.SpringScalarNaturalMotionAnimation: ...
    @winrt_commethod(10)
    def CreateSpringVector2Animation(self) -> win32more.Microsoft.UI.Composition.SpringVector2NaturalMotionAnimation: ...
    @winrt_commethod(11)
    def CreateSpringVector3Animation(self) -> win32more.Microsoft.UI.Composition.SpringVector3NaturalMotionAnimation: ...
class ICompositor5(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositor5'
    _iid_ = Guid('{bb52d644-a030-5c19-b883-577ded739ae7}')
    @winrt_commethod(6)
    def get_Comment(self) -> WinRT_String: ...
    @winrt_commethod(7)
    def put_Comment(self, value: WinRT_String) -> Void: ...
    @winrt_commethod(8)
    def get_GlobalPlaybackRate(self) -> Single: ...
    @winrt_commethod(9)
    def put_GlobalPlaybackRate(self, value: Single) -> Void: ...
    @winrt_commethod(10)
    def CreateBounceScalarAnimation(self) -> win32more.Microsoft.UI.Composition.BounceScalarNaturalMotionAnimation: ...
    @winrt_commethod(11)
    def CreateBounceVector2Animation(self) -> win32more.Microsoft.UI.Composition.BounceVector2NaturalMotionAnimation: ...
    @winrt_commethod(12)
    def CreateBounceVector3Animation(self) -> win32more.Microsoft.UI.Composition.BounceVector3NaturalMotionAnimation: ...
    @winrt_commethod(13)
    def CreateContainerShape(self) -> win32more.Microsoft.UI.Composition.CompositionContainerShape: ...
    @winrt_commethod(14)
    def CreateEllipseGeometry(self) -> win32more.Microsoft.UI.Composition.CompositionEllipseGeometry: ...
    @winrt_commethod(15)
    def CreateLineGeometry(self) -> win32more.Microsoft.UI.Composition.CompositionLineGeometry: ...
    @winrt_commethod(16)
    def CreatePathGeometry(self) -> win32more.Microsoft.UI.Composition.CompositionPathGeometry: ...
    @winrt_commethod(17)
    def CreatePathGeometryWithPath(self, path: win32more.Microsoft.UI.Composition.CompositionPath) -> win32more.Microsoft.UI.Composition.CompositionPathGeometry: ...
    @winrt_commethod(18)
    def CreatePathKeyFrameAnimation(self) -> win32more.Microsoft.UI.Composition.PathKeyFrameAnimation: ...
    @winrt_commethod(19)
    def CreateRectangleGeometry(self) -> win32more.Microsoft.UI.Composition.CompositionRectangleGeometry: ...
    @winrt_commethod(20)
    def CreateRoundedRectangleGeometry(self) -> win32more.Microsoft.UI.Composition.CompositionRoundedRectangleGeometry: ...
    @winrt_commethod(21)
    def CreateShapeVisual(self) -> win32more.Microsoft.UI.Composition.ShapeVisual: ...
    @winrt_commethod(22)
    def CreateSpriteShape(self) -> win32more.Microsoft.UI.Composition.CompositionSpriteShape: ...
    @winrt_commethod(23)
    def CreateSpriteShapeWithGeometry(self, geometry: win32more.Microsoft.UI.Composition.CompositionGeometry) -> win32more.Microsoft.UI.Composition.CompositionSpriteShape: ...
    @winrt_commethod(24)
    def CreateViewBox(self) -> win32more.Microsoft.UI.Composition.CompositionViewBox: ...
    @winrt_commethod(25)
    def RequestCommitAsync(self) -> win32more.Windows.Foundation.IAsyncAction: ...
    Comment = property(get_Comment, put_Comment)
    GlobalPlaybackRate = property(get_GlobalPlaybackRate, put_GlobalPlaybackRate)
class ICompositor6(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositor6'
    _iid_ = Guid('{5fd20200-c188-5737-b567-5e61741af19c}')
    @winrt_commethod(6)
    def CreateGeometricClip(self) -> win32more.Microsoft.UI.Composition.CompositionGeometricClip: ...
    @winrt_commethod(7)
    def CreateGeometricClipWithGeometry(self, geometry: win32more.Microsoft.UI.Composition.CompositionGeometry) -> win32more.Microsoft.UI.Composition.CompositionGeometricClip: ...
    @winrt_commethod(8)
    def CreateRedirectVisual(self) -> win32more.Microsoft.UI.Composition.RedirectVisual: ...
    @winrt_commethod(9)
    def CreateRedirectVisualWithSourceVisual(self, source: win32more.Microsoft.UI.Composition.Visual) -> win32more.Microsoft.UI.Composition.RedirectVisual: ...
    @winrt_commethod(10)
    def CreateBooleanKeyFrameAnimation(self) -> win32more.Microsoft.UI.Composition.BooleanKeyFrameAnimation: ...
class ICompositor7(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositor7'
    _iid_ = Guid('{5358b81b-4799-5e7c-906c-e3df3b2e95eb}')
    @winrt_commethod(6)
    def get_DispatcherQueue(self) -> win32more.Microsoft.UI.Dispatching.DispatcherQueue: ...
    @winrt_commethod(7)
    def CreateAnimationPropertyInfo(self) -> win32more.Microsoft.UI.Composition.AnimationPropertyInfo: ...
    @winrt_commethod(8)
    def CreateRectangleClip(self) -> win32more.Microsoft.UI.Composition.RectangleClip: ...
    @winrt_commethod(9)
    def CreateRectangleClipWithSides(self, left: Single, top: Single, right: Single, bottom: Single) -> win32more.Microsoft.UI.Composition.RectangleClip: ...
    @winrt_commethod(10)
    def CreateRectangleClipWithSidesAndRadius(self, left: Single, top: Single, right: Single, bottom: Single, topLeftRadius: win32more.Windows.Foundation.Numerics.Vector2, topRightRadius: win32more.Windows.Foundation.Numerics.Vector2, bottomRightRadius: win32more.Windows.Foundation.Numerics.Vector2, bottomLeftRadius: win32more.Windows.Foundation.Numerics.Vector2) -> win32more.Microsoft.UI.Composition.RectangleClip: ...
    DispatcherQueue = property(get_DispatcherQueue, None)
class ICompositor8(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositor8'
    _iid_ = Guid('{02f5c9ee-a3c0-577a-9d23-44024c8eacda}')
    @winrt_commethod(6)
    def CreateAnimationController(self) -> win32more.Microsoft.UI.Composition.AnimationController: ...
class ICompositorStatics(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositorStatics'
    _iid_ = Guid('{6baa947a-f103-55c6-91ad-3d275bea65c4}')
    @winrt_commethod(6)
    def get_MaxGlobalPlaybackRate(self) -> Single: ...
    @winrt_commethod(7)
    def get_MinGlobalPlaybackRate(self) -> Single: ...
    MaxGlobalPlaybackRate = property(get_MaxGlobalPlaybackRate, None)
    MinGlobalPlaybackRate = property(get_MinGlobalPlaybackRate, None)
class ICompositorWithProjectedShadow(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositorWithProjectedShadow'
    _iid_ = Guid('{60ab2bf2-b95c-5944-8b36-c9773b9f5256}')
    @winrt_commethod(6)
    def CreateProjectedShadowCaster(self) -> win32more.Microsoft.UI.Composition.CompositionProjectedShadowCaster: ...
    @winrt_commethod(7)
    def CreateProjectedShadow(self) -> win32more.Microsoft.UI.Composition.CompositionProjectedShadow: ...
    @winrt_commethod(8)
    def CreateProjectedShadowReceiver(self) -> win32more.Microsoft.UI.Composition.CompositionProjectedShadowReceiver: ...
class ICompositorWithRadialGradient(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositorWithRadialGradient'
    _iid_ = Guid('{fa4f8f7d-5cc7-5c9c-883b-fe878a2f3e30}')
    @winrt_commethod(6)
    def CreateRadialGradientBrush(self) -> win32more.Microsoft.UI.Composition.CompositionRadialGradientBrush: ...
class ICompositorWithVisualSurface(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICompositorWithVisualSurface'
    _iid_ = Guid('{5fcfe24a-690a-5378-acee-561e84bfb982}')
    @winrt_commethod(6)
    def CreateVisualSurface(self) -> win32more.Microsoft.UI.Composition.CompositionVisualSurface: ...
class IContainerVisual(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IContainerVisual'
    _iid_ = Guid('{c70dbce1-2c2f-5d8e-91a4-aae1121e6186}')
    @winrt_commethod(6)
    def get_Children(self) -> win32more.Microsoft.UI.Composition.VisualCollection: ...
    Children = property(get_Children, None)
class IContainerVisualFactory(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IContainerVisualFactory'
    _iid_ = Guid('{3fa45eeb-c6dd-5afd-971d-eaaf6245e716}')
class ICubicBezierEasingFunction(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ICubicBezierEasingFunction'
    _iid_ = Guid('{35e7fcde-f9ce-590a-8b88-64a82a6b4b48}')
    @winrt_commethod(6)
    def get_ControlPoint1(self) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_commethod(7)
    def get_ControlPoint2(self) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    ControlPoint1 = property(get_ControlPoint1, None)
    ControlPoint2 = property(get_ControlPoint2, None)
class IDistantLight(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IDistantLight'
    _iid_ = Guid('{125ef556-56ee-5c60-b944-571928ca03f5}')
    @winrt_commethod(6)
    def get_Color(self) -> win32more.Windows.UI.Color: ...
    @winrt_commethod(7)
    def put_Color(self, value: win32more.Windows.UI.Color) -> Void: ...
    @winrt_commethod(8)
    def get_CoordinateSpace(self) -> win32more.Microsoft.UI.Composition.Visual: ...
    @winrt_commethod(9)
    def put_CoordinateSpace(self, value: win32more.Microsoft.UI.Composition.Visual) -> Void: ...
    @winrt_commethod(10)
    def get_Direction(self) -> win32more.Windows.Foundation.Numerics.Vector3: ...
    @winrt_commethod(11)
    def put_Direction(self, value: win32more.Windows.Foundation.Numerics.Vector3) -> Void: ...
    Color = property(get_Color, put_Color)
    CoordinateSpace = property(get_CoordinateSpace, put_CoordinateSpace)
    Direction = property(get_Direction, put_Direction)
class IDistantLight2(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IDistantLight2'
    _iid_ = Guid('{9f97bfec-b6b9-51ee-8480-b546468c748f}')
    @winrt_commethod(6)
    def get_Intensity(self) -> Single: ...
    @winrt_commethod(7)
    def put_Intensity(self, value: Single) -> Void: ...
    Intensity = property(get_Intensity, put_Intensity)
class IDropShadow(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IDropShadow'
    _iid_ = Guid('{977095d2-265f-5f58-9789-cb7f85e98c9e}')
    @winrt_commethod(6)
    def get_BlurRadius(self) -> Single: ...
    @winrt_commethod(7)
    def put_BlurRadius(self, value: Single) -> Void: ...
    @winrt_commethod(8)
    def get_Color(self) -> win32more.Windows.UI.Color: ...
    @winrt_commethod(9)
    def put_Color(self, value: win32more.Windows.UI.Color) -> Void: ...
    @winrt_commethod(10)
    def get_Mask(self) -> win32more.Microsoft.UI.Composition.CompositionBrush: ...
    @winrt_commethod(11)
    def put_Mask(self, value: win32more.Microsoft.UI.Composition.CompositionBrush) -> Void: ...
    @winrt_commethod(12)
    def get_Offset(self) -> win32more.Windows.Foundation.Numerics.Vector3: ...
    @winrt_commethod(13)
    def put_Offset(self, value: win32more.Windows.Foundation.Numerics.Vector3) -> Void: ...
    @winrt_commethod(14)
    def get_Opacity(self) -> Single: ...
    @winrt_commethod(15)
    def put_Opacity(self, value: Single) -> Void: ...
    BlurRadius = property(get_BlurRadius, put_BlurRadius)
    Color = property(get_Color, put_Color)
    Mask = property(get_Mask, put_Mask)
    Offset = property(get_Offset, put_Offset)
    Opacity = property(get_Opacity, put_Opacity)
class IDropShadow2(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IDropShadow2'
    _iid_ = Guid('{cbc7c266-2d33-5711-b3b4-5699410bef56}')
    @winrt_commethod(6)
    def get_SourcePolicy(self) -> win32more.Microsoft.UI.Composition.CompositionDropShadowSourcePolicy: ...
    @winrt_commethod(7)
    def put_SourcePolicy(self, value: win32more.Microsoft.UI.Composition.CompositionDropShadowSourcePolicy) -> Void: ...
    SourcePolicy = property(get_SourcePolicy, put_SourcePolicy)
class IElasticEasingFunction(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IElasticEasingFunction'
    _iid_ = Guid('{b952e12f-4a50-51a9-a11a-23855f4aae07}')
    @winrt_commethod(6)
    def get_Mode(self) -> win32more.Microsoft.UI.Composition.CompositionEasingFunctionMode: ...
    @winrt_commethod(7)
    def get_Oscillations(self) -> Int32: ...
    @winrt_commethod(8)
    def get_Springiness(self) -> Single: ...
    Mode = property(get_Mode, None)
    Oscillations = property(get_Oscillations, None)
    Springiness = property(get_Springiness, None)
class IExponentialEasingFunction(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IExponentialEasingFunction'
    _iid_ = Guid('{df29ecc1-3ffc-565f-9d6c-533586908106}')
    @winrt_commethod(6)
    def get_Mode(self) -> win32more.Microsoft.UI.Composition.CompositionEasingFunctionMode: ...
    @winrt_commethod(7)
    def get_Exponent(self) -> Single: ...
    Exponent = property(get_Exponent, None)
    Mode = property(get_Mode, None)
class IExpressionAnimation(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IExpressionAnimation'
    _iid_ = Guid('{7fff5826-1992-56c0-9060-5ade561a4f2d}')
    @winrt_commethod(6)
    def get_Expression(self) -> WinRT_String: ...
    @winrt_commethod(7)
    def put_Expression(self, value: WinRT_String) -> Void: ...
    Expression = property(get_Expression, put_Expression)
class IImplicitAnimationCollection(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IImplicitAnimationCollection'
    _iid_ = Guid('{c5c0689e-f5ae-5bed-829b-c522cda39717}')
class IInsetClip(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IInsetClip'
    _iid_ = Guid('{f9d99475-7b59-5b28-a1d2-b832da6988c9}')
    @winrt_commethod(6)
    def get_BottomInset(self) -> Single: ...
    @winrt_commethod(7)
    def put_BottomInset(self, value: Single) -> Void: ...
    @winrt_commethod(8)
    def get_LeftInset(self) -> Single: ...
    @winrt_commethod(9)
    def put_LeftInset(self, value: Single) -> Void: ...
    @winrt_commethod(10)
    def get_RightInset(self) -> Single: ...
    @winrt_commethod(11)
    def put_RightInset(self, value: Single) -> Void: ...
    @winrt_commethod(12)
    def get_TopInset(self) -> Single: ...
    @winrt_commethod(13)
    def put_TopInset(self, value: Single) -> Void: ...
    BottomInset = property(get_BottomInset, put_BottomInset)
    LeftInset = property(get_LeftInset, put_LeftInset)
    RightInset = property(get_RightInset, put_RightInset)
    TopInset = property(get_TopInset, put_TopInset)
class IKeyFrameAnimation(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IKeyFrameAnimation'
    _iid_ = Guid('{5a8f57f0-f059-5b47-b308-c4c80fc71248}')
    @winrt_commethod(6)
    def get_DelayTime(self) -> win32more.Windows.Foundation.TimeSpan: ...
    @winrt_commethod(7)
    def put_DelayTime(self, value: win32more.Windows.Foundation.TimeSpan) -> Void: ...
    @winrt_commethod(8)
    def get_Duration(self) -> win32more.Windows.Foundation.TimeSpan: ...
    @winrt_commethod(9)
    def put_Duration(self, value: win32more.Windows.Foundation.TimeSpan) -> Void: ...
    @winrt_commethod(10)
    def get_IterationBehavior(self) -> win32more.Microsoft.UI.Composition.AnimationIterationBehavior: ...
    @winrt_commethod(11)
    def put_IterationBehavior(self, value: win32more.Microsoft.UI.Composition.AnimationIterationBehavior) -> Void: ...
    @winrt_commethod(12)
    def get_IterationCount(self) -> Int32: ...
    @winrt_commethod(13)
    def put_IterationCount(self, value: Int32) -> Void: ...
    @winrt_commethod(14)
    def get_KeyFrameCount(self) -> Int32: ...
    @winrt_commethod(15)
    def get_StopBehavior(self) -> win32more.Microsoft.UI.Composition.AnimationStopBehavior: ...
    @winrt_commethod(16)
    def put_StopBehavior(self, value: win32more.Microsoft.UI.Composition.AnimationStopBehavior) -> Void: ...
    @winrt_commethod(17)
    def InsertExpressionKeyFrame(self, normalizedProgressKey: Single, value: WinRT_String) -> Void: ...
    @winrt_commethod(18)
    def InsertExpressionKeyFrameWithEasingFunction(self, normalizedProgressKey: Single, value: WinRT_String, easingFunction: win32more.Microsoft.UI.Composition.CompositionEasingFunction) -> Void: ...
    DelayTime = property(get_DelayTime, put_DelayTime)
    Duration = property(get_Duration, put_Duration)
    IterationBehavior = property(get_IterationBehavior, put_IterationBehavior)
    IterationCount = property(get_IterationCount, put_IterationCount)
    KeyFrameCount = property(get_KeyFrameCount, None)
    StopBehavior = property(get_StopBehavior, put_StopBehavior)
class IKeyFrameAnimation2(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IKeyFrameAnimation2'
    _iid_ = Guid('{414692e5-8a7e-58ea-83e1-25ce475d9300}')
    @winrt_commethod(6)
    def get_Direction(self) -> win32more.Microsoft.UI.Composition.AnimationDirection: ...
    @winrt_commethod(7)
    def put_Direction(self, value: win32more.Microsoft.UI.Composition.AnimationDirection) -> Void: ...
    Direction = property(get_Direction, put_Direction)
class IKeyFrameAnimation3(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IKeyFrameAnimation3'
    _iid_ = Guid('{4f97e180-9bcb-5fc4-abbe-43aa3be327e7}')
    @winrt_commethod(6)
    def get_DelayBehavior(self) -> win32more.Microsoft.UI.Composition.AnimationDelayBehavior: ...
    @winrt_commethod(7)
    def put_DelayBehavior(self, value: win32more.Microsoft.UI.Composition.AnimationDelayBehavior) -> Void: ...
    DelayBehavior = property(get_DelayBehavior, put_DelayBehavior)
class IKeyFrameAnimationFactory(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IKeyFrameAnimationFactory'
    _iid_ = Guid('{7cccfc87-3baf-5100-b5f8-2f779f954f19}')
class ILayerVisual(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ILayerVisual'
    _iid_ = Guid('{64d05ca1-3bf6-5d4f-98a1-7500f2f23ebe}')
    @winrt_commethod(6)
    def get_Effect(self) -> win32more.Microsoft.UI.Composition.CompositionEffectBrush: ...
    @winrt_commethod(7)
    def put_Effect(self, value: win32more.Microsoft.UI.Composition.CompositionEffectBrush) -> Void: ...
    Effect = property(get_Effect, put_Effect)
class ILayerVisual2(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ILayerVisual2'
    _iid_ = Guid('{9ab2e401-af45-54da-9991-dd31273155d2}')
    @winrt_commethod(6)
    def get_Shadow(self) -> win32more.Microsoft.UI.Composition.CompositionShadow: ...
    @winrt_commethod(7)
    def put_Shadow(self, value: win32more.Microsoft.UI.Composition.CompositionShadow) -> Void: ...
    Shadow = property(get_Shadow, put_Shadow)
class ILinearEasingFunction(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ILinearEasingFunction'
    _iid_ = Guid('{79bfeef6-70c7-50a6-bb3a-0e9636148695}')
class INaturalMotionAnimation(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.INaturalMotionAnimation'
    _iid_ = Guid('{2ff54ebb-a035-50be-a73c-20014975ee31}')
    @winrt_commethod(6)
    def get_DelayBehavior(self) -> win32more.Microsoft.UI.Composition.AnimationDelayBehavior: ...
    @winrt_commethod(7)
    def put_DelayBehavior(self, value: win32more.Microsoft.UI.Composition.AnimationDelayBehavior) -> Void: ...
    @winrt_commethod(8)
    def get_DelayTime(self) -> win32more.Windows.Foundation.TimeSpan: ...
    @winrt_commethod(9)
    def put_DelayTime(self, value: win32more.Windows.Foundation.TimeSpan) -> Void: ...
    @winrt_commethod(10)
    def get_StopBehavior(self) -> win32more.Microsoft.UI.Composition.AnimationStopBehavior: ...
    @winrt_commethod(11)
    def put_StopBehavior(self, value: win32more.Microsoft.UI.Composition.AnimationStopBehavior) -> Void: ...
    DelayBehavior = property(get_DelayBehavior, put_DelayBehavior)
    DelayTime = property(get_DelayTime, put_DelayTime)
    StopBehavior = property(get_StopBehavior, put_StopBehavior)
class INaturalMotionAnimationFactory(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.INaturalMotionAnimationFactory'
    _iid_ = Guid('{0411a259-2622-59e2-a59e-1e23d8f83a9f}')
class IPathKeyFrameAnimation(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IPathKeyFrameAnimation'
    _iid_ = Guid('{2b692808-43da-5118-b66d-904a3ec74fd9}')
    @winrt_commethod(6)
    def InsertKeyFrame(self, normalizedProgressKey: Single, path: win32more.Microsoft.UI.Composition.CompositionPath) -> Void: ...
    @winrt_commethod(7)
    def InsertKeyFrameWithEasingFunction(self, normalizedProgressKey: Single, path: win32more.Microsoft.UI.Composition.CompositionPath, easingFunction: win32more.Microsoft.UI.Composition.CompositionEasingFunction) -> Void: ...
class IPointLight(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IPointLight'
    _iid_ = Guid('{ed5cc102-f0ac-59a8-8678-ce54146e7be8}')
    @winrt_commethod(6)
    def get_Color(self) -> win32more.Windows.UI.Color: ...
    @winrt_commethod(7)
    def put_Color(self, value: win32more.Windows.UI.Color) -> Void: ...
    @winrt_commethod(8)
    def get_ConstantAttenuation(self) -> Single: ...
    @winrt_commethod(9)
    def put_ConstantAttenuation(self, value: Single) -> Void: ...
    @winrt_commethod(10)
    def get_CoordinateSpace(self) -> win32more.Microsoft.UI.Composition.Visual: ...
    @winrt_commethod(11)
    def put_CoordinateSpace(self, value: win32more.Microsoft.UI.Composition.Visual) -> Void: ...
    @winrt_commethod(12)
    def get_LinearAttenuation(self) -> Single: ...
    @winrt_commethod(13)
    def put_LinearAttenuation(self, value: Single) -> Void: ...
    @winrt_commethod(14)
    def get_Offset(self) -> win32more.Windows.Foundation.Numerics.Vector3: ...
    @winrt_commethod(15)
    def put_Offset(self, value: win32more.Windows.Foundation.Numerics.Vector3) -> Void: ...
    @winrt_commethod(16)
    def get_QuadraticAttenuation(self) -> Single: ...
    @winrt_commethod(17)
    def put_QuadraticAttenuation(self, value: Single) -> Void: ...
    Color = property(get_Color, put_Color)
    ConstantAttenuation = property(get_ConstantAttenuation, put_ConstantAttenuation)
    CoordinateSpace = property(get_CoordinateSpace, put_CoordinateSpace)
    LinearAttenuation = property(get_LinearAttenuation, put_LinearAttenuation)
    Offset = property(get_Offset, put_Offset)
    QuadraticAttenuation = property(get_QuadraticAttenuation, put_QuadraticAttenuation)
class IPointLight2(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IPointLight2'
    _iid_ = Guid('{de466104-59d9-57d2-92b5-554d6d82edf2}')
    @winrt_commethod(6)
    def get_Intensity(self) -> Single: ...
    @winrt_commethod(7)
    def put_Intensity(self, value: Single) -> Void: ...
    Intensity = property(get_Intensity, put_Intensity)
class IPointLight3(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IPointLight3'
    _iid_ = Guid('{be30e87a-8cbb-5a56-8d24-2cd865f383b3}')
    @winrt_commethod(6)
    def get_MinAttenuationCutoff(self) -> Single: ...
    @winrt_commethod(7)
    def put_MinAttenuationCutoff(self, value: Single) -> Void: ...
    @winrt_commethod(8)
    def get_MaxAttenuationCutoff(self) -> Single: ...
    @winrt_commethod(9)
    def put_MaxAttenuationCutoff(self, value: Single) -> Void: ...
    MaxAttenuationCutoff = property(get_MaxAttenuationCutoff, put_MaxAttenuationCutoff)
    MinAttenuationCutoff = property(get_MinAttenuationCutoff, put_MinAttenuationCutoff)
class IPowerEasingFunction(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IPowerEasingFunction'
    _iid_ = Guid('{0268a272-ea06-5fb0-8def-49726bcee39b}')
    @winrt_commethod(6)
    def get_Mode(self) -> win32more.Microsoft.UI.Composition.CompositionEasingFunctionMode: ...
    @winrt_commethod(7)
    def get_Power(self) -> Single: ...
    Mode = property(get_Mode, None)
    Power = property(get_Power, None)
class IQuaternionKeyFrameAnimation(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IQuaternionKeyFrameAnimation'
    _iid_ = Guid('{e72d1026-da3b-5d56-858b-3a9aa3c57d70}')
    @winrt_commethod(6)
    def InsertKeyFrame(self, normalizedProgressKey: Single, value: win32more.Windows.Foundation.Numerics.Quaternion) -> Void: ...
    @winrt_commethod(7)
    def InsertKeyFrameWithEasingFunction(self, normalizedProgressKey: Single, value: win32more.Windows.Foundation.Numerics.Quaternion, easingFunction: win32more.Microsoft.UI.Composition.CompositionEasingFunction) -> Void: ...
class IRectangleClip(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IRectangleClip'
    _iid_ = Guid('{bc261502-2259-5c01-8616-556110a09657}')
    @winrt_commethod(6)
    def get_Bottom(self) -> Single: ...
    @winrt_commethod(7)
    def put_Bottom(self, value: Single) -> Void: ...
    @winrt_commethod(8)
    def get_BottomLeftRadius(self) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_commethod(9)
    def put_BottomLeftRadius(self, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_commethod(10)
    def get_BottomRightRadius(self) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_commethod(11)
    def put_BottomRightRadius(self, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_commethod(12)
    def get_Left(self) -> Single: ...
    @winrt_commethod(13)
    def put_Left(self, value: Single) -> Void: ...
    @winrt_commethod(14)
    def get_Right(self) -> Single: ...
    @winrt_commethod(15)
    def put_Right(self, value: Single) -> Void: ...
    @winrt_commethod(16)
    def get_Top(self) -> Single: ...
    @winrt_commethod(17)
    def put_Top(self, value: Single) -> Void: ...
    @winrt_commethod(18)
    def get_TopLeftRadius(self) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_commethod(19)
    def put_TopLeftRadius(self, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_commethod(20)
    def get_TopRightRadius(self) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_commethod(21)
    def put_TopRightRadius(self, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    Bottom = property(get_Bottom, put_Bottom)
    BottomLeftRadius = property(get_BottomLeftRadius, put_BottomLeftRadius)
    BottomRightRadius = property(get_BottomRightRadius, put_BottomRightRadius)
    Left = property(get_Left, put_Left)
    Right = property(get_Right, put_Right)
    Top = property(get_Top, put_Top)
    TopLeftRadius = property(get_TopLeftRadius, put_TopLeftRadius)
    TopRightRadius = property(get_TopRightRadius, put_TopRightRadius)
class IRedirectVisual(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IRedirectVisual'
    _iid_ = Guid('{6c10081a-cde1-50d9-ac05-78d6845b656f}')
    @winrt_commethod(6)
    def get_Source(self) -> win32more.Microsoft.UI.Composition.Visual: ...
    @winrt_commethod(7)
    def put_Source(self, value: win32more.Microsoft.UI.Composition.Visual) -> Void: ...
    Source = property(get_Source, put_Source)
class IRenderingDeviceReplacedEventArgs(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IRenderingDeviceReplacedEventArgs'
    _iid_ = Guid('{fe5b97c7-f656-56d6-a0cd-3e1227e4dd44}')
    @winrt_commethod(6)
    def get_GraphicsDevice(self) -> win32more.Microsoft.UI.Composition.CompositionGraphicsDevice: ...
    GraphicsDevice = property(get_GraphicsDevice, None)
class IScalarKeyFrameAnimation(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IScalarKeyFrameAnimation'
    _iid_ = Guid('{5a5f8abe-d129-5b25-8aff-8180fd9bfb22}')
    @winrt_commethod(6)
    def InsertKeyFrame(self, normalizedProgressKey: Single, value: Single) -> Void: ...
    @winrt_commethod(7)
    def InsertKeyFrameWithEasingFunction(self, normalizedProgressKey: Single, value: Single, easingFunction: win32more.Microsoft.UI.Composition.CompositionEasingFunction) -> Void: ...
class IScalarNaturalMotionAnimation(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IScalarNaturalMotionAnimation'
    _iid_ = Guid('{903224b0-2dbe-56eb-b9ea-33d2e3113181}')
    @winrt_commethod(6)
    def get_FinalValue(self) -> win32more.Windows.Foundation.IReference[Single]: ...
    @winrt_commethod(7)
    def put_FinalValue(self, value: win32more.Windows.Foundation.IReference[Single]) -> Void: ...
    @winrt_commethod(8)
    def get_InitialValue(self) -> win32more.Windows.Foundation.IReference[Single]: ...
    @winrt_commethod(9)
    def put_InitialValue(self, value: win32more.Windows.Foundation.IReference[Single]) -> Void: ...
    @winrt_commethod(10)
    def get_InitialVelocity(self) -> Single: ...
    @winrt_commethod(11)
    def put_InitialVelocity(self, value: Single) -> Void: ...
    FinalValue = property(get_FinalValue, put_FinalValue)
    InitialValue = property(get_InitialValue, put_InitialValue)
    InitialVelocity = property(get_InitialVelocity, put_InitialVelocity)
class IScalarNaturalMotionAnimationFactory(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IScalarNaturalMotionAnimationFactory'
    _iid_ = Guid('{14f8a9ab-976c-5e6f-890b-9a74d07fa39f}')
class IShapeVisual(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IShapeVisual'
    _iid_ = Guid('{a911c80b-a5a5-5aca-b8ff-c43f08f06143}')
    @winrt_commethod(6)
    def get_Shapes(self) -> win32more.Microsoft.UI.Composition.CompositionShapeCollection: ...
    @winrt_commethod(7)
    def get_ViewBox(self) -> win32more.Microsoft.UI.Composition.CompositionViewBox: ...
    @winrt_commethod(8)
    def put_ViewBox(self, value: win32more.Microsoft.UI.Composition.CompositionViewBox) -> Void: ...
    Shapes = property(get_Shapes, None)
    ViewBox = property(get_ViewBox, put_ViewBox)
class ISineEasingFunction(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ISineEasingFunction'
    _iid_ = Guid('{7fccb5f8-cb0e-5a01-a26b-98880ff49dc6}')
    @winrt_commethod(6)
    def get_Mode(self) -> win32more.Microsoft.UI.Composition.CompositionEasingFunctionMode: ...
    Mode = property(get_Mode, None)
class ISpotLight(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ISpotLight'
    _iid_ = Guid('{5935496a-0586-5f77-bd03-d5a6bb9e8fa0}')
    @winrt_commethod(6)
    def get_ConstantAttenuation(self) -> Single: ...
    @winrt_commethod(7)
    def put_ConstantAttenuation(self, value: Single) -> Void: ...
    @winrt_commethod(8)
    def get_CoordinateSpace(self) -> win32more.Microsoft.UI.Composition.Visual: ...
    @winrt_commethod(9)
    def put_CoordinateSpace(self, value: win32more.Microsoft.UI.Composition.Visual) -> Void: ...
    @winrt_commethod(10)
    def get_Direction(self) -> win32more.Windows.Foundation.Numerics.Vector3: ...
    @winrt_commethod(11)
    def put_Direction(self, value: win32more.Windows.Foundation.Numerics.Vector3) -> Void: ...
    @winrt_commethod(12)
    def get_InnerConeAngle(self) -> Single: ...
    @winrt_commethod(13)
    def put_InnerConeAngle(self, value: Single) -> Void: ...
    @winrt_commethod(14)
    def get_InnerConeAngleInDegrees(self) -> Single: ...
    @winrt_commethod(15)
    def put_InnerConeAngleInDegrees(self, value: Single) -> Void: ...
    @winrt_commethod(16)
    def get_InnerConeColor(self) -> win32more.Windows.UI.Color: ...
    @winrt_commethod(17)
    def put_InnerConeColor(self, value: win32more.Windows.UI.Color) -> Void: ...
    @winrt_commethod(18)
    def get_LinearAttenuation(self) -> Single: ...
    @winrt_commethod(19)
    def put_LinearAttenuation(self, value: Single) -> Void: ...
    @winrt_commethod(20)
    def get_Offset(self) -> win32more.Windows.Foundation.Numerics.Vector3: ...
    @winrt_commethod(21)
    def put_Offset(self, value: win32more.Windows.Foundation.Numerics.Vector3) -> Void: ...
    @winrt_commethod(22)
    def get_OuterConeAngle(self) -> Single: ...
    @winrt_commethod(23)
    def put_OuterConeAngle(self, value: Single) -> Void: ...
    @winrt_commethod(24)
    def get_OuterConeAngleInDegrees(self) -> Single: ...
    @winrt_commethod(25)
    def put_OuterConeAngleInDegrees(self, value: Single) -> Void: ...
    @winrt_commethod(26)
    def get_OuterConeColor(self) -> win32more.Windows.UI.Color: ...
    @winrt_commethod(27)
    def put_OuterConeColor(self, value: win32more.Windows.UI.Color) -> Void: ...
    @winrt_commethod(28)
    def get_QuadraticAttenuation(self) -> Single: ...
    @winrt_commethod(29)
    def put_QuadraticAttenuation(self, value: Single) -> Void: ...
    ConstantAttenuation = property(get_ConstantAttenuation, put_ConstantAttenuation)
    CoordinateSpace = property(get_CoordinateSpace, put_CoordinateSpace)
    Direction = property(get_Direction, put_Direction)
    InnerConeAngle = property(get_InnerConeAngle, put_InnerConeAngle)
    InnerConeAngleInDegrees = property(get_InnerConeAngleInDegrees, put_InnerConeAngleInDegrees)
    InnerConeColor = property(get_InnerConeColor, put_InnerConeColor)
    LinearAttenuation = property(get_LinearAttenuation, put_LinearAttenuation)
    Offset = property(get_Offset, put_Offset)
    OuterConeAngle = property(get_OuterConeAngle, put_OuterConeAngle)
    OuterConeAngleInDegrees = property(get_OuterConeAngleInDegrees, put_OuterConeAngleInDegrees)
    OuterConeColor = property(get_OuterConeColor, put_OuterConeColor)
    QuadraticAttenuation = property(get_QuadraticAttenuation, put_QuadraticAttenuation)
class ISpotLight2(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ISpotLight2'
    _iid_ = Guid('{49dd3b50-ec5c-5b6c-baa1-8504b13e3a67}')
    @winrt_commethod(6)
    def get_InnerConeIntensity(self) -> Single: ...
    @winrt_commethod(7)
    def put_InnerConeIntensity(self, value: Single) -> Void: ...
    @winrt_commethod(8)
    def get_OuterConeIntensity(self) -> Single: ...
    @winrt_commethod(9)
    def put_OuterConeIntensity(self, value: Single) -> Void: ...
    InnerConeIntensity = property(get_InnerConeIntensity, put_InnerConeIntensity)
    OuterConeIntensity = property(get_OuterConeIntensity, put_OuterConeIntensity)
class ISpotLight3(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ISpotLight3'
    _iid_ = Guid('{c6919941-0d9f-58c8-91e2-adef6e5e70a4}')
    @winrt_commethod(6)
    def get_MinAttenuationCutoff(self) -> Single: ...
    @winrt_commethod(7)
    def put_MinAttenuationCutoff(self, value: Single) -> Void: ...
    @winrt_commethod(8)
    def get_MaxAttenuationCutoff(self) -> Single: ...
    @winrt_commethod(9)
    def put_MaxAttenuationCutoff(self, value: Single) -> Void: ...
    MaxAttenuationCutoff = property(get_MaxAttenuationCutoff, put_MaxAttenuationCutoff)
    MinAttenuationCutoff = property(get_MinAttenuationCutoff, put_MinAttenuationCutoff)
class ISpringScalarNaturalMotionAnimation(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ISpringScalarNaturalMotionAnimation'
    _iid_ = Guid('{6f720afd-d3d0-5e78-9c2e-83092f6ea45e}')
    @winrt_commethod(6)
    def get_DampingRatio(self) -> Single: ...
    @winrt_commethod(7)
    def put_DampingRatio(self, value: Single) -> Void: ...
    @winrt_commethod(8)
    def get_Period(self) -> win32more.Windows.Foundation.TimeSpan: ...
    @winrt_commethod(9)
    def put_Period(self, value: win32more.Windows.Foundation.TimeSpan) -> Void: ...
    DampingRatio = property(get_DampingRatio, put_DampingRatio)
    Period = property(get_Period, put_Period)
class ISpringVector2NaturalMotionAnimation(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ISpringVector2NaturalMotionAnimation'
    _iid_ = Guid('{5b4580a4-2594-521e-b288-eaf2c2a16a66}')
    @winrt_commethod(6)
    def get_DampingRatio(self) -> Single: ...
    @winrt_commethod(7)
    def put_DampingRatio(self, value: Single) -> Void: ...
    @winrt_commethod(8)
    def get_Period(self) -> win32more.Windows.Foundation.TimeSpan: ...
    @winrt_commethod(9)
    def put_Period(self, value: win32more.Windows.Foundation.TimeSpan) -> Void: ...
    DampingRatio = property(get_DampingRatio, put_DampingRatio)
    Period = property(get_Period, put_Period)
class ISpringVector3NaturalMotionAnimation(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ISpringVector3NaturalMotionAnimation'
    _iid_ = Guid('{02d9e1c6-7434-5464-a1f6-d644ce1fc9a6}')
    @winrt_commethod(6)
    def get_DampingRatio(self) -> Single: ...
    @winrt_commethod(7)
    def put_DampingRatio(self, value: Single) -> Void: ...
    @winrt_commethod(8)
    def get_Period(self) -> win32more.Windows.Foundation.TimeSpan: ...
    @winrt_commethod(9)
    def put_Period(self, value: win32more.Windows.Foundation.TimeSpan) -> Void: ...
    DampingRatio = property(get_DampingRatio, put_DampingRatio)
    Period = property(get_Period, put_Period)
class ISpriteVisual(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ISpriteVisual'
    _iid_ = Guid('{7e964632-45e4-5761-806d-5b4022c14f26}')
    @winrt_commethod(6)
    def get_Brush(self) -> win32more.Microsoft.UI.Composition.CompositionBrush: ...
    @winrt_commethod(7)
    def put_Brush(self, value: win32more.Microsoft.UI.Composition.CompositionBrush) -> Void: ...
    Brush = property(get_Brush, put_Brush)
class ISpriteVisual2(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.ISpriteVisual2'
    _iid_ = Guid('{3cb43662-9ecf-5128-850d-9eb8437774f0}')
    @winrt_commethod(6)
    def get_Shadow(self) -> win32more.Microsoft.UI.Composition.CompositionShadow: ...
    @winrt_commethod(7)
    def put_Shadow(self, value: win32more.Microsoft.UI.Composition.CompositionShadow) -> Void: ...
    Shadow = property(get_Shadow, put_Shadow)
class IStepEasingFunction(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IStepEasingFunction'
    _iid_ = Guid('{c7b1d4cf-c562-56b3-b4e6-b21326165f71}')
    @winrt_commethod(6)
    def get_FinalStep(self) -> Int32: ...
    @winrt_commethod(7)
    def put_FinalStep(self, value: Int32) -> Void: ...
    @winrt_commethod(8)
    def get_InitialStep(self) -> Int32: ...
    @winrt_commethod(9)
    def put_InitialStep(self, value: Int32) -> Void: ...
    @winrt_commethod(10)
    def get_IsFinalStepSingleFrame(self) -> Boolean: ...
    @winrt_commethod(11)
    def put_IsFinalStepSingleFrame(self, value: Boolean) -> Void: ...
    @winrt_commethod(12)
    def get_IsInitialStepSingleFrame(self) -> Boolean: ...
    @winrt_commethod(13)
    def put_IsInitialStepSingleFrame(self, value: Boolean) -> Void: ...
    @winrt_commethod(14)
    def get_StepCount(self) -> Int32: ...
    @winrt_commethod(15)
    def put_StepCount(self, value: Int32) -> Void: ...
    FinalStep = property(get_FinalStep, put_FinalStep)
    InitialStep = property(get_InitialStep, put_InitialStep)
    IsFinalStepSingleFrame = property(get_IsFinalStepSingleFrame, put_IsFinalStepSingleFrame)
    IsInitialStepSingleFrame = property(get_IsInitialStepSingleFrame, put_IsInitialStepSingleFrame)
    StepCount = property(get_StepCount, put_StepCount)
class IVector2KeyFrameAnimation(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IVector2KeyFrameAnimation'
    _iid_ = Guid('{e9c5e3fd-43b7-526e-9da0-4c3ea96db27d}')
    @winrt_commethod(6)
    def InsertKeyFrame(self, normalizedProgressKey: Single, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_commethod(7)
    def InsertKeyFrameWithEasingFunction(self, normalizedProgressKey: Single, value: win32more.Windows.Foundation.Numerics.Vector2, easingFunction: win32more.Microsoft.UI.Composition.CompositionEasingFunction) -> Void: ...
class IVector2NaturalMotionAnimation(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IVector2NaturalMotionAnimation'
    _iid_ = Guid('{e00e60ce-d1be-5c24-885d-c1d0a749d109}')
    @winrt_commethod(6)
    def get_FinalValue(self) -> win32more.Windows.Foundation.IReference[win32more.Windows.Foundation.Numerics.Vector2]: ...
    @winrt_commethod(7)
    def put_FinalValue(self, value: win32more.Windows.Foundation.IReference[win32more.Windows.Foundation.Numerics.Vector2]) -> Void: ...
    @winrt_commethod(8)
    def get_InitialValue(self) -> win32more.Windows.Foundation.IReference[win32more.Windows.Foundation.Numerics.Vector2]: ...
    @winrt_commethod(9)
    def put_InitialValue(self, value: win32more.Windows.Foundation.IReference[win32more.Windows.Foundation.Numerics.Vector2]) -> Void: ...
    @winrt_commethod(10)
    def get_InitialVelocity(self) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_commethod(11)
    def put_InitialVelocity(self, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    FinalValue = property(get_FinalValue, put_FinalValue)
    InitialValue = property(get_InitialValue, put_InitialValue)
    InitialVelocity = property(get_InitialVelocity, put_InitialVelocity)
class IVector2NaturalMotionAnimationFactory(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IVector2NaturalMotionAnimationFactory'
    _iid_ = Guid('{e39aead8-80f9-5f64-8644-e9e5646b796f}')
class IVector3KeyFrameAnimation(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IVector3KeyFrameAnimation'
    _iid_ = Guid('{d7da980e-2dde-5dd1-a40c-d6868dd2449e}')
    @winrt_commethod(6)
    def InsertKeyFrame(self, normalizedProgressKey: Single, value: win32more.Windows.Foundation.Numerics.Vector3) -> Void: ...
    @winrt_commethod(7)
    def InsertKeyFrameWithEasingFunction(self, normalizedProgressKey: Single, value: win32more.Windows.Foundation.Numerics.Vector3, easingFunction: win32more.Microsoft.UI.Composition.CompositionEasingFunction) -> Void: ...
class IVector3NaturalMotionAnimation(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IVector3NaturalMotionAnimation'
    _iid_ = Guid('{13feeef2-d2c0-5b72-ad67-983a19b9b783}')
    @winrt_commethod(6)
    def get_FinalValue(self) -> win32more.Windows.Foundation.IReference[win32more.Windows.Foundation.Numerics.Vector3]: ...
    @winrt_commethod(7)
    def put_FinalValue(self, value: win32more.Windows.Foundation.IReference[win32more.Windows.Foundation.Numerics.Vector3]) -> Void: ...
    @winrt_commethod(8)
    def get_InitialValue(self) -> win32more.Windows.Foundation.IReference[win32more.Windows.Foundation.Numerics.Vector3]: ...
    @winrt_commethod(9)
    def put_InitialValue(self, value: win32more.Windows.Foundation.IReference[win32more.Windows.Foundation.Numerics.Vector3]) -> Void: ...
    @winrt_commethod(10)
    def get_InitialVelocity(self) -> win32more.Windows.Foundation.Numerics.Vector3: ...
    @winrt_commethod(11)
    def put_InitialVelocity(self, value: win32more.Windows.Foundation.Numerics.Vector3) -> Void: ...
    FinalValue = property(get_FinalValue, put_FinalValue)
    InitialValue = property(get_InitialValue, put_InitialValue)
    InitialVelocity = property(get_InitialVelocity, put_InitialVelocity)
class IVector3NaturalMotionAnimationFactory(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IVector3NaturalMotionAnimationFactory'
    _iid_ = Guid('{428241cb-be9c-5c2a-939c-ec78aa60bb8a}')
class IVector4KeyFrameAnimation(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IVector4KeyFrameAnimation'
    _iid_ = Guid('{16cea3b9-c5e3-5f6f-b5c7-da29a31ccfc7}')
    @winrt_commethod(6)
    def InsertKeyFrame(self, normalizedProgressKey: Single, value: win32more.Windows.Foundation.Numerics.Vector4) -> Void: ...
    @winrt_commethod(7)
    def InsertKeyFrameWithEasingFunction(self, normalizedProgressKey: Single, value: win32more.Windows.Foundation.Numerics.Vector4, easingFunction: win32more.Microsoft.UI.Composition.CompositionEasingFunction) -> Void: ...
class IVisual(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IVisual'
    _iid_ = Guid('{c0eeab6c-c897-5ac6-a1c9-63abd5055b9b}')
    @winrt_commethod(6)
    def get_AnchorPoint(self) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_commethod(7)
    def put_AnchorPoint(self, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_commethod(8)
    def get_BackfaceVisibility(self) -> win32more.Microsoft.UI.Composition.CompositionBackfaceVisibility: ...
    @winrt_commethod(9)
    def put_BackfaceVisibility(self, value: win32more.Microsoft.UI.Composition.CompositionBackfaceVisibility) -> Void: ...
    @winrt_commethod(10)
    def get_BorderMode(self) -> win32more.Microsoft.UI.Composition.CompositionBorderMode: ...
    @winrt_commethod(11)
    def put_BorderMode(self, value: win32more.Microsoft.UI.Composition.CompositionBorderMode) -> Void: ...
    @winrt_commethod(12)
    def get_CenterPoint(self) -> win32more.Windows.Foundation.Numerics.Vector3: ...
    @winrt_commethod(13)
    def put_CenterPoint(self, value: win32more.Windows.Foundation.Numerics.Vector3) -> Void: ...
    @winrt_commethod(14)
    def get_Clip(self) -> win32more.Microsoft.UI.Composition.CompositionClip: ...
    @winrt_commethod(15)
    def put_Clip(self, value: win32more.Microsoft.UI.Composition.CompositionClip) -> Void: ...
    @winrt_commethod(16)
    def get_CompositeMode(self) -> win32more.Microsoft.UI.Composition.CompositionCompositeMode: ...
    @winrt_commethod(17)
    def put_CompositeMode(self, value: win32more.Microsoft.UI.Composition.CompositionCompositeMode) -> Void: ...
    @winrt_commethod(18)
    def get_IsVisible(self) -> Boolean: ...
    @winrt_commethod(19)
    def put_IsVisible(self, value: Boolean) -> Void: ...
    @winrt_commethod(20)
    def get_Offset(self) -> win32more.Windows.Foundation.Numerics.Vector3: ...
    @winrt_commethod(21)
    def put_Offset(self, value: win32more.Windows.Foundation.Numerics.Vector3) -> Void: ...
    @winrt_commethod(22)
    def get_Opacity(self) -> Single: ...
    @winrt_commethod(23)
    def put_Opacity(self, value: Single) -> Void: ...
    @winrt_commethod(24)
    def get_Orientation(self) -> win32more.Windows.Foundation.Numerics.Quaternion: ...
    @winrt_commethod(25)
    def put_Orientation(self, value: win32more.Windows.Foundation.Numerics.Quaternion) -> Void: ...
    @winrt_commethod(26)
    def get_Parent(self) -> win32more.Microsoft.UI.Composition.ContainerVisual: ...
    @winrt_commethod(27)
    def get_RotationAngle(self) -> Single: ...
    @winrt_commethod(28)
    def put_RotationAngle(self, value: Single) -> Void: ...
    @winrt_commethod(29)
    def get_RotationAngleInDegrees(self) -> Single: ...
    @winrt_commethod(30)
    def put_RotationAngleInDegrees(self, value: Single) -> Void: ...
    @winrt_commethod(31)
    def get_RotationAxis(self) -> win32more.Windows.Foundation.Numerics.Vector3: ...
    @winrt_commethod(32)
    def put_RotationAxis(self, value: win32more.Windows.Foundation.Numerics.Vector3) -> Void: ...
    @winrt_commethod(33)
    def get_Scale(self) -> win32more.Windows.Foundation.Numerics.Vector3: ...
    @winrt_commethod(34)
    def put_Scale(self, value: win32more.Windows.Foundation.Numerics.Vector3) -> Void: ...
    @winrt_commethod(35)
    def get_Size(self) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_commethod(36)
    def put_Size(self, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_commethod(37)
    def get_TransformMatrix(self) -> win32more.Windows.Foundation.Numerics.Matrix4x4: ...
    @winrt_commethod(38)
    def put_TransformMatrix(self, value: win32more.Windows.Foundation.Numerics.Matrix4x4) -> Void: ...
    AnchorPoint = property(get_AnchorPoint, put_AnchorPoint)
    BackfaceVisibility = property(get_BackfaceVisibility, put_BackfaceVisibility)
    BorderMode = property(get_BorderMode, put_BorderMode)
    CenterPoint = property(get_CenterPoint, put_CenterPoint)
    Clip = property(get_Clip, put_Clip)
    CompositeMode = property(get_CompositeMode, put_CompositeMode)
    IsVisible = property(get_IsVisible, put_IsVisible)
    Offset = property(get_Offset, put_Offset)
    Opacity = property(get_Opacity, put_Opacity)
    Orientation = property(get_Orientation, put_Orientation)
    Parent = property(get_Parent, None)
    RotationAngle = property(get_RotationAngle, put_RotationAngle)
    RotationAngleInDegrees = property(get_RotationAngleInDegrees, put_RotationAngleInDegrees)
    RotationAxis = property(get_RotationAxis, put_RotationAxis)
    Scale = property(get_Scale, put_Scale)
    Size = property(get_Size, put_Size)
    TransformMatrix = property(get_TransformMatrix, put_TransformMatrix)
class IVisual2(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IVisual2'
    _iid_ = Guid('{492a7995-0c5c-5993-a283-52e4da3050ee}')
    @winrt_commethod(6)
    def get_ParentForTransform(self) -> win32more.Microsoft.UI.Composition.Visual: ...
    @winrt_commethod(7)
    def put_ParentForTransform(self, value: win32more.Microsoft.UI.Composition.Visual) -> Void: ...
    @winrt_commethod(8)
    def get_RelativeOffsetAdjustment(self) -> win32more.Windows.Foundation.Numerics.Vector3: ...
    @winrt_commethod(9)
    def put_RelativeOffsetAdjustment(self, value: win32more.Windows.Foundation.Numerics.Vector3) -> Void: ...
    @winrt_commethod(10)
    def get_RelativeSizeAdjustment(self) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_commethod(11)
    def put_RelativeSizeAdjustment(self, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    ParentForTransform = property(get_ParentForTransform, put_ParentForTransform)
    RelativeOffsetAdjustment = property(get_RelativeOffsetAdjustment, put_RelativeOffsetAdjustment)
    RelativeSizeAdjustment = property(get_RelativeSizeAdjustment, put_RelativeSizeAdjustment)
class IVisual3(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IVisual3'
    _iid_ = Guid('{972b70b0-950d-5656-a380-bd4a70775868}')
    @winrt_commethod(6)
    def get_IsHitTestVisible(self) -> Boolean: ...
    @winrt_commethod(7)
    def put_IsHitTestVisible(self, value: Boolean) -> Void: ...
    IsHitTestVisible = property(get_IsHitTestVisible, put_IsHitTestVisible)
class IVisual4(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IVisual4'
    _iid_ = Guid('{27cb223f-c431-57ac-b61e-d6b7515d579f}')
    @winrt_commethod(6)
    def get_IsPixelSnappingEnabled(self) -> Boolean: ...
    @winrt_commethod(7)
    def put_IsPixelSnappingEnabled(self, value: Boolean) -> Void: ...
    IsPixelSnappingEnabled = property(get_IsPixelSnappingEnabled, put_IsPixelSnappingEnabled)
class IVisualCollection(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IVisualCollection'
    _iid_ = Guid('{d002896d-67d8-5f69-ab70-581fa3bf370f}')
    @winrt_commethod(6)
    def get_Count(self) -> Int32: ...
    @winrt_commethod(7)
    def InsertAbove(self, newChild: win32more.Microsoft.UI.Composition.Visual, sibling: win32more.Microsoft.UI.Composition.Visual) -> Void: ...
    @winrt_commethod(8)
    def InsertAtBottom(self, newChild: win32more.Microsoft.UI.Composition.Visual) -> Void: ...
    @winrt_commethod(9)
    def InsertAtTop(self, newChild: win32more.Microsoft.UI.Composition.Visual) -> Void: ...
    @winrt_commethod(10)
    def InsertBelow(self, newChild: win32more.Microsoft.UI.Composition.Visual, sibling: win32more.Microsoft.UI.Composition.Visual) -> Void: ...
    @winrt_commethod(11)
    def Remove(self, child: win32more.Microsoft.UI.Composition.Visual) -> Void: ...
    @winrt_commethod(12)
    def RemoveAll(self) -> Void: ...
    Count = property(get_Count, None)
class IVisualElement(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IVisualElement'
    _iid_ = Guid('{2180f1f5-b5d8-4bf6-920a-12006e63efef}')
class IVisualElement2(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IVisualElement2'
    _iid_ = Guid('{bc950c8d-1db0-53aa-9dee-34271cd18ce6}')
    @winrt_commethod(6)
    def GetVisualInternal(self) -> win32more.Microsoft.UI.Composition.Visual: ...
class IVisualFactory(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IVisualFactory'
    _iid_ = Guid('{77bb4668-83fa-5bb5-b78b-5e6fdc3d4038}')
class IVisualUnorderedCollection(ComPtr):
    extends: IInspectable
    _classid_ = 'Microsoft.UI.Composition.IVisualUnorderedCollection'
    _iid_ = Guid('{4a97216e-793e-54e3-96e8-f9db790119cd}')
    @winrt_commethod(6)
    def get_Count(self) -> Int32: ...
    @winrt_commethod(7)
    def Add(self, newVisual: win32more.Microsoft.UI.Composition.Visual) -> Void: ...
    @winrt_commethod(8)
    def Remove(self, visual: win32more.Microsoft.UI.Composition.Visual) -> Void: ...
    @winrt_commethod(9)
    def RemoveAll(self) -> Void: ...
    Count = property(get_Count, None)
class ImplicitAnimationCollection(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionObject
    implements: Tuple[MappingProtocol[WinRT_String, win32more.Microsoft.UI.Composition.ICompositionAnimationBase]]
    default_interface: win32more.Microsoft.UI.Composition.IImplicitAnimationCollection
    _classid_ = 'Microsoft.UI.Composition.ImplicitAnimationCollection'
    @winrt_mixinmethod
    def First(self: win32more.Windows.Foundation.Collections.IIterable[win32more.Windows.Foundation.Collections.IKeyValuePair[WinRT_String, win32more.Microsoft.UI.Composition.ICompositionAnimationBase]]) -> win32more.Windows.Foundation.Collections.IIterator[win32more.Windows.Foundation.Collections.IKeyValuePair[WinRT_String, win32more.Microsoft.UI.Composition.ICompositionAnimationBase]]: ...
    @winrt_mixinmethod
    def Lookup(self: win32more.Windows.Foundation.Collections.IMap[WinRT_String, win32more.Microsoft.UI.Composition.ICompositionAnimationBase], key: WinRT_String) -> win32more.Microsoft.UI.Composition.ICompositionAnimationBase: ...
    @winrt_mixinmethod
    def get_Size(self: win32more.Windows.Foundation.Collections.IMap[WinRT_String, win32more.Microsoft.UI.Composition.ICompositionAnimationBase]) -> UInt32: ...
    @winrt_mixinmethod
    def HasKey(self: win32more.Windows.Foundation.Collections.IMap[WinRT_String, win32more.Microsoft.UI.Composition.ICompositionAnimationBase], key: WinRT_String) -> Boolean: ...
    @winrt_mixinmethod
    def GetView(self: win32more.Windows.Foundation.Collections.IMap[WinRT_String, win32more.Microsoft.UI.Composition.ICompositionAnimationBase]) -> win32more.Windows.Foundation.Collections.IMapView[WinRT_String, win32more.Microsoft.UI.Composition.ICompositionAnimationBase]: ...
    @winrt_mixinmethod
    def Insert(self: win32more.Windows.Foundation.Collections.IMap[WinRT_String, win32more.Microsoft.UI.Composition.ICompositionAnimationBase], key: WinRT_String, value: win32more.Microsoft.UI.Composition.ICompositionAnimationBase) -> Boolean: ...
    @winrt_mixinmethod
    def Remove(self: win32more.Windows.Foundation.Collections.IMap[WinRT_String, win32more.Microsoft.UI.Composition.ICompositionAnimationBase], key: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def Clear(self: win32more.Windows.Foundation.Collections.IMap[WinRT_String, win32more.Microsoft.UI.Composition.ICompositionAnimationBase]) -> Void: ...
    Size = property(get_Size, None)
class InitialValueExpressionCollection(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionObject
    implements: Tuple[MappingProtocol[WinRT_String, WinRT_String]]
    default_interface: win32more.Windows.Foundation.Collections.IMap[WinRT_String, WinRT_String]
    _classid_ = 'Microsoft.UI.Composition.InitialValueExpressionCollection'
    @winrt_mixinmethod
    def get_Size(self: win32more.Windows.Foundation.Collections.IMap[WinRT_String, WinRT_String]) -> UInt32: ...
    @winrt_mixinmethod
    def Insert(self: win32more.Windows.Foundation.Collections.IMap[WinRT_String, WinRT_String], key: WinRT_String, value: WinRT_String) -> Boolean: ...
    @winrt_mixinmethod
    def HasKey(self: win32more.Windows.Foundation.Collections.IMap[WinRT_String, WinRT_String], key: WinRT_String) -> Boolean: ...
    @winrt_mixinmethod
    def GetView(self: win32more.Windows.Foundation.Collections.IMap[WinRT_String, WinRT_String]) -> win32more.Windows.Foundation.Collections.IMapView[WinRT_String, WinRT_String]: ...
    @winrt_mixinmethod
    def Lookup(self: win32more.Windows.Foundation.Collections.IMap[WinRT_String, WinRT_String], key: WinRT_String) -> WinRT_String: ...
    @winrt_mixinmethod
    def Remove(self: win32more.Windows.Foundation.Collections.IMap[WinRT_String, WinRT_String], key: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def Clear(self: win32more.Windows.Foundation.Collections.IMap[WinRT_String, WinRT_String]) -> Void: ...
    @winrt_mixinmethod
    def First(self: win32more.Windows.Foundation.Collections.IIterable[win32more.Windows.Foundation.Collections.IKeyValuePair[WinRT_String, WinRT_String]]) -> win32more.Windows.Foundation.Collections.IIterator[win32more.Windows.Foundation.Collections.IKeyValuePair[WinRT_String, WinRT_String]]: ...
    Size = property(get_Size, None)
class InsetClip(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionClip
    default_interface: win32more.Microsoft.UI.Composition.IInsetClip
    _classid_ = 'Microsoft.UI.Composition.InsetClip'
    @winrt_mixinmethod
    def put_TopInset(self: win32more.Microsoft.UI.Composition.IInsetClip, value: Single) -> Void: ...
    @winrt_mixinmethod
    def get_BottomInset(self: win32more.Microsoft.UI.Composition.IInsetClip) -> Single: ...
    @winrt_mixinmethod
    def get_LeftInset(self: win32more.Microsoft.UI.Composition.IInsetClip) -> Single: ...
    @winrt_mixinmethod
    def put_LeftInset(self: win32more.Microsoft.UI.Composition.IInsetClip, value: Single) -> Void: ...
    @winrt_mixinmethod
    def get_RightInset(self: win32more.Microsoft.UI.Composition.IInsetClip) -> Single: ...
    @winrt_mixinmethod
    def put_RightInset(self: win32more.Microsoft.UI.Composition.IInsetClip, value: Single) -> Void: ...
    @winrt_mixinmethod
    def get_TopInset(self: win32more.Microsoft.UI.Composition.IInsetClip) -> Single: ...
    @winrt_mixinmethod
    def put_BottomInset(self: win32more.Microsoft.UI.Composition.IInsetClip, value: Single) -> Void: ...
    BottomInset = property(get_BottomInset, put_BottomInset)
    LeftInset = property(get_LeftInset, put_LeftInset)
    RightInset = property(get_RightInset, put_RightInset)
    TopInset = property(get_TopInset, put_TopInset)
class KeyFrameAnimation(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionAnimation
    default_interface: win32more.Microsoft.UI.Composition.IKeyFrameAnimation
    _classid_ = 'Microsoft.UI.Composition.KeyFrameAnimation'
    @winrt_mixinmethod
    def get_StopBehavior(self: win32more.Microsoft.UI.Composition.IKeyFrameAnimation) -> win32more.Microsoft.UI.Composition.AnimationStopBehavior: ...
    @winrt_mixinmethod
    def put_StopBehavior(self: win32more.Microsoft.UI.Composition.IKeyFrameAnimation, value: win32more.Microsoft.UI.Composition.AnimationStopBehavior) -> Void: ...
    @winrt_mixinmethod
    def InsertExpressionKeyFrame(self: win32more.Microsoft.UI.Composition.IKeyFrameAnimation, normalizedProgressKey: Single, value: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def put_DelayBehavior(self: win32more.Microsoft.UI.Composition.IKeyFrameAnimation3, value: win32more.Microsoft.UI.Composition.AnimationDelayBehavior) -> Void: ...
    @winrt_mixinmethod
    def put_DelayTime(self: win32more.Microsoft.UI.Composition.IKeyFrameAnimation, value: win32more.Windows.Foundation.TimeSpan) -> Void: ...
    @winrt_mixinmethod
    def get_Duration(self: win32more.Microsoft.UI.Composition.IKeyFrameAnimation) -> win32more.Windows.Foundation.TimeSpan: ...
    @winrt_mixinmethod
    def put_Duration(self: win32more.Microsoft.UI.Composition.IKeyFrameAnimation, value: win32more.Windows.Foundation.TimeSpan) -> Void: ...
    @winrt_mixinmethod
    def get_IterationBehavior(self: win32more.Microsoft.UI.Composition.IKeyFrameAnimation) -> win32more.Microsoft.UI.Composition.AnimationIterationBehavior: ...
    @winrt_mixinmethod
    def put_IterationBehavior(self: win32more.Microsoft.UI.Composition.IKeyFrameAnimation, value: win32more.Microsoft.UI.Composition.AnimationIterationBehavior) -> Void: ...
    @winrt_mixinmethod
    def get_IterationCount(self: win32more.Microsoft.UI.Composition.IKeyFrameAnimation) -> Int32: ...
    @winrt_mixinmethod
    def put_IterationCount(self: win32more.Microsoft.UI.Composition.IKeyFrameAnimation, value: Int32) -> Void: ...
    @winrt_mixinmethod
    def get_KeyFrameCount(self: win32more.Microsoft.UI.Composition.IKeyFrameAnimation) -> Int32: ...
    @winrt_mixinmethod
    def get_DelayTime(self: win32more.Microsoft.UI.Composition.IKeyFrameAnimation) -> win32more.Windows.Foundation.TimeSpan: ...
    @winrt_mixinmethod
    def InsertExpressionKeyFrameWithEasingFunction(self: win32more.Microsoft.UI.Composition.IKeyFrameAnimation, normalizedProgressKey: Single, value: WinRT_String, easingFunction: win32more.Microsoft.UI.Composition.CompositionEasingFunction) -> Void: ...
    @winrt_mixinmethod
    def get_Direction(self: win32more.Microsoft.UI.Composition.IKeyFrameAnimation2) -> win32more.Microsoft.UI.Composition.AnimationDirection: ...
    @winrt_mixinmethod
    def put_Direction(self: win32more.Microsoft.UI.Composition.IKeyFrameAnimation2, value: win32more.Microsoft.UI.Composition.AnimationDirection) -> Void: ...
    @winrt_mixinmethod
    def get_DelayBehavior(self: win32more.Microsoft.UI.Composition.IKeyFrameAnimation3) -> win32more.Microsoft.UI.Composition.AnimationDelayBehavior: ...
    DelayBehavior = property(get_DelayBehavior, put_DelayBehavior)
    DelayTime = property(get_DelayTime, put_DelayTime)
    Direction = property(get_Direction, put_Direction)
    Duration = property(get_Duration, put_Duration)
    IterationBehavior = property(get_IterationBehavior, put_IterationBehavior)
    IterationCount = property(get_IterationCount, put_IterationCount)
    KeyFrameCount = property(get_KeyFrameCount, None)
    StopBehavior = property(get_StopBehavior, put_StopBehavior)
class LayerVisual(ComPtr):
    extends: win32more.Microsoft.UI.Composition.ContainerVisual
    default_interface: win32more.Microsoft.UI.Composition.ILayerVisual
    _classid_ = 'Microsoft.UI.Composition.LayerVisual'
    @winrt_mixinmethod
    def get_Effect(self: win32more.Microsoft.UI.Composition.ILayerVisual) -> win32more.Microsoft.UI.Composition.CompositionEffectBrush: ...
    @winrt_mixinmethod
    def put_Effect(self: win32more.Microsoft.UI.Composition.ILayerVisual, value: win32more.Microsoft.UI.Composition.CompositionEffectBrush) -> Void: ...
    @winrt_mixinmethod
    def put_Shadow(self: win32more.Microsoft.UI.Composition.ILayerVisual2, value: win32more.Microsoft.UI.Composition.CompositionShadow) -> Void: ...
    @winrt_mixinmethod
    def get_Shadow(self: win32more.Microsoft.UI.Composition.ILayerVisual2) -> win32more.Microsoft.UI.Composition.CompositionShadow: ...
    Effect = property(get_Effect, put_Effect)
    Shadow = property(get_Shadow, put_Shadow)
class LinearEasingFunction(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionEasingFunction
    default_interface: win32more.Microsoft.UI.Composition.ILinearEasingFunction
    _classid_ = 'Microsoft.UI.Composition.LinearEasingFunction'
class NaturalMotionAnimation(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionAnimation
    default_interface: win32more.Microsoft.UI.Composition.INaturalMotionAnimation
    _classid_ = 'Microsoft.UI.Composition.NaturalMotionAnimation'
    @winrt_mixinmethod
    def get_DelayTime(self: win32more.Microsoft.UI.Composition.INaturalMotionAnimation) -> win32more.Windows.Foundation.TimeSpan: ...
    @winrt_mixinmethod
    def get_DelayBehavior(self: win32more.Microsoft.UI.Composition.INaturalMotionAnimation) -> win32more.Microsoft.UI.Composition.AnimationDelayBehavior: ...
    @winrt_mixinmethod
    def put_StopBehavior(self: win32more.Microsoft.UI.Composition.INaturalMotionAnimation, value: win32more.Microsoft.UI.Composition.AnimationStopBehavior) -> Void: ...
    @winrt_mixinmethod
    def get_StopBehavior(self: win32more.Microsoft.UI.Composition.INaturalMotionAnimation) -> win32more.Microsoft.UI.Composition.AnimationStopBehavior: ...
    @winrt_mixinmethod
    def put_DelayBehavior(self: win32more.Microsoft.UI.Composition.INaturalMotionAnimation, value: win32more.Microsoft.UI.Composition.AnimationDelayBehavior) -> Void: ...
    @winrt_mixinmethod
    def put_DelayTime(self: win32more.Microsoft.UI.Composition.INaturalMotionAnimation, value: win32more.Windows.Foundation.TimeSpan) -> Void: ...
    DelayBehavior = property(get_DelayBehavior, put_DelayBehavior)
    DelayTime = property(get_DelayTime, put_DelayTime)
    StopBehavior = property(get_StopBehavior, put_StopBehavior)
class PathKeyFrameAnimation(ComPtr):
    extends: win32more.Microsoft.UI.Composition.KeyFrameAnimation
    default_interface: win32more.Microsoft.UI.Composition.IPathKeyFrameAnimation
    _classid_ = 'Microsoft.UI.Composition.PathKeyFrameAnimation'
    @winrt_mixinmethod
    def InsertKeyFrameWithEasingFunction(self: win32more.Microsoft.UI.Composition.IPathKeyFrameAnimation, normalizedProgressKey: Single, path: win32more.Microsoft.UI.Composition.CompositionPath, easingFunction: win32more.Microsoft.UI.Composition.CompositionEasingFunction) -> Void: ...
    @winrt_mixinmethod
    def InsertKeyFrame(self: win32more.Microsoft.UI.Composition.IPathKeyFrameAnimation, normalizedProgressKey: Single, path: win32more.Microsoft.UI.Composition.CompositionPath) -> Void: ...
class PointLight(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionLight
    default_interface: win32more.Microsoft.UI.Composition.IPointLight
    _classid_ = 'Microsoft.UI.Composition.PointLight'
    @winrt_mixinmethod
    def put_QuadraticAttenuation(self: win32more.Microsoft.UI.Composition.IPointLight, value: Single) -> Void: ...
    @winrt_mixinmethod
    def get_LinearAttenuation(self: win32more.Microsoft.UI.Composition.IPointLight) -> Single: ...
    @winrt_mixinmethod
    def put_LinearAttenuation(self: win32more.Microsoft.UI.Composition.IPointLight, value: Single) -> Void: ...
    @winrt_mixinmethod
    def get_Offset(self: win32more.Microsoft.UI.Composition.IPointLight) -> win32more.Windows.Foundation.Numerics.Vector3: ...
    @winrt_mixinmethod
    def put_Offset(self: win32more.Microsoft.UI.Composition.IPointLight, value: win32more.Windows.Foundation.Numerics.Vector3) -> Void: ...
    @winrt_mixinmethod
    def get_QuadraticAttenuation(self: win32more.Microsoft.UI.Composition.IPointLight) -> Single: ...
    @winrt_mixinmethod
    def get_Color(self: win32more.Microsoft.UI.Composition.IPointLight) -> win32more.Windows.UI.Color: ...
    @winrt_mixinmethod
    def put_CoordinateSpace(self: win32more.Microsoft.UI.Composition.IPointLight, value: win32more.Microsoft.UI.Composition.Visual) -> Void: ...
    @winrt_mixinmethod
    def put_Intensity(self: win32more.Microsoft.UI.Composition.IPointLight2, value: Single) -> Void: ...
    @winrt_mixinmethod
    def get_MinAttenuationCutoff(self: win32more.Microsoft.UI.Composition.IPointLight3) -> Single: ...
    @winrt_mixinmethod
    def put_MinAttenuationCutoff(self: win32more.Microsoft.UI.Composition.IPointLight3, value: Single) -> Void: ...
    @winrt_mixinmethod
    def get_MaxAttenuationCutoff(self: win32more.Microsoft.UI.Composition.IPointLight3) -> Single: ...
    @winrt_mixinmethod
    def put_MaxAttenuationCutoff(self: win32more.Microsoft.UI.Composition.IPointLight3, value: Single) -> Void: ...
    @winrt_mixinmethod
    def get_Intensity(self: win32more.Microsoft.UI.Composition.IPointLight2) -> Single: ...
    @winrt_mixinmethod
    def put_Color(self: win32more.Microsoft.UI.Composition.IPointLight, value: win32more.Windows.UI.Color) -> Void: ...
    @winrt_mixinmethod
    def get_ConstantAttenuation(self: win32more.Microsoft.UI.Composition.IPointLight) -> Single: ...
    @winrt_mixinmethod
    def put_ConstantAttenuation(self: win32more.Microsoft.UI.Composition.IPointLight, value: Single) -> Void: ...
    @winrt_mixinmethod
    def get_CoordinateSpace(self: win32more.Microsoft.UI.Composition.IPointLight) -> win32more.Microsoft.UI.Composition.Visual: ...
    Color = property(get_Color, put_Color)
    ConstantAttenuation = property(get_ConstantAttenuation, put_ConstantAttenuation)
    CoordinateSpace = property(get_CoordinateSpace, put_CoordinateSpace)
    Intensity = property(get_Intensity, put_Intensity)
    LinearAttenuation = property(get_LinearAttenuation, put_LinearAttenuation)
    MaxAttenuationCutoff = property(get_MaxAttenuationCutoff, put_MaxAttenuationCutoff)
    MinAttenuationCutoff = property(get_MinAttenuationCutoff, put_MinAttenuationCutoff)
    Offset = property(get_Offset, put_Offset)
    QuadraticAttenuation = property(get_QuadraticAttenuation, put_QuadraticAttenuation)
class PowerEasingFunction(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionEasingFunction
    default_interface: win32more.Microsoft.UI.Composition.IPowerEasingFunction
    _classid_ = 'Microsoft.UI.Composition.PowerEasingFunction'
    @winrt_mixinmethod
    def get_Mode(self: win32more.Microsoft.UI.Composition.IPowerEasingFunction) -> win32more.Microsoft.UI.Composition.CompositionEasingFunctionMode: ...
    @winrt_mixinmethod
    def get_Power(self: win32more.Microsoft.UI.Composition.IPowerEasingFunction) -> Single: ...
    Mode = property(get_Mode, None)
    Power = property(get_Power, None)
class QuaternionKeyFrameAnimation(ComPtr):
    extends: win32more.Microsoft.UI.Composition.KeyFrameAnimation
    default_interface: win32more.Microsoft.UI.Composition.IQuaternionKeyFrameAnimation
    _classid_ = 'Microsoft.UI.Composition.QuaternionKeyFrameAnimation'
    @winrt_mixinmethod
    def InsertKeyFrameWithEasingFunction(self: win32more.Microsoft.UI.Composition.IQuaternionKeyFrameAnimation, normalizedProgressKey: Single, value: win32more.Windows.Foundation.Numerics.Quaternion, easingFunction: win32more.Microsoft.UI.Composition.CompositionEasingFunction) -> Void: ...
    @winrt_mixinmethod
    def InsertKeyFrame(self: win32more.Microsoft.UI.Composition.IQuaternionKeyFrameAnimation, normalizedProgressKey: Single, value: win32more.Windows.Foundation.Numerics.Quaternion) -> Void: ...
class RectangleClip(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionClip
    default_interface: win32more.Microsoft.UI.Composition.IRectangleClip
    _classid_ = 'Microsoft.UI.Composition.RectangleClip'
    @winrt_mixinmethod
    def get_Bottom(self: win32more.Microsoft.UI.Composition.IRectangleClip) -> Single: ...
    @winrt_mixinmethod
    def get_Top(self: win32more.Microsoft.UI.Composition.IRectangleClip) -> Single: ...
    @winrt_mixinmethod
    def put_Top(self: win32more.Microsoft.UI.Composition.IRectangleClip, value: Single) -> Void: ...
    @winrt_mixinmethod
    def put_TopLeftRadius(self: win32more.Microsoft.UI.Composition.IRectangleClip, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_mixinmethod
    def put_Right(self: win32more.Microsoft.UI.Composition.IRectangleClip, value: Single) -> Void: ...
    @winrt_mixinmethod
    def put_Bottom(self: win32more.Microsoft.UI.Composition.IRectangleClip, value: Single) -> Void: ...
    @winrt_mixinmethod
    def get_BottomLeftRadius(self: win32more.Microsoft.UI.Composition.IRectangleClip) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_mixinmethod
    def put_BottomLeftRadius(self: win32more.Microsoft.UI.Composition.IRectangleClip, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_mixinmethod
    def get_BottomRightRadius(self: win32more.Microsoft.UI.Composition.IRectangleClip) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_mixinmethod
    def put_BottomRightRadius(self: win32more.Microsoft.UI.Composition.IRectangleClip, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_mixinmethod
    def get_Left(self: win32more.Microsoft.UI.Composition.IRectangleClip) -> Single: ...
    @winrt_mixinmethod
    def put_Left(self: win32more.Microsoft.UI.Composition.IRectangleClip, value: Single) -> Void: ...
    @winrt_mixinmethod
    def get_Right(self: win32more.Microsoft.UI.Composition.IRectangleClip) -> Single: ...
    @winrt_mixinmethod
    def get_TopLeftRadius(self: win32more.Microsoft.UI.Composition.IRectangleClip) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_mixinmethod
    def get_TopRightRadius(self: win32more.Microsoft.UI.Composition.IRectangleClip) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_mixinmethod
    def put_TopRightRadius(self: win32more.Microsoft.UI.Composition.IRectangleClip, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    Bottom = property(get_Bottom, put_Bottom)
    BottomLeftRadius = property(get_BottomLeftRadius, put_BottomLeftRadius)
    BottomRightRadius = property(get_BottomRightRadius, put_BottomRightRadius)
    Left = property(get_Left, put_Left)
    Right = property(get_Right, put_Right)
    Top = property(get_Top, put_Top)
    TopLeftRadius = property(get_TopLeftRadius, put_TopLeftRadius)
    TopRightRadius = property(get_TopRightRadius, put_TopRightRadius)
class RedirectVisual(ComPtr):
    extends: win32more.Microsoft.UI.Composition.ContainerVisual
    default_interface: win32more.Microsoft.UI.Composition.IRedirectVisual
    _classid_ = 'Microsoft.UI.Composition.RedirectVisual'
    @winrt_mixinmethod
    def get_Source(self: win32more.Microsoft.UI.Composition.IRedirectVisual) -> win32more.Microsoft.UI.Composition.Visual: ...
    @winrt_mixinmethod
    def put_Source(self: win32more.Microsoft.UI.Composition.IRedirectVisual, value: win32more.Microsoft.UI.Composition.Visual) -> Void: ...
    Source = property(get_Source, put_Source)
class RenderingDeviceReplacedEventArgs(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionObject
    default_interface: win32more.Microsoft.UI.Composition.IRenderingDeviceReplacedEventArgs
    _classid_ = 'Microsoft.UI.Composition.RenderingDeviceReplacedEventArgs'
    @winrt_mixinmethod
    def get_GraphicsDevice(self: win32more.Microsoft.UI.Composition.IRenderingDeviceReplacedEventArgs) -> win32more.Microsoft.UI.Composition.CompositionGraphicsDevice: ...
    GraphicsDevice = property(get_GraphicsDevice, None)
class ScalarKeyFrameAnimation(ComPtr):
    extends: win32more.Microsoft.UI.Composition.KeyFrameAnimation
    default_interface: win32more.Microsoft.UI.Composition.IScalarKeyFrameAnimation
    _classid_ = 'Microsoft.UI.Composition.ScalarKeyFrameAnimation'
    @winrt_mixinmethod
    def InsertKeyFrameWithEasingFunction(self: win32more.Microsoft.UI.Composition.IScalarKeyFrameAnimation, normalizedProgressKey: Single, value: Single, easingFunction: win32more.Microsoft.UI.Composition.CompositionEasingFunction) -> Void: ...
    @winrt_mixinmethod
    def InsertKeyFrame(self: win32more.Microsoft.UI.Composition.IScalarKeyFrameAnimation, normalizedProgressKey: Single, value: Single) -> Void: ...
class ScalarNaturalMotionAnimation(ComPtr):
    extends: win32more.Microsoft.UI.Composition.NaturalMotionAnimation
    default_interface: win32more.Microsoft.UI.Composition.IScalarNaturalMotionAnimation
    _classid_ = 'Microsoft.UI.Composition.ScalarNaturalMotionAnimation'
    @winrt_mixinmethod
    def get_FinalValue(self: win32more.Microsoft.UI.Composition.IScalarNaturalMotionAnimation) -> win32more.Windows.Foundation.IReference[Single]: ...
    @winrt_mixinmethod
    def put_InitialVelocity(self: win32more.Microsoft.UI.Composition.IScalarNaturalMotionAnimation, value: Single) -> Void: ...
    @winrt_mixinmethod
    def put_FinalValue(self: win32more.Microsoft.UI.Composition.IScalarNaturalMotionAnimation, value: win32more.Windows.Foundation.IReference[Single]) -> Void: ...
    @winrt_mixinmethod
    def get_InitialValue(self: win32more.Microsoft.UI.Composition.IScalarNaturalMotionAnimation) -> win32more.Windows.Foundation.IReference[Single]: ...
    @winrt_mixinmethod
    def put_InitialValue(self: win32more.Microsoft.UI.Composition.IScalarNaturalMotionAnimation, value: win32more.Windows.Foundation.IReference[Single]) -> Void: ...
    @winrt_mixinmethod
    def get_InitialVelocity(self: win32more.Microsoft.UI.Composition.IScalarNaturalMotionAnimation) -> Single: ...
    FinalValue = property(get_FinalValue, put_FinalValue)
    InitialValue = property(get_InitialValue, put_InitialValue)
    InitialVelocity = property(get_InitialVelocity, put_InitialVelocity)
class ShapeVisual(ComPtr):
    extends: win32more.Microsoft.UI.Composition.ContainerVisual
    default_interface: win32more.Microsoft.UI.Composition.IShapeVisual
    _classid_ = 'Microsoft.UI.Composition.ShapeVisual'
    @winrt_mixinmethod
    def put_ViewBox(self: win32more.Microsoft.UI.Composition.IShapeVisual, value: win32more.Microsoft.UI.Composition.CompositionViewBox) -> Void: ...
    @winrt_mixinmethod
    def get_ViewBox(self: win32more.Microsoft.UI.Composition.IShapeVisual) -> win32more.Microsoft.UI.Composition.CompositionViewBox: ...
    @winrt_mixinmethod
    def get_Shapes(self: win32more.Microsoft.UI.Composition.IShapeVisual) -> win32more.Microsoft.UI.Composition.CompositionShapeCollection: ...
    Shapes = property(get_Shapes, None)
    ViewBox = property(get_ViewBox, put_ViewBox)
class SineEasingFunction(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionEasingFunction
    default_interface: win32more.Microsoft.UI.Composition.ISineEasingFunction
    _classid_ = 'Microsoft.UI.Composition.SineEasingFunction'
    @winrt_mixinmethod
    def get_Mode(self: win32more.Microsoft.UI.Composition.ISineEasingFunction) -> win32more.Microsoft.UI.Composition.CompositionEasingFunctionMode: ...
    Mode = property(get_Mode, None)
class SpotLight(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionLight
    default_interface: win32more.Microsoft.UI.Composition.ISpotLight
    _classid_ = 'Microsoft.UI.Composition.SpotLight'
    @winrt_mixinmethod
    def get_MaxAttenuationCutoff(self: win32more.Microsoft.UI.Composition.ISpotLight3) -> Single: ...
    @winrt_mixinmethod
    def put_OuterConeColor(self: win32more.Microsoft.UI.Composition.ISpotLight, value: win32more.Windows.UI.Color) -> Void: ...
    @winrt_mixinmethod
    def put_QuadraticAttenuation(self: win32more.Microsoft.UI.Composition.ISpotLight, value: Single) -> Void: ...
    @winrt_mixinmethod
    def put_ConstantAttenuation(self: win32more.Microsoft.UI.Composition.ISpotLight, value: Single) -> Void: ...
    @winrt_mixinmethod
    def get_CoordinateSpace(self: win32more.Microsoft.UI.Composition.ISpotLight) -> win32more.Microsoft.UI.Composition.Visual: ...
    @winrt_mixinmethod
    def put_CoordinateSpace(self: win32more.Microsoft.UI.Composition.ISpotLight, value: win32more.Microsoft.UI.Composition.Visual) -> Void: ...
    @winrt_mixinmethod
    def get_Direction(self: win32more.Microsoft.UI.Composition.ISpotLight) -> win32more.Windows.Foundation.Numerics.Vector3: ...
    @winrt_mixinmethod
    def put_Direction(self: win32more.Microsoft.UI.Composition.ISpotLight, value: win32more.Windows.Foundation.Numerics.Vector3) -> Void: ...
    @winrt_mixinmethod
    def get_InnerConeAngle(self: win32more.Microsoft.UI.Composition.ISpotLight) -> Single: ...
    @winrt_mixinmethod
    def get_ConstantAttenuation(self: win32more.Microsoft.UI.Composition.ISpotLight) -> Single: ...
    @winrt_mixinmethod
    def get_InnerConeAngleInDegrees(self: win32more.Microsoft.UI.Composition.ISpotLight) -> Single: ...
    @winrt_mixinmethod
    def put_InnerConeAngleInDegrees(self: win32more.Microsoft.UI.Composition.ISpotLight, value: Single) -> Void: ...
    @winrt_mixinmethod
    def get_InnerConeColor(self: win32more.Microsoft.UI.Composition.ISpotLight) -> win32more.Windows.UI.Color: ...
    @winrt_mixinmethod
    def put_InnerConeColor(self: win32more.Microsoft.UI.Composition.ISpotLight, value: win32more.Windows.UI.Color) -> Void: ...
    @winrt_mixinmethod
    def get_LinearAttenuation(self: win32more.Microsoft.UI.Composition.ISpotLight) -> Single: ...
    @winrt_mixinmethod
    def put_LinearAttenuation(self: win32more.Microsoft.UI.Composition.ISpotLight, value: Single) -> Void: ...
    @winrt_mixinmethod
    def get_Offset(self: win32more.Microsoft.UI.Composition.ISpotLight) -> win32more.Windows.Foundation.Numerics.Vector3: ...
    @winrt_mixinmethod
    def put_Offset(self: win32more.Microsoft.UI.Composition.ISpotLight, value: win32more.Windows.Foundation.Numerics.Vector3) -> Void: ...
    @winrt_mixinmethod
    def get_OuterConeAngle(self: win32more.Microsoft.UI.Composition.ISpotLight) -> Single: ...
    @winrt_mixinmethod
    def put_OuterConeAngle(self: win32more.Microsoft.UI.Composition.ISpotLight, value: Single) -> Void: ...
    @winrt_mixinmethod
    def get_OuterConeAngleInDegrees(self: win32more.Microsoft.UI.Composition.ISpotLight) -> Single: ...
    @winrt_mixinmethod
    def put_OuterConeAngleInDegrees(self: win32more.Microsoft.UI.Composition.ISpotLight, value: Single) -> Void: ...
    @winrt_mixinmethod
    def get_OuterConeColor(self: win32more.Microsoft.UI.Composition.ISpotLight) -> win32more.Windows.UI.Color: ...
    @winrt_mixinmethod
    def get_QuadraticAttenuation(self: win32more.Microsoft.UI.Composition.ISpotLight) -> Single: ...
    @winrt_mixinmethod
    def get_InnerConeIntensity(self: win32more.Microsoft.UI.Composition.ISpotLight2) -> Single: ...
    @winrt_mixinmethod
    def put_InnerConeIntensity(self: win32more.Microsoft.UI.Composition.ISpotLight2, value: Single) -> Void: ...
    @winrt_mixinmethod
    def get_OuterConeIntensity(self: win32more.Microsoft.UI.Composition.ISpotLight2) -> Single: ...
    @winrt_mixinmethod
    def put_OuterConeIntensity(self: win32more.Microsoft.UI.Composition.ISpotLight2, value: Single) -> Void: ...
    @winrt_mixinmethod
    def get_MinAttenuationCutoff(self: win32more.Microsoft.UI.Composition.ISpotLight3) -> Single: ...
    @winrt_mixinmethod
    def put_MinAttenuationCutoff(self: win32more.Microsoft.UI.Composition.ISpotLight3, value: Single) -> Void: ...
    @winrt_mixinmethod
    def put_InnerConeAngle(self: win32more.Microsoft.UI.Composition.ISpotLight, value: Single) -> Void: ...
    @winrt_mixinmethod
    def put_MaxAttenuationCutoff(self: win32more.Microsoft.UI.Composition.ISpotLight3, value: Single) -> Void: ...
    ConstantAttenuation = property(get_ConstantAttenuation, put_ConstantAttenuation)
    CoordinateSpace = property(get_CoordinateSpace, put_CoordinateSpace)
    Direction = property(get_Direction, put_Direction)
    InnerConeAngle = property(get_InnerConeAngle, put_InnerConeAngle)
    InnerConeAngleInDegrees = property(get_InnerConeAngleInDegrees, put_InnerConeAngleInDegrees)
    InnerConeColor = property(get_InnerConeColor, put_InnerConeColor)
    InnerConeIntensity = property(get_InnerConeIntensity, put_InnerConeIntensity)
    LinearAttenuation = property(get_LinearAttenuation, put_LinearAttenuation)
    MaxAttenuationCutoff = property(get_MaxAttenuationCutoff, put_MaxAttenuationCutoff)
    MinAttenuationCutoff = property(get_MinAttenuationCutoff, put_MinAttenuationCutoff)
    Offset = property(get_Offset, put_Offset)
    OuterConeAngle = property(get_OuterConeAngle, put_OuterConeAngle)
    OuterConeAngleInDegrees = property(get_OuterConeAngleInDegrees, put_OuterConeAngleInDegrees)
    OuterConeColor = property(get_OuterConeColor, put_OuterConeColor)
    OuterConeIntensity = property(get_OuterConeIntensity, put_OuterConeIntensity)
    QuadraticAttenuation = property(get_QuadraticAttenuation, put_QuadraticAttenuation)
class SpringScalarNaturalMotionAnimation(ComPtr):
    extends: win32more.Microsoft.UI.Composition.ScalarNaturalMotionAnimation
    default_interface: win32more.Microsoft.UI.Composition.ISpringScalarNaturalMotionAnimation
    _classid_ = 'Microsoft.UI.Composition.SpringScalarNaturalMotionAnimation'
    @winrt_mixinmethod
    def get_DampingRatio(self: win32more.Microsoft.UI.Composition.ISpringScalarNaturalMotionAnimation) -> Single: ...
    @winrt_mixinmethod
    def put_Period(self: win32more.Microsoft.UI.Composition.ISpringScalarNaturalMotionAnimation, value: win32more.Windows.Foundation.TimeSpan) -> Void: ...
    @winrt_mixinmethod
    def put_DampingRatio(self: win32more.Microsoft.UI.Composition.ISpringScalarNaturalMotionAnimation, value: Single) -> Void: ...
    @winrt_mixinmethod
    def get_Period(self: win32more.Microsoft.UI.Composition.ISpringScalarNaturalMotionAnimation) -> win32more.Windows.Foundation.TimeSpan: ...
    DampingRatio = property(get_DampingRatio, put_DampingRatio)
    Period = property(get_Period, put_Period)
class SpringVector2NaturalMotionAnimation(ComPtr):
    extends: win32more.Microsoft.UI.Composition.Vector2NaturalMotionAnimation
    default_interface: win32more.Microsoft.UI.Composition.ISpringVector2NaturalMotionAnimation
    _classid_ = 'Microsoft.UI.Composition.SpringVector2NaturalMotionAnimation'
    @winrt_mixinmethod
    def put_Period(self: win32more.Microsoft.UI.Composition.ISpringVector2NaturalMotionAnimation, value: win32more.Windows.Foundation.TimeSpan) -> Void: ...
    @winrt_mixinmethod
    def get_DampingRatio(self: win32more.Microsoft.UI.Composition.ISpringVector2NaturalMotionAnimation) -> Single: ...
    @winrt_mixinmethod
    def put_DampingRatio(self: win32more.Microsoft.UI.Composition.ISpringVector2NaturalMotionAnimation, value: Single) -> Void: ...
    @winrt_mixinmethod
    def get_Period(self: win32more.Microsoft.UI.Composition.ISpringVector2NaturalMotionAnimation) -> win32more.Windows.Foundation.TimeSpan: ...
    DampingRatio = property(get_DampingRatio, put_DampingRatio)
    Period = property(get_Period, put_Period)
class SpringVector3NaturalMotionAnimation(ComPtr):
    extends: win32more.Microsoft.UI.Composition.Vector3NaturalMotionAnimation
    default_interface: win32more.Microsoft.UI.Composition.ISpringVector3NaturalMotionAnimation
    _classid_ = 'Microsoft.UI.Composition.SpringVector3NaturalMotionAnimation'
    @winrt_mixinmethod
    def put_DampingRatio(self: win32more.Microsoft.UI.Composition.ISpringVector3NaturalMotionAnimation, value: Single) -> Void: ...
    @winrt_mixinmethod
    def get_DampingRatio(self: win32more.Microsoft.UI.Composition.ISpringVector3NaturalMotionAnimation) -> Single: ...
    @winrt_mixinmethod
    def put_Period(self: win32more.Microsoft.UI.Composition.ISpringVector3NaturalMotionAnimation, value: win32more.Windows.Foundation.TimeSpan) -> Void: ...
    @winrt_mixinmethod
    def get_Period(self: win32more.Microsoft.UI.Composition.ISpringVector3NaturalMotionAnimation) -> win32more.Windows.Foundation.TimeSpan: ...
    DampingRatio = property(get_DampingRatio, put_DampingRatio)
    Period = property(get_Period, put_Period)
class SpriteVisual(ComPtr):
    extends: win32more.Microsoft.UI.Composition.ContainerVisual
    default_interface: win32more.Microsoft.UI.Composition.ISpriteVisual
    _classid_ = 'Microsoft.UI.Composition.SpriteVisual'
    @winrt_mixinmethod
    def get_Brush(self: win32more.Microsoft.UI.Composition.ISpriteVisual) -> win32more.Microsoft.UI.Composition.CompositionBrush: ...
    @winrt_mixinmethod
    def put_Shadow(self: win32more.Microsoft.UI.Composition.ISpriteVisual2, value: win32more.Microsoft.UI.Composition.CompositionShadow) -> Void: ...
    @winrt_mixinmethod
    def put_Brush(self: win32more.Microsoft.UI.Composition.ISpriteVisual, value: win32more.Microsoft.UI.Composition.CompositionBrush) -> Void: ...
    @winrt_mixinmethod
    def get_Shadow(self: win32more.Microsoft.UI.Composition.ISpriteVisual2) -> win32more.Microsoft.UI.Composition.CompositionShadow: ...
    Brush = property(get_Brush, put_Brush)
    Shadow = property(get_Shadow, put_Shadow)
class StepEasingFunction(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionEasingFunction
    default_interface: win32more.Microsoft.UI.Composition.IStepEasingFunction
    _classid_ = 'Microsoft.UI.Composition.StepEasingFunction'
    @winrt_mixinmethod
    def put_StepCount(self: win32more.Microsoft.UI.Composition.IStepEasingFunction, value: Int32) -> Void: ...
    @winrt_mixinmethod
    def get_IsInitialStepSingleFrame(self: win32more.Microsoft.UI.Composition.IStepEasingFunction) -> Boolean: ...
    @winrt_mixinmethod
    def put_IsInitialStepSingleFrame(self: win32more.Microsoft.UI.Composition.IStepEasingFunction, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def get_StepCount(self: win32more.Microsoft.UI.Composition.IStepEasingFunction) -> Int32: ...
    @winrt_mixinmethod
    def get_InitialStep(self: win32more.Microsoft.UI.Composition.IStepEasingFunction) -> Int32: ...
    @winrt_mixinmethod
    def put_FinalStep(self: win32more.Microsoft.UI.Composition.IStepEasingFunction, value: Int32) -> Void: ...
    @winrt_mixinmethod
    def get_FinalStep(self: win32more.Microsoft.UI.Composition.IStepEasingFunction) -> Int32: ...
    @winrt_mixinmethod
    def put_InitialStep(self: win32more.Microsoft.UI.Composition.IStepEasingFunction, value: Int32) -> Void: ...
    @winrt_mixinmethod
    def get_IsFinalStepSingleFrame(self: win32more.Microsoft.UI.Composition.IStepEasingFunction) -> Boolean: ...
    @winrt_mixinmethod
    def put_IsFinalStepSingleFrame(self: win32more.Microsoft.UI.Composition.IStepEasingFunction, value: Boolean) -> Void: ...
    FinalStep = property(get_FinalStep, put_FinalStep)
    InitialStep = property(get_InitialStep, put_InitialStep)
    IsFinalStepSingleFrame = property(get_IsFinalStepSingleFrame, put_IsFinalStepSingleFrame)
    IsInitialStepSingleFrame = property(get_IsInitialStepSingleFrame, put_IsInitialStepSingleFrame)
    StepCount = property(get_StepCount, put_StepCount)
class Vector2KeyFrameAnimation(ComPtr):
    extends: win32more.Microsoft.UI.Composition.KeyFrameAnimation
    default_interface: win32more.Microsoft.UI.Composition.IVector2KeyFrameAnimation
    _classid_ = 'Microsoft.UI.Composition.Vector2KeyFrameAnimation'
    @winrt_mixinmethod
    def InsertKeyFrameWithEasingFunction(self: win32more.Microsoft.UI.Composition.IVector2KeyFrameAnimation, normalizedProgressKey: Single, value: win32more.Windows.Foundation.Numerics.Vector2, easingFunction: win32more.Microsoft.UI.Composition.CompositionEasingFunction) -> Void: ...
    @winrt_mixinmethod
    def InsertKeyFrame(self: win32more.Microsoft.UI.Composition.IVector2KeyFrameAnimation, normalizedProgressKey: Single, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
class Vector2NaturalMotionAnimation(ComPtr):
    extends: win32more.Microsoft.UI.Composition.NaturalMotionAnimation
    default_interface: win32more.Microsoft.UI.Composition.IVector2NaturalMotionAnimation
    _classid_ = 'Microsoft.UI.Composition.Vector2NaturalMotionAnimation'
    @winrt_mixinmethod
    def put_InitialVelocity(self: win32more.Microsoft.UI.Composition.IVector2NaturalMotionAnimation, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_mixinmethod
    def get_FinalValue(self: win32more.Microsoft.UI.Composition.IVector2NaturalMotionAnimation) -> win32more.Windows.Foundation.IReference[win32more.Windows.Foundation.Numerics.Vector2]: ...
    @winrt_mixinmethod
    def get_InitialVelocity(self: win32more.Microsoft.UI.Composition.IVector2NaturalMotionAnimation) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_mixinmethod
    def put_FinalValue(self: win32more.Microsoft.UI.Composition.IVector2NaturalMotionAnimation, value: win32more.Windows.Foundation.IReference[win32more.Windows.Foundation.Numerics.Vector2]) -> Void: ...
    @winrt_mixinmethod
    def get_InitialValue(self: win32more.Microsoft.UI.Composition.IVector2NaturalMotionAnimation) -> win32more.Windows.Foundation.IReference[win32more.Windows.Foundation.Numerics.Vector2]: ...
    @winrt_mixinmethod
    def put_InitialValue(self: win32more.Microsoft.UI.Composition.IVector2NaturalMotionAnimation, value: win32more.Windows.Foundation.IReference[win32more.Windows.Foundation.Numerics.Vector2]) -> Void: ...
    FinalValue = property(get_FinalValue, put_FinalValue)
    InitialValue = property(get_InitialValue, put_InitialValue)
    InitialVelocity = property(get_InitialVelocity, put_InitialVelocity)
class Vector3KeyFrameAnimation(ComPtr):
    extends: win32more.Microsoft.UI.Composition.KeyFrameAnimation
    default_interface: win32more.Microsoft.UI.Composition.IVector3KeyFrameAnimation
    _classid_ = 'Microsoft.UI.Composition.Vector3KeyFrameAnimation'
    @winrt_mixinmethod
    def InsertKeyFrameWithEasingFunction(self: win32more.Microsoft.UI.Composition.IVector3KeyFrameAnimation, normalizedProgressKey: Single, value: win32more.Windows.Foundation.Numerics.Vector3, easingFunction: win32more.Microsoft.UI.Composition.CompositionEasingFunction) -> Void: ...
    @winrt_mixinmethod
    def InsertKeyFrame(self: win32more.Microsoft.UI.Composition.IVector3KeyFrameAnimation, normalizedProgressKey: Single, value: win32more.Windows.Foundation.Numerics.Vector3) -> Void: ...
class Vector3NaturalMotionAnimation(ComPtr):
    extends: win32more.Microsoft.UI.Composition.NaturalMotionAnimation
    default_interface: win32more.Microsoft.UI.Composition.IVector3NaturalMotionAnimation
    _classid_ = 'Microsoft.UI.Composition.Vector3NaturalMotionAnimation'
    @winrt_mixinmethod
    def put_InitialVelocity(self: win32more.Microsoft.UI.Composition.IVector3NaturalMotionAnimation, value: win32more.Windows.Foundation.Numerics.Vector3) -> Void: ...
    @winrt_mixinmethod
    def put_FinalValue(self: win32more.Microsoft.UI.Composition.IVector3NaturalMotionAnimation, value: win32more.Windows.Foundation.IReference[win32more.Windows.Foundation.Numerics.Vector3]) -> Void: ...
    @winrt_mixinmethod
    def get_InitialValue(self: win32more.Microsoft.UI.Composition.IVector3NaturalMotionAnimation) -> win32more.Windows.Foundation.IReference[win32more.Windows.Foundation.Numerics.Vector3]: ...
    @winrt_mixinmethod
    def put_InitialValue(self: win32more.Microsoft.UI.Composition.IVector3NaturalMotionAnimation, value: win32more.Windows.Foundation.IReference[win32more.Windows.Foundation.Numerics.Vector3]) -> Void: ...
    @winrt_mixinmethod
    def get_FinalValue(self: win32more.Microsoft.UI.Composition.IVector3NaturalMotionAnimation) -> win32more.Windows.Foundation.IReference[win32more.Windows.Foundation.Numerics.Vector3]: ...
    @winrt_mixinmethod
    def get_InitialVelocity(self: win32more.Microsoft.UI.Composition.IVector3NaturalMotionAnimation) -> win32more.Windows.Foundation.Numerics.Vector3: ...
    FinalValue = property(get_FinalValue, put_FinalValue)
    InitialValue = property(get_InitialValue, put_InitialValue)
    InitialVelocity = property(get_InitialVelocity, put_InitialVelocity)
class Vector4KeyFrameAnimation(ComPtr):
    extends: win32more.Microsoft.UI.Composition.KeyFrameAnimation
    default_interface: win32more.Microsoft.UI.Composition.IVector4KeyFrameAnimation
    _classid_ = 'Microsoft.UI.Composition.Vector4KeyFrameAnimation'
    @winrt_mixinmethod
    def InsertKeyFrame(self: win32more.Microsoft.UI.Composition.IVector4KeyFrameAnimation, normalizedProgressKey: Single, value: win32more.Windows.Foundation.Numerics.Vector4) -> Void: ...
    @winrt_mixinmethod
    def InsertKeyFrameWithEasingFunction(self: win32more.Microsoft.UI.Composition.IVector4KeyFrameAnimation, normalizedProgressKey: Single, value: win32more.Windows.Foundation.Numerics.Vector4, easingFunction: win32more.Microsoft.UI.Composition.CompositionEasingFunction) -> Void: ...
class Visual(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionObject
    default_interface: win32more.Microsoft.UI.Composition.IVisual
    _classid_ = 'Microsoft.UI.Composition.Visual'
    @winrt_mixinmethod
    def put_IsPixelSnappingEnabled(self: win32more.Microsoft.UI.Composition.IVisual4, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def get_RelativeSizeAdjustment(self: win32more.Microsoft.UI.Composition.IVisual2) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_mixinmethod
    def get_IsHitTestVisible(self: win32more.Microsoft.UI.Composition.IVisual3) -> Boolean: ...
    @winrt_mixinmethod
    def put_IsHitTestVisible(self: win32more.Microsoft.UI.Composition.IVisual3, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def get_IsPixelSnappingEnabled(self: win32more.Microsoft.UI.Composition.IVisual4) -> Boolean: ...
    @winrt_mixinmethod
    def put_IsVisible(self: win32more.Microsoft.UI.Composition.IVisual, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def put_RelativeOffsetAdjustment(self: win32more.Microsoft.UI.Composition.IVisual2, value: win32more.Windows.Foundation.Numerics.Vector3) -> Void: ...
    @winrt_mixinmethod
    def put_RelativeSizeAdjustment(self: win32more.Microsoft.UI.Composition.IVisual2, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_mixinmethod
    def put_BackfaceVisibility(self: win32more.Microsoft.UI.Composition.IVisual, value: win32more.Microsoft.UI.Composition.CompositionBackfaceVisibility) -> Void: ...
    @winrt_mixinmethod
    def put_AnchorPoint(self: win32more.Microsoft.UI.Composition.IVisual, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_mixinmethod
    def get_BackfaceVisibility(self: win32more.Microsoft.UI.Composition.IVisual) -> win32more.Microsoft.UI.Composition.CompositionBackfaceVisibility: ...
    @winrt_mixinmethod
    def get_AnchorPoint(self: win32more.Microsoft.UI.Composition.IVisual) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_mixinmethod
    def get_BorderMode(self: win32more.Microsoft.UI.Composition.IVisual) -> win32more.Microsoft.UI.Composition.CompositionBorderMode: ...
    @winrt_mixinmethod
    def put_BorderMode(self: win32more.Microsoft.UI.Composition.IVisual, value: win32more.Microsoft.UI.Composition.CompositionBorderMode) -> Void: ...
    @winrt_mixinmethod
    def get_CenterPoint(self: win32more.Microsoft.UI.Composition.IVisual) -> win32more.Windows.Foundation.Numerics.Vector3: ...
    @winrt_mixinmethod
    def put_CenterPoint(self: win32more.Microsoft.UI.Composition.IVisual, value: win32more.Windows.Foundation.Numerics.Vector3) -> Void: ...
    @winrt_mixinmethod
    def get_Clip(self: win32more.Microsoft.UI.Composition.IVisual) -> win32more.Microsoft.UI.Composition.CompositionClip: ...
    @winrt_mixinmethod
    def put_Clip(self: win32more.Microsoft.UI.Composition.IVisual, value: win32more.Microsoft.UI.Composition.CompositionClip) -> Void: ...
    @winrt_mixinmethod
    def get_CompositeMode(self: win32more.Microsoft.UI.Composition.IVisual) -> win32more.Microsoft.UI.Composition.CompositionCompositeMode: ...
    @winrt_mixinmethod
    def put_CompositeMode(self: win32more.Microsoft.UI.Composition.IVisual, value: win32more.Microsoft.UI.Composition.CompositionCompositeMode) -> Void: ...
    @winrt_mixinmethod
    def get_IsVisible(self: win32more.Microsoft.UI.Composition.IVisual) -> Boolean: ...
    @winrt_mixinmethod
    def get_Offset(self: win32more.Microsoft.UI.Composition.IVisual) -> win32more.Windows.Foundation.Numerics.Vector3: ...
    @winrt_mixinmethod
    def put_Offset(self: win32more.Microsoft.UI.Composition.IVisual, value: win32more.Windows.Foundation.Numerics.Vector3) -> Void: ...
    @winrt_mixinmethod
    def get_Opacity(self: win32more.Microsoft.UI.Composition.IVisual) -> Single: ...
    @winrt_mixinmethod
    def put_Opacity(self: win32more.Microsoft.UI.Composition.IVisual, value: Single) -> Void: ...
    @winrt_mixinmethod
    def get_Orientation(self: win32more.Microsoft.UI.Composition.IVisual) -> win32more.Windows.Foundation.Numerics.Quaternion: ...
    @winrt_mixinmethod
    def put_Orientation(self: win32more.Microsoft.UI.Composition.IVisual, value: win32more.Windows.Foundation.Numerics.Quaternion) -> Void: ...
    @winrt_mixinmethod
    def get_Parent(self: win32more.Microsoft.UI.Composition.IVisual) -> win32more.Microsoft.UI.Composition.ContainerVisual: ...
    @winrt_mixinmethod
    def get_RotationAngle(self: win32more.Microsoft.UI.Composition.IVisual) -> Single: ...
    @winrt_mixinmethod
    def put_RotationAngle(self: win32more.Microsoft.UI.Composition.IVisual, value: Single) -> Void: ...
    @winrt_mixinmethod
    def get_RotationAngleInDegrees(self: win32more.Microsoft.UI.Composition.IVisual) -> Single: ...
    @winrt_mixinmethod
    def put_RotationAngleInDegrees(self: win32more.Microsoft.UI.Composition.IVisual, value: Single) -> Void: ...
    @winrt_mixinmethod
    def get_RotationAxis(self: win32more.Microsoft.UI.Composition.IVisual) -> win32more.Windows.Foundation.Numerics.Vector3: ...
    @winrt_mixinmethod
    def put_RotationAxis(self: win32more.Microsoft.UI.Composition.IVisual, value: win32more.Windows.Foundation.Numerics.Vector3) -> Void: ...
    @winrt_mixinmethod
    def get_Scale(self: win32more.Microsoft.UI.Composition.IVisual) -> win32more.Windows.Foundation.Numerics.Vector3: ...
    @winrt_mixinmethod
    def put_Scale(self: win32more.Microsoft.UI.Composition.IVisual, value: win32more.Windows.Foundation.Numerics.Vector3) -> Void: ...
    @winrt_mixinmethod
    def get_Size(self: win32more.Microsoft.UI.Composition.IVisual) -> win32more.Windows.Foundation.Numerics.Vector2: ...
    @winrt_mixinmethod
    def put_Size(self: win32more.Microsoft.UI.Composition.IVisual, value: win32more.Windows.Foundation.Numerics.Vector2) -> Void: ...
    @winrt_mixinmethod
    def get_TransformMatrix(self: win32more.Microsoft.UI.Composition.IVisual) -> win32more.Windows.Foundation.Numerics.Matrix4x4: ...
    @winrt_mixinmethod
    def put_TransformMatrix(self: win32more.Microsoft.UI.Composition.IVisual, value: win32more.Windows.Foundation.Numerics.Matrix4x4) -> Void: ...
    @winrt_mixinmethod
    def get_ParentForTransform(self: win32more.Microsoft.UI.Composition.IVisual2) -> win32more.Microsoft.UI.Composition.Visual: ...
    @winrt_mixinmethod
    def put_ParentForTransform(self: win32more.Microsoft.UI.Composition.IVisual2, value: win32more.Microsoft.UI.Composition.Visual) -> Void: ...
    @winrt_mixinmethod
    def get_RelativeOffsetAdjustment(self: win32more.Microsoft.UI.Composition.IVisual2) -> win32more.Windows.Foundation.Numerics.Vector3: ...
    AnchorPoint = property(get_AnchorPoint, put_AnchorPoint)
    BackfaceVisibility = property(get_BackfaceVisibility, put_BackfaceVisibility)
    BorderMode = property(get_BorderMode, put_BorderMode)
    CenterPoint = property(get_CenterPoint, put_CenterPoint)
    Clip = property(get_Clip, put_Clip)
    CompositeMode = property(get_CompositeMode, put_CompositeMode)
    IsHitTestVisible = property(get_IsHitTestVisible, put_IsHitTestVisible)
    IsPixelSnappingEnabled = property(get_IsPixelSnappingEnabled, put_IsPixelSnappingEnabled)
    IsVisible = property(get_IsVisible, put_IsVisible)
    Offset = property(get_Offset, put_Offset)
    Opacity = property(get_Opacity, put_Opacity)
    Orientation = property(get_Orientation, put_Orientation)
    Parent = property(get_Parent, None)
    ParentForTransform = property(get_ParentForTransform, put_ParentForTransform)
    RelativeOffsetAdjustment = property(get_RelativeOffsetAdjustment, put_RelativeOffsetAdjustment)
    RelativeSizeAdjustment = property(get_RelativeSizeAdjustment, put_RelativeSizeAdjustment)
    RotationAngle = property(get_RotationAngle, put_RotationAngle)
    RotationAngleInDegrees = property(get_RotationAngleInDegrees, put_RotationAngleInDegrees)
    RotationAxis = property(get_RotationAxis, put_RotationAxis)
    Scale = property(get_Scale, put_Scale)
    Size = property(get_Size, put_Size)
    TransformMatrix = property(get_TransformMatrix, put_TransformMatrix)
class VisualCollection(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionObject
    implements: Tuple[IterableProtocol[win32more.Microsoft.UI.Composition.Visual]]
    default_interface: win32more.Microsoft.UI.Composition.IVisualCollection
    _classid_ = 'Microsoft.UI.Composition.VisualCollection'
    @winrt_mixinmethod
    def First(self: win32more.Windows.Foundation.Collections.IIterable[win32more.Microsoft.UI.Composition.Visual]) -> win32more.Windows.Foundation.Collections.IIterator[win32more.Microsoft.UI.Composition.Visual]: ...
    @winrt_mixinmethod
    def InsertAbove(self: win32more.Microsoft.UI.Composition.IVisualCollection, newChild: win32more.Microsoft.UI.Composition.Visual, sibling: win32more.Microsoft.UI.Composition.Visual) -> Void: ...
    @winrt_mixinmethod
    def InsertAtBottom(self: win32more.Microsoft.UI.Composition.IVisualCollection, newChild: win32more.Microsoft.UI.Composition.Visual) -> Void: ...
    @winrt_mixinmethod
    def InsertAtTop(self: win32more.Microsoft.UI.Composition.IVisualCollection, newChild: win32more.Microsoft.UI.Composition.Visual) -> Void: ...
    @winrt_mixinmethod
    def InsertBelow(self: win32more.Microsoft.UI.Composition.IVisualCollection, newChild: win32more.Microsoft.UI.Composition.Visual, sibling: win32more.Microsoft.UI.Composition.Visual) -> Void: ...
    @winrt_mixinmethod
    def Remove(self: win32more.Microsoft.UI.Composition.IVisualCollection, child: win32more.Microsoft.UI.Composition.Visual) -> Void: ...
    @winrt_mixinmethod
    def RemoveAll(self: win32more.Microsoft.UI.Composition.IVisualCollection) -> Void: ...
    @winrt_mixinmethod
    def get_Count(self: win32more.Microsoft.UI.Composition.IVisualCollection) -> Int32: ...
    Count = property(get_Count, None)
class VisualUnorderedCollection(ComPtr):
    extends: win32more.Microsoft.UI.Composition.CompositionObject
    implements: Tuple[IterableProtocol[win32more.Microsoft.UI.Composition.Visual]]
    default_interface: win32more.Microsoft.UI.Composition.IVisualUnorderedCollection
    _classid_ = 'Microsoft.UI.Composition.VisualUnorderedCollection'
    @winrt_mixinmethod
    def get_Count(self: win32more.Microsoft.UI.Composition.IVisualUnorderedCollection) -> Int32: ...
    @winrt_mixinmethod
    def Add(self: win32more.Microsoft.UI.Composition.IVisualUnorderedCollection, newVisual: win32more.Microsoft.UI.Composition.Visual) -> Void: ...
    @winrt_mixinmethod
    def Remove(self: win32more.Microsoft.UI.Composition.IVisualUnorderedCollection, visual: win32more.Microsoft.UI.Composition.Visual) -> Void: ...
    @winrt_mixinmethod
    def RemoveAll(self: win32more.Microsoft.UI.Composition.IVisualUnorderedCollection) -> Void: ...
    @winrt_mixinmethod
    def First(self: win32more.Windows.Foundation.Collections.IIterable[win32more.Microsoft.UI.Composition.Visual]) -> win32more.Windows.Foundation.Collections.IIterator[win32more.Microsoft.UI.Composition.Visual]: ...
    Count = property(get_Count, None)


make_ready(__name__)
