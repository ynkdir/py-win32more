from __future__ import annotations
from win32more import ARCH, Annotated, Boolean, Byte, Bytes, Char, ComPtr, ConstantLazyLoader, Double, Enum, FAILED, FlexibleArray, Guid, Int16, Int32, Int64, IntPtr, NativeBitfieldAttribute, POINTER, SByte, SUCCEEDED, Single, String, Structure, UInt16, UInt32, UInt64, UIntPtr, UnicodeAlias, Union, Void, VoidPtr, cfunctype, cfunctype_pointer, commethod, make_ready, winfunctype, winfunctype_pointer
from win32more._winrt import AwaitableProtocol, ContextManagerProtocol, FillArray, Generic, IterableProtocol, K, MappingProtocol, MulticastDelegate, PassArray, ReceiveArray, SequenceProtocol, T, TProgress, TResult, TSender, Tuple, V, WinRT_String, event, winrt_activatemethod, winrt_classmethod, winrt_commethod, winrt_factorymethod, winrt_mixinmethod, winrt_overload
import win32more.Windows.Devices.Printers
import win32more.Windows.Foundation
import win32more.Windows.Foundation.Collections
import win32more.Windows.Graphics.Printing
import win32more.Windows.Graphics.Printing.PrintTicket
import win32more.Windows.Storage.Streams
import win32more.Windows.Win32.System.WinRT
class IIppAttributeError(ComPtr):
    extends: win32more.Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Devices.Printers.IIppAttributeError'
    _iid_ = Guid('{750feda1-9eef-5c39-93e4-46149bbcef27}')
    @winrt_commethod(6)
    def get_Reason(self) -> win32more.Windows.Devices.Printers.IppAttributeErrorReason: ...
    @winrt_commethod(7)
    def get_ExtendedError(self) -> win32more.Windows.Foundation.HResult: ...
    @winrt_commethod(8)
    def GetUnsupportedValues(self) -> win32more.Windows.Foundation.Collections.IVectorView[win32more.Windows.Devices.Printers.IppAttributeValue]: ...
    ExtendedError = property(get_ExtendedError, None)
    Reason = property(get_Reason, None)
class IIppAttributeValue(ComPtr):
    extends: win32more.Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Devices.Printers.IIppAttributeValue'
    _iid_ = Guid('{99407fed-e2bb-59a3-988b-28a974052a26}')
    @winrt_commethod(6)
    def get_Kind(self) -> win32more.Windows.Devices.Printers.IppAttributeValueKind: ...
    @winrt_commethod(7)
    def GetIntegerArray(self) -> win32more.Windows.Foundation.Collections.IVector[Int32]: ...
    @winrt_commethod(8)
    def GetBooleanArray(self) -> win32more.Windows.Foundation.Collections.IVector[Boolean]: ...
    @winrt_commethod(9)
    def GetEnumArray(self) -> win32more.Windows.Foundation.Collections.IVector[Int32]: ...
    @winrt_commethod(10)
    def GetOctetStringArray(self) -> win32more.Windows.Foundation.Collections.IVector[win32more.Windows.Storage.Streams.IBuffer]: ...
    @winrt_commethod(11)
    def GetDateTimeArray(self) -> win32more.Windows.Foundation.Collections.IVector[win32more.Windows.Foundation.DateTime]: ...
    @winrt_commethod(12)
    def GetResolutionArray(self) -> win32more.Windows.Foundation.Collections.IVector[win32more.Windows.Devices.Printers.IppResolution]: ...
    @winrt_commethod(13)
    def GetRangeOfIntegerArray(self) -> win32more.Windows.Foundation.Collections.IVector[win32more.Windows.Devices.Printers.IppIntegerRange]: ...
    @winrt_commethod(14)
    def GetCollectionArray(self) -> win32more.Windows.Foundation.Collections.IVector[win32more.Windows.Foundation.Collections.IMapView[WinRT_String, win32more.Windows.Devices.Printers.IppAttributeValue]]: ...
    @winrt_commethod(15)
    def GetTextWithLanguageArray(self) -> win32more.Windows.Foundation.Collections.IVector[win32more.Windows.Devices.Printers.IppTextWithLanguage]: ...
    @winrt_commethod(16)
    def GetNameWithLanguageArray(self) -> win32more.Windows.Foundation.Collections.IVector[win32more.Windows.Devices.Printers.IppTextWithLanguage]: ...
    @winrt_commethod(17)
    def GetTextWithoutLanguageArray(self) -> win32more.Windows.Foundation.Collections.IVector[WinRT_String]: ...
    @winrt_commethod(18)
    def GetNameWithoutLanguageArray(self) -> win32more.Windows.Foundation.Collections.IVector[WinRT_String]: ...
    @winrt_commethod(19)
    def GetKeywordArray(self) -> win32more.Windows.Foundation.Collections.IVector[WinRT_String]: ...
    @winrt_commethod(20)
    def GetUriArray(self) -> win32more.Windows.Foundation.Collections.IVector[win32more.Windows.Foundation.Uri]: ...
    @winrt_commethod(21)
    def GetUriSchemaArray(self) -> win32more.Windows.Foundation.Collections.IVector[WinRT_String]: ...
    @winrt_commethod(22)
    def GetCharsetArray(self) -> win32more.Windows.Foundation.Collections.IVector[WinRT_String]: ...
    @winrt_commethod(23)
    def GetNaturalLanguageArray(self) -> win32more.Windows.Foundation.Collections.IVector[WinRT_String]: ...
    @winrt_commethod(24)
    def GetMimeMediaTypeArray(self) -> win32more.Windows.Foundation.Collections.IVector[WinRT_String]: ...
    Kind = property(get_Kind, None)
class IIppAttributeValueStatics(ComPtr):
    extends: win32more.Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Devices.Printers.IIppAttributeValueStatics'
    _iid_ = Guid('{10d43942-dd94-5998-b235-afafb6fa7935}')
    @winrt_commethod(6)
    def CreateUnsupported(self) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(7)
    def CreateUnknown(self) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(8)
    def CreateNoValue(self) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(9)
    def CreateInteger(self, value: Int32) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(10)
    def CreateIntegerArray(self, values: win32more.Windows.Foundation.Collections.IIterable[Int32]) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(11)
    def CreateBoolean(self, value: Boolean) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(12)
    def CreateBooleanArray(self, values: win32more.Windows.Foundation.Collections.IIterable[Boolean]) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(13)
    def CreateEnum(self, value: Int32) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(14)
    def CreateEnumArray(self, values: win32more.Windows.Foundation.Collections.IIterable[Int32]) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(15)
    def CreateOctetString(self, value: win32more.Windows.Storage.Streams.IBuffer) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(16)
    def CreateOctetStringArray(self, values: win32more.Windows.Foundation.Collections.IIterable[win32more.Windows.Storage.Streams.IBuffer]) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(17)
    def CreateDateTime(self, value: win32more.Windows.Foundation.DateTime) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(18)
    def CreateDateTimeArray(self, values: win32more.Windows.Foundation.Collections.IIterable[win32more.Windows.Foundation.DateTime]) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(19)
    def CreateResolution(self, value: win32more.Windows.Devices.Printers.IppResolution) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(20)
    def CreateResolutionArray(self, values: win32more.Windows.Foundation.Collections.IIterable[win32more.Windows.Devices.Printers.IppResolution]) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(21)
    def CreateRangeOfInteger(self, value: win32more.Windows.Devices.Printers.IppIntegerRange) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(22)
    def CreateRangeOfIntegerArray(self, values: win32more.Windows.Foundation.Collections.IIterable[win32more.Windows.Devices.Printers.IppIntegerRange]) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(23)
    def CreateCollection(self, memberAttributes: win32more.Windows.Foundation.Collections.IIterable[win32more.Windows.Foundation.Collections.IKeyValuePair[WinRT_String, win32more.Windows.Devices.Printers.IppAttributeValue]]) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(24)
    def CreateCollectionArray(self, memberAttributesArray: win32more.Windows.Foundation.Collections.IIterable[win32more.Windows.Foundation.Collections.IIterable[win32more.Windows.Foundation.Collections.IKeyValuePair[WinRT_String, win32more.Windows.Devices.Printers.IppAttributeValue]]]) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(25)
    def CreateTextWithLanguage(self, value: win32more.Windows.Devices.Printers.IppTextWithLanguage) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(26)
    def CreateTextWithLanguageArray(self, values: win32more.Windows.Foundation.Collections.IIterable[win32more.Windows.Devices.Printers.IppTextWithLanguage]) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(27)
    def CreateNameWithLanguage(self, value: win32more.Windows.Devices.Printers.IppTextWithLanguage) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(28)
    def CreateNameWithLanguageArray(self, values: win32more.Windows.Foundation.Collections.IIterable[win32more.Windows.Devices.Printers.IppTextWithLanguage]) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(29)
    def CreateTextWithoutLanguage(self, value: WinRT_String) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(30)
    def CreateTextWithoutLanguageArray(self, values: win32more.Windows.Foundation.Collections.IIterable[WinRT_String]) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(31)
    def CreateNameWithoutLanguage(self, value: WinRT_String) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(32)
    def CreateNameWithoutLanguageArray(self, values: win32more.Windows.Foundation.Collections.IIterable[WinRT_String]) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(33)
    def CreateKeyword(self, value: WinRT_String) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(34)
    def CreateKeywordArray(self, values: win32more.Windows.Foundation.Collections.IIterable[WinRT_String]) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(35)
    def CreateUri(self, value: win32more.Windows.Foundation.Uri) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(36)
    def CreateUriArray(self, values: win32more.Windows.Foundation.Collections.IIterable[win32more.Windows.Foundation.Uri]) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(37)
    def CreateUriSchema(self, value: WinRT_String) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(38)
    def CreateUriSchemaArray(self, values: win32more.Windows.Foundation.Collections.IIterable[WinRT_String]) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(39)
    def CreateCharset(self, value: WinRT_String) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(40)
    def CreateCharsetArray(self, values: win32more.Windows.Foundation.Collections.IIterable[WinRT_String]) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(41)
    def CreateNaturalLanguage(self, value: WinRT_String) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(42)
    def CreateNaturalLanguageArray(self, values: win32more.Windows.Foundation.Collections.IIterable[WinRT_String]) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(43)
    def CreateMimeMedia(self, value: WinRT_String) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(44)
    def CreateMimeMediaArray(self, values: win32more.Windows.Foundation.Collections.IIterable[WinRT_String]) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
class IIppIntegerRange(ComPtr):
    extends: win32more.Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Devices.Printers.IIppIntegerRange'
    _iid_ = Guid('{92907346-c3ea-5ed6-bdb1-3752c62c6f7f}')
    @winrt_commethod(6)
    def get_Start(self) -> Int32: ...
    @winrt_commethod(7)
    def get_End(self) -> Int32: ...
    End = property(get_End, None)
    Start = property(get_Start, None)
class IIppIntegerRangeFactory(ComPtr):
    extends: win32more.Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Devices.Printers.IIppIntegerRangeFactory'
    _iid_ = Guid('{75d4ecae-f87e-54ad-b5d0-465204db7553}')
    @winrt_commethod(6)
    def CreateInstance(self, start: Int32, end: Int32) -> win32more.Windows.Devices.Printers.IppIntegerRange: ...
class IIppPrintDevice(ComPtr):
    extends: win32more.Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Devices.Printers.IIppPrintDevice'
    _iid_ = Guid('{d748ac56-76f3-5dc6-afd4-c2a8686b9359}')
    @winrt_commethod(6)
    def get_PrinterName(self) -> WinRT_String: ...
    @winrt_commethod(7)
    def get_PrinterUri(self) -> win32more.Windows.Foundation.Uri: ...
    @winrt_commethod(8)
    def GetPrinterAttributesAsBuffer(self, attributeNames: win32more.Windows.Foundation.Collections.IIterable[WinRT_String]) -> win32more.Windows.Storage.Streams.IBuffer: ...
    @winrt_commethod(9)
    def GetPrinterAttributes(self, attributeNames: win32more.Windows.Foundation.Collections.IIterable[WinRT_String]) -> win32more.Windows.Foundation.Collections.IMap[WinRT_String, win32more.Windows.Devices.Printers.IppAttributeValue]: ...
    @winrt_commethod(10)
    def SetPrinterAttributesFromBuffer(self, printerAttributesBuffer: win32more.Windows.Storage.Streams.IBuffer) -> win32more.Windows.Devices.Printers.IppSetAttributesResult: ...
    @winrt_commethod(11)
    def SetPrinterAttributes(self, printerAttributes: win32more.Windows.Foundation.Collections.IIterable[win32more.Windows.Foundation.Collections.IKeyValuePair[WinRT_String, win32more.Windows.Devices.Printers.IppAttributeValue]]) -> win32more.Windows.Devices.Printers.IppSetAttributesResult: ...
    PrinterName = property(get_PrinterName, None)
    PrinterUri = property(get_PrinterUri, None)
class IIppPrintDevice2(ComPtr):
    extends: win32more.Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Devices.Printers.IIppPrintDevice2'
    _iid_ = Guid('{f7c844c9-9d21-5c63-ac20-3676915be2d7}')
    @winrt_commethod(6)
    def GetMaxSupportedPdfSize(self) -> UInt64: ...
    @winrt_commethod(7)
    def GetMaxSupportedPdfVersion(self) -> WinRT_String: ...
    @winrt_commethod(8)
    def IsPdlPassthroughSupported(self, pdlContentType: WinRT_String) -> Boolean: ...
    @winrt_commethod(9)
    def GetPdlPassthroughProvider(self) -> win32more.Windows.Devices.Printers.PdlPassthroughProvider: ...
class IIppPrintDevice3(ComPtr):
    extends: win32more.Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Devices.Printers.IIppPrintDevice3'
    _iid_ = Guid('{b6258f6d-a46d-5e37-80ce-5f69d5544712}')
    @winrt_commethod(6)
    def get_IsIppFaxOutPrinter(self) -> Boolean: ...
    IsIppFaxOutPrinter = property(get_IsIppFaxOutPrinter, None)
class IIppPrintDevice4(ComPtr):
    extends: win32more.Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Devices.Printers.IIppPrintDevice4'
    _iid_ = Guid('{8c48247e-e869-59fb-bc6d-daea0614f93e}')
    @winrt_commethod(6)
    def get_DeviceKind(self) -> win32more.Windows.Devices.Printers.IppPrintDeviceKind: ...
    @winrt_commethod(7)
    def get_CanModifyUserDefaultPrintTicket(self) -> Boolean: ...
    @winrt_commethod(8)
    def get_UserDefaultPrintTicket(self) -> win32more.Windows.Graphics.Printing.PrintTicket.WorkflowPrintTicket: ...
    @winrt_commethod(9)
    def put_UserDefaultPrintTicket(self, value: win32more.Windows.Graphics.Printing.PrintTicket.WorkflowPrintTicket) -> Void: ...
    @winrt_commethod(10)
    def RefreshPrintDeviceCapabilities(self) -> Void: ...
    @winrt_commethod(11)
    def GetMaxSupportedPdlVersion(self, pdlContentType: WinRT_String) -> WinRT_String: ...
    CanModifyUserDefaultPrintTicket = property(get_CanModifyUserDefaultPrintTicket, None)
    DeviceKind = property(get_DeviceKind, None)
    UserDefaultPrintTicket = property(get_UserDefaultPrintTicket, put_UserDefaultPrintTicket)
class IIppPrintDeviceStatics(ComPtr):
    extends: win32more.Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Devices.Printers.IIppPrintDeviceStatics'
    _iid_ = Guid('{7dc19f08-7f20-52ab-94a7-894b83b2a17e}')
    @winrt_commethod(6)
    def GetDeviceSelector(self) -> WinRT_String: ...
    @winrt_commethod(7)
    def FromId(self, deviceId: WinRT_String) -> win32more.Windows.Devices.Printers.IppPrintDevice: ...
    @winrt_commethod(8)
    def FromPrinterName(self, printerName: WinRT_String) -> win32more.Windows.Devices.Printers.IppPrintDevice: ...
    @winrt_commethod(9)
    def IsIppPrinter(self, printerName: WinRT_String) -> Boolean: ...
class IIppResolution(ComPtr):
    extends: win32more.Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Devices.Printers.IIppResolution'
    _iid_ = Guid('{cb493f86-6bf3-56f5-86ce-263d08aead63}')
    @winrt_commethod(6)
    def get_Width(self) -> Int32: ...
    @winrt_commethod(7)
    def get_Height(self) -> Int32: ...
    @winrt_commethod(8)
    def get_Unit(self) -> win32more.Windows.Devices.Printers.IppResolutionUnit: ...
    Height = property(get_Height, None)
    Unit = property(get_Unit, None)
    Width = property(get_Width, None)
class IIppResolutionFactory(ComPtr):
    extends: win32more.Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Devices.Printers.IIppResolutionFactory'
    _iid_ = Guid('{e481c2ae-251a-5326-b173-95543ed99a35}')
    @winrt_commethod(6)
    def CreateInstance(self, width: Int32, height: Int32, unit: win32more.Windows.Devices.Printers.IppResolutionUnit) -> win32more.Windows.Devices.Printers.IppResolution: ...
class IIppSetAttributesResult(ComPtr):
    extends: win32more.Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Devices.Printers.IIppSetAttributesResult'
    _iid_ = Guid('{7d1c7f55-aa9d-58a3-90e9-17bdc5281f07}')
    @winrt_commethod(6)
    def get_Succeeded(self) -> Boolean: ...
    @winrt_commethod(7)
    def get_AttributeErrors(self) -> win32more.Windows.Foundation.Collections.IMapView[WinRT_String, win32more.Windows.Devices.Printers.IppAttributeError]: ...
    AttributeErrors = property(get_AttributeErrors, None)
    Succeeded = property(get_Succeeded, None)
class IIppTextWithLanguage(ComPtr):
    extends: win32more.Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Devices.Printers.IIppTextWithLanguage'
    _iid_ = Guid('{326447a6-5149-5936-90e8-0c736036bf77}')
    @winrt_commethod(6)
    def get_Language(self) -> WinRT_String: ...
    @winrt_commethod(7)
    def get_Value(self) -> WinRT_String: ...
    Language = property(get_Language, None)
    Value = property(get_Value, None)
class IIppTextWithLanguageFactory(ComPtr):
    extends: win32more.Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Devices.Printers.IIppTextWithLanguageFactory'
    _iid_ = Guid('{ca4a1e8d-2968-5775-997c-8a46f1a574ed}')
    @winrt_commethod(6)
    def CreateInstance(self, language: WinRT_String, text: WinRT_String) -> win32more.Windows.Devices.Printers.IppTextWithLanguage: ...
class IPageConfigurationSettings(ComPtr):
    extends: win32more.Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Devices.Printers.IPageConfigurationSettings'
    _iid_ = Guid('{b6fc1e02-5331-54ff-95a0-1fcb76bb97a9}')
    @winrt_commethod(6)
    def get_OrientationSource(self) -> win32more.Windows.Devices.Printers.PageConfigurationSource: ...
    @winrt_commethod(7)
    def put_OrientationSource(self, value: win32more.Windows.Devices.Printers.PageConfigurationSource) -> Void: ...
    @winrt_commethod(8)
    def get_SizeSource(self) -> win32more.Windows.Devices.Printers.PageConfigurationSource: ...
    @winrt_commethod(9)
    def put_SizeSource(self, value: win32more.Windows.Devices.Printers.PageConfigurationSource) -> Void: ...
    OrientationSource = property(get_OrientationSource, put_OrientationSource)
    SizeSource = property(get_SizeSource, put_SizeSource)
class IPdlPassthroughProvider(ComPtr):
    extends: win32more.Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Devices.Printers.IPdlPassthroughProvider'
    _iid_ = Guid('{23c71dd2-6117-553f-9378-180af5849a49}')
    @winrt_commethod(6)
    def get_SupportedPdlContentTypes(self) -> win32more.Windows.Foundation.Collections.IVectorView[WinRT_String]: ...
    @winrt_commethod(7)
    def StartPrintJobWithTaskOptions(self, jobName: WinRT_String, pdlContentType: WinRT_String, taskOptions: win32more.Windows.Graphics.Printing.PrintTaskOptions, pageConfigurationSettings: win32more.Windows.Devices.Printers.PageConfigurationSettings) -> win32more.Windows.Devices.Printers.PdlPassthroughTarget: ...
    @winrt_commethod(8)
    def StartPrintJobWithPrintTicket(self, jobName: WinRT_String, pdlContentType: WinRT_String, printTicket: win32more.Windows.Storage.Streams.IInputStream, pageConfigurationSettings: win32more.Windows.Devices.Printers.PageConfigurationSettings) -> win32more.Windows.Devices.Printers.PdlPassthroughTarget: ...
    SupportedPdlContentTypes = property(get_SupportedPdlContentTypes, None)
class IPdlPassthroughTarget(ComPtr):
    extends: win32more.Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Devices.Printers.IPdlPassthroughTarget'
    _iid_ = Guid('{9840be79-67f8-5385-a5b9-e8c96e0fca76}')
    @winrt_commethod(6)
    def get_PrintJobId(self) -> Int32: ...
    @winrt_commethod(7)
    def GetOutputStream(self) -> win32more.Windows.Storage.Streams.IOutputStream: ...
    @winrt_commethod(8)
    def Submit(self) -> Void: ...
    PrintJobId = property(get_PrintJobId, None)
class IPrint3DDevice(ComPtr):
    extends: win32more.Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Devices.Printers.IPrint3DDevice'
    _iid_ = Guid('{041c3d19-9713-42a2-9813-7dc3337428d3}')
    @winrt_commethod(6)
    def get_PrintSchema(self) -> win32more.Windows.Devices.Printers.PrintSchema: ...
    PrintSchema = property(get_PrintSchema, None)
class IPrint3DDeviceStatics(ComPtr):
    extends: win32more.Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Devices.Printers.IPrint3DDeviceStatics'
    _iid_ = Guid('{fde3620a-67cd-41b7-a344-5150a1fd75b5}')
    @winrt_commethod(6)
    def FromIdAsync(self, deviceId: WinRT_String) -> win32more.Windows.Foundation.IAsyncOperation[win32more.Windows.Devices.Printers.Print3DDevice]: ...
    @winrt_commethod(7)
    def GetDeviceSelector(self) -> WinRT_String: ...
class IPrintSchema(ComPtr):
    extends: win32more.Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Devices.Printers.IPrintSchema'
    _iid_ = Guid('{c2b98316-26b8-4bfb-8138-9f962c22a35b}')
    @winrt_commethod(6)
    def GetDefaultPrintTicketAsync(self) -> win32more.Windows.Foundation.IAsyncOperation[win32more.Windows.Storage.Streams.IRandomAccessStreamWithContentType]: ...
    @winrt_commethod(7)
    def GetCapabilitiesAsync(self, constrainTicket: win32more.Windows.Storage.Streams.IRandomAccessStreamWithContentType) -> win32more.Windows.Foundation.IAsyncOperation[win32more.Windows.Storage.Streams.IRandomAccessStreamWithContentType]: ...
    @winrt_commethod(8)
    def MergeAndValidateWithDefaultPrintTicketAsync(self, deltaTicket: win32more.Windows.Storage.Streams.IRandomAccessStreamWithContentType) -> win32more.Windows.Foundation.IAsyncOperation[win32more.Windows.Storage.Streams.IRandomAccessStreamWithContentType]: ...
class IVirtualPrinterInstallationParameters(ComPtr):
    extends: win32more.Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Devices.Printers.IVirtualPrinterInstallationParameters'
    _iid_ = Guid('{bbc159b3-12f3-584c-8d26-b22c0dc83241}')
    @winrt_commethod(6)
    def get_PrinterName(self) -> WinRT_String: ...
    @winrt_commethod(7)
    def put_PrinterName(self, value: WinRT_String) -> Void: ...
    @winrt_commethod(8)
    def get_OutputFileExtensions(self) -> win32more.Windows.Foundation.Collections.IVector[WinRT_String]: ...
    @winrt_commethod(9)
    def get_SupportedInputFormats(self) -> win32more.Windows.Foundation.Collections.IVector[win32more.Windows.Devices.Printers.VirtualPrinterSupportedFormat]: ...
    @winrt_commethod(10)
    def get_PrintDeviceCapabilitiesPackageRelativeFilePath(self) -> WinRT_String: ...
    @winrt_commethod(11)
    def put_PrintDeviceCapabilitiesPackageRelativeFilePath(self, value: WinRT_String) -> Void: ...
    @winrt_commethod(12)
    def get_PrintDeviceResourcesPackageRelativeFilePath(self) -> WinRT_String: ...
    @winrt_commethod(13)
    def put_PrintDeviceResourcesPackageRelativeFilePath(self, value: WinRT_String) -> Void: ...
    @winrt_commethod(14)
    def get_PreferredInputFormat(self) -> win32more.Windows.Devices.Printers.VirtualPrinterPreferredInputFormat: ...
    @winrt_commethod(15)
    def put_PreferredInputFormat(self, value: win32more.Windows.Devices.Printers.VirtualPrinterPreferredInputFormat) -> Void: ...
    @winrt_commethod(16)
    def get_PrinterUri(self) -> win32more.Windows.Foundation.Uri: ...
    @winrt_commethod(17)
    def put_PrinterUri(self, value: win32more.Windows.Foundation.Uri) -> Void: ...
    @winrt_commethod(18)
    def get_EntryPoint(self) -> WinRT_String: ...
    @winrt_commethod(19)
    def put_EntryPoint(self, value: WinRT_String) -> Void: ...
    EntryPoint = property(get_EntryPoint, put_EntryPoint)
    OutputFileExtensions = property(get_OutputFileExtensions, None)
    PreferredInputFormat = property(get_PreferredInputFormat, put_PreferredInputFormat)
    PrintDeviceCapabilitiesPackageRelativeFilePath = property(get_PrintDeviceCapabilitiesPackageRelativeFilePath, put_PrintDeviceCapabilitiesPackageRelativeFilePath)
    PrintDeviceResourcesPackageRelativeFilePath = property(get_PrintDeviceResourcesPackageRelativeFilePath, put_PrintDeviceResourcesPackageRelativeFilePath)
    PrinterName = property(get_PrinterName, put_PrinterName)
    PrinterUri = property(get_PrinterUri, put_PrinterUri)
    SupportedInputFormats = property(get_SupportedInputFormats, None)
class IVirtualPrinterInstallationResult(ComPtr):
    extends: win32more.Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Devices.Printers.IVirtualPrinterInstallationResult'
    _iid_ = Guid('{82defd78-1601-5657-85df-75eb691604bd}')
    @winrt_commethod(6)
    def get_Status(self) -> win32more.Windows.Devices.Printers.VirtualPrinterInstallationStatus: ...
    @winrt_commethod(7)
    def get_ExtendedError(self) -> win32more.Windows.Foundation.HResult: ...
    ExtendedError = property(get_ExtendedError, None)
    Status = property(get_Status, None)
class IVirtualPrinterManagerStatics(ComPtr):
    extends: win32more.Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Devices.Printers.IVirtualPrinterManagerStatics'
    _iid_ = Guid('{141084b6-6702-5b5f-83da-c75891657554}')
    @winrt_commethod(6)
    def InstallVirtualPrinterAsync(self, parameters: win32more.Windows.Devices.Printers.VirtualPrinterInstallationParameters) -> win32more.Windows.Foundation.IAsyncOperation[win32more.Windows.Devices.Printers.VirtualPrinterInstallationResult]: ...
    @winrt_commethod(7)
    def InstallVirtualPrinterAsync2(self, parameters: win32more.Windows.Devices.Printers.VirtualPrinterInstallationParameters, appPackageFamilyName: WinRT_String) -> win32more.Windows.Foundation.IAsyncOperation[win32more.Windows.Devices.Printers.VirtualPrinterInstallationResult]: ...
    @winrt_commethod(8)
    def InstallVirtualPrinterForAllUsersAsync(self, parameters: win32more.Windows.Devices.Printers.VirtualPrinterInstallationParameters) -> win32more.Windows.Foundation.IAsyncOperation[win32more.Windows.Devices.Printers.VirtualPrinterInstallationResult]: ...
    @winrt_commethod(9)
    def InstallVirtualPrinterForAllUsersAsync2(self, parameters: win32more.Windows.Devices.Printers.VirtualPrinterInstallationParameters, appPackageFamilyName: WinRT_String) -> win32more.Windows.Foundation.IAsyncOperation[win32more.Windows.Devices.Printers.VirtualPrinterInstallationResult]: ...
    @winrt_commethod(10)
    def FindAllVirtualPrinters(self) -> win32more.Windows.Foundation.Collections.IVectorView[WinRT_String]: ...
    @winrt_commethod(11)
    def FindAllVirtualPrinters2(self, appPackageFamilyName: WinRT_String) -> win32more.Windows.Foundation.Collections.IVectorView[WinRT_String]: ...
    @winrt_commethod(12)
    def RemoveVirtualPrinterAsync(self, printerName: WinRT_String) -> win32more.Windows.Foundation.IAsyncOperation[Boolean]: ...
    @winrt_commethod(13)
    def RemoveVirtualPrinterForAllUsersAsync(self, printerName: WinRT_String) -> win32more.Windows.Foundation.IAsyncOperation[Boolean]: ...
class IVirtualPrinterSupportedFormat(ComPtr):
    extends: win32more.Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Devices.Printers.IVirtualPrinterSupportedFormat'
    _iid_ = Guid('{3801fa17-22b5-5dab-ad38-39e47d6071af}')
    @winrt_commethod(6)
    def get_ContentType(self) -> WinRT_String: ...
    @winrt_commethod(7)
    def put_ContentType(self, value: WinRT_String) -> Void: ...
    @winrt_commethod(8)
    def get_MaxSupportedVersion(self) -> WinRT_String: ...
    @winrt_commethod(9)
    def put_MaxSupportedVersion(self, value: WinRT_String) -> Void: ...
    ContentType = property(get_ContentType, put_ContentType)
    MaxSupportedVersion = property(get_MaxSupportedVersion, put_MaxSupportedVersion)
class IVirtualPrinterSupportedFormatFactory(ComPtr):
    extends: win32more.Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Devices.Printers.IVirtualPrinterSupportedFormatFactory'
    _iid_ = Guid('{6daaed44-97a6-57f4-be8b-9dbabc587f2d}')
    @winrt_commethod(6)
    def CreateInstance(self, contentType: WinRT_String, maxSupportedVersion: WinRT_String) -> win32more.Windows.Devices.Printers.VirtualPrinterSupportedFormat: ...
class IppAttributeError(ComPtr):
    extends: win32more.Windows.Win32.System.WinRT.IInspectable
    default_interface: win32more.Windows.Devices.Printers.IIppAttributeError
    _classid_ = 'Windows.Devices.Printers.IppAttributeError'
    @winrt_mixinmethod
    def get_Reason(self: win32more.Windows.Devices.Printers.IIppAttributeError) -> win32more.Windows.Devices.Printers.IppAttributeErrorReason: ...
    @winrt_mixinmethod
    def get_ExtendedError(self: win32more.Windows.Devices.Printers.IIppAttributeError) -> win32more.Windows.Foundation.HResult: ...
    @winrt_mixinmethod
    def GetUnsupportedValues(self: win32more.Windows.Devices.Printers.IIppAttributeError) -> win32more.Windows.Foundation.Collections.IVectorView[win32more.Windows.Devices.Printers.IppAttributeValue]: ...
    ExtendedError = property(get_ExtendedError, None)
    Reason = property(get_Reason, None)
class IppAttributeErrorReason(Enum, Int32):
    RequestEntityTooLarge = 0
    AttributeNotSupported = 1
    AttributeValuesNotSupported = 2
    AttributeNotSettable = 3
    ConflictingAttributes = 4
class IppAttributeValue(ComPtr):
    extends: win32more.Windows.Win32.System.WinRT.IInspectable
    default_interface: win32more.Windows.Devices.Printers.IIppAttributeValue
    _classid_ = 'Windows.Devices.Printers.IppAttributeValue'
    @winrt_mixinmethod
    def get_Kind(self: win32more.Windows.Devices.Printers.IIppAttributeValue) -> win32more.Windows.Devices.Printers.IppAttributeValueKind: ...
    @winrt_mixinmethod
    def GetIntegerArray(self: win32more.Windows.Devices.Printers.IIppAttributeValue) -> win32more.Windows.Foundation.Collections.IVector[Int32]: ...
    @winrt_mixinmethod
    def GetBooleanArray(self: win32more.Windows.Devices.Printers.IIppAttributeValue) -> win32more.Windows.Foundation.Collections.IVector[Boolean]: ...
    @winrt_mixinmethod
    def GetEnumArray(self: win32more.Windows.Devices.Printers.IIppAttributeValue) -> win32more.Windows.Foundation.Collections.IVector[Int32]: ...
    @winrt_mixinmethod
    def GetOctetStringArray(self: win32more.Windows.Devices.Printers.IIppAttributeValue) -> win32more.Windows.Foundation.Collections.IVector[win32more.Windows.Storage.Streams.IBuffer]: ...
    @winrt_mixinmethod
    def GetDateTimeArray(self: win32more.Windows.Devices.Printers.IIppAttributeValue) -> win32more.Windows.Foundation.Collections.IVector[win32more.Windows.Foundation.DateTime]: ...
    @winrt_mixinmethod
    def GetResolutionArray(self: win32more.Windows.Devices.Printers.IIppAttributeValue) -> win32more.Windows.Foundation.Collections.IVector[win32more.Windows.Devices.Printers.IppResolution]: ...
    @winrt_mixinmethod
    def GetRangeOfIntegerArray(self: win32more.Windows.Devices.Printers.IIppAttributeValue) -> win32more.Windows.Foundation.Collections.IVector[win32more.Windows.Devices.Printers.IppIntegerRange]: ...
    @winrt_mixinmethod
    def GetCollectionArray(self: win32more.Windows.Devices.Printers.IIppAttributeValue) -> win32more.Windows.Foundation.Collections.IVector[win32more.Windows.Foundation.Collections.IMapView[WinRT_String, win32more.Windows.Devices.Printers.IppAttributeValue]]: ...
    @winrt_mixinmethod
    def GetTextWithLanguageArray(self: win32more.Windows.Devices.Printers.IIppAttributeValue) -> win32more.Windows.Foundation.Collections.IVector[win32more.Windows.Devices.Printers.IppTextWithLanguage]: ...
    @winrt_mixinmethod
    def GetNameWithLanguageArray(self: win32more.Windows.Devices.Printers.IIppAttributeValue) -> win32more.Windows.Foundation.Collections.IVector[win32more.Windows.Devices.Printers.IppTextWithLanguage]: ...
    @winrt_mixinmethod
    def GetTextWithoutLanguageArray(self: win32more.Windows.Devices.Printers.IIppAttributeValue) -> win32more.Windows.Foundation.Collections.IVector[WinRT_String]: ...
    @winrt_mixinmethod
    def GetNameWithoutLanguageArray(self: win32more.Windows.Devices.Printers.IIppAttributeValue) -> win32more.Windows.Foundation.Collections.IVector[WinRT_String]: ...
    @winrt_mixinmethod
    def GetKeywordArray(self: win32more.Windows.Devices.Printers.IIppAttributeValue) -> win32more.Windows.Foundation.Collections.IVector[WinRT_String]: ...
    @winrt_mixinmethod
    def GetUriArray(self: win32more.Windows.Devices.Printers.IIppAttributeValue) -> win32more.Windows.Foundation.Collections.IVector[win32more.Windows.Foundation.Uri]: ...
    @winrt_mixinmethod
    def GetUriSchemaArray(self: win32more.Windows.Devices.Printers.IIppAttributeValue) -> win32more.Windows.Foundation.Collections.IVector[WinRT_String]: ...
    @winrt_mixinmethod
    def GetCharsetArray(self: win32more.Windows.Devices.Printers.IIppAttributeValue) -> win32more.Windows.Foundation.Collections.IVector[WinRT_String]: ...
    @winrt_mixinmethod
    def GetNaturalLanguageArray(self: win32more.Windows.Devices.Printers.IIppAttributeValue) -> win32more.Windows.Foundation.Collections.IVector[WinRT_String]: ...
    @winrt_mixinmethod
    def GetMimeMediaTypeArray(self: win32more.Windows.Devices.Printers.IIppAttributeValue) -> win32more.Windows.Foundation.Collections.IVector[WinRT_String]: ...
    @winrt_classmethod
    def CreateUnsupported(cls: win32more.Windows.Devices.Printers.IIppAttributeValueStatics) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateUnknown(cls: win32more.Windows.Devices.Printers.IIppAttributeValueStatics) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateNoValue(cls: win32more.Windows.Devices.Printers.IIppAttributeValueStatics) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateInteger(cls: win32more.Windows.Devices.Printers.IIppAttributeValueStatics, value: Int32) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateIntegerArray(cls: win32more.Windows.Devices.Printers.IIppAttributeValueStatics, values: win32more.Windows.Foundation.Collections.IIterable[Int32]) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateBoolean(cls: win32more.Windows.Devices.Printers.IIppAttributeValueStatics, value: Boolean) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateBooleanArray(cls: win32more.Windows.Devices.Printers.IIppAttributeValueStatics, values: win32more.Windows.Foundation.Collections.IIterable[Boolean]) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateEnum(cls: win32more.Windows.Devices.Printers.IIppAttributeValueStatics, value: Int32) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateEnumArray(cls: win32more.Windows.Devices.Printers.IIppAttributeValueStatics, values: win32more.Windows.Foundation.Collections.IIterable[Int32]) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateOctetString(cls: win32more.Windows.Devices.Printers.IIppAttributeValueStatics, value: win32more.Windows.Storage.Streams.IBuffer) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateOctetStringArray(cls: win32more.Windows.Devices.Printers.IIppAttributeValueStatics, values: win32more.Windows.Foundation.Collections.IIterable[win32more.Windows.Storage.Streams.IBuffer]) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateDateTime(cls: win32more.Windows.Devices.Printers.IIppAttributeValueStatics, value: win32more.Windows.Foundation.DateTime) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateDateTimeArray(cls: win32more.Windows.Devices.Printers.IIppAttributeValueStatics, values: win32more.Windows.Foundation.Collections.IIterable[win32more.Windows.Foundation.DateTime]) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateResolution(cls: win32more.Windows.Devices.Printers.IIppAttributeValueStatics, value: win32more.Windows.Devices.Printers.IppResolution) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateResolutionArray(cls: win32more.Windows.Devices.Printers.IIppAttributeValueStatics, values: win32more.Windows.Foundation.Collections.IIterable[win32more.Windows.Devices.Printers.IppResolution]) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateRangeOfInteger(cls: win32more.Windows.Devices.Printers.IIppAttributeValueStatics, value: win32more.Windows.Devices.Printers.IppIntegerRange) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateRangeOfIntegerArray(cls: win32more.Windows.Devices.Printers.IIppAttributeValueStatics, values: win32more.Windows.Foundation.Collections.IIterable[win32more.Windows.Devices.Printers.IppIntegerRange]) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateCollection(cls: win32more.Windows.Devices.Printers.IIppAttributeValueStatics, memberAttributes: win32more.Windows.Foundation.Collections.IIterable[win32more.Windows.Foundation.Collections.IKeyValuePair[WinRT_String, win32more.Windows.Devices.Printers.IppAttributeValue]]) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateCollectionArray(cls: win32more.Windows.Devices.Printers.IIppAttributeValueStatics, memberAttributesArray: win32more.Windows.Foundation.Collections.IIterable[win32more.Windows.Foundation.Collections.IIterable[win32more.Windows.Foundation.Collections.IKeyValuePair[WinRT_String, win32more.Windows.Devices.Printers.IppAttributeValue]]]) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateTextWithLanguage(cls: win32more.Windows.Devices.Printers.IIppAttributeValueStatics, value: win32more.Windows.Devices.Printers.IppTextWithLanguage) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateTextWithLanguageArray(cls: win32more.Windows.Devices.Printers.IIppAttributeValueStatics, values: win32more.Windows.Foundation.Collections.IIterable[win32more.Windows.Devices.Printers.IppTextWithLanguage]) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateNameWithLanguage(cls: win32more.Windows.Devices.Printers.IIppAttributeValueStatics, value: win32more.Windows.Devices.Printers.IppTextWithLanguage) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateNameWithLanguageArray(cls: win32more.Windows.Devices.Printers.IIppAttributeValueStatics, values: win32more.Windows.Foundation.Collections.IIterable[win32more.Windows.Devices.Printers.IppTextWithLanguage]) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateTextWithoutLanguage(cls: win32more.Windows.Devices.Printers.IIppAttributeValueStatics, value: WinRT_String) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateTextWithoutLanguageArray(cls: win32more.Windows.Devices.Printers.IIppAttributeValueStatics, values: win32more.Windows.Foundation.Collections.IIterable[WinRT_String]) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateNameWithoutLanguage(cls: win32more.Windows.Devices.Printers.IIppAttributeValueStatics, value: WinRT_String) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateNameWithoutLanguageArray(cls: win32more.Windows.Devices.Printers.IIppAttributeValueStatics, values: win32more.Windows.Foundation.Collections.IIterable[WinRT_String]) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateKeyword(cls: win32more.Windows.Devices.Printers.IIppAttributeValueStatics, value: WinRT_String) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateKeywordArray(cls: win32more.Windows.Devices.Printers.IIppAttributeValueStatics, values: win32more.Windows.Foundation.Collections.IIterable[WinRT_String]) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateUri(cls: win32more.Windows.Devices.Printers.IIppAttributeValueStatics, value: win32more.Windows.Foundation.Uri) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateUriArray(cls: win32more.Windows.Devices.Printers.IIppAttributeValueStatics, values: win32more.Windows.Foundation.Collections.IIterable[win32more.Windows.Foundation.Uri]) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateUriSchema(cls: win32more.Windows.Devices.Printers.IIppAttributeValueStatics, value: WinRT_String) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateUriSchemaArray(cls: win32more.Windows.Devices.Printers.IIppAttributeValueStatics, values: win32more.Windows.Foundation.Collections.IIterable[WinRT_String]) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateCharset(cls: win32more.Windows.Devices.Printers.IIppAttributeValueStatics, value: WinRT_String) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateCharsetArray(cls: win32more.Windows.Devices.Printers.IIppAttributeValueStatics, values: win32more.Windows.Foundation.Collections.IIterable[WinRT_String]) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateNaturalLanguage(cls: win32more.Windows.Devices.Printers.IIppAttributeValueStatics, value: WinRT_String) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateNaturalLanguageArray(cls: win32more.Windows.Devices.Printers.IIppAttributeValueStatics, values: win32more.Windows.Foundation.Collections.IIterable[WinRT_String]) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateMimeMedia(cls: win32more.Windows.Devices.Printers.IIppAttributeValueStatics, value: WinRT_String) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateMimeMediaArray(cls: win32more.Windows.Devices.Printers.IIppAttributeValueStatics, values: win32more.Windows.Foundation.Collections.IIterable[WinRT_String]) -> win32more.Windows.Devices.Printers.IppAttributeValue: ...
    Kind = property(get_Kind, None)
class IppAttributeValueKind(Enum, Int32):
    Unsupported = 0
    Unknown = 1
    NoValue = 2
    Integer = 3
    Boolean = 4
    Enum = 5
    OctetString = 6
    DateTime = 7
    Resolution = 8
    RangeOfInteger = 9
    Collection = 10
    TextWithLanguage = 11
    NameWithLanguage = 12
    TextWithoutLanguage = 13
    NameWithoutLanguage = 14
    Keyword = 15
    Uri = 16
    UriSchema = 17
    Charset = 18
    NaturalLanguage = 19
    MimeMediaType = 20
class IppIntegerRange(ComPtr):
    extends: win32more.Windows.Win32.System.WinRT.IInspectable
    default_interface: win32more.Windows.Devices.Printers.IIppIntegerRange
    _classid_ = 'Windows.Devices.Printers.IppIntegerRange'
    def __init__(self, *args, **kwargs):
        if kwargs:
            super().__init__(**kwargs)
        elif len(args) == 2:
            super().__init__(move=win32more.Windows.Devices.Printers.IppIntegerRange.CreateInstance(*args))
        else:
            raise ValueError('no matched constructor')
    @winrt_factorymethod
    def CreateInstance(cls: win32more.Windows.Devices.Printers.IIppIntegerRangeFactory, start: Int32, end: Int32) -> win32more.Windows.Devices.Printers.IppIntegerRange: ...
    @winrt_mixinmethod
    def get_Start(self: win32more.Windows.Devices.Printers.IIppIntegerRange) -> Int32: ...
    @winrt_mixinmethod
    def get_End(self: win32more.Windows.Devices.Printers.IIppIntegerRange) -> Int32: ...
    End = property(get_End, None)
    Start = property(get_Start, None)
class IppPrintDevice(ComPtr):
    extends: win32more.Windows.Win32.System.WinRT.IInspectable
    default_interface: win32more.Windows.Devices.Printers.IIppPrintDevice
    _classid_ = 'Windows.Devices.Printers.IppPrintDevice'
    @winrt_mixinmethod
    def get_PrinterName(self: win32more.Windows.Devices.Printers.IIppPrintDevice) -> WinRT_String: ...
    @winrt_mixinmethod
    def get_PrinterUri(self: win32more.Windows.Devices.Printers.IIppPrintDevice) -> win32more.Windows.Foundation.Uri: ...
    @winrt_mixinmethod
    def GetPrinterAttributesAsBuffer(self: win32more.Windows.Devices.Printers.IIppPrintDevice, attributeNames: win32more.Windows.Foundation.Collections.IIterable[WinRT_String]) -> win32more.Windows.Storage.Streams.IBuffer: ...
    @winrt_mixinmethod
    def GetPrinterAttributes(self: win32more.Windows.Devices.Printers.IIppPrintDevice, attributeNames: win32more.Windows.Foundation.Collections.IIterable[WinRT_String]) -> win32more.Windows.Foundation.Collections.IMap[WinRT_String, win32more.Windows.Devices.Printers.IppAttributeValue]: ...
    @winrt_mixinmethod
    def SetPrinterAttributesFromBuffer(self: win32more.Windows.Devices.Printers.IIppPrintDevice, printerAttributesBuffer: win32more.Windows.Storage.Streams.IBuffer) -> win32more.Windows.Devices.Printers.IppSetAttributesResult: ...
    @winrt_mixinmethod
    def SetPrinterAttributes(self: win32more.Windows.Devices.Printers.IIppPrintDevice, printerAttributes: win32more.Windows.Foundation.Collections.IIterable[win32more.Windows.Foundation.Collections.IKeyValuePair[WinRT_String, win32more.Windows.Devices.Printers.IppAttributeValue]]) -> win32more.Windows.Devices.Printers.IppSetAttributesResult: ...
    @winrt_mixinmethod
    def GetMaxSupportedPdfSize(self: win32more.Windows.Devices.Printers.IIppPrintDevice2) -> UInt64: ...
    @winrt_mixinmethod
    def GetMaxSupportedPdfVersion(self: win32more.Windows.Devices.Printers.IIppPrintDevice2) -> WinRT_String: ...
    @winrt_mixinmethod
    def IsPdlPassthroughSupported(self: win32more.Windows.Devices.Printers.IIppPrintDevice2, pdlContentType: WinRT_String) -> Boolean: ...
    @winrt_mixinmethod
    def GetPdlPassthroughProvider(self: win32more.Windows.Devices.Printers.IIppPrintDevice2) -> win32more.Windows.Devices.Printers.PdlPassthroughProvider: ...
    @winrt_mixinmethod
    def get_IsIppFaxOutPrinter(self: win32more.Windows.Devices.Printers.IIppPrintDevice3) -> Boolean: ...
    @winrt_mixinmethod
    def get_DeviceKind(self: win32more.Windows.Devices.Printers.IIppPrintDevice4) -> win32more.Windows.Devices.Printers.IppPrintDeviceKind: ...
    @winrt_mixinmethod
    def get_CanModifyUserDefaultPrintTicket(self: win32more.Windows.Devices.Printers.IIppPrintDevice4) -> Boolean: ...
    @winrt_mixinmethod
    def get_UserDefaultPrintTicket(self: win32more.Windows.Devices.Printers.IIppPrintDevice4) -> win32more.Windows.Graphics.Printing.PrintTicket.WorkflowPrintTicket: ...
    @winrt_mixinmethod
    def put_UserDefaultPrintTicket(self: win32more.Windows.Devices.Printers.IIppPrintDevice4, value: win32more.Windows.Graphics.Printing.PrintTicket.WorkflowPrintTicket) -> Void: ...
    @winrt_mixinmethod
    def RefreshPrintDeviceCapabilities(self: win32more.Windows.Devices.Printers.IIppPrintDevice4) -> Void: ...
    @winrt_mixinmethod
    def GetMaxSupportedPdlVersion(self: win32more.Windows.Devices.Printers.IIppPrintDevice4, pdlContentType: WinRT_String) -> WinRT_String: ...
    @winrt_classmethod
    def GetDeviceSelector(cls: win32more.Windows.Devices.Printers.IIppPrintDeviceStatics) -> WinRT_String: ...
    @winrt_classmethod
    def FromId(cls: win32more.Windows.Devices.Printers.IIppPrintDeviceStatics, deviceId: WinRT_String) -> win32more.Windows.Devices.Printers.IppPrintDevice: ...
    @winrt_classmethod
    def FromPrinterName(cls: win32more.Windows.Devices.Printers.IIppPrintDeviceStatics, printerName: WinRT_String) -> win32more.Windows.Devices.Printers.IppPrintDevice: ...
    @winrt_classmethod
    def IsIppPrinter(cls: win32more.Windows.Devices.Printers.IIppPrintDeviceStatics, printerName: WinRT_String) -> Boolean: ...
    CanModifyUserDefaultPrintTicket = property(get_CanModifyUserDefaultPrintTicket, None)
    DeviceKind = property(get_DeviceKind, None)
    IsIppFaxOutPrinter = property(get_IsIppFaxOutPrinter, None)
    PrinterName = property(get_PrinterName, None)
    PrinterUri = property(get_PrinterUri, None)
    UserDefaultPrintTicket = property(get_UserDefaultPrintTicket, put_UserDefaultPrintTicket)
class IppPrintDeviceKind(Enum, Int32):
    Printer = 0
    FaxOut = 1
    VirtualPrinter = 2
class IppResolution(ComPtr):
    extends: win32more.Windows.Win32.System.WinRT.IInspectable
    default_interface: win32more.Windows.Devices.Printers.IIppResolution
    _classid_ = 'Windows.Devices.Printers.IppResolution'
    def __init__(self, *args, **kwargs):
        if kwargs:
            super().__init__(**kwargs)
        elif len(args) == 3:
            super().__init__(move=win32more.Windows.Devices.Printers.IppResolution.CreateInstance(*args))
        else:
            raise ValueError('no matched constructor')
    @winrt_factorymethod
    def CreateInstance(cls: win32more.Windows.Devices.Printers.IIppResolutionFactory, width: Int32, height: Int32, unit: win32more.Windows.Devices.Printers.IppResolutionUnit) -> win32more.Windows.Devices.Printers.IppResolution: ...
    @winrt_mixinmethod
    def get_Width(self: win32more.Windows.Devices.Printers.IIppResolution) -> Int32: ...
    @winrt_mixinmethod
    def get_Height(self: win32more.Windows.Devices.Printers.IIppResolution) -> Int32: ...
    @winrt_mixinmethod
    def get_Unit(self: win32more.Windows.Devices.Printers.IIppResolution) -> win32more.Windows.Devices.Printers.IppResolutionUnit: ...
    Height = property(get_Height, None)
    Unit = property(get_Unit, None)
    Width = property(get_Width, None)
class IppResolutionUnit(Enum, Int32):
    DotsPerInch = 0
    DotsPerCentimeter = 1
class IppSetAttributesResult(ComPtr):
    extends: win32more.Windows.Win32.System.WinRT.IInspectable
    default_interface: win32more.Windows.Devices.Printers.IIppSetAttributesResult
    _classid_ = 'Windows.Devices.Printers.IppSetAttributesResult'
    @winrt_mixinmethod
    def get_Succeeded(self: win32more.Windows.Devices.Printers.IIppSetAttributesResult) -> Boolean: ...
    @winrt_mixinmethod
    def get_AttributeErrors(self: win32more.Windows.Devices.Printers.IIppSetAttributesResult) -> win32more.Windows.Foundation.Collections.IMapView[WinRT_String, win32more.Windows.Devices.Printers.IppAttributeError]: ...
    AttributeErrors = property(get_AttributeErrors, None)
    Succeeded = property(get_Succeeded, None)
class IppTextWithLanguage(ComPtr):
    extends: win32more.Windows.Win32.System.WinRT.IInspectable
    default_interface: win32more.Windows.Devices.Printers.IIppTextWithLanguage
    _classid_ = 'Windows.Devices.Printers.IppTextWithLanguage'
    def __init__(self, *args, **kwargs):
        if kwargs:
            super().__init__(**kwargs)
        elif len(args) == 2:
            super().__init__(move=win32more.Windows.Devices.Printers.IppTextWithLanguage.CreateInstance(*args))
        else:
            raise ValueError('no matched constructor')
    @winrt_factorymethod
    def CreateInstance(cls: win32more.Windows.Devices.Printers.IIppTextWithLanguageFactory, language: WinRT_String, text: WinRT_String) -> win32more.Windows.Devices.Printers.IppTextWithLanguage: ...
    @winrt_mixinmethod
    def get_Language(self: win32more.Windows.Devices.Printers.IIppTextWithLanguage) -> WinRT_String: ...
    @winrt_mixinmethod
    def get_Value(self: win32more.Windows.Devices.Printers.IIppTextWithLanguage) -> WinRT_String: ...
    Language = property(get_Language, None)
    Value = property(get_Value, None)
class PageConfigurationSettings(ComPtr):
    extends: win32more.Windows.Win32.System.WinRT.IInspectable
    default_interface: win32more.Windows.Devices.Printers.IPageConfigurationSettings
    _classid_ = 'Windows.Devices.Printers.PageConfigurationSettings'
    def __init__(self, *args, **kwargs):
        if kwargs:
            super().__init__(**kwargs)
        elif len(args) == 0:
            super().__init__(move=win32more.Windows.Devices.Printers.PageConfigurationSettings.CreateInstance(*args))
        else:
            raise ValueError('no matched constructor')
    @winrt_activatemethod
    def CreateInstance(cls) -> win32more.Windows.Devices.Printers.PageConfigurationSettings: ...
    @winrt_mixinmethod
    def get_OrientationSource(self: win32more.Windows.Devices.Printers.IPageConfigurationSettings) -> win32more.Windows.Devices.Printers.PageConfigurationSource: ...
    @winrt_mixinmethod
    def put_OrientationSource(self: win32more.Windows.Devices.Printers.IPageConfigurationSettings, value: win32more.Windows.Devices.Printers.PageConfigurationSource) -> Void: ...
    @winrt_mixinmethod
    def get_SizeSource(self: win32more.Windows.Devices.Printers.IPageConfigurationSettings) -> win32more.Windows.Devices.Printers.PageConfigurationSource: ...
    @winrt_mixinmethod
    def put_SizeSource(self: win32more.Windows.Devices.Printers.IPageConfigurationSettings, value: win32more.Windows.Devices.Printers.PageConfigurationSource) -> Void: ...
    OrientationSource = property(get_OrientationSource, put_OrientationSource)
    SizeSource = property(get_SizeSource, put_SizeSource)
class PageConfigurationSource(Enum, Int32):
    PrintJobConfiguration = 0
    PdlContent = 1
class PdlPassthroughProvider(ComPtr):
    extends: win32more.Windows.Win32.System.WinRT.IInspectable
    default_interface: win32more.Windows.Devices.Printers.IPdlPassthroughProvider
    _classid_ = 'Windows.Devices.Printers.PdlPassthroughProvider'
    @winrt_mixinmethod
    def get_SupportedPdlContentTypes(self: win32more.Windows.Devices.Printers.IPdlPassthroughProvider) -> win32more.Windows.Foundation.Collections.IVectorView[WinRT_String]: ...
    @winrt_mixinmethod
    def StartPrintJobWithTaskOptions(self: win32more.Windows.Devices.Printers.IPdlPassthroughProvider, jobName: WinRT_String, pdlContentType: WinRT_String, taskOptions: win32more.Windows.Graphics.Printing.PrintTaskOptions, pageConfigurationSettings: win32more.Windows.Devices.Printers.PageConfigurationSettings) -> win32more.Windows.Devices.Printers.PdlPassthroughTarget: ...
    @winrt_mixinmethod
    def StartPrintJobWithPrintTicket(self: win32more.Windows.Devices.Printers.IPdlPassthroughProvider, jobName: WinRT_String, pdlContentType: WinRT_String, printTicket: win32more.Windows.Storage.Streams.IInputStream, pageConfigurationSettings: win32more.Windows.Devices.Printers.PageConfigurationSettings) -> win32more.Windows.Devices.Printers.PdlPassthroughTarget: ...
    SupportedPdlContentTypes = property(get_SupportedPdlContentTypes, None)
class PdlPassthroughTarget(ComPtr):
    extends: win32more.Windows.Win32.System.WinRT.IInspectable
    implements: Tuple[ContextManagerProtocol]
    default_interface: win32more.Windows.Devices.Printers.IPdlPassthroughTarget
    _classid_ = 'Windows.Devices.Printers.PdlPassthroughTarget'
    @winrt_mixinmethod
    def get_PrintJobId(self: win32more.Windows.Devices.Printers.IPdlPassthroughTarget) -> Int32: ...
    @winrt_mixinmethod
    def GetOutputStream(self: win32more.Windows.Devices.Printers.IPdlPassthroughTarget) -> win32more.Windows.Storage.Streams.IOutputStream: ...
    @winrt_mixinmethod
    def Submit(self: win32more.Windows.Devices.Printers.IPdlPassthroughTarget) -> Void: ...
    @winrt_mixinmethod
    def Close(self: win32more.Windows.Foundation.IClosable) -> Void: ...
    PrintJobId = property(get_PrintJobId, None)
class Print3DDevice(ComPtr):
    extends: win32more.Windows.Win32.System.WinRT.IInspectable
    default_interface: win32more.Windows.Devices.Printers.IPrint3DDevice
    _classid_ = 'Windows.Devices.Printers.Print3DDevice'
    @winrt_mixinmethod
    def get_PrintSchema(self: win32more.Windows.Devices.Printers.IPrint3DDevice) -> win32more.Windows.Devices.Printers.PrintSchema: ...
    @winrt_classmethod
    def FromIdAsync(cls: win32more.Windows.Devices.Printers.IPrint3DDeviceStatics, deviceId: WinRT_String) -> win32more.Windows.Foundation.IAsyncOperation[win32more.Windows.Devices.Printers.Print3DDevice]: ...
    @winrt_classmethod
    def GetDeviceSelector(cls: win32more.Windows.Devices.Printers.IPrint3DDeviceStatics) -> WinRT_String: ...
    PrintSchema = property(get_PrintSchema, None)
class PrintSchema(ComPtr):
    extends: win32more.Windows.Win32.System.WinRT.IInspectable
    default_interface: win32more.Windows.Devices.Printers.IPrintSchema
    _classid_ = 'Windows.Devices.Printers.PrintSchema'
    @winrt_mixinmethod
    def GetDefaultPrintTicketAsync(self: win32more.Windows.Devices.Printers.IPrintSchema) -> win32more.Windows.Foundation.IAsyncOperation[win32more.Windows.Storage.Streams.IRandomAccessStreamWithContentType]: ...
    @winrt_mixinmethod
    def GetCapabilitiesAsync(self: win32more.Windows.Devices.Printers.IPrintSchema, constrainTicket: win32more.Windows.Storage.Streams.IRandomAccessStreamWithContentType) -> win32more.Windows.Foundation.IAsyncOperation[win32more.Windows.Storage.Streams.IRandomAccessStreamWithContentType]: ...
    @winrt_mixinmethod
    def MergeAndValidateWithDefaultPrintTicketAsync(self: win32more.Windows.Devices.Printers.IPrintSchema, deltaTicket: win32more.Windows.Storage.Streams.IRandomAccessStreamWithContentType) -> win32more.Windows.Foundation.IAsyncOperation[win32more.Windows.Storage.Streams.IRandomAccessStreamWithContentType]: ...
PrintersContract: UInt32 = 65536
class VirtualPrinterInstallationParameters(ComPtr):
    extends: win32more.Windows.Win32.System.WinRT.IInspectable
    default_interface: win32more.Windows.Devices.Printers.IVirtualPrinterInstallationParameters
    _classid_ = 'Windows.Devices.Printers.VirtualPrinterInstallationParameters'
    def __init__(self, *args, **kwargs):
        if kwargs:
            super().__init__(**kwargs)
        elif len(args) == 0:
            super().__init__(move=win32more.Windows.Devices.Printers.VirtualPrinterInstallationParameters.CreateInstance(*args))
        else:
            raise ValueError('no matched constructor')
    @winrt_activatemethod
    def CreateInstance(cls) -> win32more.Windows.Devices.Printers.VirtualPrinterInstallationParameters: ...
    @winrt_mixinmethod
    def get_PrinterName(self: win32more.Windows.Devices.Printers.IVirtualPrinterInstallationParameters) -> WinRT_String: ...
    @winrt_mixinmethod
    def put_PrinterName(self: win32more.Windows.Devices.Printers.IVirtualPrinterInstallationParameters, value: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def get_OutputFileExtensions(self: win32more.Windows.Devices.Printers.IVirtualPrinterInstallationParameters) -> win32more.Windows.Foundation.Collections.IVector[WinRT_String]: ...
    @winrt_mixinmethod
    def get_SupportedInputFormats(self: win32more.Windows.Devices.Printers.IVirtualPrinterInstallationParameters) -> win32more.Windows.Foundation.Collections.IVector[win32more.Windows.Devices.Printers.VirtualPrinterSupportedFormat]: ...
    @winrt_mixinmethod
    def get_PrintDeviceCapabilitiesPackageRelativeFilePath(self: win32more.Windows.Devices.Printers.IVirtualPrinterInstallationParameters) -> WinRT_String: ...
    @winrt_mixinmethod
    def put_PrintDeviceCapabilitiesPackageRelativeFilePath(self: win32more.Windows.Devices.Printers.IVirtualPrinterInstallationParameters, value: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def get_PrintDeviceResourcesPackageRelativeFilePath(self: win32more.Windows.Devices.Printers.IVirtualPrinterInstallationParameters) -> WinRT_String: ...
    @winrt_mixinmethod
    def put_PrintDeviceResourcesPackageRelativeFilePath(self: win32more.Windows.Devices.Printers.IVirtualPrinterInstallationParameters, value: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def get_PreferredInputFormat(self: win32more.Windows.Devices.Printers.IVirtualPrinterInstallationParameters) -> win32more.Windows.Devices.Printers.VirtualPrinterPreferredInputFormat: ...
    @winrt_mixinmethod
    def put_PreferredInputFormat(self: win32more.Windows.Devices.Printers.IVirtualPrinterInstallationParameters, value: win32more.Windows.Devices.Printers.VirtualPrinterPreferredInputFormat) -> Void: ...
    @winrt_mixinmethod
    def get_PrinterUri(self: win32more.Windows.Devices.Printers.IVirtualPrinterInstallationParameters) -> win32more.Windows.Foundation.Uri: ...
    @winrt_mixinmethod
    def put_PrinterUri(self: win32more.Windows.Devices.Printers.IVirtualPrinterInstallationParameters, value: win32more.Windows.Foundation.Uri) -> Void: ...
    @winrt_mixinmethod
    def get_EntryPoint(self: win32more.Windows.Devices.Printers.IVirtualPrinterInstallationParameters) -> WinRT_String: ...
    @winrt_mixinmethod
    def put_EntryPoint(self: win32more.Windows.Devices.Printers.IVirtualPrinterInstallationParameters, value: WinRT_String) -> Void: ...
    EntryPoint = property(get_EntryPoint, put_EntryPoint)
    OutputFileExtensions = property(get_OutputFileExtensions, None)
    PreferredInputFormat = property(get_PreferredInputFormat, put_PreferredInputFormat)
    PrintDeviceCapabilitiesPackageRelativeFilePath = property(get_PrintDeviceCapabilitiesPackageRelativeFilePath, put_PrintDeviceCapabilitiesPackageRelativeFilePath)
    PrintDeviceResourcesPackageRelativeFilePath = property(get_PrintDeviceResourcesPackageRelativeFilePath, put_PrintDeviceResourcesPackageRelativeFilePath)
    PrinterName = property(get_PrinterName, put_PrinterName)
    PrinterUri = property(get_PrinterUri, put_PrinterUri)
    SupportedInputFormats = property(get_SupportedInputFormats, None)
class VirtualPrinterInstallationResult(ComPtr):
    extends: win32more.Windows.Win32.System.WinRT.IInspectable
    default_interface: win32more.Windows.Devices.Printers.IVirtualPrinterInstallationResult
    _classid_ = 'Windows.Devices.Printers.VirtualPrinterInstallationResult'
    @winrt_mixinmethod
    def get_Status(self: win32more.Windows.Devices.Printers.IVirtualPrinterInstallationResult) -> win32more.Windows.Devices.Printers.VirtualPrinterInstallationStatus: ...
    @winrt_mixinmethod
    def get_ExtendedError(self: win32more.Windows.Devices.Printers.IVirtualPrinterInstallationResult) -> win32more.Windows.Foundation.HResult: ...
    ExtendedError = property(get_ExtendedError, None)
    Status = property(get_Status, None)
class VirtualPrinterInstallationStatus(Enum, Int32):
    InstallationSucceeded = 0
    PrinterAlreadyInstalled = 1
    PrinterInstallationAccessDenied = 2
    PrinterInstallationFailed = 3
class VirtualPrinterManager(ComPtr):
    extends: win32more.Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Devices.Printers.VirtualPrinterManager'
    @winrt_classmethod
    def InstallVirtualPrinterAsync(cls: win32more.Windows.Devices.Printers.IVirtualPrinterManagerStatics, parameters: win32more.Windows.Devices.Printers.VirtualPrinterInstallationParameters) -> win32more.Windows.Foundation.IAsyncOperation[win32more.Windows.Devices.Printers.VirtualPrinterInstallationResult]: ...
    @winrt_classmethod
    def InstallVirtualPrinterAsync2(cls: win32more.Windows.Devices.Printers.IVirtualPrinterManagerStatics, parameters: win32more.Windows.Devices.Printers.VirtualPrinterInstallationParameters, appPackageFamilyName: WinRT_String) -> win32more.Windows.Foundation.IAsyncOperation[win32more.Windows.Devices.Printers.VirtualPrinterInstallationResult]: ...
    @winrt_classmethod
    def InstallVirtualPrinterForAllUsersAsync(cls: win32more.Windows.Devices.Printers.IVirtualPrinterManagerStatics, parameters: win32more.Windows.Devices.Printers.VirtualPrinterInstallationParameters) -> win32more.Windows.Foundation.IAsyncOperation[win32more.Windows.Devices.Printers.VirtualPrinterInstallationResult]: ...
    @winrt_classmethod
    def InstallVirtualPrinterForAllUsersAsync2(cls: win32more.Windows.Devices.Printers.IVirtualPrinterManagerStatics, parameters: win32more.Windows.Devices.Printers.VirtualPrinterInstallationParameters, appPackageFamilyName: WinRT_String) -> win32more.Windows.Foundation.IAsyncOperation[win32more.Windows.Devices.Printers.VirtualPrinterInstallationResult]: ...
    @winrt_classmethod
    def FindAllVirtualPrinters(cls: win32more.Windows.Devices.Printers.IVirtualPrinterManagerStatics) -> win32more.Windows.Foundation.Collections.IVectorView[WinRT_String]: ...
    @winrt_classmethod
    def FindAllVirtualPrinters2(cls: win32more.Windows.Devices.Printers.IVirtualPrinterManagerStatics, appPackageFamilyName: WinRT_String) -> win32more.Windows.Foundation.Collections.IVectorView[WinRT_String]: ...
    @winrt_classmethod
    def RemoveVirtualPrinterAsync(cls: win32more.Windows.Devices.Printers.IVirtualPrinterManagerStatics, printerName: WinRT_String) -> win32more.Windows.Foundation.IAsyncOperation[Boolean]: ...
    @winrt_classmethod
    def RemoveVirtualPrinterForAllUsersAsync(cls: win32more.Windows.Devices.Printers.IVirtualPrinterManagerStatics, printerName: WinRT_String) -> win32more.Windows.Foundation.IAsyncOperation[Boolean]: ...
class VirtualPrinterPreferredInputFormat(Enum, Int32):
    OpenXps = 0
    PostScript = 1
class VirtualPrinterSupportedFormat(ComPtr):
    extends: win32more.Windows.Win32.System.WinRT.IInspectable
    default_interface: win32more.Windows.Devices.Printers.IVirtualPrinterSupportedFormat
    _classid_ = 'Windows.Devices.Printers.VirtualPrinterSupportedFormat'
    def __init__(self, *args, **kwargs):
        if kwargs:
            super().__init__(**kwargs)
        elif len(args) == 2:
            super().__init__(move=win32more.Windows.Devices.Printers.VirtualPrinterSupportedFormat.CreateInstance(*args))
        else:
            raise ValueError('no matched constructor')
    @winrt_factorymethod
    def CreateInstance(cls: win32more.Windows.Devices.Printers.IVirtualPrinterSupportedFormatFactory, contentType: WinRT_String, maxSupportedVersion: WinRT_String) -> win32more.Windows.Devices.Printers.VirtualPrinterSupportedFormat: ...
    @winrt_mixinmethod
    def get_ContentType(self: win32more.Windows.Devices.Printers.IVirtualPrinterSupportedFormat) -> WinRT_String: ...
    @winrt_mixinmethod
    def put_ContentType(self: win32more.Windows.Devices.Printers.IVirtualPrinterSupportedFormat, value: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def get_MaxSupportedVersion(self: win32more.Windows.Devices.Printers.IVirtualPrinterSupportedFormat) -> WinRT_String: ...
    @winrt_mixinmethod
    def put_MaxSupportedVersion(self: win32more.Windows.Devices.Printers.IVirtualPrinterSupportedFormat, value: WinRT_String) -> Void: ...
    ContentType = property(get_ContentType, put_ContentType)
    MaxSupportedVersion = property(get_MaxSupportedVersion, put_MaxSupportedVersion)


make_ready(__name__)
